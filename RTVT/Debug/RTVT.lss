
RTVT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000040be  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000011a  00802000  000040be  00004152  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000011  0080211a  0080211a  0000426c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000426c  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000628  00000000  00000000  000042c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000fc06  00000000  00000000  000048f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002a8c  00000000  00000000  000144f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000044ae  00000000  00000000  00016f82  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000019e0  00000000  00000000  0001b430  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00002744  00000000  00000000  0001ce10  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000087f8  00000000  00000000  0001f554  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000005f0  00000000  00000000  00027d4c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	a3 c3       	rjmp	.+1862   	; 0x748 <__ctors_end>
       2:	00 00       	nop
       4:	d2 c3       	rjmp	.+1956   	; 0x7aa <__bad_interrupt>
       6:	00 00       	nop
       8:	d0 c3       	rjmp	.+1952   	; 0x7aa <__bad_interrupt>
       a:	00 00       	nop
       c:	ce c3       	rjmp	.+1948   	; 0x7aa <__bad_interrupt>
       e:	00 00       	nop
      10:	cc c3       	rjmp	.+1944   	; 0x7aa <__bad_interrupt>
      12:	00 00       	nop
      14:	ca c3       	rjmp	.+1940   	; 0x7aa <__bad_interrupt>
      16:	00 00       	nop
      18:	c8 c3       	rjmp	.+1936   	; 0x7aa <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c6 c3       	rjmp	.+1932   	; 0x7aa <__bad_interrupt>
      1e:	00 00       	nop
      20:	c4 c3       	rjmp	.+1928   	; 0x7aa <__bad_interrupt>
      22:	00 00       	nop
      24:	c2 c3       	rjmp	.+1924   	; 0x7aa <__bad_interrupt>
      26:	00 00       	nop
      28:	c0 c3       	rjmp	.+1920   	; 0x7aa <__bad_interrupt>
      2a:	00 00       	nop
      2c:	be c3       	rjmp	.+1916   	; 0x7aa <__bad_interrupt>
      2e:	00 00       	nop
      30:	bc c3       	rjmp	.+1912   	; 0x7aa <__bad_interrupt>
      32:	00 00       	nop
      34:	ba c3       	rjmp	.+1908   	; 0x7aa <__bad_interrupt>
      36:	00 00       	nop
      38:	b8 c3       	rjmp	.+1904   	; 0x7aa <__bad_interrupt>
      3a:	00 00       	nop
      3c:	b6 c3       	rjmp	.+1900   	; 0x7aa <__bad_interrupt>
      3e:	00 00       	nop
      40:	0c 94 c0 18 	jmp	0x3180	; 0x3180 <__vector_16>
      44:	b2 c3       	rjmp	.+1892   	; 0x7aa <__bad_interrupt>
      46:	00 00       	nop
      48:	b0 c3       	rjmp	.+1888   	; 0x7aa <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ae c3       	rjmp	.+1884   	; 0x7aa <__bad_interrupt>
      4e:	00 00       	nop
      50:	ac c3       	rjmp	.+1880   	; 0x7aa <__bad_interrupt>
      52:	00 00       	nop
      54:	aa c3       	rjmp	.+1876   	; 0x7aa <__bad_interrupt>
      56:	00 00       	nop
      58:	a8 c3       	rjmp	.+1872   	; 0x7aa <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a6 c3       	rjmp	.+1868   	; 0x7aa <__bad_interrupt>
      5e:	00 00       	nop
      60:	a4 c3       	rjmp	.+1864   	; 0x7aa <__bad_interrupt>
      62:	00 00       	nop
      64:	a2 c3       	rjmp	.+1860   	; 0x7aa <__bad_interrupt>
      66:	00 00       	nop
      68:	a0 c3       	rjmp	.+1856   	; 0x7aa <__bad_interrupt>
      6a:	00 00       	nop
      6c:	9e c3       	rjmp	.+1852   	; 0x7aa <__bad_interrupt>
      6e:	00 00       	nop
      70:	9c c3       	rjmp	.+1848   	; 0x7aa <__bad_interrupt>
      72:	00 00       	nop
      74:	9a c3       	rjmp	.+1844   	; 0x7aa <__bad_interrupt>
      76:	00 00       	nop
      78:	98 c3       	rjmp	.+1840   	; 0x7aa <__bad_interrupt>
      7a:	00 00       	nop
      7c:	96 c3       	rjmp	.+1836   	; 0x7aa <__bad_interrupt>
      7e:	00 00       	nop
      80:	94 c3       	rjmp	.+1832   	; 0x7aa <__bad_interrupt>
      82:	00 00       	nop
      84:	92 c3       	rjmp	.+1828   	; 0x7aa <__bad_interrupt>
      86:	00 00       	nop
      88:	90 c3       	rjmp	.+1824   	; 0x7aa <__bad_interrupt>
      8a:	00 00       	nop
      8c:	8e c3       	rjmp	.+1820   	; 0x7aa <__bad_interrupt>
      8e:	00 00       	nop
      90:	8c c3       	rjmp	.+1816   	; 0x7aa <__bad_interrupt>
      92:	00 00       	nop
      94:	8a c3       	rjmp	.+1812   	; 0x7aa <__bad_interrupt>
      96:	00 00       	nop
      98:	88 c3       	rjmp	.+1808   	; 0x7aa <__bad_interrupt>
      9a:	00 00       	nop
      9c:	86 c3       	rjmp	.+1804   	; 0x7aa <__bad_interrupt>
      9e:	00 00       	nop
      a0:	84 c3       	rjmp	.+1800   	; 0x7aa <__bad_interrupt>
      a2:	00 00       	nop
      a4:	82 c3       	rjmp	.+1796   	; 0x7aa <__bad_interrupt>
      a6:	00 00       	nop
      a8:	80 c3       	rjmp	.+1792   	; 0x7aa <__bad_interrupt>
      aa:	00 00       	nop
      ac:	7e c3       	rjmp	.+1788   	; 0x7aa <__bad_interrupt>
      ae:	00 00       	nop
      b0:	7c c3       	rjmp	.+1784   	; 0x7aa <__bad_interrupt>
      b2:	00 00       	nop
      b4:	7a c3       	rjmp	.+1780   	; 0x7aa <__bad_interrupt>
      b6:	00 00       	nop
      b8:	78 c3       	rjmp	.+1776   	; 0x7aa <__bad_interrupt>
      ba:	00 00       	nop
      bc:	76 c3       	rjmp	.+1772   	; 0x7aa <__bad_interrupt>
      be:	00 00       	nop
      c0:	74 c3       	rjmp	.+1768   	; 0x7aa <__bad_interrupt>
      c2:	00 00       	nop
      c4:	72 c3       	rjmp	.+1764   	; 0x7aa <__bad_interrupt>
      c6:	00 00       	nop
      c8:	70 c3       	rjmp	.+1760   	; 0x7aa <__bad_interrupt>
      ca:	00 00       	nop
      cc:	6e c3       	rjmp	.+1756   	; 0x7aa <__bad_interrupt>
      ce:	00 00       	nop
      d0:	6c c3       	rjmp	.+1752   	; 0x7aa <__bad_interrupt>
      d2:	00 00       	nop
      d4:	6a c3       	rjmp	.+1748   	; 0x7aa <__bad_interrupt>
      d6:	00 00       	nop
      d8:	68 c3       	rjmp	.+1744   	; 0x7aa <__bad_interrupt>
      da:	00 00       	nop
      dc:	66 c3       	rjmp	.+1740   	; 0x7aa <__bad_interrupt>
      de:	00 00       	nop
      e0:	64 c3       	rjmp	.+1736   	; 0x7aa <__bad_interrupt>
      e2:	00 00       	nop
      e4:	0c 94 b6 18 	jmp	0x316c	; 0x316c <__vector_57>
      e8:	60 c3       	rjmp	.+1728   	; 0x7aa <__bad_interrupt>
      ea:	00 00       	nop
      ec:	5e c3       	rjmp	.+1724   	; 0x7aa <__bad_interrupt>
      ee:	00 00       	nop
      f0:	5c c3       	rjmp	.+1720   	; 0x7aa <__bad_interrupt>
      f2:	00 00       	nop
      f4:	5a c3       	rjmp	.+1716   	; 0x7aa <__bad_interrupt>
      f6:	00 00       	nop
      f8:	58 c3       	rjmp	.+1712   	; 0x7aa <__bad_interrupt>
      fa:	00 00       	nop
      fc:	56 c3       	rjmp	.+1708   	; 0x7aa <__bad_interrupt>
      fe:	00 00       	nop
     100:	54 c3       	rjmp	.+1704   	; 0x7aa <__bad_interrupt>
     102:	00 00       	nop
     104:	52 c3       	rjmp	.+1700   	; 0x7aa <__bad_interrupt>
     106:	00 00       	nop
     108:	50 c3       	rjmp	.+1696   	; 0x7aa <__bad_interrupt>
     10a:	00 00       	nop
     10c:	4e c3       	rjmp	.+1692   	; 0x7aa <__bad_interrupt>
     10e:	00 00       	nop
     110:	4c c3       	rjmp	.+1688   	; 0x7aa <__bad_interrupt>
     112:	00 00       	nop
     114:	4a c3       	rjmp	.+1684   	; 0x7aa <__bad_interrupt>
     116:	00 00       	nop
     118:	48 c3       	rjmp	.+1680   	; 0x7aa <__bad_interrupt>
     11a:	00 00       	nop
     11c:	46 c3       	rjmp	.+1676   	; 0x7aa <__bad_interrupt>
     11e:	00 00       	nop
     120:	44 c3       	rjmp	.+1672   	; 0x7aa <__bad_interrupt>
     122:	00 00       	nop
     124:	42 c3       	rjmp	.+1668   	; 0x7aa <__bad_interrupt>
     126:	00 00       	nop
     128:	40 c3       	rjmp	.+1664   	; 0x7aa <__bad_interrupt>
     12a:	00 00       	nop
     12c:	3e c3       	rjmp	.+1660   	; 0x7aa <__bad_interrupt>
     12e:	00 00       	nop
     130:	3c c3       	rjmp	.+1656   	; 0x7aa <__bad_interrupt>
     132:	00 00       	nop
     134:	3a c3       	rjmp	.+1652   	; 0x7aa <__bad_interrupt>
     136:	00 00       	nop
     138:	38 c3       	rjmp	.+1648   	; 0x7aa <__bad_interrupt>
     13a:	00 00       	nop
     13c:	36 c3       	rjmp	.+1644   	; 0x7aa <__bad_interrupt>
     13e:	00 00       	nop
     140:	34 c3       	rjmp	.+1640   	; 0x7aa <__bad_interrupt>
     142:	00 00       	nop
     144:	32 c3       	rjmp	.+1636   	; 0x7aa <__bad_interrupt>
     146:	00 00       	nop
     148:	30 c3       	rjmp	.+1632   	; 0x7aa <__bad_interrupt>
     14a:	00 00       	nop
     14c:	2e c3       	rjmp	.+1628   	; 0x7aa <__bad_interrupt>
     14e:	00 00       	nop
     150:	2c c3       	rjmp	.+1624   	; 0x7aa <__bad_interrupt>
     152:	00 00       	nop
     154:	2a c3       	rjmp	.+1620   	; 0x7aa <__bad_interrupt>
     156:	00 00       	nop
     158:	28 c3       	rjmp	.+1616   	; 0x7aa <__bad_interrupt>
     15a:	00 00       	nop
     15c:	26 c3       	rjmp	.+1612   	; 0x7aa <__bad_interrupt>
     15e:	00 00       	nop
     160:	0c 94 e8 17 	jmp	0x2fd0	; 0x2fd0 <__vector_88>
     164:	0c 94 54 18 	jmp	0x30a8	; 0x30a8 <__vector_89>
     168:	0c 94 40 18 	jmp	0x3080	; 0x3080 <__vector_90>
     16c:	0c 94 14 18 	jmp	0x3028	; 0x3028 <__vector_91>
     170:	0c 94 80 18 	jmp	0x3100	; 0x3100 <__vector_92>
     174:	0c 94 4a 18 	jmp	0x3094	; 0x3094 <__vector_93>
     178:	18 c3       	rjmp	.+1584   	; 0x7aa <__bad_interrupt>
     17a:	00 00       	nop
     17c:	16 c3       	rjmp	.+1580   	; 0x7aa <__bad_interrupt>
     17e:	00 00       	nop
     180:	14 c3       	rjmp	.+1576   	; 0x7aa <__bad_interrupt>
     182:	00 00       	nop
     184:	12 c3       	rjmp	.+1572   	; 0x7aa <__bad_interrupt>
     186:	00 00       	nop
     188:	10 c3       	rjmp	.+1568   	; 0x7aa <__bad_interrupt>
     18a:	00 00       	nop
     18c:	0e c3       	rjmp	.+1564   	; 0x7aa <__bad_interrupt>
     18e:	00 00       	nop
     190:	0c c3       	rjmp	.+1560   	; 0x7aa <__bad_interrupt>
     192:	00 00       	nop
     194:	0a c3       	rjmp	.+1556   	; 0x7aa <__bad_interrupt>
     196:	00 00       	nop
     198:	08 c3       	rjmp	.+1552   	; 0x7aa <__bad_interrupt>
     19a:	00 00       	nop
     19c:	06 c3       	rjmp	.+1548   	; 0x7aa <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	04 c3       	rjmp	.+1544   	; 0x7aa <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	02 c3       	rjmp	.+1540   	; 0x7aa <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	00 c3       	rjmp	.+1536   	; 0x7aa <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	fe c2       	rjmp	.+1532   	; 0x7aa <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	fc c2       	rjmp	.+1528   	; 0x7aa <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	fa c2       	rjmp	.+1524   	; 0x7aa <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	f8 c2       	rjmp	.+1520   	; 0x7aa <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	f6 c2       	rjmp	.+1516   	; 0x7aa <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	f4 c2       	rjmp	.+1512   	; 0x7aa <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	f2 c2       	rjmp	.+1508   	; 0x7aa <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	f0 c2       	rjmp	.+1504   	; 0x7aa <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	ee c2       	rjmp	.+1500   	; 0x7aa <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	ec c2       	rjmp	.+1496   	; 0x7aa <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	ea c2       	rjmp	.+1492   	; 0x7aa <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	e8 c2       	rjmp	.+1488   	; 0x7aa <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	e6 c2       	rjmp	.+1484   	; 0x7aa <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	e4 c2       	rjmp	.+1480   	; 0x7aa <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	e2 c2       	rjmp	.+1476   	; 0x7aa <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	e0 c2       	rjmp	.+1472   	; 0x7aa <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	de c2       	rjmp	.+1468   	; 0x7aa <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	dc c2       	rjmp	.+1464   	; 0x7aa <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	da c2       	rjmp	.+1460   	; 0x7aa <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	d8 c2       	rjmp	.+1456   	; 0x7aa <__bad_interrupt>
     1fa:	00 00       	nop
     1fc:	58 09       	sbc	r21, r8
     1fe:	37 09       	sbc	r19, r7
     200:	79 09       	sbc	r23, r9
     202:	99 09       	sbc	r25, r9
     204:	ba 09       	sbc	r27, r10
     206:	db 09       	sbc	r29, r11
     208:	fc 09       	sbc	r31, r12
     20a:	1d 0a       	sbc	r1, r29
     20c:	3e 0a       	sbc	r3, r30
     20e:	5f 0a       	sbc	r5, r31
     210:	80 0a       	sbc	r8, r16
     212:	a0 0a       	sbc	r10, r16
     214:	c1 0a       	sbc	r12, r17
     216:	1f 08       	sbc	r1, r15
     218:	3b 08       	sbc	r3, r11
     21a:	5b 08       	sbc	r5, r11
     21c:	63 08       	sbc	r6, r3
     21e:	6f 08       	sbc	r6, r15
     220:	83 08       	sbc	r8, r3
     222:	2b 08       	sbc	r2, r11
     224:	92 08       	sbc	r9, r2
     226:	a7 08       	sbc	r10, r7
     228:	bb 08       	sbc	r11, r11
     22a:	d3 08       	sbc	r13, r3
     22c:	eb 08       	sbc	r14, r11
     22e:	03 09       	sbc	r16, r3
     230:	1b 09       	sbc	r17, r11
     232:	e2 0a       	sbc	r14, r18
     234:	02 0b       	sbc	r16, r18
     236:	23 0b       	sbc	r18, r19
     238:	44 0b       	sbc	r20, r20
     23a:	65 0b       	sbc	r22, r21
     23c:	9d 0e       	add	r9, r29
     23e:	a5 0e       	add	r10, r21
     240:	a9 0e       	add	r10, r25
     242:	ad 0e       	add	r10, r29
     244:	b1 0e       	add	r11, r17
     246:	a1 0e       	add	r10, r17
     248:	b5 0e       	add	r11, r21

0000024a <__trampolines_end>:
     24a:	00 00       	nop
     24c:	00 00       	nop
     24e:	00 3e       	cpi	r16, 0xE0	; 224
     250:	5b 4f       	sbci	r21, 0xFB	; 251
     252:	5b 3e       	cpi	r21, 0xEB	; 235
     254:	3e 6b       	ori	r19, 0xBE	; 190
     256:	4f 6b       	ori	r20, 0xBF	; 191
     258:	3e 1c       	adc	r3, r14
     25a:	3e 7c       	andi	r19, 0xCE	; 206
     25c:	3e 1c       	adc	r3, r14
     25e:	18 3c       	cpi	r17, 0xC8	; 200
     260:	7e 3c       	cpi	r23, 0xCE	; 206
     262:	18 1c       	adc	r1, r8
     264:	57 7d       	andi	r21, 0xD7	; 215
     266:	57 1c       	adc	r5, r7
     268:	1c 5e       	subi	r17, 0xEC	; 236
     26a:	7f 5e       	subi	r23, 0xEF	; 239
     26c:	1c 00       	.word	0x001c	; ????
     26e:	18 3c       	cpi	r17, 0xC8	; 200
     270:	18 00       	.word	0x0018	; ????
     272:	ff e7       	ldi	r31, 0x7F	; 127
     274:	c3 e7       	ldi	r28, 0x73	; 115
     276:	ff 00       	.word	0x00ff	; ????
     278:	18 24       	eor	r1, r8
     27a:	18 00       	.word	0x0018	; ????
     27c:	ff e7       	ldi	r31, 0x7F	; 127
     27e:	db e7       	ldi	r29, 0x7B	; 123
     280:	ff 30       	cpi	r31, 0x0F	; 15
     282:	48 3a       	cpi	r20, 0xA8	; 168
     284:	06 0e       	add	r0, r22
     286:	26 29       	or	r18, r6
     288:	79 29       	or	r23, r9
     28a:	26 40       	sbci	r18, 0x06	; 6
     28c:	7f 05       	cpc	r23, r15
     28e:	05 07       	cpc	r16, r21
     290:	40 7f       	andi	r20, 0xF0	; 240
     292:	05 25       	eor	r16, r5
     294:	3f 5a       	subi	r19, 0xAF	; 175
     296:	3c e7       	ldi	r19, 0x7C	; 124
     298:	3c 5a       	subi	r19, 0xAC	; 172
     29a:	7f 3e       	cpi	r23, 0xEF	; 239
     29c:	1c 1c       	adc	r1, r12
     29e:	08 08       	sbc	r0, r8
     2a0:	1c 1c       	adc	r1, r12
     2a2:	3e 7f       	andi	r19, 0xFE	; 254
     2a4:	14 22       	and	r1, r20
     2a6:	7f 22       	and	r7, r31
     2a8:	14 5f       	subi	r17, 0xF4	; 244
     2aa:	5f 00       	.word	0x005f	; ????
     2ac:	5f 5f       	subi	r21, 0xFF	; 255
     2ae:	06 09       	sbc	r16, r6
     2b0:	7f 01       	movw	r14, r30
     2b2:	7f 00       	.word	0x007f	; ????
     2b4:	66 89       	ldd	r22, Z+22	; 0x16
     2b6:	95 6a       	ori	r25, 0xA5	; 165
     2b8:	60 60       	ori	r22, 0x00	; 0
     2ba:	60 60       	ori	r22, 0x00	; 0
     2bc:	60 94       	com	r6
     2be:	a2 ff       	sbrs	r26, 2
     2c0:	a2 94       	swap	r10
     2c2:	08 04       	cpc	r0, r8
     2c4:	7e 04       	cpc	r7, r14
     2c6:	08 10       	cpse	r0, r8
     2c8:	20 7e       	andi	r18, 0xE0	; 224
     2ca:	20 10       	cpse	r2, r0
     2cc:	08 08       	sbc	r0, r8
     2ce:	2a 1c       	adc	r2, r10
     2d0:	08 08       	sbc	r0, r8
     2d2:	1c 2a       	or	r1, r28
     2d4:	08 08       	sbc	r0, r8
     2d6:	1e 10       	cpse	r1, r14
     2d8:	10 10       	cpse	r1, r0
     2da:	10 0c       	add	r1, r0
     2dc:	1e 0c       	add	r1, r14
     2de:	1e 0c       	add	r1, r14
     2e0:	30 38       	cpi	r19, 0x80	; 128
     2e2:	3e 38       	cpi	r19, 0x8E	; 142
     2e4:	30 06       	cpc	r3, r16
     2e6:	0e 3e       	cpi	r16, 0xEE	; 238
     2e8:	0e 06       	cpc	r0, r30
     2ea:	00 00       	nop
     2ec:	00 00       	nop
     2ee:	00 00       	nop
     2f0:	00 5f       	subi	r16, 0xF0	; 240
     2f2:	00 00       	nop
     2f4:	00 07       	cpc	r16, r16
     2f6:	00 07       	cpc	r16, r16
     2f8:	00 14       	cp	r0, r0
     2fa:	7f 14       	cp	r7, r15
     2fc:	7f 14       	cp	r7, r15
     2fe:	24 2a       	or	r2, r20
     300:	7f 2a       	or	r7, r31
     302:	12 23       	and	r17, r18
     304:	13 08       	sbc	r1, r3
     306:	64 62       	ori	r22, 0x24	; 36
     308:	36 49       	sbci	r19, 0x96	; 150
     30a:	56 20       	and	r5, r6
     30c:	50 00       	.word	0x0050	; ????
     30e:	08 07       	cpc	r16, r24
     310:	03 00       	.word	0x0003	; ????
     312:	00 1c       	adc	r0, r0
     314:	22 41       	sbci	r18, 0x12	; 18
     316:	00 00       	nop
     318:	41 22       	and	r4, r17
     31a:	1c 00       	.word	0x001c	; ????
     31c:	2a 1c       	adc	r2, r10
     31e:	7f 1c       	adc	r7, r15
     320:	2a 08       	sbc	r2, r10
     322:	08 3e       	cpi	r16, 0xE8	; 232
     324:	08 08       	sbc	r0, r8
     326:	00 80       	ld	r0, Z
     328:	70 30       	cpi	r23, 0x00	; 0
     32a:	00 08       	sbc	r0, r0
     32c:	08 08       	sbc	r0, r8
     32e:	08 08       	sbc	r0, r8
     330:	00 00       	nop
     332:	60 60       	ori	r22, 0x00	; 0
     334:	00 20       	and	r0, r0
     336:	10 08       	sbc	r1, r0
     338:	04 02       	muls	r16, r20
     33a:	3e 51       	subi	r19, 0x1E	; 30
     33c:	49 45       	sbci	r20, 0x59	; 89
     33e:	3e 00       	.word	0x003e	; ????
     340:	42 7f       	andi	r20, 0xF2	; 242
     342:	40 00       	.word	0x0040	; ????
     344:	72 49       	sbci	r23, 0x92	; 146
     346:	49 49       	sbci	r20, 0x99	; 153
     348:	46 21       	and	r20, r6
     34a:	41 49       	sbci	r20, 0x91	; 145
     34c:	4d 33       	cpi	r20, 0x3D	; 61
     34e:	18 14       	cp	r1, r8
     350:	12 7f       	andi	r17, 0xF2	; 242
     352:	10 27       	eor	r17, r16
     354:	45 45       	sbci	r20, 0x55	; 85
     356:	45 39       	cpi	r20, 0x95	; 149
     358:	3c 4a       	sbci	r19, 0xAC	; 172
     35a:	49 49       	sbci	r20, 0x99	; 153
     35c:	31 41       	sbci	r19, 0x11	; 17
     35e:	21 11       	cpse	r18, r1
     360:	09 07       	cpc	r16, r25
     362:	36 49       	sbci	r19, 0x96	; 150
     364:	49 49       	sbci	r20, 0x99	; 153
     366:	36 46       	sbci	r19, 0x66	; 102
     368:	49 49       	sbci	r20, 0x99	; 153
     36a:	29 1e       	adc	r2, r25
     36c:	00 00       	nop
     36e:	14 00       	.word	0x0014	; ????
     370:	00 00       	nop
     372:	40 34       	cpi	r20, 0x40	; 64
     374:	00 00       	nop
     376:	00 08       	sbc	r0, r0
     378:	14 22       	and	r1, r20
     37a:	41 14       	cp	r4, r1
     37c:	14 14       	cp	r1, r4
     37e:	14 14       	cp	r1, r4
     380:	00 41       	sbci	r16, 0x10	; 16
     382:	22 14       	cp	r2, r2
     384:	08 02       	muls	r16, r24
     386:	01 59       	subi	r16, 0x91	; 145
     388:	09 06       	cpc	r0, r25
     38a:	3e 41       	sbci	r19, 0x1E	; 30
     38c:	5d 59       	subi	r21, 0x9D	; 157
     38e:	4e 7c       	andi	r20, 0xCE	; 206
     390:	12 11       	cpse	r17, r2
     392:	12 7c       	andi	r17, 0xC2	; 194
     394:	7f 49       	sbci	r23, 0x9F	; 159
     396:	49 49       	sbci	r20, 0x99	; 153
     398:	36 3e       	cpi	r19, 0xE6	; 230
     39a:	41 41       	sbci	r20, 0x11	; 17
     39c:	41 22       	and	r4, r17
     39e:	7f 41       	sbci	r23, 0x1F	; 31
     3a0:	41 41       	sbci	r20, 0x11	; 17
     3a2:	3e 7f       	andi	r19, 0xFE	; 254
     3a4:	49 49       	sbci	r20, 0x99	; 153
     3a6:	49 41       	sbci	r20, 0x19	; 25
     3a8:	7f 09       	sbc	r23, r15
     3aa:	09 09       	sbc	r16, r9
     3ac:	01 3e       	cpi	r16, 0xE1	; 225
     3ae:	41 41       	sbci	r20, 0x11	; 17
     3b0:	51 73       	andi	r21, 0x31	; 49
     3b2:	7f 08       	sbc	r7, r15
     3b4:	08 08       	sbc	r0, r8
     3b6:	7f 00       	.word	0x007f	; ????
     3b8:	41 7f       	andi	r20, 0xF1	; 241
     3ba:	41 00       	.word	0x0041	; ????
     3bc:	20 40       	sbci	r18, 0x00	; 0
     3be:	41 3f       	cpi	r20, 0xF1	; 241
     3c0:	01 7f       	andi	r16, 0xF1	; 241
     3c2:	08 14       	cp	r0, r8
     3c4:	22 41       	sbci	r18, 0x12	; 18
     3c6:	7f 40       	sbci	r23, 0x0F	; 15
     3c8:	40 40       	sbci	r20, 0x00	; 0
     3ca:	40 7f       	andi	r20, 0xF0	; 240
     3cc:	02 1c       	adc	r0, r2
     3ce:	02 7f       	andi	r16, 0xF2	; 242
     3d0:	7f 04       	cpc	r7, r15
     3d2:	08 10       	cpse	r0, r8
     3d4:	7f 3e       	cpi	r23, 0xEF	; 239
     3d6:	41 41       	sbci	r20, 0x11	; 17
     3d8:	41 3e       	cpi	r20, 0xE1	; 225
     3da:	7f 09       	sbc	r23, r15
     3dc:	09 09       	sbc	r16, r9
     3de:	06 3e       	cpi	r16, 0xE6	; 230
     3e0:	41 51       	subi	r20, 0x11	; 17
     3e2:	21 5e       	subi	r18, 0xE1	; 225
     3e4:	7f 09       	sbc	r23, r15
     3e6:	19 29       	or	r17, r9
     3e8:	46 26       	eor	r4, r22
     3ea:	49 49       	sbci	r20, 0x99	; 153
     3ec:	49 32       	cpi	r20, 0x29	; 41
     3ee:	03 01       	movw	r0, r6
     3f0:	7f 01       	movw	r14, r30
     3f2:	03 3f       	cpi	r16, 0xF3	; 243
     3f4:	40 40       	sbci	r20, 0x00	; 0
     3f6:	40 3f       	cpi	r20, 0xF0	; 240
     3f8:	1f 20       	and	r1, r15
     3fa:	40 20       	and	r4, r0
     3fc:	1f 3f       	cpi	r17, 0xFF	; 255
     3fe:	40 38       	cpi	r20, 0x80	; 128
     400:	40 3f       	cpi	r20, 0xF0	; 240
     402:	63 14       	cp	r6, r3
     404:	08 14       	cp	r0, r8
     406:	63 03       	mulsu	r22, r19
     408:	04 78       	andi	r16, 0x84	; 132
     40a:	04 03       	mulsu	r16, r20
     40c:	61 59       	subi	r22, 0x91	; 145
     40e:	49 4d       	sbci	r20, 0xD9	; 217
     410:	43 00       	.word	0x0043	; ????
     412:	7f 41       	sbci	r23, 0x1F	; 31
     414:	41 41       	sbci	r20, 0x11	; 17
     416:	02 04       	cpc	r0, r2
     418:	08 10       	cpse	r0, r8
     41a:	20 00       	.word	0x0020	; ????
     41c:	41 41       	sbci	r20, 0x11	; 17
     41e:	41 7f       	andi	r20, 0xF1	; 241
     420:	04 02       	muls	r16, r20
     422:	01 02       	muls	r16, r17
     424:	04 40       	sbci	r16, 0x04	; 4
     426:	40 40       	sbci	r20, 0x00	; 0
     428:	40 40       	sbci	r20, 0x00	; 0
     42a:	00 03       	mulsu	r16, r16
     42c:	07 08       	sbc	r0, r7
     42e:	00 20       	and	r0, r0
     430:	54 54       	subi	r21, 0x44	; 68
     432:	78 40       	sbci	r23, 0x08	; 8
     434:	7f 28       	or	r7, r15
     436:	44 44       	sbci	r20, 0x44	; 68
     438:	38 38       	cpi	r19, 0x88	; 136
     43a:	44 44       	sbci	r20, 0x44	; 68
     43c:	44 28       	or	r4, r4
     43e:	38 44       	sbci	r19, 0x48	; 72
     440:	44 28       	or	r4, r4
     442:	7f 38       	cpi	r23, 0x8F	; 143
     444:	54 54       	subi	r21, 0x44	; 68
     446:	54 18       	sub	r5, r4
     448:	00 08       	sbc	r0, r0
     44a:	7e 09       	sbc	r23, r14
     44c:	02 18       	sub	r0, r2
     44e:	a4 a4       	ldd	r10, Z+44	; 0x2c
     450:	9c 78       	andi	r25, 0x8C	; 140
     452:	7f 08       	sbc	r7, r15
     454:	04 04       	cpc	r0, r4
     456:	78 00       	.word	0x0078	; ????
     458:	44 7d       	andi	r20, 0xD4	; 212
     45a:	40 00       	.word	0x0040	; ????
     45c:	20 40       	sbci	r18, 0x00	; 0
     45e:	40 3d       	cpi	r20, 0xD0	; 208
     460:	00 7f       	andi	r16, 0xF0	; 240
     462:	10 28       	or	r1, r0
     464:	44 00       	.word	0x0044	; ????
     466:	00 41       	sbci	r16, 0x10	; 16
     468:	7f 40       	sbci	r23, 0x0F	; 15
     46a:	00 7c       	andi	r16, 0xC0	; 192
     46c:	04 78       	andi	r16, 0x84	; 132
     46e:	04 78       	andi	r16, 0x84	; 132
     470:	7c 08       	sbc	r7, r12
     472:	04 04       	cpc	r0, r4
     474:	78 38       	cpi	r23, 0x88	; 136
     476:	44 44       	sbci	r20, 0x44	; 68
     478:	44 38       	cpi	r20, 0x84	; 132
     47a:	fc 18       	sub	r15, r12
     47c:	24 24       	eor	r2, r4
     47e:	18 18       	sub	r1, r8
     480:	24 24       	eor	r2, r4
     482:	18 fc       	.word	0xfc18	; ????
     484:	7c 08       	sbc	r7, r12
     486:	04 04       	cpc	r0, r4
     488:	08 48       	sbci	r16, 0x88	; 136
     48a:	54 54       	subi	r21, 0x44	; 68
     48c:	54 24       	eor	r5, r4
     48e:	04 04       	cpc	r0, r4
     490:	3f 44       	sbci	r19, 0x4F	; 79
     492:	24 3c       	cpi	r18, 0xC4	; 196
     494:	40 40       	sbci	r20, 0x00	; 0
     496:	20 7c       	andi	r18, 0xC0	; 192
     498:	1c 20       	and	r1, r12
     49a:	40 20       	and	r4, r0
     49c:	1c 3c       	cpi	r17, 0xCC	; 204
     49e:	40 30       	cpi	r20, 0x00	; 0
     4a0:	40 3c       	cpi	r20, 0xC0	; 192
     4a2:	44 28       	or	r4, r4
     4a4:	10 28       	or	r1, r0
     4a6:	44 4c       	sbci	r20, 0xC4	; 196
     4a8:	90 90 90 7c 	lds	r9, 0x7C90
     4ac:	44 64       	ori	r20, 0x44	; 68
     4ae:	54 4c       	sbci	r21, 0xC4	; 196
     4b0:	44 00       	.word	0x0044	; ????
     4b2:	08 36       	cpi	r16, 0x68	; 104
     4b4:	41 00       	.word	0x0041	; ????
     4b6:	00 00       	nop
     4b8:	77 00       	.word	0x0077	; ????
     4ba:	00 00       	nop
     4bc:	41 36       	cpi	r20, 0x61	; 97
     4be:	08 00       	.word	0x0008	; ????
     4c0:	02 01       	movw	r0, r4
     4c2:	02 04       	cpc	r0, r2
     4c4:	02 3c       	cpi	r16, 0xC2	; 194
     4c6:	26 23       	and	r18, r22
     4c8:	26 3c       	cpi	r18, 0xC6	; 198
     4ca:	1e a1       	ldd	r17, Y+38	; 0x26
     4cc:	a1 61       	ori	r26, 0x11	; 17
     4ce:	12 3a       	cpi	r17, 0xA2	; 162
     4d0:	40 40       	sbci	r20, 0x00	; 0
     4d2:	20 7a       	andi	r18, 0xA0	; 160
     4d4:	38 54       	subi	r19, 0x48	; 72
     4d6:	54 55       	subi	r21, 0x54	; 84
     4d8:	59 21       	and	r21, r9
     4da:	55 55       	subi	r21, 0x55	; 85
     4dc:	79 41       	sbci	r23, 0x19	; 25
     4de:	22 54       	subi	r18, 0x42	; 66
     4e0:	54 78       	andi	r21, 0x84	; 132
     4e2:	42 21       	and	r20, r2
     4e4:	55 54       	subi	r21, 0x45	; 69
     4e6:	78 40       	sbci	r23, 0x08	; 8
     4e8:	20 54       	subi	r18, 0x40	; 64
     4ea:	55 79       	andi	r21, 0x95	; 149
     4ec:	40 0c       	add	r4, r0
     4ee:	1e 52       	subi	r17, 0x2E	; 46
     4f0:	72 12       	cpse	r7, r18
     4f2:	39 55       	subi	r19, 0x59	; 89
     4f4:	55 55       	subi	r21, 0x55	; 85
     4f6:	59 39       	cpi	r21, 0x99	; 153
     4f8:	54 54       	subi	r21, 0x44	; 68
     4fa:	54 59       	subi	r21, 0x94	; 148
     4fc:	39 55       	subi	r19, 0x59	; 89
     4fe:	54 54       	subi	r21, 0x44	; 68
     500:	58 00       	.word	0x0058	; ????
     502:	00 45       	sbci	r16, 0x50	; 80
     504:	7c 41       	sbci	r23, 0x1C	; 28
     506:	00 02       	muls	r16, r16
     508:	45 7d       	andi	r20, 0xD5	; 213
     50a:	42 00       	.word	0x0042	; ????
     50c:	01 45       	sbci	r16, 0x51	; 81
     50e:	7c 40       	sbci	r23, 0x0C	; 12
     510:	7d 12       	cpse	r7, r29
     512:	11 12       	cpse	r1, r17
     514:	7d f0       	brhs	.+30     	; 0x534 <__trampolines_end+0x2ea>
     516:	28 25       	eor	r18, r8
     518:	28 f0       	brcs	.+10     	; 0x524 <__trampolines_end+0x2da>
     51a:	7c 54       	subi	r23, 0x4C	; 76
     51c:	55 45       	sbci	r21, 0x55	; 85
     51e:	00 20       	and	r0, r0
     520:	54 54       	subi	r21, 0x44	; 68
     522:	7c 54       	subi	r23, 0x4C	; 76
     524:	7c 0a       	sbc	r7, r28
     526:	09 7f       	andi	r16, 0xF9	; 249
     528:	49 32       	cpi	r20, 0x29	; 41
     52a:	49 49       	sbci	r20, 0x99	; 153
     52c:	49 32       	cpi	r20, 0x29	; 41
     52e:	3a 44       	sbci	r19, 0x4A	; 74
     530:	44 44       	sbci	r20, 0x44	; 68
     532:	3a 32       	cpi	r19, 0x2A	; 42
     534:	4a 48       	sbci	r20, 0x8A	; 138
     536:	48 30       	cpi	r20, 0x08	; 8
     538:	3a 41       	sbci	r19, 0x1A	; 26
     53a:	41 21       	and	r20, r1
     53c:	7a 3a       	cpi	r23, 0xAA	; 170
     53e:	42 40       	sbci	r20, 0x02	; 2
     540:	20 78       	andi	r18, 0x80	; 128
     542:	00 9d       	mul	r16, r0
     544:	a0 a0       	ldd	r10, Z+32	; 0x20
     546:	7d 3d       	cpi	r23, 0xDD	; 221
     548:	42 42       	sbci	r20, 0x22	; 34
     54a:	42 3d       	cpi	r20, 0xD2	; 210
     54c:	3d 40       	sbci	r19, 0x0D	; 13
     54e:	40 40       	sbci	r20, 0x00	; 0
     550:	3d 3c       	cpi	r19, 0xCD	; 205
     552:	24 ff       	sbrs	r18, 4
     554:	24 24       	eor	r2, r4
     556:	48 7e       	andi	r20, 0xE8	; 232
     558:	49 43       	sbci	r20, 0x39	; 57
     55a:	66 2b       	or	r22, r22
     55c:	2f fc       	.word	0xfc2f	; ????
     55e:	2f 2b       	or	r18, r31
     560:	ff 09       	sbc	r31, r15
     562:	29 f6       	brne	.-118    	; 0x4ee <__trampolines_end+0x2a4>
     564:	20 c0       	rjmp	.+64     	; 0x5a6 <__trampolines_end+0x35c>
     566:	88 7e       	andi	r24, 0xE8	; 232
     568:	09 03       	fmul	r16, r17
     56a:	20 54       	subi	r18, 0x40	; 64
     56c:	54 79       	andi	r21, 0x94	; 148
     56e:	41 00       	.word	0x0041	; ????
     570:	00 44       	sbci	r16, 0x40	; 64
     572:	7d 41       	sbci	r23, 0x1D	; 29
     574:	30 48       	sbci	r19, 0x80	; 128
     576:	48 4a       	sbci	r20, 0xA8	; 168
     578:	32 38       	cpi	r19, 0x82	; 130
     57a:	40 40       	sbci	r20, 0x00	; 0
     57c:	22 7a       	andi	r18, 0xA2	; 162
     57e:	00 7a       	andi	r16, 0xA0	; 160
     580:	0a 0a       	sbc	r0, r26
     582:	72 7d       	andi	r23, 0xD2	; 210
     584:	0d 19       	sub	r16, r13
     586:	31 7d       	andi	r19, 0xD1	; 209
     588:	26 29       	or	r18, r6
     58a:	29 2f       	mov	r18, r25
     58c:	28 26       	eor	r2, r24
     58e:	29 29       	or	r18, r9
     590:	29 26       	eor	r2, r25
     592:	30 48       	sbci	r19, 0x80	; 128
     594:	4d 40       	sbci	r20, 0x0D	; 13
     596:	20 38       	cpi	r18, 0x80	; 128
     598:	08 08       	sbc	r0, r8
     59a:	08 08       	sbc	r0, r8
     59c:	08 08       	sbc	r0, r8
     59e:	08 08       	sbc	r0, r8
     5a0:	38 2f       	mov	r19, r24
     5a2:	10 c8       	rjmp	.-4064   	; 0xfffff5c4 <__eeprom_end+0xff7ef5c4>
     5a4:	ac ba       	out	0x1c, r10	; 28
     5a6:	2f 10       	cpse	r2, r15
     5a8:	28 34       	cpi	r18, 0x48	; 72
     5aa:	fa 00       	.word	0x00fa	; ????
     5ac:	00 7b       	andi	r16, 0xB0	; 176
     5ae:	00 00       	nop
     5b0:	08 14       	cp	r0, r8
     5b2:	2a 14       	cp	r2, r10
     5b4:	22 22       	and	r2, r18
     5b6:	14 2a       	or	r1, r20
     5b8:	14 08       	sbc	r1, r4
     5ba:	aa 00       	.word	0x00aa	; ????
     5bc:	55 00       	.word	0x0055	; ????
     5be:	aa aa       	std	Y+50, r10	; 0x32
     5c0:	55 aa       	std	Z+53, r5	; 0x35
     5c2:	55 aa       	std	Z+53, r5	; 0x35
     5c4:	00 00       	nop
     5c6:	00 ff       	sbrs	r16, 0
     5c8:	00 10       	cpse	r0, r0
     5ca:	10 10       	cpse	r1, r0
     5cc:	ff 00       	.word	0x00ff	; ????
     5ce:	14 14       	cp	r1, r4
     5d0:	14 ff       	sbrs	r17, 4
     5d2:	00 10       	cpse	r0, r0
     5d4:	10 ff       	sbrs	r17, 0
     5d6:	00 ff       	sbrs	r16, 0
     5d8:	10 10       	cpse	r1, r0
     5da:	f0 10       	cpse	r15, r0
     5dc:	f0 14       	cp	r15, r0
     5de:	14 14       	cp	r1, r4
     5e0:	fc 00       	.word	0x00fc	; ????
     5e2:	14 14       	cp	r1, r4
     5e4:	f7 00       	.word	0x00f7	; ????
     5e6:	ff 00       	.word	0x00ff	; ????
     5e8:	00 ff       	sbrs	r16, 0
     5ea:	00 ff       	sbrs	r16, 0
     5ec:	14 14       	cp	r1, r4
     5ee:	f4 04       	cpc	r15, r4
     5f0:	fc 14       	cp	r15, r12
     5f2:	14 17       	cp	r17, r20
     5f4:	10 1f       	adc	r17, r16
     5f6:	10 10       	cpse	r1, r0
     5f8:	1f 10       	cpse	r1, r15
     5fa:	1f 14       	cp	r1, r15
     5fc:	14 14       	cp	r1, r4
     5fe:	1f 00       	.word	0x001f	; ????
     600:	10 10       	cpse	r1, r0
     602:	10 f0       	brcs	.+4      	; 0x608 <__trampolines_end+0x3be>
     604:	00 00       	nop
     606:	00 00       	nop
     608:	1f 10       	cpse	r1, r15
     60a:	10 10       	cpse	r1, r0
     60c:	10 1f       	adc	r17, r16
     60e:	10 10       	cpse	r1, r0
     610:	10 10       	cpse	r1, r0
     612:	f0 10       	cpse	r15, r0
     614:	00 00       	nop
     616:	00 ff       	sbrs	r16, 0
     618:	10 10       	cpse	r1, r0
     61a:	10 10       	cpse	r1, r0
     61c:	10 10       	cpse	r1, r0
     61e:	10 10       	cpse	r1, r0
     620:	10 ff       	sbrs	r17, 0
     622:	10 00       	.word	0x0010	; ????
     624:	00 00       	nop
     626:	ff 14       	cp	r15, r15
     628:	00 00       	nop
     62a:	ff 00       	.word	0x00ff	; ????
     62c:	ff 00       	.word	0x00ff	; ????
     62e:	00 1f       	adc	r16, r16
     630:	10 17       	cp	r17, r16
     632:	00 00       	nop
     634:	fc 04       	cpc	r15, r12
     636:	f4 14       	cp	r15, r4
     638:	14 17       	cp	r17, r20
     63a:	10 17       	cp	r17, r16
     63c:	14 14       	cp	r1, r4
     63e:	f4 04       	cpc	r15, r4
     640:	f4 00       	.word	0x00f4	; ????
     642:	00 ff       	sbrs	r16, 0
     644:	00 f7       	brcc	.-64     	; 0x606 <__trampolines_end+0x3bc>
     646:	14 14       	cp	r1, r4
     648:	14 14       	cp	r1, r4
     64a:	14 14       	cp	r1, r4
     64c:	14 f7       	brge	.-60     	; 0x612 <__trampolines_end+0x3c8>
     64e:	00 f7       	brcc	.-64     	; 0x610 <__trampolines_end+0x3c6>
     650:	14 14       	cp	r1, r4
     652:	14 17       	cp	r17, r20
     654:	14 10       	cpse	r1, r4
     656:	10 1f       	adc	r17, r16
     658:	10 1f       	adc	r17, r16
     65a:	14 14       	cp	r1, r4
     65c:	14 f4       	brge	.+4      	; 0x662 <__trampolines_end+0x418>
     65e:	14 10       	cpse	r1, r4
     660:	10 f0       	brcs	.+4      	; 0x666 <__trampolines_end+0x41c>
     662:	10 f0       	brcs	.+4      	; 0x668 <__trampolines_end+0x41e>
     664:	00 00       	nop
     666:	1f 10       	cpse	r1, r15
     668:	1f 00       	.word	0x001f	; ????
     66a:	00 00       	nop
     66c:	1f 14       	cp	r1, r15
     66e:	00 00       	nop
     670:	00 fc       	sbrc	r0, 0
     672:	14 00       	.word	0x0014	; ????
     674:	00 f0       	brcs	.+0      	; 0x676 <__trampolines_end+0x42c>
     676:	10 f0       	brcs	.+4      	; 0x67c <__trampolines_end+0x432>
     678:	10 10       	cpse	r1, r0
     67a:	ff 10       	cpse	r15, r15
     67c:	ff 14       	cp	r15, r15
     67e:	14 14       	cp	r1, r4
     680:	ff 14       	cp	r15, r15
     682:	10 10       	cpse	r1, r0
     684:	10 1f       	adc	r17, r16
     686:	00 00       	nop
     688:	00 00       	nop
     68a:	f0 10       	cpse	r15, r0
     68c:	ff ff       	.word	0xffff	; ????
     68e:	ff ff       	.word	0xffff	; ????
     690:	ff f0       	brie	.+62     	; 0x6d0 <__trampolines_end+0x486>
     692:	f0 f0       	brcs	.+60     	; 0x6d0 <__trampolines_end+0x486>
     694:	f0 f0       	brcs	.+60     	; 0x6d2 <__trampolines_end+0x488>
     696:	ff ff       	.word	0xffff	; ????
     698:	ff 00       	.word	0x00ff	; ????
     69a:	00 00       	nop
     69c:	00 00       	nop
     69e:	ff ff       	.word	0xffff	; ????
     6a0:	0f 0f       	add	r16, r31
     6a2:	0f 0f       	add	r16, r31
     6a4:	0f 38       	cpi	r16, 0x8F	; 143
     6a6:	44 44       	sbci	r20, 0x44	; 68
     6a8:	38 44       	sbci	r19, 0x48	; 72
     6aa:	fc 4a       	sbci	r31, 0xAC	; 172
     6ac:	4a 4a       	sbci	r20, 0xAA	; 170
     6ae:	34 7e       	andi	r19, 0xE4	; 228
     6b0:	02 02       	muls	r16, r18
     6b2:	06 06       	cpc	r0, r22
     6b4:	02 7e       	andi	r16, 0xE2	; 226
     6b6:	02 7e       	andi	r16, 0xE2	; 226
     6b8:	02 63       	ori	r16, 0x32	; 50
     6ba:	55 49       	sbci	r21, 0x95	; 149
     6bc:	41 63       	ori	r20, 0x31	; 49
     6be:	38 44       	sbci	r19, 0x48	; 72
     6c0:	44 3c       	cpi	r20, 0xC4	; 196
     6c2:	04 40       	sbci	r16, 0x04	; 4
     6c4:	7e 20       	and	r7, r14
     6c6:	1e 20       	and	r1, r14
     6c8:	06 02       	muls	r16, r22
     6ca:	7e 02       	muls	r23, r30
     6cc:	02 99       	sbic	0x00, 2	; 0
     6ce:	a5 e7       	ldi	r26, 0x75	; 117
     6d0:	a5 99       	sbic	0x14, 5	; 20
     6d2:	1c 2a       	or	r1, r28
     6d4:	49 2a       	or	r4, r25
     6d6:	1c 4c       	sbci	r17, 0xCC	; 204
     6d8:	72 01       	movw	r14, r4
     6da:	72 4c       	sbci	r23, 0xC2	; 194
     6dc:	30 4a       	sbci	r19, 0xA0	; 160
     6de:	4d 4d       	sbci	r20, 0xDD	; 221
     6e0:	30 30       	cpi	r19, 0x00	; 0
     6e2:	48 78       	andi	r20, 0x88	; 136
     6e4:	48 30       	cpi	r20, 0x08	; 8
     6e6:	bc 62       	ori	r27, 0x2C	; 44
     6e8:	5a 46       	sbci	r21, 0x6A	; 106
     6ea:	3d 3e       	cpi	r19, 0xED	; 237
     6ec:	49 49       	sbci	r20, 0x99	; 153
     6ee:	49 00       	.word	0x0049	; ????
     6f0:	7e 01       	movw	r14, r28
     6f2:	01 01       	movw	r0, r2
     6f4:	7e 2a       	or	r7, r30
     6f6:	2a 2a       	or	r2, r26
     6f8:	2a 2a       	or	r2, r26
     6fa:	44 44       	sbci	r20, 0x44	; 68
     6fc:	5f 44       	sbci	r21, 0x4F	; 79
     6fe:	44 40       	sbci	r20, 0x04	; 4
     700:	51 4a       	sbci	r21, 0xA1	; 161
     702:	44 40       	sbci	r20, 0x04	; 4
     704:	40 44       	sbci	r20, 0x40	; 64
     706:	4a 51       	subi	r20, 0x1A	; 26
     708:	40 00       	.word	0x0040	; ????
     70a:	00 ff       	sbrs	r16, 0
     70c:	01 03       	mulsu	r16, r17
     70e:	e0 80       	ld	r14, Z
     710:	ff 00       	.word	0x00ff	; ????
     712:	00 08       	sbc	r0, r0
     714:	08 6b       	ori	r16, 0xB8	; 184
     716:	6b 08       	sbc	r6, r11
     718:	36 12       	cpse	r3, r22
     71a:	36 24       	eor	r3, r6
     71c:	36 06       	cpc	r3, r22
     71e:	0f 09       	sbc	r16, r15
     720:	0f 06       	cpc	r0, r31
     722:	00 00       	nop
     724:	18 18       	sub	r1, r8
     726:	00 00       	nop
     728:	00 10       	cpse	r0, r0
     72a:	10 00       	.word	0x0010	; ????
     72c:	30 40       	sbci	r19, 0x00	; 0
     72e:	ff 01       	movw	r30, r30
     730:	01 00       	.word	0x0001	; ????
     732:	1f 01       	movw	r2, r30
     734:	01 1e       	adc	r0, r17
     736:	00 19       	sub	r16, r0
     738:	1d 17       	cp	r17, r29
     73a:	12 00       	.word	0x0012	; ????
     73c:	3c 3c       	cpi	r19, 0xCC	; 204
     73e:	3c 3c       	cpi	r19, 0xCC	; 204
     740:	00 00       	nop
     742:	00 00       	nop
	...

00000746 <__ctors_start>:
     746:	cf 19       	sub	r28, r15

00000748 <__ctors_end>:
     748:	11 24       	eor	r1, r1
     74a:	1f be       	out	0x3f, r1	; 63
     74c:	cf ef       	ldi	r28, 0xFF	; 255
     74e:	cd bf       	out	0x3d, r28	; 61
     750:	df e3       	ldi	r29, 0x3F	; 63
     752:	de bf       	out	0x3e, r29	; 62
     754:	00 e0       	ldi	r16, 0x00	; 0
     756:	0c bf       	out	0x3c, r16	; 60

00000758 <__do_copy_data>:
     758:	11 e2       	ldi	r17, 0x21	; 33
     75a:	a0 e0       	ldi	r26, 0x00	; 0
     75c:	b0 e2       	ldi	r27, 0x20	; 32
     75e:	ee eb       	ldi	r30, 0xBE	; 190
     760:	f0 e4       	ldi	r31, 0x40	; 64
     762:	00 e0       	ldi	r16, 0x00	; 0
     764:	0b bf       	out	0x3b, r16	; 59
     766:	02 c0       	rjmp	.+4      	; 0x76c <__do_copy_data+0x14>
     768:	07 90       	elpm	r0, Z+
     76a:	0d 92       	st	X+, r0
     76c:	aa 31       	cpi	r26, 0x1A	; 26
     76e:	b1 07       	cpc	r27, r17
     770:	d9 f7       	brne	.-10     	; 0x768 <__do_copy_data+0x10>

00000772 <__do_clear_bss>:
     772:	21 e2       	ldi	r18, 0x21	; 33
     774:	aa e1       	ldi	r26, 0x1A	; 26
     776:	b1 e2       	ldi	r27, 0x21	; 33
     778:	01 c0       	rjmp	.+2      	; 0x77c <.do_clear_bss_start>

0000077a <.do_clear_bss_loop>:
     77a:	1d 92       	st	X+, r1

0000077c <.do_clear_bss_start>:
     77c:	ab 32       	cpi	r26, 0x2B	; 43
     77e:	b2 07       	cpc	r27, r18
     780:	e1 f7       	brne	.-8      	; 0x77a <.do_clear_bss_loop>

00000782 <__do_global_ctors>:
     782:	17 e0       	ldi	r17, 0x07	; 7
     784:	c8 e4       	ldi	r28, 0x48	; 72
     786:	d7 e0       	ldi	r29, 0x07	; 7
     788:	00 e0       	ldi	r16, 0x00	; 0
     78a:	06 c0       	rjmp	.+12     	; 0x798 <__do_global_ctors+0x16>
     78c:	22 97       	sbiw	r28, 0x02	; 2
     78e:	01 09       	sbc	r16, r1
     790:	fe 01       	movw	r30, r28
     792:	0b bf       	out	0x3b, r16	; 59
     794:	0e 94 49 1c 	call	0x3892	; 0x3892 <__tablejump_elpm__>
     798:	c6 34       	cpi	r28, 0x46	; 70
     79a:	d1 07       	cpc	r29, r17
     79c:	80 e0       	ldi	r24, 0x00	; 0
     79e:	08 07       	cpc	r16, r24
     7a0:	a9 f7       	brne	.-22     	; 0x78c <__do_global_ctors+0xa>
     7a2:	0e 94 18 19 	call	0x3230	; 0x3230 <main>
     7a6:	0c 94 5d 20 	jmp	0x40ba	; 0x40ba <_exit>

000007aa <__bad_interrupt>:
     7aa:	0c 94 ab 18 	jmp	0x3156	; 0x3156 <__vector_default>

000007ae <_ZN12Adafruit_GFX9drawPixelEiij>:
  wrap = w;
}

uint8_t Adafruit_GFX::getRotation(void) const {
  return rotation;
}
     7ae:	08 95       	ret

000007b0 <_ZN12Adafruit_GFX8drawLineEiiiij>:
     7b0:	2f 92       	push	r2
     7b2:	3f 92       	push	r3
     7b4:	4f 92       	push	r4
     7b6:	5f 92       	push	r5
     7b8:	6f 92       	push	r6
     7ba:	7f 92       	push	r7
     7bc:	8f 92       	push	r8
     7be:	9f 92       	push	r9
     7c0:	af 92       	push	r10
     7c2:	bf 92       	push	r11
     7c4:	cf 92       	push	r12
     7c6:	df 92       	push	r13
     7c8:	ef 92       	push	r14
     7ca:	ff 92       	push	r15
     7cc:	0f 93       	push	r16
     7ce:	1f 93       	push	r17
     7d0:	cf 93       	push	r28
     7d2:	df 93       	push	r29
     7d4:	00 d0       	rcall	.+0      	; 0x7d6 <_ZN12Adafruit_GFX8drawLineEiiiij+0x26>
     7d6:	1f 92       	push	r1
     7d8:	cd b7       	in	r28, 0x3d	; 61
     7da:	de b7       	in	r29, 0x3e	; 62
     7dc:	5c 01       	movw	r10, r24
     7de:	6b 83       	std	Y+3, r22	; 0x03
     7e0:	7c 83       	std	Y+4, r23	; 0x04
     7e2:	6a 01       	movw	r12, r20
     7e4:	49 01       	movw	r8, r18
     7e6:	18 01       	movw	r2, r16
     7e8:	b8 01       	movw	r22, r16
     7ea:	64 1b       	sub	r22, r20
     7ec:	75 0b       	sbc	r23, r21
     7ee:	88 27       	eor	r24, r24
     7f0:	77 fd       	sbrc	r23, 7
     7f2:	80 95       	com	r24
     7f4:	98 2f       	mov	r25, r24
     7f6:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__floatsisf>
     7fa:	2b 01       	movw	r4, r22
     7fc:	3c 01       	movw	r6, r24
     7fe:	e8 94       	clt
     800:	77 f8       	bld	r7, 7
     802:	b4 01       	movw	r22, r8
     804:	2b 81       	ldd	r18, Y+3	; 0x03
     806:	3c 81       	ldd	r19, Y+4	; 0x04
     808:	62 1b       	sub	r22, r18
     80a:	73 0b       	sbc	r23, r19
     80c:	88 27       	eor	r24, r24
     80e:	77 fd       	sbrc	r23, 7
     810:	80 95       	com	r24
     812:	98 2f       	mov	r25, r24
     814:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__floatsisf>
     818:	9b 01       	movw	r18, r22
     81a:	ac 01       	movw	r20, r24
     81c:	5f 77       	andi	r21, 0x7F	; 127
     81e:	11 e0       	ldi	r17, 0x01	; 1
     820:	00 e0       	ldi	r16, 0x00	; 0
     822:	c3 01       	movw	r24, r6
     824:	b2 01       	movw	r22, r4
     826:	0e 94 0c 1c 	call	0x3818	; 0x3818 <__gesf2>
     82a:	18 16       	cp	r1, r24
     82c:	0c f0       	brlt	.+2      	; 0x830 <_ZN12Adafruit_GFX8drawLineEiiiij+0x80>
     82e:	10 e0       	ldi	r17, 0x00	; 0
     830:	61 2e       	mov	r6, r17
     832:	70 2e       	mov	r7, r16
     834:	61 14       	cp	r6, r1
     836:	71 04       	cpc	r7, r1
     838:	59 f0       	breq	.+22     	; 0x850 <_ZN12Adafruit_GFX8drawLineEiiiij+0xa0>
     83a:	98 2d       	mov	r25, r8
     83c:	89 2d       	mov	r24, r9
     83e:	41 01       	movw	r8, r2
     840:	29 2e       	mov	r2, r25
     842:	38 2e       	mov	r3, r24
     844:	9b 81       	ldd	r25, Y+3	; 0x03
     846:	8c 81       	ldd	r24, Y+4	; 0x04
     848:	cb 82       	std	Y+3, r12	; 0x03
     84a:	dc 82       	std	Y+4, r13	; 0x04
     84c:	c9 2e       	mov	r12, r25
     84e:	d8 2e       	mov	r13, r24
     850:	8b 81       	ldd	r24, Y+3	; 0x03
     852:	9c 81       	ldd	r25, Y+4	; 0x04
     854:	88 16       	cp	r8, r24
     856:	99 06       	cpc	r9, r25
     858:	5c f4       	brge	.+22     	; 0x870 <_ZN12Adafruit_GFX8drawLineEiiiij+0xc0>
     85a:	9c 2d       	mov	r25, r12
     85c:	8d 2d       	mov	r24, r13
     85e:	61 01       	movw	r12, r2
     860:	29 2e       	mov	r2, r25
     862:	38 2e       	mov	r3, r24
     864:	9b 81       	ldd	r25, Y+3	; 0x03
     866:	8c 81       	ldd	r24, Y+4	; 0x04
     868:	8b 82       	std	Y+3, r8	; 0x03
     86a:	9c 82       	std	Y+4, r9	; 0x04
     86c:	89 2e       	mov	r8, r25
     86e:	98 2e       	mov	r9, r24
     870:	d4 01       	movw	r26, r8
     872:	eb 81       	ldd	r30, Y+3	; 0x03
     874:	fc 81       	ldd	r31, Y+4	; 0x04
     876:	ae 1b       	sub	r26, r30
     878:	bf 0b       	sbc	r27, r31
     87a:	a9 83       	std	Y+1, r26	; 0x01
     87c:	ba 83       	std	Y+2, r27	; 0x02
     87e:	b1 01       	movw	r22, r2
     880:	6c 19       	sub	r22, r12
     882:	7d 09       	sbc	r23, r13
     884:	88 27       	eor	r24, r24
     886:	77 fd       	sbrc	r23, 7
     888:	80 95       	com	r24
     88a:	98 2f       	mov	r25, r24
     88c:	0e 94 a8 1b 	call	0x3750	; 0x3750 <__floatsisf>
     890:	9f 77       	andi	r25, 0x7F	; 127
     892:	0e 94 75 1b 	call	0x36ea	; 0x36ea <__fixsfsi>
     896:	2b 01       	movw	r4, r22
     898:	09 81       	ldd	r16, Y+1	; 0x01
     89a:	1a 81       	ldd	r17, Y+2	; 0x02
     89c:	11 23       	and	r17, r17
     89e:	14 f4       	brge	.+4      	; 0x8a4 <_ZN12Adafruit_GFX8drawLineEiiiij+0xf4>
     8a0:	0f 5f       	subi	r16, 0xFF	; 255
     8a2:	1f 4f       	sbci	r17, 0xFF	; 255
     8a4:	15 95       	asr	r17
     8a6:	07 95       	ror	r16
     8a8:	c2 14       	cp	r12, r2
     8aa:	d3 04       	cpc	r13, r3
     8ac:	24 f4       	brge	.+8      	; 0x8b6 <_ZN12Adafruit_GFX8drawLineEiiiij+0x106>
     8ae:	22 24       	eor	r2, r2
     8b0:	23 94       	inc	r2
     8b2:	31 2c       	mov	r3, r1
     8b4:	03 c0       	rjmp	.+6      	; 0x8bc <_ZN12Adafruit_GFX8drawLineEiiiij+0x10c>
     8b6:	22 24       	eor	r2, r2
     8b8:	2a 94       	dec	r2
     8ba:	32 2c       	mov	r3, r2
     8bc:	2b 81       	ldd	r18, Y+3	; 0x03
     8be:	3c 81       	ldd	r19, Y+4	; 0x04
     8c0:	82 16       	cp	r8, r18
     8c2:	93 06       	cpc	r9, r19
     8c4:	74 f1       	brlt	.+92     	; 0x922 <_ZN12Adafruit_GFX8drawLineEiiiij+0x172>
     8c6:	61 14       	cp	r6, r1
     8c8:	71 04       	cpc	r7, r1
     8ca:	69 f0       	breq	.+26     	; 0x8e6 <_ZN12Adafruit_GFX8drawLineEiiiij+0x136>
     8cc:	d5 01       	movw	r26, r10
     8ce:	ed 91       	ld	r30, X+
     8d0:	fc 91       	ld	r31, X
     8d2:	01 90       	ld	r0, Z+
     8d4:	f0 81       	ld	r31, Z
     8d6:	e0 2d       	mov	r30, r0
     8d8:	97 01       	movw	r18, r14
     8da:	4b 81       	ldd	r20, Y+3	; 0x03
     8dc:	5c 81       	ldd	r21, Y+4	; 0x04
     8de:	b6 01       	movw	r22, r12
     8e0:	c5 01       	movw	r24, r10
     8e2:	19 95       	eicall
     8e4:	0c c0       	rjmp	.+24     	; 0x8fe <_ZN12Adafruit_GFX8drawLineEiiiij+0x14e>
     8e6:	d5 01       	movw	r26, r10
     8e8:	ed 91       	ld	r30, X+
     8ea:	fc 91       	ld	r31, X
     8ec:	01 90       	ld	r0, Z+
     8ee:	f0 81       	ld	r31, Z
     8f0:	e0 2d       	mov	r30, r0
     8f2:	97 01       	movw	r18, r14
     8f4:	a6 01       	movw	r20, r12
     8f6:	6b 81       	ldd	r22, Y+3	; 0x03
     8f8:	7c 81       	ldd	r23, Y+4	; 0x04
     8fa:	c5 01       	movw	r24, r10
     8fc:	19 95       	eicall
     8fe:	04 19       	sub	r16, r4
     900:	15 09       	sbc	r17, r5
     902:	32 f4       	brpl	.+12     	; 0x910 <_ZN12Adafruit_GFX8drawLineEiiiij+0x160>
     904:	c2 0c       	add	r12, r2
     906:	d3 1c       	adc	r13, r3
     908:	e9 81       	ldd	r30, Y+1	; 0x01
     90a:	fa 81       	ldd	r31, Y+2	; 0x02
     90c:	0e 0f       	add	r16, r30
     90e:	1f 1f       	adc	r17, r31
     910:	2b 81       	ldd	r18, Y+3	; 0x03
     912:	3c 81       	ldd	r19, Y+4	; 0x04
     914:	2f 5f       	subi	r18, 0xFF	; 255
     916:	3f 4f       	sbci	r19, 0xFF	; 255
     918:	2b 83       	std	Y+3, r18	; 0x03
     91a:	3c 83       	std	Y+4, r19	; 0x04
     91c:	82 16       	cp	r8, r18
     91e:	93 06       	cpc	r9, r19
     920:	94 f6       	brge	.-92     	; 0x8c6 <_ZN12Adafruit_GFX8drawLineEiiiij+0x116>
     922:	24 96       	adiw	r28, 0x04	; 4
     924:	cd bf       	out	0x3d, r28	; 61
     926:	de bf       	out	0x3e, r29	; 62
     928:	df 91       	pop	r29
     92a:	cf 91       	pop	r28
     92c:	1f 91       	pop	r17
     92e:	0f 91       	pop	r16
     930:	ff 90       	pop	r15
     932:	ef 90       	pop	r14
     934:	df 90       	pop	r13
     936:	cf 90       	pop	r12
     938:	bf 90       	pop	r11
     93a:	af 90       	pop	r10
     93c:	9f 90       	pop	r9
     93e:	8f 90       	pop	r8
     940:	7f 90       	pop	r7
     942:	6f 90       	pop	r6
     944:	5f 90       	pop	r5
     946:	4f 90       	pop	r4
     948:	3f 90       	pop	r3
     94a:	2f 90       	pop	r2
     94c:	08 95       	ret

0000094e <_ZN12Adafruit_GFX8drawRectEiiiij>:
     94e:	6f 92       	push	r6
     950:	7f 92       	push	r7
     952:	8f 92       	push	r8
     954:	9f 92       	push	r9
     956:	af 92       	push	r10
     958:	bf 92       	push	r11
     95a:	cf 92       	push	r12
     95c:	df 92       	push	r13
     95e:	ef 92       	push	r14
     960:	ff 92       	push	r15
     962:	0f 93       	push	r16
     964:	1f 93       	push	r17
     966:	cf 93       	push	r28
     968:	df 93       	push	r29
     96a:	ec 01       	movw	r28, r24
     96c:	5b 01       	movw	r10, r22
     96e:	6a 01       	movw	r12, r20
     970:	39 01       	movw	r6, r18
     972:	48 01       	movw	r8, r16
     974:	e8 81       	ld	r30, Y
     976:	f9 81       	ldd	r31, Y+1	; 0x01
     978:	06 80       	ldd	r0, Z+6	; 0x06
     97a:	f7 81       	ldd	r31, Z+7	; 0x07
     97c:	e0 2d       	mov	r30, r0
     97e:	87 01       	movw	r16, r14
     980:	19 95       	eicall
     982:	e8 81       	ld	r30, Y
     984:	f9 81       	ldd	r31, Y+1	; 0x01
     986:	a6 01       	movw	r20, r12
     988:	48 0d       	add	r20, r8
     98a:	59 1d       	adc	r21, r9
     98c:	41 50       	subi	r20, 0x01	; 1
     98e:	51 09       	sbc	r21, r1
     990:	06 80       	ldd	r0, Z+6	; 0x06
     992:	f7 81       	ldd	r31, Z+7	; 0x07
     994:	e0 2d       	mov	r30, r0
     996:	93 01       	movw	r18, r6
     998:	b5 01       	movw	r22, r10
     99a:	ce 01       	movw	r24, r28
     99c:	19 95       	eicall
     99e:	e8 81       	ld	r30, Y
     9a0:	f9 81       	ldd	r31, Y+1	; 0x01
     9a2:	04 80       	ldd	r0, Z+4	; 0x04
     9a4:	f5 81       	ldd	r31, Z+5	; 0x05
     9a6:	e0 2d       	mov	r30, r0
     9a8:	94 01       	movw	r18, r8
     9aa:	a6 01       	movw	r20, r12
     9ac:	b5 01       	movw	r22, r10
     9ae:	ce 01       	movw	r24, r28
     9b0:	19 95       	eicall
     9b2:	e8 81       	ld	r30, Y
     9b4:	f9 81       	ldd	r31, Y+1	; 0x01
     9b6:	a6 0c       	add	r10, r6
     9b8:	b7 1c       	adc	r11, r7
     9ba:	b5 01       	movw	r22, r10
     9bc:	61 50       	subi	r22, 0x01	; 1
     9be:	71 09       	sbc	r23, r1
     9c0:	04 80       	ldd	r0, Z+4	; 0x04
     9c2:	f5 81       	ldd	r31, Z+5	; 0x05
     9c4:	e0 2d       	mov	r30, r0
     9c6:	94 01       	movw	r18, r8
     9c8:	a6 01       	movw	r20, r12
     9ca:	ce 01       	movw	r24, r28
     9cc:	19 95       	eicall
     9ce:	df 91       	pop	r29
     9d0:	cf 91       	pop	r28
     9d2:	1f 91       	pop	r17
     9d4:	0f 91       	pop	r16
     9d6:	ff 90       	pop	r15
     9d8:	ef 90       	pop	r14
     9da:	df 90       	pop	r13
     9dc:	cf 90       	pop	r12
     9de:	bf 90       	pop	r11
     9e0:	af 90       	pop	r10
     9e2:	9f 90       	pop	r9
     9e4:	8f 90       	pop	r8
     9e6:	7f 90       	pop	r7
     9e8:	6f 90       	pop	r6
     9ea:	08 95       	ret

000009ec <_ZN12Adafruit_GFX13drawFastVLineEiiij>:
     9ec:	ef 92       	push	r14
     9ee:	ff 92       	push	r15
     9f0:	0f 93       	push	r16
     9f2:	1f 93       	push	r17
     9f4:	dc 01       	movw	r26, r24
     9f6:	ed 91       	ld	r30, X+
     9f8:	fc 91       	ld	r31, X
     9fa:	24 0f       	add	r18, r20
     9fc:	35 1f       	adc	r19, r21
     9fe:	21 50       	subi	r18, 0x01	; 1
     a00:	31 09       	sbc	r19, r1
     a02:	02 80       	ldd	r0, Z+2	; 0x02
     a04:	f3 81       	ldd	r31, Z+3	; 0x03
     a06:	e0 2d       	mov	r30, r0
     a08:	78 01       	movw	r14, r16
     a0a:	89 01       	movw	r16, r18
     a0c:	9b 01       	movw	r18, r22
     a0e:	19 95       	eicall
     a10:	1f 91       	pop	r17
     a12:	0f 91       	pop	r16
     a14:	ff 90       	pop	r15
     a16:	ef 90       	pop	r14
     a18:	08 95       	ret

00000a1a <_ZN12Adafruit_GFX13drawFastHLineEiiij>:
     a1a:	ef 92       	push	r14
     a1c:	ff 92       	push	r15
     a1e:	0f 93       	push	r16
     a20:	1f 93       	push	r17
     a22:	dc 01       	movw	r26, r24
     a24:	ed 91       	ld	r30, X+
     a26:	fc 91       	ld	r31, X
     a28:	26 0f       	add	r18, r22
     a2a:	37 1f       	adc	r19, r23
     a2c:	21 50       	subi	r18, 0x01	; 1
     a2e:	31 09       	sbc	r19, r1
     a30:	02 80       	ldd	r0, Z+2	; 0x02
     a32:	f3 81       	ldd	r31, Z+3	; 0x03
     a34:	e0 2d       	mov	r30, r0
     a36:	78 01       	movw	r14, r16
     a38:	8a 01       	movw	r16, r20
     a3a:	19 95       	eicall
     a3c:	1f 91       	pop	r17
     a3e:	0f 91       	pop	r16
     a40:	ff 90       	pop	r15
     a42:	ef 90       	pop	r14
     a44:	08 95       	ret

00000a46 <_ZN12Adafruit_GFX8fillRectEiiiij>:
     a46:	6f 92       	push	r6
     a48:	7f 92       	push	r7
     a4a:	8f 92       	push	r8
     a4c:	9f 92       	push	r9
     a4e:	af 92       	push	r10
     a50:	bf 92       	push	r11
     a52:	cf 92       	push	r12
     a54:	df 92       	push	r13
     a56:	ef 92       	push	r14
     a58:	ff 92       	push	r15
     a5a:	0f 93       	push	r16
     a5c:	1f 93       	push	r17
     a5e:	cf 93       	push	r28
     a60:	df 93       	push	r29
     a62:	6c 01       	movw	r12, r24
     a64:	eb 01       	movw	r28, r22
     a66:	4a 01       	movw	r8, r20
     a68:	58 01       	movw	r10, r16
     a6a:	3b 01       	movw	r6, r22
     a6c:	62 0e       	add	r6, r18
     a6e:	73 1e       	adc	r7, r19
     a70:	66 15       	cp	r22, r6
     a72:	77 05       	cpc	r23, r7
     a74:	84 f4       	brge	.+32     	; 0xa96 <_ZN12Adafruit_GFX8fillRectEiiiij+0x50>
     a76:	d6 01       	movw	r26, r12
     a78:	ed 91       	ld	r30, X+
     a7a:	fc 91       	ld	r31, X
     a7c:	04 80       	ldd	r0, Z+4	; 0x04
     a7e:	f5 81       	ldd	r31, Z+5	; 0x05
     a80:	e0 2d       	mov	r30, r0
     a82:	87 01       	movw	r16, r14
     a84:	95 01       	movw	r18, r10
     a86:	a4 01       	movw	r20, r8
     a88:	be 01       	movw	r22, r28
     a8a:	c6 01       	movw	r24, r12
     a8c:	19 95       	eicall
     a8e:	21 96       	adiw	r28, 0x01	; 1
     a90:	c6 15       	cp	r28, r6
     a92:	d7 05       	cpc	r29, r7
     a94:	84 f3       	brlt	.-32     	; 0xa76 <_ZN12Adafruit_GFX8fillRectEiiiij+0x30>
     a96:	df 91       	pop	r29
     a98:	cf 91       	pop	r28
     a9a:	1f 91       	pop	r17
     a9c:	0f 91       	pop	r16
     a9e:	ff 90       	pop	r15
     aa0:	ef 90       	pop	r14
     aa2:	df 90       	pop	r13
     aa4:	cf 90       	pop	r12
     aa6:	bf 90       	pop	r11
     aa8:	af 90       	pop	r10
     aaa:	9f 90       	pop	r9
     aac:	8f 90       	pop	r8
     aae:	7f 90       	pop	r7
     ab0:	6f 90       	pop	r6
     ab2:	08 95       	ret

00000ab4 <_ZN12Adafruit_GFX10fillScreenEj>:
     ab4:	ef 92       	push	r14
     ab6:	ff 92       	push	r15
     ab8:	0f 93       	push	r16
     aba:	1f 93       	push	r17
     abc:	dc 01       	movw	r26, r24
     abe:	ed 91       	ld	r30, X+
     ac0:	fc 91       	ld	r31, X
     ac2:	11 97       	sbiw	r26, 0x01	; 1
     ac4:	18 96       	adiw	r26, 0x08	; 8
     ac6:	0d 91       	ld	r16, X+
     ac8:	1c 91       	ld	r17, X
     aca:	19 97       	sbiw	r26, 0x09	; 9
     acc:	16 96       	adiw	r26, 0x06	; 6
     ace:	2d 91       	ld	r18, X+
     ad0:	3c 91       	ld	r19, X
     ad2:	17 97       	sbiw	r26, 0x07	; 7
     ad4:	02 84       	ldd	r0, Z+10	; 0x0a
     ad6:	f3 85       	ldd	r31, Z+11	; 0x0b
     ad8:	e0 2d       	mov	r30, r0
     ada:	7b 01       	movw	r14, r22
     adc:	40 e0       	ldi	r20, 0x00	; 0
     ade:	50 e0       	ldi	r21, 0x00	; 0
     ae0:	60 e0       	ldi	r22, 0x00	; 0
     ae2:	70 e0       	ldi	r23, 0x00	; 0
     ae4:	19 95       	eicall
     ae6:	1f 91       	pop	r17
     ae8:	0f 91       	pop	r16
     aea:	ff 90       	pop	r15
     aec:	ef 90       	pop	r14
     aee:	08 95       	ret

00000af0 <_ZN12Adafruit_GFX13invertDisplayEb>:
     af0:	08 95       	ret

00000af2 <_ZN12Adafruit_GFXC1Eii>:
     af2:	fc 01       	movw	r30, r24
     af4:	89 e3       	ldi	r24, 0x39	; 57
     af6:	90 e2       	ldi	r25, 0x20	; 32
     af8:	80 83       	st	Z, r24
     afa:	91 83       	std	Z+1, r25	; 0x01
     afc:	62 83       	std	Z+2, r22	; 0x02
     afe:	73 83       	std	Z+3, r23	; 0x03
     b00:	44 83       	std	Z+4, r20	; 0x04
     b02:	55 83       	std	Z+5, r21	; 0x05
     b04:	66 83       	std	Z+6, r22	; 0x06
     b06:	77 83       	std	Z+7, r23	; 0x07
     b08:	40 87       	std	Z+8, r20	; 0x08
     b0a:	51 87       	std	Z+9, r21	; 0x09
     b0c:	15 8a       	std	Z+21, r1	; 0x15
     b0e:	12 86       	std	Z+10, r1	; 0x0a
     b10:	13 86       	std	Z+11, r1	; 0x0b
     b12:	14 86       	std	Z+12, r1	; 0x0c
     b14:	15 86       	std	Z+13, r1	; 0x0d
     b16:	21 e0       	ldi	r18, 0x01	; 1
     b18:	24 8b       	std	Z+20, r18	; 0x14
     b1a:	8f ef       	ldi	r24, 0xFF	; 255
     b1c:	9f ef       	ldi	r25, 0xFF	; 255
     b1e:	82 8b       	std	Z+18, r24	; 0x12
     b20:	93 8b       	std	Z+19, r25	; 0x13
     b22:	80 8b       	std	Z+16, r24	; 0x10
     b24:	91 8b       	std	Z+17, r25	; 0x11
     b26:	26 8b       	std	Z+22, r18	; 0x16
     b28:	08 95       	ret

00000b2a <_ZN12Adafruit_GFX8drawCharEiihjjh>:
     b2a:	2f 92       	push	r2
     b2c:	3f 92       	push	r3
     b2e:	4f 92       	push	r4
     b30:	5f 92       	push	r5
     b32:	6f 92       	push	r6
     b34:	7f 92       	push	r7
     b36:	8f 92       	push	r8
     b38:	9f 92       	push	r9
     b3a:	af 92       	push	r10
     b3c:	bf 92       	push	r11
     b3e:	cf 92       	push	r12
     b40:	df 92       	push	r13
     b42:	ef 92       	push	r14
     b44:	ff 92       	push	r15
     b46:	0f 93       	push	r16
     b48:	1f 93       	push	r17
     b4a:	cf 93       	push	r28
     b4c:	df 93       	push	r29
     b4e:	cd b7       	in	r28, 0x3d	; 61
     b50:	de b7       	in	r29, 0x3e	; 62
     b52:	60 97       	sbiw	r28, 0x10	; 16
     b54:	cd bf       	out	0x3d, r28	; 61
     b56:	de bf       	out	0x3e, r29	; 62
     b58:	4c 01       	movw	r8, r24
     b5a:	09 83       	std	Y+1, r16	; 0x01
     b5c:	1a 83       	std	Y+2, r17	; 0x02
     b5e:	ec 82       	std	Y+4, r14	; 0x04
     b60:	fd 82       	std	Y+5, r15	; 0x05
     b62:	cb 82       	std	Y+3, r12	; 0x03
     b64:	dc 01       	movw	r26, r24
     b66:	16 96       	adiw	r26, 0x06	; 6
     b68:	8d 91       	ld	r24, X+
     b6a:	9c 91       	ld	r25, X
     b6c:	17 97       	sbiw	r26, 0x07	; 7
     b6e:	68 17       	cp	r22, r24
     b70:	79 07       	cpc	r23, r25
     b72:	0c f0       	brlt	.+2      	; 0xb76 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x4c>
     b74:	c6 c0       	rjmp	.+396    	; 0xd02 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     b76:	18 96       	adiw	r26, 0x08	; 8
     b78:	8d 91       	ld	r24, X+
     b7a:	9c 91       	ld	r25, X
     b7c:	19 97       	sbiw	r26, 0x09	; 9
     b7e:	48 17       	cp	r20, r24
     b80:	59 07       	cpc	r21, r25
     b82:	0c f0       	brlt	.+2      	; 0xb86 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x5c>
     b84:	be c0       	rjmp	.+380    	; 0xd02 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     b86:	6c 2c       	mov	r6, r12
     b88:	71 2c       	mov	r7, r1
     b8a:	c3 01       	movw	r24, r6
     b8c:	88 0f       	add	r24, r24
     b8e:	99 1f       	adc	r25, r25
     b90:	86 0d       	add	r24, r6
     b92:	97 1d       	adc	r25, r7
     b94:	88 0f       	add	r24, r24
     b96:	99 1f       	adc	r25, r25
     b98:	86 0f       	add	r24, r22
     b9a:	97 1f       	adc	r25, r23
     b9c:	01 97       	sbiw	r24, 0x01	; 1
     b9e:	99 23       	and	r25, r25
     ba0:	0c f4       	brge	.+2      	; 0xba4 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x7a>
     ba2:	af c0       	rjmp	.+350    	; 0xd02 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     ba4:	c3 01       	movw	r24, r6
     ba6:	88 0f       	add	r24, r24
     ba8:	99 1f       	adc	r25, r25
     baa:	88 0f       	add	r24, r24
     bac:	99 1f       	adc	r25, r25
     bae:	88 0f       	add	r24, r24
     bb0:	99 1f       	adc	r25, r25
     bb2:	84 0f       	add	r24, r20
     bb4:	95 1f       	adc	r25, r21
     bb6:	01 97       	sbiw	r24, 0x01	; 1
     bb8:	99 23       	and	r25, r25
     bba:	0c f4       	brge	.+2      	; 0xbbe <_ZN12Adafruit_GFX8drawCharEiihjjh+0x94>
     bbc:	a2 c0       	rjmp	.+324    	; 0xd02 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     bbe:	30 e0       	ldi	r19, 0x00	; 0
     bc0:	c9 01       	movw	r24, r18
     bc2:	88 0f       	add	r24, r24
     bc4:	99 1f       	adc	r25, r25
     bc6:	88 0f       	add	r24, r24
     bc8:	99 1f       	adc	r25, r25
     bca:	28 0f       	add	r18, r24
     bcc:	39 1f       	adc	r19, r25
     bce:	13 01       	movw	r2, r6
     bd0:	6e 83       	std	Y+6, r22	; 0x06
     bd2:	7f 83       	std	Y+7, r23	; 0x07
     bd4:	68 87       	std	Y+8, r22	; 0x08
     bd6:	79 87       	std	Y+9, r23	; 0x09
     bd8:	1a 86       	std	Y+10, r1	; 0x0a
     bda:	26 5b       	subi	r18, 0xB6	; 182
     bdc:	3d 4f       	sbci	r19, 0xFD	; 253
     bde:	f9 01       	movw	r30, r18
     be0:	e6 1b       	sub	r30, r22
     be2:	f7 0b       	sbc	r31, r23
     be4:	ed 87       	std	Y+13, r30	; 0x0d
     be6:	fe 87       	std	Y+14, r31	; 0x0e
     be8:	4b 87       	std	Y+11, r20	; 0x0b
     bea:	5c 87       	std	Y+12, r21	; 0x0c
     bec:	fa 85       	ldd	r31, Y+10	; 0x0a
     bee:	f5 30       	cpi	r31, 0x05	; 5
     bf0:	09 f4       	brne	.+2      	; 0xbf4 <_ZN12Adafruit_GFX8drawCharEiihjjh+0xca>
     bf2:	77 c0       	rjmp	.+238    	; 0xce2 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1b8>
     bf4:	ed 85       	ldd	r30, Y+13	; 0x0d
     bf6:	fe 85       	ldd	r31, Y+14	; 0x0e
     bf8:	2e 81       	ldd	r18, Y+6	; 0x06
     bfa:	3f 81       	ldd	r19, Y+7	; 0x07
     bfc:	e2 0f       	add	r30, r18
     bfe:	f3 1f       	adc	r31, r19
     c00:	04 91       	lpm	r16, Z
     c02:	70 c0       	rjmp	.+224    	; 0xce4 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1ba>
     c04:	90 fe       	sbrs	r9, 0
     c06:	25 c0       	rjmp	.+74     	; 0xc52 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x128>
     c08:	3b 81       	ldd	r19, Y+3	; 0x03
     c0a:	31 30       	cpi	r19, 0x01	; 1
     c0c:	81 f4       	brne	.+32     	; 0xc2e <_ZN12Adafruit_GFX8drawCharEiihjjh+0x104>
     c0e:	af 85       	ldd	r26, Y+15	; 0x0f
     c10:	b8 89       	ldd	r27, Y+16	; 0x10
     c12:	ed 91       	ld	r30, X+
     c14:	fc 91       	ld	r31, X
     c16:	11 97       	sbiw	r26, 0x01	; 1
     c18:	01 90       	ld	r0, Z+
     c1a:	f0 81       	ld	r31, Z
     c1c:	e0 2d       	mov	r30, r0
     c1e:	29 81       	ldd	r18, Y+1	; 0x01
     c20:	3a 81       	ldd	r19, Y+2	; 0x02
     c22:	a5 01       	movw	r20, r10
     c24:	6e 81       	ldd	r22, Y+6	; 0x06
     c26:	7f 81       	ldd	r23, Y+7	; 0x07
     c28:	cd 01       	movw	r24, r26
     c2a:	19 95       	eicall
     c2c:	3d c0       	rjmp	.+122    	; 0xca8 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     c2e:	af 85       	ldd	r26, Y+15	; 0x0f
     c30:	b8 89       	ldd	r27, Y+16	; 0x10
     c32:	ed 91       	ld	r30, X+
     c34:	fc 91       	ld	r31, X
     c36:	11 97       	sbiw	r26, 0x01	; 1
     c38:	02 84       	ldd	r0, Z+10	; 0x0a
     c3a:	f3 85       	ldd	r31, Z+11	; 0x0b
     c3c:	e0 2d       	mov	r30, r0
     c3e:	e9 80       	ldd	r14, Y+1	; 0x01
     c40:	fa 80       	ldd	r15, Y+2	; 0x02
     c42:	83 01       	movw	r16, r6
     c44:	93 01       	movw	r18, r6
     c46:	a6 01       	movw	r20, r12
     c48:	68 2d       	mov	r22, r8
     c4a:	74 2d       	mov	r23, r4
     c4c:	cd 01       	movw	r24, r26
     c4e:	19 95       	eicall
     c50:	2b c0       	rjmp	.+86     	; 0xca8 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     c52:	ec 81       	ldd	r30, Y+4	; 0x04
     c54:	fd 81       	ldd	r31, Y+5	; 0x05
     c56:	29 81       	ldd	r18, Y+1	; 0x01
     c58:	3a 81       	ldd	r19, Y+2	; 0x02
     c5a:	e2 17       	cp	r30, r18
     c5c:	f3 07       	cpc	r31, r19
     c5e:	21 f1       	breq	.+72     	; 0xca8 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     c60:	3b 81       	ldd	r19, Y+3	; 0x03
     c62:	31 30       	cpi	r19, 0x01	; 1
     c64:	81 f4       	brne	.+32     	; 0xc86 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x15c>
     c66:	af 85       	ldd	r26, Y+15	; 0x0f
     c68:	b8 89       	ldd	r27, Y+16	; 0x10
     c6a:	ed 91       	ld	r30, X+
     c6c:	fc 91       	ld	r31, X
     c6e:	11 97       	sbiw	r26, 0x01	; 1
     c70:	01 90       	ld	r0, Z+
     c72:	f0 81       	ld	r31, Z
     c74:	e0 2d       	mov	r30, r0
     c76:	2c 81       	ldd	r18, Y+4	; 0x04
     c78:	3d 81       	ldd	r19, Y+5	; 0x05
     c7a:	a5 01       	movw	r20, r10
     c7c:	6e 81       	ldd	r22, Y+6	; 0x06
     c7e:	7f 81       	ldd	r23, Y+7	; 0x07
     c80:	cd 01       	movw	r24, r26
     c82:	19 95       	eicall
     c84:	11 c0       	rjmp	.+34     	; 0xca8 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     c86:	af 85       	ldd	r26, Y+15	; 0x0f
     c88:	b8 89       	ldd	r27, Y+16	; 0x10
     c8a:	ed 91       	ld	r30, X+
     c8c:	fc 91       	ld	r31, X
     c8e:	11 97       	sbiw	r26, 0x01	; 1
     c90:	02 84       	ldd	r0, Z+10	; 0x0a
     c92:	f3 85       	ldd	r31, Z+11	; 0x0b
     c94:	e0 2d       	mov	r30, r0
     c96:	ec 80       	ldd	r14, Y+4	; 0x04
     c98:	fd 80       	ldd	r15, Y+5	; 0x05
     c9a:	83 01       	movw	r16, r6
     c9c:	93 01       	movw	r18, r6
     c9e:	a6 01       	movw	r20, r12
     ca0:	68 2d       	mov	r22, r8
     ca2:	74 2d       	mov	r23, r4
     ca4:	cd 01       	movw	r24, r26
     ca6:	19 95       	eicall
     ca8:	96 94       	lsr	r9
     caa:	5a 94       	dec	r5
     cac:	c2 0c       	add	r12, r2
     cae:	d3 1c       	adc	r13, r3
     cb0:	bf ef       	ldi	r27, 0xFF	; 255
     cb2:	ab 1a       	sub	r10, r27
     cb4:	bb 0a       	sbc	r11, r27
     cb6:	51 10       	cpse	r5, r1
     cb8:	a5 cf       	rjmp	.-182    	; 0xc04 <_ZN12Adafruit_GFX8drawCharEiihjjh+0xda>
     cba:	8f 84       	ldd	r8, Y+15	; 0x0f
     cbc:	98 88       	ldd	r9, Y+16	; 0x10
     cbe:	ea 85       	ldd	r30, Y+10	; 0x0a
     cc0:	ef 5f       	subi	r30, 0xFF	; 255
     cc2:	ea 87       	std	Y+10, r30	; 0x0a
     cc4:	28 85       	ldd	r18, Y+8	; 0x08
     cc6:	39 85       	ldd	r19, Y+9	; 0x09
     cc8:	22 0d       	add	r18, r2
     cca:	33 1d       	adc	r19, r3
     ccc:	28 87       	std	Y+8, r18	; 0x08
     cce:	39 87       	std	Y+9, r19	; 0x09
     cd0:	8e 81       	ldd	r24, Y+6	; 0x06
     cd2:	9f 81       	ldd	r25, Y+7	; 0x07
     cd4:	01 96       	adiw	r24, 0x01	; 1
     cd6:	8e 83       	std	Y+6, r24	; 0x06
     cd8:	9f 83       	std	Y+7, r25	; 0x07
     cda:	e6 30       	cpi	r30, 0x06	; 6
     cdc:	09 f0       	breq	.+2      	; 0xce0 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1b6>
     cde:	86 cf       	rjmp	.-244    	; 0xbec <_ZN12Adafruit_GFX8drawCharEiihjjh+0xc2>
     ce0:	10 c0       	rjmp	.+32     	; 0xd02 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     ce2:	00 e0       	ldi	r16, 0x00	; 0
     ce4:	18 85       	ldd	r17, Y+8	; 0x08
     ce6:	49 84       	ldd	r4, Y+9	; 0x09
     ce8:	cb 84       	ldd	r12, Y+11	; 0x0b
     cea:	dc 84       	ldd	r13, Y+12	; 0x0c
     cec:	ac 2c       	mov	r10, r12
     cee:	bd 2c       	mov	r11, r13
     cf0:	68 94       	set
     cf2:	55 24       	eor	r5, r5
     cf4:	53 f8       	bld	r5, 3
     cf6:	c4 01       	movw	r24, r8
     cf8:	90 2e       	mov	r9, r16
     cfa:	81 2e       	mov	r8, r17
     cfc:	8f 87       	std	Y+15, r24	; 0x0f
     cfe:	98 8b       	std	Y+16, r25	; 0x10
     d00:	81 cf       	rjmp	.-254    	; 0xc04 <_ZN12Adafruit_GFX8drawCharEiihjjh+0xda>
     d02:	60 96       	adiw	r28, 0x10	; 16
     d04:	cd bf       	out	0x3d, r28	; 61
     d06:	de bf       	out	0x3e, r29	; 62
     d08:	df 91       	pop	r29
     d0a:	cf 91       	pop	r28
     d0c:	1f 91       	pop	r17
     d0e:	0f 91       	pop	r16
     d10:	ff 90       	pop	r15
     d12:	ef 90       	pop	r14
     d14:	df 90       	pop	r13
     d16:	cf 90       	pop	r12
     d18:	bf 90       	pop	r11
     d1a:	af 90       	pop	r10
     d1c:	9f 90       	pop	r9
     d1e:	8f 90       	pop	r8
     d20:	7f 90       	pop	r7
     d22:	6f 90       	pop	r6
     d24:	5f 90       	pop	r5
     d26:	4f 90       	pop	r4
     d28:	3f 90       	pop	r3
     d2a:	2f 90       	pop	r2
     d2c:	08 95       	ret

00000d2e <_ZN12Adafruit_GFX5writeEh>:
     d2e:	cf 92       	push	r12
     d30:	ef 92       	push	r14
     d32:	ff 92       	push	r15
     d34:	0f 93       	push	r16
     d36:	1f 93       	push	r17
     d38:	cf 93       	push	r28
     d3a:	df 93       	push	r29
     d3c:	ec 01       	movw	r28, r24
     d3e:	6a 30       	cpi	r22, 0x0A	; 10
     d40:	79 f4       	brne	.+30     	; 0xd60 <_ZN12Adafruit_GFX5writeEh+0x32>
     d42:	2c 89       	ldd	r18, Y+20	; 0x14
     d44:	8c 85       	ldd	r24, Y+12	; 0x0c
     d46:	9d 85       	ldd	r25, Y+13	; 0x0d
     d48:	38 e0       	ldi	r19, 0x08	; 8
     d4a:	23 9f       	mul	r18, r19
     d4c:	80 0d       	add	r24, r0
     d4e:	91 1d       	adc	r25, r1
     d50:	11 24       	eor	r1, r1
     d52:	8c 87       	std	Y+12, r24	; 0x0c
     d54:	9d 87       	std	Y+13, r25	; 0x0d
     d56:	8e 85       	ldd	r24, Y+14	; 0x0e
     d58:	9f 85       	ldd	r25, Y+15	; 0x0f
     d5a:	8a 87       	std	Y+10, r24	; 0x0a
     d5c:	9b 87       	std	Y+11, r25	; 0x0b
     d5e:	3c c0       	rjmp	.+120    	; 0xdd8 <_ZN12Adafruit_GFX5writeEh+0xaa>
     d60:	6d 30       	cpi	r22, 0x0D	; 13
     d62:	d1 f1       	breq	.+116    	; 0xdd8 <_ZN12Adafruit_GFX5writeEh+0xaa>
     d64:	ea 88       	ldd	r14, Y+18	; 0x12
     d66:	fb 88       	ldd	r15, Y+19	; 0x13
     d68:	08 89       	ldd	r16, Y+16	; 0x10
     d6a:	19 89       	ldd	r17, Y+17	; 0x11
     d6c:	4c 85       	ldd	r20, Y+12	; 0x0c
     d6e:	5d 85       	ldd	r21, Y+13	; 0x0d
     d70:	8a 85       	ldd	r24, Y+10	; 0x0a
     d72:	9b 85       	ldd	r25, Y+11	; 0x0b
     d74:	cc 88       	ldd	r12, Y+20	; 0x14
     d76:	26 2f       	mov	r18, r22
     d78:	bc 01       	movw	r22, r24
     d7a:	ce 01       	movw	r24, r28
     d7c:	d6 de       	rcall	.-596    	; 0xb2a <_ZN12Adafruit_GFX8drawCharEiihjjh>
     d7e:	2c 89       	ldd	r18, Y+20	; 0x14
     d80:	30 e0       	ldi	r19, 0x00	; 0
     d82:	c9 01       	movw	r24, r18
     d84:	88 0f       	add	r24, r24
     d86:	99 1f       	adc	r25, r25
     d88:	82 0f       	add	r24, r18
     d8a:	93 1f       	adc	r25, r19
     d8c:	88 0f       	add	r24, r24
     d8e:	99 1f       	adc	r25, r25
     d90:	4a 85       	ldd	r20, Y+10	; 0x0a
     d92:	5b 85       	ldd	r21, Y+11	; 0x0b
     d94:	84 0f       	add	r24, r20
     d96:	95 1f       	adc	r25, r21
     d98:	8a 87       	std	Y+10, r24	; 0x0a
     d9a:	9b 87       	std	Y+11, r25	; 0x0b
     d9c:	4e 89       	ldd	r20, Y+22	; 0x16
     d9e:	44 23       	and	r20, r20
     da0:	d9 f0       	breq	.+54     	; 0xdd8 <_ZN12Adafruit_GFX5writeEh+0xaa>
     da2:	4a ef       	ldi	r20, 0xFA	; 250
     da4:	42 03       	mulsu	r20, r18
     da6:	b0 01       	movw	r22, r0
     da8:	43 9f       	mul	r20, r19
     daa:	70 0d       	add	r23, r0
     dac:	11 24       	eor	r1, r1
     dae:	4e 81       	ldd	r20, Y+6	; 0x06
     db0:	5f 81       	ldd	r21, Y+7	; 0x07
     db2:	46 0f       	add	r20, r22
     db4:	57 1f       	adc	r21, r23
     db6:	48 17       	cp	r20, r24
     db8:	59 07       	cpc	r21, r25
     dba:	74 f4       	brge	.+28     	; 0xdd8 <_ZN12Adafruit_GFX5writeEh+0xaa>
     dbc:	22 0f       	add	r18, r18
     dbe:	33 1f       	adc	r19, r19
     dc0:	22 0f       	add	r18, r18
     dc2:	33 1f       	adc	r19, r19
     dc4:	22 0f       	add	r18, r18
     dc6:	33 1f       	adc	r19, r19
     dc8:	8c 85       	ldd	r24, Y+12	; 0x0c
     dca:	9d 85       	ldd	r25, Y+13	; 0x0d
     dcc:	28 0f       	add	r18, r24
     dce:	39 1f       	adc	r19, r25
     dd0:	2c 87       	std	Y+12, r18	; 0x0c
     dd2:	3d 87       	std	Y+13, r19	; 0x0d
     dd4:	1a 86       	std	Y+10, r1	; 0x0a
     dd6:	1b 86       	std	Y+11, r1	; 0x0b
     dd8:	df 91       	pop	r29
     dda:	cf 91       	pop	r28
     ddc:	1f 91       	pop	r17
     dde:	0f 91       	pop	r16
     de0:	ff 90       	pop	r15
     de2:	ef 90       	pop	r14
     de4:	cf 90       	pop	r12
     de6:	08 95       	ret

00000de8 <_ZN12Adafruit_GFX9setCursorEii>:
     de8:	fc 01       	movw	r30, r24
     dea:	62 87       	std	Z+10, r22	; 0x0a
     dec:	73 87       	std	Z+11, r23	; 0x0b
     dee:	44 87       	std	Z+12, r20	; 0x0c
     df0:	55 87       	std	Z+13, r21	; 0x0d
     df2:	66 87       	std	Z+14, r22	; 0x0e
     df4:	77 87       	std	Z+15, r23	; 0x0f
     df6:	08 95       	ret

00000df8 <_ZN12Adafruit_GFX11setTextSizeEh>:
     df8:	61 11       	cpse	r22, r1
     dfa:	01 c0       	rjmp	.+2      	; 0xdfe <_ZN12Adafruit_GFX11setTextSizeEh+0x6>
     dfc:	61 e0       	ldi	r22, 0x01	; 1
     dfe:	fc 01       	movw	r30, r24
     e00:	64 8b       	std	Z+20, r22	; 0x14
     e02:	08 95       	ret

00000e04 <_ZN12Adafruit_GFX12setTextColorEjj>:
     e04:	fc 01       	movw	r30, r24
     e06:	60 8b       	std	Z+16, r22	; 0x10
     e08:	71 8b       	std	Z+17, r23	; 0x11
     e0a:	42 8b       	std	Z+18, r20	; 0x12
     e0c:	53 8b       	std	Z+19, r21	; 0x13
     e0e:	08 95       	ret

00000e10 <_ZN12Adafruit_GFX11setTextWrapEb>:
     e10:	fc 01       	movw	r30, r24
     e12:	66 8b       	std	Z+22, r22	; 0x16
     e14:	08 95       	ret

00000e16 <_ZN12Adafruit_GFX11setRotationEh>:

void Adafruit_GFX::setRotation(uint8_t x) {
     e16:	fc 01       	movw	r30, r24
  rotation = (x & 3);
     e18:	63 70       	andi	r22, 0x03	; 3
     e1a:	65 8b       	std	Z+21, r22	; 0x15
  switch(rotation) {
     e1c:	61 30       	cpi	r22, 0x01	; 1
     e1e:	79 f0       	breq	.+30     	; 0xe3e <_ZN12Adafruit_GFX11setRotationEh+0x28>
     e20:	28 f0       	brcs	.+10     	; 0xe2c <_ZN12Adafruit_GFX11setRotationEh+0x16>
     e22:	62 30       	cpi	r22, 0x02	; 2
     e24:	19 f0       	breq	.+6      	; 0xe2c <_ZN12Adafruit_GFX11setRotationEh+0x16>
     e26:	63 30       	cpi	r22, 0x03	; 3
     e28:	91 f4       	brne	.+36     	; 0xe4e <_ZN12Adafruit_GFX11setRotationEh+0x38>
     e2a:	09 c0       	rjmp	.+18     	; 0xe3e <_ZN12Adafruit_GFX11setRotationEh+0x28>
   case 0:
   case 2:
    _width  = WIDTH;
     e2c:	82 81       	ldd	r24, Z+2	; 0x02
     e2e:	93 81       	ldd	r25, Z+3	; 0x03
     e30:	86 83       	std	Z+6, r24	; 0x06
     e32:	97 83       	std	Z+7, r25	; 0x07
    _height = HEIGHT;
     e34:	84 81       	ldd	r24, Z+4	; 0x04
     e36:	95 81       	ldd	r25, Z+5	; 0x05
     e38:	80 87       	std	Z+8, r24	; 0x08
     e3a:	91 87       	std	Z+9, r25	; 0x09
    break;
     e3c:	08 95       	ret
   case 1:
   case 3:
    _width  = HEIGHT;
     e3e:	84 81       	ldd	r24, Z+4	; 0x04
     e40:	95 81       	ldd	r25, Z+5	; 0x05
     e42:	86 83       	std	Z+6, r24	; 0x06
     e44:	97 83       	std	Z+7, r25	; 0x07
    _height = WIDTH;
     e46:	82 81       	ldd	r24, Z+2	; 0x02
     e48:	93 81       	ldd	r25, Z+3	; 0x03
     e4a:	80 87       	std	Z+8, r24	; 0x08
     e4c:	91 87       	std	Z+9, r25	; 0x09
     e4e:	08 95       	ret

00000e50 <_ZN5BTOBDC1Ev>:
	return driver.rxIsEmpty();
}

char BTOBD::rxDequeue() {
	return driver.rxDequeue();
}
     e50:	cf 92       	push	r12
     e52:	ef 92       	push	r14
     e54:	0f 93       	push	r16
     e56:	cf 93       	push	r28
     e58:	df 93       	push	r29
     e5a:	ec 01       	movw	r28, r24
     e5c:	40 e8       	ldi	r20, 0x80	; 128
     e5e:	50 e0       	ldi	r21, 0x00	; 0
     e60:	60 e8       	ldi	r22, 0x80	; 128
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	0e 94 64 1a 	call	0x34c8	; 0x34c8 <_ZN10UartDriverC1Eii>
     e68:	8d e0       	ldi	r24, 0x0D	; 13
     e6a:	e6 e0       	ldi	r30, 0x06	; 6
     e6c:	f0 e2       	ldi	r31, 0x20	; 32
     e6e:	de 01       	movw	r26, r28
     e70:	98 96       	adiw	r26, 0x28	; 40
     e72:	01 90       	ld	r0, Z+
     e74:	0d 92       	st	X+, r0
     e76:	8a 95       	dec	r24
     e78:	e1 f7       	brne	.-8      	; 0xe72 <_ZN5BTOBDC1Ev+0x22>
     e7a:	8d e0       	ldi	r24, 0x0D	; 13
     e7c:	e3 e1       	ldi	r30, 0x13	; 19
     e7e:	f0 e2       	ldi	r31, 0x20	; 32
     e80:	de 01       	movw	r26, r28
     e82:	d5 96       	adiw	r26, 0x35	; 53
     e84:	01 90       	ld	r0, Z+
     e86:	0d 92       	st	X+, r0
     e88:	8a 95       	dec	r24
     e8a:	e1 f7       	brne	.-8      	; 0xe84 <_ZN5BTOBDC1Ev+0x34>
     e8c:	fe 01       	movw	r30, r28
     e8e:	ee 5b       	subi	r30, 0xBE	; 190
     e90:	ff 4f       	sbci	r31, 0xFF	; 255
     e92:	10 82       	st	Z, r1
     e94:	31 96       	adiw	r30, 0x01	; 1
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	80 83       	st	Z, r24
     e9a:	31 96       	adiw	r30, 0x01	; 1
     e9c:	82 e0       	ldi	r24, 0x02	; 2
     e9e:	80 83       	st	Z, r24
     ea0:	31 96       	adiw	r30, 0x01	; 1
     ea2:	86 e0       	ldi	r24, 0x06	; 6
     ea4:	80 83       	st	Z, r24
     ea6:	0f 2e       	mov	r0, r31
     ea8:	f0 ef       	ldi	r31, 0xF0	; 240
     eaa:	cf 2e       	mov	r12, r31
     eac:	f0 2d       	mov	r31, r0
     eae:	0f 2e       	mov	r0, r31
     eb0:	f1 e2       	ldi	r31, 0x21	; 33
     eb2:	ef 2e       	mov	r14, r31
     eb4:	f0 2d       	mov	r31, r0
     eb6:	00 e0       	ldi	r16, 0x00	; 0
     eb8:	23 e0       	ldi	r18, 0x03	; 3
     eba:	40 e0       	ldi	r20, 0x00	; 0
     ebc:	60 ea       	ldi	r22, 0xA0	; 160
     ebe:	79 e0       	ldi	r23, 0x09	; 9
     ec0:	ce 01       	movw	r24, r28
     ec2:	0e 94 77 1a 	call	0x34ee	; 0x34ee <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc>
     ec6:	fe 01       	movw	r30, r28
     ec8:	e6 59       	subi	r30, 0x96	; 150
     eca:	ff 4f       	sbci	r31, 0xFF	; 255
     ecc:	10 82       	st	Z, r1
     ece:	1e a2       	std	Y+38, r1	; 0x26
     ed0:	1f a2       	std	Y+39, r1	; 0x27
     ed2:	31 96       	adiw	r30, 0x01	; 1
     ed4:	10 82       	st	Z, r1
     ed6:	35 97       	sbiw	r30, 0x05	; 5
     ed8:	8f ef       	ldi	r24, 0xFF	; 255
     eda:	80 83       	st	Z, r24
     edc:	b0 97       	sbiw	r30, 0x20	; 32
     ede:	20 e0       	ldi	r18, 0x00	; 0
     ee0:	30 e0       	ldi	r19, 0x00	; 0
     ee2:	80 e3       	ldi	r24, 0x30	; 48
     ee4:	81 93       	st	Z+, r24
     ee6:	2f 5f       	subi	r18, 0xFF	; 255
     ee8:	3f 4f       	sbci	r19, 0xFF	; 255
     eea:	24 32       	cpi	r18, 0x24	; 36
     eec:	31 05       	cpc	r19, r1
     eee:	d1 f7       	brne	.-12     	; 0xee4 <_ZN5BTOBDC1Ev+0x94>
     ef0:	e0 e4       	ldi	r30, 0x40	; 64
     ef2:	f8 e0       	ldi	r31, 0x08	; 8
     ef4:	10 82       	st	Z, r1
     ef6:	80 e1       	ldi	r24, 0x10	; 16
     ef8:	81 83       	std	Z+1, r24	; 0x01
     efa:	88 ee       	ldi	r24, 0xE8	; 232
     efc:	93 e0       	ldi	r25, 0x03	; 3
     efe:	80 a7       	std	Z+40, r24	; 0x28
     f00:	91 a7       	std	Z+41, r25	; 0x29
     f02:	17 82       	std	Z+7, r1	; 0x07
     f04:	87 e0       	ldi	r24, 0x07	; 7
     f06:	80 83       	st	Z, r24
     f08:	df 91       	pop	r29
     f0a:	cf 91       	pop	r28
     f0c:	0f 91       	pop	r16
     f0e:	ef 90       	pop	r14
     f10:	cf 90       	pop	r12
     f12:	08 95       	ret

00000f14 <_ZN5BTOBD13interceptByteEv>:
     f14:	1f 93       	push	r17
     f16:	cf 93       	push	r28
     f18:	df 93       	push	r29
     f1a:	ec 01       	movw	r28, r24
     f1c:	0e 94 0a 1b 	call	0x3614	; 0x3614 <_ZN10UartDriver11getUARTPortEv>
     f20:	fc 01       	movw	r30, r24
     f22:	10 81       	ld	r17, Z
     f24:	61 2f       	mov	r22, r17
     f26:	ce 01       	movw	r24, r28
     f28:	0e 94 f6 1a 	call	0x35ec	; 0x35ec <_ZN10UartDriver7rcvByteEc>
     f2c:	1e 33       	cpi	r17, 0x3E	; 62
     f2e:	29 f4       	brne	.+10     	; 0xf3a <_ZN5BTOBD13interceptByteEv+0x26>
     f30:	c6 59       	subi	r28, 0x96	; 150
     f32:	df 4f       	sbci	r29, 0xFF	; 255
     f34:	88 81       	ld	r24, Y
     f36:	8f 5f       	subi	r24, 0xFF	; 255
     f38:	88 83       	st	Y, r24
     f3a:	81 2f       	mov	r24, r17
     f3c:	df 91       	pop	r29
     f3e:	cf 91       	pop	r28
     f40:	1f 91       	pop	r17
     f42:	08 95       	ret

00000f44 <_ZN5BTOBD9handleDREEv>:
     f44:	0f 93       	push	r16
     f46:	1f 93       	push	r17
     f48:	cf 93       	push	r28
     f4a:	df 93       	push	r29
     f4c:	ec 01       	movw	r28, r24
     f4e:	0e 94 02 1b 	call	0x3604	; 0x3604 <_ZN10UartDriver9txIsEmptyEv>
     f52:	81 11       	cpse	r24, r1
     f54:	0a c0       	rjmp	.+20     	; 0xf6a <_ZN5BTOBD9handleDREEv+0x26>
     f56:	ce 01       	movw	r24, r28
     f58:	0e 94 0a 1b 	call	0x3614	; 0x3614 <_ZN10UartDriver11getUARTPortEv>
     f5c:	8c 01       	movw	r16, r24
     f5e:	ce 01       	movw	r24, r28
     f60:	0e 94 06 1b 	call	0x360c	; 0x360c <_ZN10UartDriver9txDequeueEv>
     f64:	f8 01       	movw	r30, r16
     f66:	80 83       	st	Z, r24
     f68:	07 c0       	rjmp	.+14     	; 0xf78 <_ZN5BTOBD9handleDREEv+0x34>
     f6a:	ce 01       	movw	r24, r28
     f6c:	0e 94 0a 1b 	call	0x3614	; 0x3614 <_ZN10UartDriver11getUARTPortEv>
     f70:	fc 01       	movw	r30, r24
     f72:	23 81       	ldd	r18, Z+3	; 0x03
     f74:	2c 7f       	andi	r18, 0xFC	; 252
     f76:	23 83       	std	Z+3, r18	; 0x03
     f78:	df 91       	pop	r29
     f7a:	cf 91       	pop	r28
     f7c:	1f 91       	pop	r17
     f7e:	0f 91       	pop	r16
     f80:	08 95       	ret

00000f82 <_ZN5BTOBD14waitForNewlineEP10LCD_Driver>:
     f82:	ff 92       	push	r15
     f84:	0f 93       	push	r16
     f86:	1f 93       	push	r17
     f88:	cf 93       	push	r28
     f8a:	df 93       	push	r29
     f8c:	ec 01       	movw	r28, r24
     f8e:	8b 01       	movw	r16, r22
     f90:	ce 01       	movw	r24, r28
     f92:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <_ZN10UartDriver9rxIsEmptyEv>
     f96:	81 11       	cpse	r24, r1
     f98:	10 c0       	rjmp	.+32     	; 0xfba <_ZN5BTOBD14waitForNewlineEP10LCD_Driver+0x38>
     f9a:	ce 01       	movw	r24, r28
     f9c:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
     fa0:	f8 2e       	mov	r15, r24
     fa2:	d8 01       	movw	r26, r16
     fa4:	ed 91       	ld	r30, X+
     fa6:	fc 91       	ld	r31, X
     fa8:	00 88       	ldd	r0, Z+16	; 0x10
     faa:	f1 89       	ldd	r31, Z+17	; 0x11
     fac:	e0 2d       	mov	r30, r0
     fae:	68 2f       	mov	r22, r24
     fb0:	c8 01       	movw	r24, r16
     fb2:	19 95       	eicall
     fb4:	ba e0       	ldi	r27, 0x0A	; 10
     fb6:	fb 16       	cp	r15, r27
     fb8:	11 f0       	breq	.+4      	; 0xfbe <_ZN5BTOBD14waitForNewlineEP10LCD_Driver+0x3c>
     fba:	00 00       	nop
     fbc:	e9 cf       	rjmp	.-46     	; 0xf90 <_ZN5BTOBD14waitForNewlineEP10LCD_Driver+0xe>
     fbe:	df 91       	pop	r29
     fc0:	cf 91       	pop	r28
     fc2:	1f 91       	pop	r17
     fc4:	0f 91       	pop	r16
     fc6:	ff 90       	pop	r15
     fc8:	08 95       	ret

00000fca <_ZN5BTOBD13waitForPromptEP10LCD_Driver>:
     fca:	ff 92       	push	r15
     fcc:	0f 93       	push	r16
     fce:	1f 93       	push	r17
     fd0:	cf 93       	push	r28
     fd2:	df 93       	push	r29
     fd4:	8b 01       	movw	r16, r22
     fd6:	ec 01       	movw	r28, r24
     fd8:	ce 01       	movw	r24, r28
     fda:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <_ZN10UartDriver9rxIsEmptyEv>
     fde:	81 11       	cpse	r24, r1
     fe0:	fb cf       	rjmp	.-10     	; 0xfd8 <_ZN5BTOBD13waitForPromptEP10LCD_Driver+0xe>
     fe2:	ce 01       	movw	r24, r28
     fe4:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
     fe8:	f8 2e       	mov	r15, r24
     fea:	d8 01       	movw	r26, r16
     fec:	ed 91       	ld	r30, X+
     fee:	fc 91       	ld	r31, X
     ff0:	00 88       	ldd	r0, Z+16	; 0x10
     ff2:	f1 89       	ldd	r31, Z+17	; 0x11
     ff4:	e0 2d       	mov	r30, r0
     ff6:	68 2f       	mov	r22, r24
     ff8:	c8 01       	movw	r24, r16
     ffa:	19 95       	eicall
     ffc:	be e3       	ldi	r27, 0x3E	; 62
     ffe:	fb 12       	cpse	r15, r27
    1000:	eb cf       	rjmp	.-42     	; 0xfd8 <_ZN5BTOBD13waitForPromptEP10LCD_Driver+0xe>
    1002:	df 91       	pop	r29
    1004:	cf 91       	pop	r28
    1006:	1f 91       	pop	r17
    1008:	0f 91       	pop	r16
    100a:	ff 90       	pop	r15
    100c:	08 95       	ret

0000100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>:
    100e:	cf 92       	push	r12
    1010:	df 92       	push	r13
    1012:	ef 92       	push	r14
    1014:	ff 92       	push	r15
    1016:	0f 93       	push	r16
    1018:	1f 93       	push	r17
    101a:	cf 93       	push	r28
    101c:	df 93       	push	r29
    101e:	ec 01       	movw	r28, r24
    1020:	fc 01       	movw	r30, r24
    1022:	e9 59       	subi	r30, 0x99	; 153
    1024:	ff 4f       	sbci	r31, 0xFF	; 255
    1026:	60 83       	st	Z, r22
    1028:	46 2f       	mov	r20, r22
    102a:	50 e0       	ldi	r21, 0x00	; 0
    102c:	40 32       	cpi	r20, 0x20	; 32
    102e:	51 05       	cpc	r21, r1
    1030:	08 f0       	brcs	.+2      	; 0x1034 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x26>
    1032:	6b c3       	rjmp	.+1750   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1034:	fa 01       	movw	r30, r20
    1036:	e2 50       	subi	r30, 0x02	; 2
    1038:	ff 4f       	sbci	r31, 0xFF	; 255
    103a:	0c 94 34 1c 	jmp	0x3868	; 0x3868 <__tablejump2__>
    103e:	64 e2       	ldi	r22, 0x24	; 36
    1040:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1044:	64 e2       	ldi	r22, 0x24	; 36
    1046:	ce 01       	movw	r24, r28
    1048:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    104c:	64 e2       	ldi	r22, 0x24	; 36
    104e:	ce 01       	movw	r24, r28
    1050:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1054:	5a c3       	rjmp	.+1716   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1056:	6d e2       	ldi	r22, 0x2D	; 45
    1058:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    105c:	6d e2       	ldi	r22, 0x2D	; 45
    105e:	ce 01       	movw	r24, r28
    1060:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1064:	6d e2       	ldi	r22, 0x2D	; 45
    1066:	ce 01       	movw	r24, r28
    1068:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    106c:	6a e0       	ldi	r22, 0x0A	; 10
    106e:	ce 01       	movw	r24, r28
    1070:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1074:	4a c3       	rjmp	.+1684   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1076:	c8 2e       	mov	r12, r24
    1078:	dd 2e       	mov	r13, r29
    107a:	63 e4       	ldi	r22, 0x43	; 67
    107c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1080:	6c e2       	ldi	r22, 0x2C	; 44
    1082:	ce 01       	movw	r24, r28
    1084:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1088:	7e 01       	movw	r14, r28
    108a:	8a e1       	ldi	r24, 0x1A	; 26
    108c:	e8 0e       	add	r14, r24
    108e:	f1 1c       	adc	r15, r1
    1090:	00 e0       	ldi	r16, 0x00	; 0
    1092:	10 e0       	ldi	r17, 0x00	; 0
    1094:	f7 01       	movw	r30, r14
    1096:	61 91       	ld	r22, Z+
    1098:	7f 01       	movw	r14, r30
    109a:	8c 2d       	mov	r24, r12
    109c:	9d 2d       	mov	r25, r13
    109e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10a2:	0f 5f       	subi	r16, 0xFF	; 255
    10a4:	1f 4f       	sbci	r17, 0xFF	; 255
    10a6:	0c 30       	cpi	r16, 0x0C	; 12
    10a8:	11 05       	cpc	r17, r1
    10aa:	a1 f7       	brne	.-24     	; 0x1094 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x86>
    10ac:	6a e0       	ldi	r22, 0x0A	; 10
    10ae:	ce 01       	movw	r24, r28
    10b0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10b4:	2a c3       	rjmp	.+1620   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    10b6:	69 e4       	ldi	r22, 0x49	; 73
    10b8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10bc:	6a e0       	ldi	r22, 0x0A	; 10
    10be:	ce 01       	movw	r24, r28
    10c0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10c4:	22 c3       	rjmp	.+1604   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    10c6:	67 e4       	ldi	r22, 0x47	; 71
    10c8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10cc:	6b e4       	ldi	r22, 0x4B	; 75
    10ce:	ce 01       	movw	r24, r28
    10d0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10d4:	6a e0       	ldi	r22, 0x0A	; 10
    10d6:	ce 01       	movw	r24, r28
    10d8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10dc:	16 c3       	rjmp	.+1580   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    10de:	63 e5       	ldi	r22, 0x53	; 83
    10e0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10e4:	66 e4       	ldi	r22, 0x46	; 70
    10e6:	ce 01       	movw	r24, r28
    10e8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10ec:	6c e2       	ldi	r22, 0x2C	; 44
    10ee:	ce 01       	movw	r24, r28
    10f0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10f4:	61 e3       	ldi	r22, 0x31	; 49
    10f6:	ce 01       	movw	r24, r28
    10f8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    10fc:	6a e0       	ldi	r22, 0x0A	; 10
    10fe:	ce 01       	movw	r24, r28
    1100:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1104:	02 c3       	rjmp	.+1540   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1106:	62 e5       	ldi	r22, 0x52	; 82
    1108:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    110c:	6c e2       	ldi	r22, 0x2C	; 44
    110e:	ce 01       	movw	r24, r28
    1110:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1114:	61 e3       	ldi	r22, 0x31	; 49
    1116:	ce 01       	movw	r24, r28
    1118:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    111c:	6a e0       	ldi	r22, 0x0A	; 10
    111e:	ce 01       	movw	r24, r28
    1120:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1124:	61 e4       	ldi	r22, 0x41	; 65
    1126:	ce 01       	movw	r24, r28
    1128:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    112c:	64 e5       	ldi	r22, 0x54	; 84
    112e:	ce 01       	movw	r24, r28
    1130:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1134:	69 e4       	ldi	r22, 0x49	; 73
    1136:	ce 01       	movw	r24, r28
    1138:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    113c:	6d e0       	ldi	r22, 0x0D	; 13
    113e:	ce 01       	movw	r24, r28
    1140:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1144:	6a e0       	ldi	r22, 0x0A	; 10
    1146:	ce 01       	movw	r24, r28
    1148:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    114c:	de c2       	rjmp	.+1468   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    114e:	61 e4       	ldi	r22, 0x41	; 65
    1150:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1154:	64 e5       	ldi	r22, 0x54	; 84
    1156:	ce 01       	movw	r24, r28
    1158:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    115c:	6a e5       	ldi	r22, 0x5A	; 90
    115e:	ce 01       	movw	r24, r28
    1160:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1164:	6d e0       	ldi	r22, 0x0D	; 13
    1166:	ce 01       	movw	r24, r28
    1168:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    116c:	6a e0       	ldi	r22, 0x0A	; 10
    116e:	ce 01       	movw	r24, r28
    1170:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1174:	ca c2       	rjmp	.+1428   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1176:	61 e4       	ldi	r22, 0x41	; 65
    1178:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    117c:	64 e5       	ldi	r22, 0x54	; 84
    117e:	ce 01       	movw	r24, r28
    1180:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1184:	65 e4       	ldi	r22, 0x45	; 69
    1186:	ce 01       	movw	r24, r28
    1188:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    118c:	60 e3       	ldi	r22, 0x30	; 48
    118e:	ce 01       	movw	r24, r28
    1190:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1194:	6d e0       	ldi	r22, 0x0D	; 13
    1196:	ce 01       	movw	r24, r28
    1198:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    119c:	6a e0       	ldi	r22, 0x0A	; 10
    119e:	ce 01       	movw	r24, r28
    11a0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11a4:	b2 c2       	rjmp	.+1380   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    11a6:	61 e4       	ldi	r22, 0x41	; 65
    11a8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11ac:	64 e5       	ldi	r22, 0x54	; 84
    11ae:	ce 01       	movw	r24, r28
    11b0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11b4:	6c e4       	ldi	r22, 0x4C	; 76
    11b6:	ce 01       	movw	r24, r28
    11b8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11bc:	61 e3       	ldi	r22, 0x31	; 49
    11be:	ce 01       	movw	r24, r28
    11c0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11c4:	6d e0       	ldi	r22, 0x0D	; 13
    11c6:	ce 01       	movw	r24, r28
    11c8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11cc:	6a e0       	ldi	r22, 0x0A	; 10
    11ce:	ce 01       	movw	r24, r28
    11d0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11d4:	9a c2       	rjmp	.+1332   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    11d6:	61 e4       	ldi	r22, 0x41	; 65
    11d8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11dc:	64 e5       	ldi	r22, 0x54	; 84
    11de:	ce 01       	movw	r24, r28
    11e0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11e4:	68 e4       	ldi	r22, 0x48	; 72
    11e6:	ce 01       	movw	r24, r28
    11e8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11ec:	60 e3       	ldi	r22, 0x30	; 48
    11ee:	ce 01       	movw	r24, r28
    11f0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11f4:	6d e0       	ldi	r22, 0x0D	; 13
    11f6:	ce 01       	movw	r24, r28
    11f8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    11fc:	6a e0       	ldi	r22, 0x0A	; 10
    11fe:	ce 01       	movw	r24, r28
    1200:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1204:	82 c2       	rjmp	.+1284   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1206:	61 e4       	ldi	r22, 0x41	; 65
    1208:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    120c:	64 e5       	ldi	r22, 0x54	; 84
    120e:	ce 01       	movw	r24, r28
    1210:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1214:	63 e5       	ldi	r22, 0x53	; 83
    1216:	ce 01       	movw	r24, r28
    1218:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    121c:	61 e3       	ldi	r22, 0x31	; 49
    121e:	ce 01       	movw	r24, r28
    1220:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1224:	6d e0       	ldi	r22, 0x0D	; 13
    1226:	ce 01       	movw	r24, r28
    1228:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    122c:	6a e0       	ldi	r22, 0x0A	; 10
    122e:	ce 01       	movw	r24, r28
    1230:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1234:	6a c2       	rjmp	.+1236   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1236:	61 e4       	ldi	r22, 0x41	; 65
    1238:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    123c:	64 e5       	ldi	r22, 0x54	; 84
    123e:	ce 01       	movw	r24, r28
    1240:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1244:	63 e5       	ldi	r22, 0x53	; 83
    1246:	ce 01       	movw	r24, r28
    1248:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    124c:	60 e5       	ldi	r22, 0x50	; 80
    124e:	ce 01       	movw	r24, r28
    1250:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1254:	60 e3       	ldi	r22, 0x30	; 48
    1256:	ce 01       	movw	r24, r28
    1258:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    125c:	6d e0       	ldi	r22, 0x0D	; 13
    125e:	ce 01       	movw	r24, r28
    1260:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1264:	6a e0       	ldi	r22, 0x0A	; 10
    1266:	ce 01       	movw	r24, r28
    1268:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    126c:	4e c2       	rjmp	.+1180   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    126e:	60 e3       	ldi	r22, 0x30	; 48
    1270:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1274:	61 e3       	ldi	r22, 0x31	; 49
    1276:	ce 01       	movw	r24, r28
    1278:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    127c:	60 e3       	ldi	r22, 0x30	; 48
    127e:	ce 01       	movw	r24, r28
    1280:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1284:	63 e4       	ldi	r22, 0x43	; 67
    1286:	ce 01       	movw	r24, r28
    1288:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    128c:	6d e0       	ldi	r22, 0x0D	; 13
    128e:	ce 01       	movw	r24, r28
    1290:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1294:	6a e0       	ldi	r22, 0x0A	; 10
    1296:	ce 01       	movw	r24, r28
    1298:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    129c:	fe 01       	movw	r30, r28
    129e:	e8 59       	subi	r30, 0x98	; 152
    12a0:	ff 4f       	sbci	r31, 0xFF	; 255
    12a2:	80 e3       	ldi	r24, 0x30	; 48
    12a4:	80 83       	st	Z, r24
    12a6:	c7 59       	subi	r28, 0x97	; 151
    12a8:	df 4f       	sbci	r29, 0xFF	; 255
    12aa:	83 e4       	ldi	r24, 0x43	; 67
    12ac:	88 83       	st	Y, r24
    12ae:	2d c2       	rjmp	.+1114   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    12b0:	60 e3       	ldi	r22, 0x30	; 48
    12b2:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    12b6:	61 e3       	ldi	r22, 0x31	; 49
    12b8:	ce 01       	movw	r24, r28
    12ba:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    12be:	60 e3       	ldi	r22, 0x30	; 48
    12c0:	ce 01       	movw	r24, r28
    12c2:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    12c6:	64 e4       	ldi	r22, 0x44	; 68
    12c8:	ce 01       	movw	r24, r28
    12ca:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    12ce:	6d e0       	ldi	r22, 0x0D	; 13
    12d0:	ce 01       	movw	r24, r28
    12d2:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    12d6:	6a e0       	ldi	r22, 0x0A	; 10
    12d8:	ce 01       	movw	r24, r28
    12da:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    12de:	fe 01       	movw	r30, r28
    12e0:	e8 59       	subi	r30, 0x98	; 152
    12e2:	ff 4f       	sbci	r31, 0xFF	; 255
    12e4:	80 e3       	ldi	r24, 0x30	; 48
    12e6:	80 83       	st	Z, r24
    12e8:	c7 59       	subi	r28, 0x97	; 151
    12ea:	df 4f       	sbci	r29, 0xFF	; 255
    12ec:	84 e4       	ldi	r24, 0x44	; 68
    12ee:	88 83       	st	Y, r24
    12f0:	0c c2       	rjmp	.+1048   	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    12f2:	60 e3       	ldi	r22, 0x30	; 48
    12f4:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    12f8:	61 e3       	ldi	r22, 0x31	; 49
    12fa:	ce 01       	movw	r24, r28
    12fc:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1300:	61 e3       	ldi	r22, 0x31	; 49
    1302:	ce 01       	movw	r24, r28
    1304:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1308:	61 e3       	ldi	r22, 0x31	; 49
    130a:	ce 01       	movw	r24, r28
    130c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1310:	6d e0       	ldi	r22, 0x0D	; 13
    1312:	ce 01       	movw	r24, r28
    1314:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1318:	6a e0       	ldi	r22, 0x0A	; 10
    131a:	ce 01       	movw	r24, r28
    131c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1320:	fe 01       	movw	r30, r28
    1322:	e8 59       	subi	r30, 0x98	; 152
    1324:	ff 4f       	sbci	r31, 0xFF	; 255
    1326:	81 e3       	ldi	r24, 0x31	; 49
    1328:	80 83       	st	Z, r24
    132a:	c7 59       	subi	r28, 0x97	; 151
    132c:	df 4f       	sbci	r29, 0xFF	; 255
    132e:	88 83       	st	Y, r24
    1330:	ec c1       	rjmp	.+984    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1332:	60 e3       	ldi	r22, 0x30	; 48
    1334:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1338:	61 e3       	ldi	r22, 0x31	; 49
    133a:	ce 01       	movw	r24, r28
    133c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1340:	65 e3       	ldi	r22, 0x35	; 53
    1342:	ce 01       	movw	r24, r28
    1344:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1348:	63 e4       	ldi	r22, 0x43	; 67
    134a:	ce 01       	movw	r24, r28
    134c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1350:	6d e0       	ldi	r22, 0x0D	; 13
    1352:	ce 01       	movw	r24, r28
    1354:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1358:	6a e0       	ldi	r22, 0x0A	; 10
    135a:	ce 01       	movw	r24, r28
    135c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1360:	fe 01       	movw	r30, r28
    1362:	e8 59       	subi	r30, 0x98	; 152
    1364:	ff 4f       	sbci	r31, 0xFF	; 255
    1366:	85 e3       	ldi	r24, 0x35	; 53
    1368:	80 83       	st	Z, r24
    136a:	c7 59       	subi	r28, 0x97	; 151
    136c:	df 4f       	sbci	r29, 0xFF	; 255
    136e:	83 e4       	ldi	r24, 0x43	; 67
    1370:	88 83       	st	Y, r24
    1372:	cb c1       	rjmp	.+918    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1374:	60 e3       	ldi	r22, 0x30	; 48
    1376:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    137a:	61 e3       	ldi	r22, 0x31	; 49
    137c:	ce 01       	movw	r24, r28
    137e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1382:	65 e3       	ldi	r22, 0x35	; 53
    1384:	ce 01       	movw	r24, r28
    1386:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    138a:	65 e4       	ldi	r22, 0x45	; 69
    138c:	ce 01       	movw	r24, r28
    138e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1392:	6d e0       	ldi	r22, 0x0D	; 13
    1394:	ce 01       	movw	r24, r28
    1396:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    139a:	6a e0       	ldi	r22, 0x0A	; 10
    139c:	ce 01       	movw	r24, r28
    139e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    13a2:	fe 01       	movw	r30, r28
    13a4:	e8 59       	subi	r30, 0x98	; 152
    13a6:	ff 4f       	sbci	r31, 0xFF	; 255
    13a8:	85 e3       	ldi	r24, 0x35	; 53
    13aa:	80 83       	st	Z, r24
    13ac:	c7 59       	subi	r28, 0x97	; 151
    13ae:	df 4f       	sbci	r29, 0xFF	; 255
    13b0:	85 e4       	ldi	r24, 0x45	; 69
    13b2:	88 83       	st	Y, r24
    13b4:	aa c1       	rjmp	.+852    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    13b6:	60 e3       	ldi	r22, 0x30	; 48
    13b8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    13bc:	61 e3       	ldi	r22, 0x31	; 49
    13be:	ce 01       	movw	r24, r28
    13c0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    13c4:	66 e3       	ldi	r22, 0x36	; 54
    13c6:	ce 01       	movw	r24, r28
    13c8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    13cc:	67 e3       	ldi	r22, 0x37	; 55
    13ce:	ce 01       	movw	r24, r28
    13d0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    13d4:	6d e0       	ldi	r22, 0x0D	; 13
    13d6:	ce 01       	movw	r24, r28
    13d8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    13dc:	6a e0       	ldi	r22, 0x0A	; 10
    13de:	ce 01       	movw	r24, r28
    13e0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    13e4:	fe 01       	movw	r30, r28
    13e6:	e8 59       	subi	r30, 0x98	; 152
    13e8:	ff 4f       	sbci	r31, 0xFF	; 255
    13ea:	86 e3       	ldi	r24, 0x36	; 54
    13ec:	80 83       	st	Z, r24
    13ee:	c7 59       	subi	r28, 0x97	; 151
    13f0:	df 4f       	sbci	r29, 0xFF	; 255
    13f2:	87 e3       	ldi	r24, 0x37	; 55
    13f4:	88 83       	st	Y, r24
    13f6:	89 c1       	rjmp	.+786    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    13f8:	60 e3       	ldi	r22, 0x30	; 48
    13fa:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    13fe:	61 e3       	ldi	r22, 0x31	; 49
    1400:	ce 01       	movw	r24, r28
    1402:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1406:	60 e3       	ldi	r22, 0x30	; 48
    1408:	ce 01       	movw	r24, r28
    140a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    140e:	64 e3       	ldi	r22, 0x34	; 52
    1410:	ce 01       	movw	r24, r28
    1412:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1416:	6d e0       	ldi	r22, 0x0D	; 13
    1418:	ce 01       	movw	r24, r28
    141a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    141e:	6a e0       	ldi	r22, 0x0A	; 10
    1420:	ce 01       	movw	r24, r28
    1422:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1426:	fe 01       	movw	r30, r28
    1428:	e8 59       	subi	r30, 0x98	; 152
    142a:	ff 4f       	sbci	r31, 0xFF	; 255
    142c:	80 e3       	ldi	r24, 0x30	; 48
    142e:	80 83       	st	Z, r24
    1430:	c7 59       	subi	r28, 0x97	; 151
    1432:	df 4f       	sbci	r29, 0xFF	; 255
    1434:	84 e3       	ldi	r24, 0x34	; 52
    1436:	88 83       	st	Y, r24
    1438:	68 c1       	rjmp	.+720    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    143a:	60 e3       	ldi	r22, 0x30	; 48
    143c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1440:	61 e3       	ldi	r22, 0x31	; 49
    1442:	ce 01       	movw	r24, r28
    1444:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1448:	62 e3       	ldi	r22, 0x32	; 50
    144a:	ce 01       	movw	r24, r28
    144c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1450:	66 e4       	ldi	r22, 0x46	; 70
    1452:	ce 01       	movw	r24, r28
    1454:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1458:	6d e0       	ldi	r22, 0x0D	; 13
    145a:	ce 01       	movw	r24, r28
    145c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1460:	6a e0       	ldi	r22, 0x0A	; 10
    1462:	ce 01       	movw	r24, r28
    1464:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1468:	fe 01       	movw	r30, r28
    146a:	e8 59       	subi	r30, 0x98	; 152
    146c:	ff 4f       	sbci	r31, 0xFF	; 255
    146e:	82 e3       	ldi	r24, 0x32	; 50
    1470:	80 83       	st	Z, r24
    1472:	c7 59       	subi	r28, 0x97	; 151
    1474:	df 4f       	sbci	r29, 0xFF	; 255
    1476:	86 e4       	ldi	r24, 0x46	; 70
    1478:	88 83       	st	Y, r24
    147a:	47 c1       	rjmp	.+654    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    147c:	60 e3       	ldi	r22, 0x30	; 48
    147e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1482:	61 e3       	ldi	r22, 0x31	; 49
    1484:	ce 01       	movw	r24, r28
    1486:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    148a:	68 e3       	ldi	r22, 0x38	; 56
    148c:	ce 01       	movw	r24, r28
    148e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1492:	67 e3       	ldi	r22, 0x37	; 55
    1494:	ce 01       	movw	r24, r28
    1496:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    149a:	6d e0       	ldi	r22, 0x0D	; 13
    149c:	ce 01       	movw	r24, r28
    149e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    14a2:	6a e0       	ldi	r22, 0x0A	; 10
    14a4:	ce 01       	movw	r24, r28
    14a6:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    14aa:	fe 01       	movw	r30, r28
    14ac:	e8 59       	subi	r30, 0x98	; 152
    14ae:	ff 4f       	sbci	r31, 0xFF	; 255
    14b0:	88 e3       	ldi	r24, 0x38	; 56
    14b2:	80 83       	st	Z, r24
    14b4:	c7 59       	subi	r28, 0x97	; 151
    14b6:	df 4f       	sbci	r29, 0xFF	; 255
    14b8:	87 e3       	ldi	r24, 0x37	; 55
    14ba:	88 83       	st	Y, r24
    14bc:	26 c1       	rjmp	.+588    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    14be:	60 e3       	ldi	r22, 0x30	; 48
    14c0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    14c4:	61 e3       	ldi	r22, 0x31	; 49
    14c6:	ce 01       	movw	r24, r28
    14c8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    14cc:	64 e3       	ldi	r22, 0x34	; 52
    14ce:	ce 01       	movw	r24, r28
    14d0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    14d4:	66 e3       	ldi	r22, 0x36	; 54
    14d6:	ce 01       	movw	r24, r28
    14d8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    14dc:	6d e0       	ldi	r22, 0x0D	; 13
    14de:	ce 01       	movw	r24, r28
    14e0:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    14e4:	6a e0       	ldi	r22, 0x0A	; 10
    14e6:	ce 01       	movw	r24, r28
    14e8:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    14ec:	fe 01       	movw	r30, r28
    14ee:	e8 59       	subi	r30, 0x98	; 152
    14f0:	ff 4f       	sbci	r31, 0xFF	; 255
    14f2:	84 e3       	ldi	r24, 0x34	; 52
    14f4:	80 83       	st	Z, r24
    14f6:	c7 59       	subi	r28, 0x97	; 151
    14f8:	df 4f       	sbci	r29, 0xFF	; 255
    14fa:	86 e3       	ldi	r24, 0x36	; 54
    14fc:	88 83       	st	Y, r24
    14fe:	05 c1       	rjmp	.+522    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1500:	60 e3       	ldi	r22, 0x30	; 48
    1502:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1506:	61 e3       	ldi	r22, 0x31	; 49
    1508:	ce 01       	movw	r24, r28
    150a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    150e:	63 e3       	ldi	r22, 0x33	; 51
    1510:	ce 01       	movw	r24, r28
    1512:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1516:	63 e3       	ldi	r22, 0x33	; 51
    1518:	ce 01       	movw	r24, r28
    151a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    151e:	6d e0       	ldi	r22, 0x0D	; 13
    1520:	ce 01       	movw	r24, r28
    1522:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1526:	6a e0       	ldi	r22, 0x0A	; 10
    1528:	ce 01       	movw	r24, r28
    152a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    152e:	fe 01       	movw	r30, r28
    1530:	e8 59       	subi	r30, 0x98	; 152
    1532:	ff 4f       	sbci	r31, 0xFF	; 255
    1534:	83 e3       	ldi	r24, 0x33	; 51
    1536:	80 83       	st	Z, r24
    1538:	c7 59       	subi	r28, 0x97	; 151
    153a:	df 4f       	sbci	r29, 0xFF	; 255
    153c:	88 83       	st	Y, r24
    153e:	e5 c0       	rjmp	.+458    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1540:	60 e3       	ldi	r22, 0x30	; 48
    1542:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1546:	61 e3       	ldi	r22, 0x31	; 49
    1548:	ce 01       	movw	r24, r28
    154a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    154e:	65 e3       	ldi	r22, 0x35	; 53
    1550:	ce 01       	movw	r24, r28
    1552:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1556:	69 e3       	ldi	r22, 0x39	; 57
    1558:	ce 01       	movw	r24, r28
    155a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    155e:	6d e0       	ldi	r22, 0x0D	; 13
    1560:	ce 01       	movw	r24, r28
    1562:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1566:	6a e0       	ldi	r22, 0x0A	; 10
    1568:	ce 01       	movw	r24, r28
    156a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    156e:	fe 01       	movw	r30, r28
    1570:	e8 59       	subi	r30, 0x98	; 152
    1572:	ff 4f       	sbci	r31, 0xFF	; 255
    1574:	85 e3       	ldi	r24, 0x35	; 53
    1576:	80 83       	st	Z, r24
    1578:	c7 59       	subi	r28, 0x97	; 151
    157a:	df 4f       	sbci	r29, 0xFF	; 255
    157c:	89 e3       	ldi	r24, 0x39	; 57
    157e:	88 83       	st	Y, r24
    1580:	c4 c0       	rjmp	.+392    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1582:	60 e3       	ldi	r22, 0x30	; 48
    1584:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1588:	61 e3       	ldi	r22, 0x31	; 49
    158a:	ce 01       	movw	r24, r28
    158c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1590:	66 e3       	ldi	r22, 0x36	; 54
    1592:	ce 01       	movw	r24, r28
    1594:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1598:	68 e3       	ldi	r22, 0x38	; 56
    159a:	ce 01       	movw	r24, r28
    159c:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    15a0:	6d e0       	ldi	r22, 0x0D	; 13
    15a2:	ce 01       	movw	r24, r28
    15a4:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    15a8:	6a e0       	ldi	r22, 0x0A	; 10
    15aa:	ce 01       	movw	r24, r28
    15ac:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    15b0:	fe 01       	movw	r30, r28
    15b2:	e8 59       	subi	r30, 0x98	; 152
    15b4:	ff 4f       	sbci	r31, 0xFF	; 255
    15b6:	86 e3       	ldi	r24, 0x36	; 54
    15b8:	80 83       	st	Z, r24
    15ba:	c7 59       	subi	r28, 0x97	; 151
    15bc:	df 4f       	sbci	r29, 0xFF	; 255
    15be:	88 e3       	ldi	r24, 0x38	; 56
    15c0:	88 83       	st	Y, r24
    15c2:	a3 c0       	rjmp	.+326    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    15c4:	60 e3       	ldi	r22, 0x30	; 48
    15c6:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    15ca:	61 e3       	ldi	r22, 0x31	; 49
    15cc:	ce 01       	movw	r24, r28
    15ce:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    15d2:	60 e3       	ldi	r22, 0x30	; 48
    15d4:	ce 01       	movw	r24, r28
    15d6:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    15da:	60 e3       	ldi	r22, 0x30	; 48
    15dc:	ce 01       	movw	r24, r28
    15de:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    15e2:	6d e0       	ldi	r22, 0x0D	; 13
    15e4:	ce 01       	movw	r24, r28
    15e6:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    15ea:	6a e0       	ldi	r22, 0x0A	; 10
    15ec:	ce 01       	movw	r24, r28
    15ee:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    15f2:	fe 01       	movw	r30, r28
    15f4:	e8 59       	subi	r30, 0x98	; 152
    15f6:	ff 4f       	sbci	r31, 0xFF	; 255
    15f8:	80 e3       	ldi	r24, 0x30	; 48
    15fa:	80 83       	st	Z, r24
    15fc:	c7 59       	subi	r28, 0x97	; 151
    15fe:	df 4f       	sbci	r29, 0xFF	; 255
    1600:	88 83       	st	Y, r24
    1602:	83 c0       	rjmp	.+262    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1604:	60 e3       	ldi	r22, 0x30	; 48
    1606:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    160a:	61 e3       	ldi	r22, 0x31	; 49
    160c:	ce 01       	movw	r24, r28
    160e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1612:	62 e3       	ldi	r22, 0x32	; 50
    1614:	ce 01       	movw	r24, r28
    1616:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    161a:	60 e3       	ldi	r22, 0x30	; 48
    161c:	ce 01       	movw	r24, r28
    161e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1622:	6d e0       	ldi	r22, 0x0D	; 13
    1624:	ce 01       	movw	r24, r28
    1626:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    162a:	6a e0       	ldi	r22, 0x0A	; 10
    162c:	ce 01       	movw	r24, r28
    162e:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1632:	fe 01       	movw	r30, r28
    1634:	e8 59       	subi	r30, 0x98	; 152
    1636:	ff 4f       	sbci	r31, 0xFF	; 255
    1638:	82 e3       	ldi	r24, 0x32	; 50
    163a:	80 83       	st	Z, r24
    163c:	c7 59       	subi	r28, 0x97	; 151
    163e:	df 4f       	sbci	r29, 0xFF	; 255
    1640:	80 e3       	ldi	r24, 0x30	; 48
    1642:	88 83       	st	Y, r24
    1644:	62 c0       	rjmp	.+196    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1646:	60 e3       	ldi	r22, 0x30	; 48
    1648:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    164c:	61 e3       	ldi	r22, 0x31	; 49
    164e:	ce 01       	movw	r24, r28
    1650:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1654:	64 e3       	ldi	r22, 0x34	; 52
    1656:	ce 01       	movw	r24, r28
    1658:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    165c:	60 e3       	ldi	r22, 0x30	; 48
    165e:	ce 01       	movw	r24, r28
    1660:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1664:	6d e0       	ldi	r22, 0x0D	; 13
    1666:	ce 01       	movw	r24, r28
    1668:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    166c:	6a e0       	ldi	r22, 0x0A	; 10
    166e:	ce 01       	movw	r24, r28
    1670:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1674:	fe 01       	movw	r30, r28
    1676:	e8 59       	subi	r30, 0x98	; 152
    1678:	ff 4f       	sbci	r31, 0xFF	; 255
    167a:	84 e3       	ldi	r24, 0x34	; 52
    167c:	80 83       	st	Z, r24
    167e:	c7 59       	subi	r28, 0x97	; 151
    1680:	df 4f       	sbci	r29, 0xFF	; 255
    1682:	80 e3       	ldi	r24, 0x30	; 48
    1684:	88 83       	st	Y, r24
    1686:	41 c0       	rjmp	.+130    	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1688:	60 e3       	ldi	r22, 0x30	; 48
    168a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    168e:	61 e3       	ldi	r22, 0x31	; 49
    1690:	ce 01       	movw	r24, r28
    1692:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    1696:	66 e3       	ldi	r22, 0x36	; 54
    1698:	ce 01       	movw	r24, r28
    169a:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    169e:	60 e3       	ldi	r22, 0x30	; 48
    16a0:	ce 01       	movw	r24, r28
    16a2:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    16a6:	6d e0       	ldi	r22, 0x0D	; 13
    16a8:	ce 01       	movw	r24, r28
    16aa:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    16ae:	6a e0       	ldi	r22, 0x0A	; 10
    16b0:	ce 01       	movw	r24, r28
    16b2:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    16b6:	fe 01       	movw	r30, r28
    16b8:	e8 59       	subi	r30, 0x98	; 152
    16ba:	ff 4f       	sbci	r31, 0xFF	; 255
    16bc:	86 e3       	ldi	r24, 0x36	; 54
    16be:	80 83       	st	Z, r24
    16c0:	c7 59       	subi	r28, 0x97	; 151
    16c2:	df 4f       	sbci	r29, 0xFF	; 255
    16c4:	80 e3       	ldi	r24, 0x30	; 48
    16c6:	88 83       	st	Y, r24
    16c8:	20 c0       	rjmp	.+64     	; 0x170a <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    16ca:	60 e3       	ldi	r22, 0x30	; 48
    16cc:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    16d0:	61 e3       	ldi	r22, 0x31	; 49
    16d2:	ce 01       	movw	r24, r28
    16d4:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    16d8:	68 e3       	ldi	r22, 0x38	; 56
    16da:	ce 01       	movw	r24, r28
    16dc:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    16e0:	60 e3       	ldi	r22, 0x30	; 48
    16e2:	ce 01       	movw	r24, r28
    16e4:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    16e8:	6d e0       	ldi	r22, 0x0D	; 13
    16ea:	ce 01       	movw	r24, r28
    16ec:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    16f0:	6a e0       	ldi	r22, 0x0A	; 10
    16f2:	ce 01       	movw	r24, r28
    16f4:	0e 94 e0 1a 	call	0x35c0	; 0x35c0 <_ZN10UartDriver8sendByteEc>
    16f8:	fe 01       	movw	r30, r28
    16fa:	e8 59       	subi	r30, 0x98	; 152
    16fc:	ff 4f       	sbci	r31, 0xFF	; 255
    16fe:	88 e3       	ldi	r24, 0x38	; 56
    1700:	80 83       	st	Z, r24
    1702:	c7 59       	subi	r28, 0x97	; 151
    1704:	df 4f       	sbci	r29, 0xFF	; 255
    1706:	80 e3       	ldi	r24, 0x30	; 48
    1708:	88 83       	st	Y, r24
    170a:	df 91       	pop	r29
    170c:	cf 91       	pop	r28
    170e:	1f 91       	pop	r17
    1710:	0f 91       	pop	r16
    1712:	ff 90       	pop	r15
    1714:	ef 90       	pop	r14
    1716:	df 90       	pop	r13
    1718:	cf 90       	pop	r12
    171a:	08 95       	ret

0000171c <_ZN5BTOBD10initializeEP10LCD_Driver>:
    171c:	5f 92       	push	r5
    171e:	6f 92       	push	r6
    1720:	7f 92       	push	r7
    1722:	8f 92       	push	r8
    1724:	9f 92       	push	r9
    1726:	af 92       	push	r10
    1728:	bf 92       	push	r11
    172a:	cf 92       	push	r12
    172c:	df 92       	push	r13
    172e:	ef 92       	push	r14
    1730:	ff 92       	push	r15
    1732:	0f 93       	push	r16
    1734:	1f 93       	push	r17
    1736:	cf 93       	push	r28
    1738:	df 93       	push	r29
    173a:	6c 01       	movw	r12, r24
    173c:	eb 01       	movw	r28, r22
    173e:	6d e0       	ldi	r22, 0x0D	; 13
    1740:	66 dc       	rcall	.-1844   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1742:	be 01       	movw	r22, r28
    1744:	c6 01       	movw	r24, r12
    1746:	1d dc       	rcall	.-1990   	; 0xf82 <_ZN5BTOBD14waitForNewlineEP10LCD_Driver>
    1748:	61 e1       	ldi	r22, 0x11	; 17
    174a:	c6 01       	movw	r24, r12
    174c:	60 dc       	rcall	.-1856   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    174e:	be 01       	movw	r22, r28
    1750:	c6 01       	movw	r24, r12
    1752:	17 dc       	rcall	.-2002   	; 0xf82 <_ZN5BTOBD14waitForNewlineEP10LCD_Driver>
    1754:	62 e1       	ldi	r22, 0x12	; 18
    1756:	c6 01       	movw	r24, r12
    1758:	5a dc       	rcall	.-1868   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    175a:	2f ef       	ldi	r18, 0xFF	; 255
    175c:	33 e2       	ldi	r19, 0x23	; 35
    175e:	84 ef       	ldi	r24, 0xF4	; 244
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	21 50       	subi	r18, 0x01	; 1
    1764:	30 40       	sbci	r19, 0x00	; 0
    1766:	80 40       	sbci	r24, 0x00	; 0
    1768:	90 40       	sbci	r25, 0x00	; 0
    176a:	d9 f7       	brne	.-10     	; 0x1762 <_ZN5BTOBD10initializeEP10LCD_Driver+0x46>
    176c:	00 c0       	rjmp	.+0      	; 0x176e <_ZN5BTOBD10initializeEP10LCD_Driver+0x52>
    176e:	00 00       	nop
    1770:	0c 2d       	mov	r16, r12
    1772:	1d 2d       	mov	r17, r13
    1774:	0c c0       	rjmp	.+24     	; 0x178e <_ZN5BTOBD10initializeEP10LCD_Driver+0x72>
    1776:	80 2f       	mov	r24, r16
    1778:	91 2f       	mov	r25, r17
    177a:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    177e:	e8 81       	ld	r30, Y
    1780:	f9 81       	ldd	r31, Y+1	; 0x01
    1782:	00 88       	ldd	r0, Z+16	; 0x10
    1784:	f1 89       	ldd	r31, Z+17	; 0x11
    1786:	e0 2d       	mov	r30, r0
    1788:	68 2f       	mov	r22, r24
    178a:	ce 01       	movw	r24, r28
    178c:	19 95       	eicall
    178e:	a0 2e       	mov	r10, r16
    1790:	91 2e       	mov	r9, r17
    1792:	80 2f       	mov	r24, r16
    1794:	91 2f       	mov	r25, r17
    1796:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <_ZN10UartDriver9rxIsEmptyEv>
    179a:	88 23       	and	r24, r24
    179c:	61 f3       	breq	.-40     	; 0x1776 <_ZN5BTOBD10initializeEP10LCD_Driver+0x5a>
    179e:	6d e0       	ldi	r22, 0x0D	; 13
    17a0:	c6 01       	movw	r24, r12
    17a2:	35 dc       	rcall	.-1942   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    17a4:	be 01       	movw	r22, r28
    17a6:	c6 01       	movw	r24, r12
    17a8:	ec db       	rcall	.-2088   	; 0xf82 <_ZN5BTOBD14waitForNewlineEP10LCD_Driver>
    17aa:	0f 2e       	mov	r0, r31
    17ac:	f4 e6       	ldi	r31, 0x64	; 100
    17ae:	5f 2e       	mov	r5, r31
    17b0:	f0 2d       	mov	r31, r0
    17b2:	61 2c       	mov	r6, r1
    17b4:	e8 81       	ld	r30, Y
    17b6:	f9 81       	ldd	r31, Y+1	; 0x01
    17b8:	04 84       	ldd	r0, Z+12	; 0x0c
    17ba:	f5 85       	ldd	r31, Z+13	; 0x0d
    17bc:	e0 2d       	mov	r30, r0
    17be:	60 e0       	ldi	r22, 0x00	; 0
    17c0:	70 e0       	ldi	r23, 0x00	; 0
    17c2:	ce 01       	movw	r24, r28
    17c4:	19 95       	eicall
    17c6:	7c 2e       	mov	r7, r28
    17c8:	8d 2e       	mov	r8, r29
    17ca:	40 e0       	ldi	r20, 0x00	; 0
    17cc:	50 e0       	ldi	r21, 0x00	; 0
    17ce:	60 e0       	ldi	r22, 0x00	; 0
    17d0:	70 e0       	ldi	r23, 0x00	; 0
    17d2:	ce 01       	movw	r24, r28
    17d4:	09 db       	rcall	.-2542   	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
    17d6:	6e e0       	ldi	r22, 0x0E	; 14
    17d8:	c6 01       	movw	r24, r12
    17da:	19 dc       	rcall	.-1998   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    17dc:	e5 2c       	mov	r14, r5
    17de:	f6 2c       	mov	r15, r6
    17e0:	00 e0       	ldi	r16, 0x00	; 0
    17e2:	10 e0       	ldi	r17, 0x00	; 0
    17e4:	2f ef       	ldi	r18, 0xFF	; 255
    17e6:	35 ea       	ldi	r19, 0xA5	; 165
    17e8:	8e e0       	ldi	r24, 0x0E	; 14
    17ea:	21 50       	subi	r18, 0x01	; 1
    17ec:	30 40       	sbci	r19, 0x00	; 0
    17ee:	80 40       	sbci	r24, 0x00	; 0
    17f0:	e1 f7       	brne	.-8      	; 0x17ea <_ZN5BTOBD10initializeEP10LCD_Driver+0xce>
    17f2:	00 c0       	rjmp	.+0      	; 0x17f4 <_ZN5BTOBD10initializeEP10LCD_Driver+0xd8>
    17f4:	00 00       	nop
    17f6:	13 c0       	rjmp	.+38     	; 0x181e <_ZN5BTOBD10initializeEP10LCD_Driver+0x102>
    17f8:	8a 2d       	mov	r24, r10
    17fa:	99 2d       	mov	r25, r9
    17fc:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    1800:	b8 2e       	mov	r11, r24
    1802:	e8 81       	ld	r30, Y
    1804:	f9 81       	ldd	r31, Y+1	; 0x01
    1806:	00 88       	ldd	r0, Z+16	; 0x10
    1808:	f1 89       	ldd	r31, Z+17	; 0x11
    180a:	e0 2d       	mov	r30, r0
    180c:	68 2f       	mov	r22, r24
    180e:	87 2d       	mov	r24, r7
    1810:	98 2d       	mov	r25, r8
    1812:	19 95       	eicall
    1814:	9a e0       	ldi	r25, 0x0A	; 10
    1816:	b9 12       	cpse	r11, r25
    1818:	02 c0       	rjmp	.+4      	; 0x181e <_ZN5BTOBD10initializeEP10LCD_Driver+0x102>
    181a:	0f 5f       	subi	r16, 0xFF	; 255
    181c:	1f 4f       	sbci	r17, 0xFF	; 255
    181e:	8a 2d       	mov	r24, r10
    1820:	99 2d       	mov	r25, r9
    1822:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <_ZN10UartDriver9rxIsEmptyEv>
    1826:	88 23       	and	r24, r24
    1828:	39 f3       	breq	.-50     	; 0x17f8 <_ZN5BTOBD10initializeEP10LCD_Driver+0xdc>
    182a:	21 e0       	ldi	r18, 0x01	; 1
    182c:	e2 1a       	sub	r14, r18
    182e:	f1 08       	sbc	r15, r1
    1830:	e1 14       	cp	r14, r1
    1832:	f1 04       	cpc	r15, r1
    1834:	b9 f6       	brne	.-82     	; 0x17e4 <_ZN5BTOBD10initializeEP10LCD_Driver+0xc8>
    1836:	01 30       	cpi	r16, 0x01	; 1
    1838:	11 05       	cpc	r17, r1
    183a:	09 f0       	breq	.+2      	; 0x183e <_ZN5BTOBD10initializeEP10LCD_Driver+0x122>
    183c:	bb cf       	rjmp	.-138    	; 0x17b4 <_ZN5BTOBD10initializeEP10LCD_Driver+0x98>
    183e:	6b e4       	ldi	r22, 0x4B	; 75
    1840:	70 e2       	ldi	r23, 0x20	; 32
    1842:	ce 01       	movw	r24, r28
    1844:	da d7       	rcall	.+4020   	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
    1846:	65 e1       	ldi	r22, 0x15	; 21
    1848:	c6 01       	movw	r24, r12
    184a:	e1 db       	rcall	.-2110   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    184c:	be 01       	movw	r22, r28
    184e:	c6 01       	movw	r24, r12
    1850:	bc db       	rcall	.-2184   	; 0xfca <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    1852:	66 e1       	ldi	r22, 0x16	; 22
    1854:	c6 01       	movw	r24, r12
    1856:	db db       	rcall	.-2122   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1858:	be 01       	movw	r22, r28
    185a:	c6 01       	movw	r24, r12
    185c:	b6 db       	rcall	.-2196   	; 0xfca <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    185e:	67 e1       	ldi	r22, 0x17	; 23
    1860:	c6 01       	movw	r24, r12
    1862:	d5 db       	rcall	.-2134   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1864:	be 01       	movw	r22, r28
    1866:	c6 01       	movw	r24, r12
    1868:	b0 db       	rcall	.-2208   	; 0xfca <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    186a:	68 e1       	ldi	r22, 0x18	; 24
    186c:	c6 01       	movw	r24, r12
    186e:	cf db       	rcall	.-2146   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1870:	be 01       	movw	r22, r28
    1872:	c6 01       	movw	r24, r12
    1874:	aa db       	rcall	.-2220   	; 0xfca <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    1876:	6a e1       	ldi	r22, 0x1A	; 26
    1878:	c6 01       	movw	r24, r12
    187a:	c9 db       	rcall	.-2158   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    187c:	be 01       	movw	r22, r28
    187e:	c6 01       	movw	r24, r12
    1880:	a4 db       	rcall	.-2232   	; 0xfca <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    1882:	f6 01       	movw	r30, r12
    1884:	e6 59       	subi	r30, 0x96	; 150
    1886:	ff 4f       	sbci	r31, 0xFF	; 255
    1888:	10 82       	st	Z, r1
    188a:	61 e0       	ldi	r22, 0x01	; 1
    188c:	c6 01       	movw	r24, r12
    188e:	bf db       	rcall	.-2178   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1890:	be 01       	movw	r22, r28
    1892:	c6 01       	movw	r24, r12
    1894:	9a db       	rcall	.-2252   	; 0xfca <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    1896:	81 e0       	ldi	r24, 0x01	; 1
    1898:	df 91       	pop	r29
    189a:	cf 91       	pop	r28
    189c:	1f 91       	pop	r17
    189e:	0f 91       	pop	r16
    18a0:	ff 90       	pop	r15
    18a2:	ef 90       	pop	r14
    18a4:	df 90       	pop	r13
    18a6:	cf 90       	pop	r12
    18a8:	bf 90       	pop	r11
    18aa:	af 90       	pop	r10
    18ac:	9f 90       	pop	r9
    18ae:	8f 90       	pop	r8
    18b0:	7f 90       	pop	r7
    18b2:	6f 90       	pop	r6
    18b4:	5f 90       	pop	r5
    18b6:	08 95       	ret

000018b8 <_ZN5BTOBD10initializeEPcP10LCD_Driver>:
    18b8:	e6 2f       	mov	r30, r22
    18ba:	f7 2f       	mov	r31, r23
    18bc:	dc 01       	movw	r26, r24
    18be:	5a 96       	adiw	r26, 0x1a	; 26
    18c0:	20 e0       	ldi	r18, 0x00	; 0
    18c2:	30 e0       	ldi	r19, 0x00	; 0
    18c4:	61 91       	ld	r22, Z+
    18c6:	6d 93       	st	X+, r22
    18c8:	2f 5f       	subi	r18, 0xFF	; 255
    18ca:	3f 4f       	sbci	r19, 0xFF	; 255
    18cc:	2c 30       	cpi	r18, 0x0C	; 12
    18ce:	31 05       	cpc	r19, r1
    18d0:	c9 f7       	brne	.-14     	; 0x18c4 <_ZN5BTOBD10initializeEPcP10LCD_Driver+0xc>
    18d2:	ba 01       	movw	r22, r20
    18d4:	23 cf       	rjmp	.-442    	; 0x171c <_ZN5BTOBD10initializeEP10LCD_Driver>
    18d6:	08 95       	ret

000018d8 <_ZN5BTOBD7rcvRespEv>:
    18d8:	3f 92       	push	r3
    18da:	4f 92       	push	r4
    18dc:	5f 92       	push	r5
    18de:	6f 92       	push	r6
    18e0:	7f 92       	push	r7
    18e2:	8f 92       	push	r8
    18e4:	9f 92       	push	r9
    18e6:	af 92       	push	r10
    18e8:	bf 92       	push	r11
    18ea:	cf 92       	push	r12
    18ec:	df 92       	push	r13
    18ee:	ef 92       	push	r14
    18f0:	ff 92       	push	r15
    18f2:	0f 93       	push	r16
    18f4:	1f 93       	push	r17
    18f6:	cf 93       	push	r28
    18f8:	df 93       	push	r29
    18fa:	8c 01       	movw	r16, r24
    18fc:	fc 01       	movw	r30, r24
    18fe:	e6 59       	subi	r30, 0x96	; 150
    1900:	ff 4f       	sbci	r31, 0xFF	; 255
    1902:	80 81       	ld	r24, Z
    1904:	88 23       	and	r24, r24
    1906:	09 f4       	brne	.+2      	; 0x190a <_ZN5BTOBD7rcvRespEv+0x32>
    1908:	b7 c0       	rjmp	.+366    	; 0x1a78 <_ZN5BTOBD7rcvRespEv+0x1a0>
    190a:	40 2e       	mov	r4, r16
    190c:	51 2e       	mov	r5, r17
    190e:	78 01       	movw	r14, r16
    1910:	28 e6       	ldi	r18, 0x68	; 104
    1912:	e2 0e       	add	r14, r18
    1914:	f1 1c       	adc	r15, r1
    1916:	58 01       	movw	r10, r16
    1918:	39 e6       	ldi	r19, 0x69	; 105
    191a:	a3 0e       	add	r10, r19
    191c:	b1 1c       	adc	r11, r1
    191e:	48 01       	movw	r8, r16
    1920:	86 e6       	ldi	r24, 0x66	; 102
    1922:	88 0e       	add	r8, r24
    1924:	91 1c       	adc	r9, r1
    1926:	68 01       	movw	r12, r16
    1928:	e7 e6       	ldi	r30, 0x67	; 103
    192a:	ce 0e       	add	r12, r30
    192c:	d1 1c       	adc	r13, r1
    192e:	e8 01       	movw	r28, r16
    1930:	c6 59       	subi	r28, 0x96	; 150
    1932:	df 4f       	sbci	r29, 0xFF	; 255
    1934:	84 2d       	mov	r24, r4
    1936:	95 2d       	mov	r25, r5
    1938:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    193c:	84 2d       	mov	r24, r4
    193e:	95 2d       	mov	r25, r5
    1940:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    1944:	84 2d       	mov	r24, r4
    1946:	95 2d       	mov	r25, r5
    1948:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    194c:	84 2d       	mov	r24, r4
    194e:	95 2d       	mov	r25, r5
    1950:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    1954:	78 2e       	mov	r7, r24
    1956:	84 2d       	mov	r24, r4
    1958:	95 2d       	mov	r25, r5
    195a:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    195e:	68 2e       	mov	r6, r24
    1960:	84 2d       	mov	r24, r4
    1962:	95 2d       	mov	r25, r5
    1964:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    1968:	f7 01       	movw	r30, r14
    196a:	80 81       	ld	r24, Z
    196c:	87 11       	cpse	r24, r7
    196e:	04 c0       	rjmp	.+8      	; 0x1978 <_ZN5BTOBD7rcvRespEv+0xa0>
    1970:	f5 01       	movw	r30, r10
    1972:	80 81       	ld	r24, Z
    1974:	86 15       	cp	r24, r6
    1976:	71 f0       	breq	.+28     	; 0x1994 <_ZN5BTOBD7rcvRespEv+0xbc>
    1978:	84 2d       	mov	r24, r4
    197a:	95 2d       	mov	r25, r5
    197c:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    1980:	8e 33       	cpi	r24, 0x3E	; 62
    1982:	09 f4       	brne	.+2      	; 0x1986 <_ZN5BTOBD7rcvRespEv+0xae>
    1984:	70 c0       	rjmp	.+224    	; 0x1a66 <_ZN5BTOBD7rcvRespEv+0x18e>
    1986:	84 2d       	mov	r24, r4
    1988:	95 2d       	mov	r25, r5
    198a:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <_ZN10UartDriver9rxIsEmptyEv>
    198e:	88 23       	and	r24, r24
    1990:	99 f3       	breq	.-26     	; 0x1978 <_ZN5BTOBD7rcvRespEv+0xa0>
    1992:	69 c0       	rjmp	.+210    	; 0x1a66 <_ZN5BTOBD7rcvRespEv+0x18e>
    1994:	f4 01       	movw	r30, r8
    1996:	20 81       	ld	r18, Z
    1998:	f6 01       	movw	r30, r12
    199a:	40 81       	ld	r20, Z
    199c:	30 e0       	ldi	r19, 0x00	; 0
    199e:	84 2f       	mov	r24, r20
    19a0:	99 27       	eor	r25, r25
    19a2:	87 fd       	sbrc	r24, 7
    19a4:	90 95       	com	r25
    19a6:	28 17       	cp	r18, r24
    19a8:	39 07       	cpc	r19, r25
    19aa:	09 f4       	brne	.+2      	; 0x19ae <_ZN5BTOBD7rcvRespEv+0xd6>
    19ac:	5c c0       	rjmp	.+184    	; 0x1a66 <_ZN5BTOBD7rcvRespEv+0x18e>
    19ae:	f8 01       	movw	r30, r16
    19b0:	e4 0f       	add	r30, r20
    19b2:	f1 1d       	adc	r31, r1
    19b4:	65 a8       	ldd	r6, Z+53	; 0x35
    19b6:	71 2c       	mov	r7, r1
    19b8:	80 a5       	ldd	r24, Z+40	; 0x28
    19ba:	93 01       	movw	r18, r6
    19bc:	28 0f       	add	r18, r24
    19be:	31 1d       	adc	r19, r1
    19c0:	62 16       	cp	r6, r18
    19c2:	73 06       	cpc	r7, r19
    19c4:	64 f5       	brge	.+88     	; 0x1a1e <_ZN5BTOBD7rcvRespEv+0x146>
    19c6:	31 2c       	mov	r3, r1
    19c8:	84 2d       	mov	r24, r4
    19ca:	95 2d       	mov	r25, r5
    19cc:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    19d0:	80 32       	cpi	r24, 0x20	; 32
    19d2:	21 f4       	brne	.+8      	; 0x19dc <_ZN5BTOBD7rcvRespEv+0x104>
    19d4:	31 e0       	ldi	r19, 0x01	; 1
    19d6:	63 1a       	sub	r6, r19
    19d8:	71 08       	sbc	r7, r1
    19da:	10 c0       	rjmp	.+32     	; 0x19fc <_ZN5BTOBD7rcvRespEv+0x124>
    19dc:	f8 01       	movw	r30, r16
    19de:	e6 0d       	add	r30, r6
    19e0:	f7 1d       	adc	r31, r7
    19e2:	ea 5b       	subi	r30, 0xBA	; 186
    19e4:	ff 4f       	sbci	r31, 0xFF	; 255
    19e6:	90 81       	ld	r25, Z
    19e8:	98 13       	cpse	r25, r24
    19ea:	02 c0       	rjmp	.+4      	; 0x19f0 <_ZN5BTOBD7rcvRespEv+0x118>
    19ec:	33 94       	inc	r3
    19ee:	06 c0       	rjmp	.+12     	; 0x19fc <_ZN5BTOBD7rcvRespEv+0x124>
    19f0:	f8 01       	movw	r30, r16
    19f2:	e6 0d       	add	r30, r6
    19f4:	f7 1d       	adc	r31, r7
    19f6:	ea 5b       	subi	r30, 0xBA	; 186
    19f8:	ff 4f       	sbci	r31, 0xFF	; 255
    19fa:	80 83       	st	Z, r24
    19fc:	8f ef       	ldi	r24, 0xFF	; 255
    19fe:	68 1a       	sub	r6, r24
    1a00:	78 0a       	sbc	r7, r24
    1a02:	f6 01       	movw	r30, r12
    1a04:	80 81       	ld	r24, Z
    1a06:	f8 01       	movw	r30, r16
    1a08:	e8 0f       	add	r30, r24
    1a0a:	f1 1d       	adc	r31, r1
    1a0c:	25 a9       	ldd	r18, Z+53	; 0x35
    1a0e:	80 a5       	ldd	r24, Z+40	; 0x28
    1a10:	90 e0       	ldi	r25, 0x00	; 0
    1a12:	82 0f       	add	r24, r18
    1a14:	91 1d       	adc	r25, r1
    1a16:	68 16       	cp	r6, r24
    1a18:	79 06       	cpc	r7, r25
    1a1a:	b4 f2       	brlt	.-84     	; 0x19c8 <_ZN5BTOBD7rcvRespEv+0xf0>
    1a1c:	01 c0       	rjmp	.+2      	; 0x1a20 <_ZN5BTOBD7rcvRespEv+0x148>
    1a1e:	31 2c       	mov	r3, r1
    1a20:	84 2d       	mov	r24, r4
    1a22:	95 2d       	mov	r25, r5
    1a24:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    1a28:	8e 33       	cpi	r24, 0x3E	; 62
    1a2a:	31 f0       	breq	.+12     	; 0x1a38 <_ZN5BTOBD7rcvRespEv+0x160>
    1a2c:	84 2d       	mov	r24, r4
    1a2e:	95 2d       	mov	r25, r5
    1a30:	0e 94 fe 1a 	call	0x35fc	; 0x35fc <_ZN10UartDriver9rxIsEmptyEv>
    1a34:	88 23       	and	r24, r24
    1a36:	a1 f3       	breq	.-24     	; 0x1a20 <_ZN5BTOBD7rcvRespEv+0x148>
    1a38:	f6 01       	movw	r30, r12
    1a3a:	80 81       	ld	r24, Z
    1a3c:	f8 01       	movw	r30, r16
    1a3e:	e8 0f       	add	r30, r24
    1a40:	f1 1d       	adc	r31, r1
    1a42:	90 a5       	ldd	r25, Z+40	; 0x28
    1a44:	93 15       	cp	r25, r3
    1a46:	79 f0       	breq	.+30     	; 0x1a66 <_ZN5BTOBD7rcvRespEv+0x18e>
    1a48:	21 e0       	ldi	r18, 0x01	; 1
    1a4a:	30 e0       	ldi	r19, 0x00	; 0
    1a4c:	02 c0       	rjmp	.+4      	; 0x1a52 <_ZN5BTOBD7rcvRespEv+0x17a>
    1a4e:	22 0f       	add	r18, r18
    1a50:	33 1f       	adc	r19, r19
    1a52:	8a 95       	dec	r24
    1a54:	e2 f7       	brpl	.-8      	; 0x1a4e <_ZN5BTOBD7rcvRespEv+0x176>
    1a56:	c9 01       	movw	r24, r18
    1a58:	f8 01       	movw	r30, r16
    1a5a:	26 a1       	ldd	r18, Z+38	; 0x26
    1a5c:	37 a1       	ldd	r19, Z+39	; 0x27
    1a5e:	82 2b       	or	r24, r18
    1a60:	93 2b       	or	r25, r19
    1a62:	86 a3       	std	Z+38, r24	; 0x26
    1a64:	97 a3       	std	Z+39, r25	; 0x27
    1a66:	f8 94       	cli
    1a68:	88 81       	ld	r24, Y
    1a6a:	81 50       	subi	r24, 0x01	; 1
    1a6c:	88 83       	st	Y, r24
    1a6e:	78 94       	sei
    1a70:	88 81       	ld	r24, Y
    1a72:	81 11       	cpse	r24, r1
    1a74:	5f cf       	rjmp	.-322    	; 0x1934 <_ZN5BTOBD7rcvRespEv+0x5c>
    1a76:	02 c0       	rjmp	.+4      	; 0x1a7c <_ZN5BTOBD7rcvRespEv+0x1a4>
    1a78:	80 e0       	ldi	r24, 0x00	; 0
    1a7a:	01 c0       	rjmp	.+2      	; 0x1a7e <_ZN5BTOBD7rcvRespEv+0x1a6>
    1a7c:	81 e0       	ldi	r24, 0x01	; 1
    1a7e:	df 91       	pop	r29
    1a80:	cf 91       	pop	r28
    1a82:	1f 91       	pop	r17
    1a84:	0f 91       	pop	r16
    1a86:	ff 90       	pop	r15
    1a88:	ef 90       	pop	r14
    1a8a:	df 90       	pop	r13
    1a8c:	cf 90       	pop	r12
    1a8e:	bf 90       	pop	r11
    1a90:	af 90       	pop	r10
    1a92:	9f 90       	pop	r9
    1a94:	8f 90       	pop	r8
    1a96:	7f 90       	pop	r7
    1a98:	6f 90       	pop	r6
    1a9a:	5f 90       	pop	r5
    1a9c:	4f 90       	pop	r4
    1a9e:	3f 90       	pop	r3
    1aa0:	08 95       	ret

00001aa2 <_ZN5BTOBD9getStatusEv>:
    1aa2:	fc 01       	movw	r30, r24
    1aa4:	86 a1       	ldd	r24, Z+38	; 0x26
    1aa6:	97 a1       	ldd	r25, Z+39	; 0x27
    1aa8:	08 95       	ret

00001aaa <_ZN5BTOBD11clearStatusEv>:
    1aaa:	fc 01       	movw	r30, r24
    1aac:	16 a2       	std	Z+38, r1	; 0x26
    1aae:	17 a2       	std	Z+39, r1	; 0x27
    1ab0:	08 95       	ret

00001ab2 <_ZN5BTOBD7sendCmdEv>:
    1ab2:	0f 93       	push	r16
    1ab4:	1f 93       	push	r17
    1ab6:	cf 93       	push	r28
    1ab8:	df 93       	push	r29
    1aba:	ec 01       	movw	r28, r24
    1abc:	8c 01       	movw	r16, r24
    1abe:	05 59       	subi	r16, 0x95	; 149
    1ac0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ac2:	f8 01       	movw	r30, r16
    1ac4:	80 81       	ld	r24, Z
    1ac6:	fe 01       	movw	r30, r28
    1ac8:	e8 0f       	add	r30, r24
    1aca:	f1 1d       	adc	r31, r1
    1acc:	87 fd       	sbrc	r24, 7
    1ace:	fa 95       	dec	r31
    1ad0:	ee 5b       	subi	r30, 0xBE	; 190
    1ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ad4:	60 81       	ld	r22, Z
    1ad6:	ce 01       	movw	r24, r28
    1ad8:	9a da       	rcall	.-2764   	; 0x100e <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1ada:	f8 01       	movw	r30, r16
    1adc:	80 81       	ld	r24, Z
    1ade:	8f 5f       	subi	r24, 0xFF	; 255
    1ae0:	84 30       	cpi	r24, 0x04	; 4
    1ae2:	11 f0       	breq	.+4      	; 0x1ae8 <_ZN5BTOBD7sendCmdEv+0x36>
    1ae4:	80 83       	st	Z, r24
    1ae6:	03 c0       	rjmp	.+6      	; 0x1aee <_ZN5BTOBD7sendCmdEv+0x3c>
    1ae8:	c5 59       	subi	r28, 0x95	; 149
    1aea:	df 4f       	sbci	r29, 0xFF	; 255
    1aec:	18 82       	st	Y, r1
    1aee:	df 91       	pop	r29
    1af0:	cf 91       	pop	r28
    1af2:	1f 91       	pop	r17
    1af4:	0f 91       	pop	r16
    1af6:	08 95       	ret

00001af8 <_ZN5BTOBD9getRecentEN7OBDCMDS3CMDE>:

CBUFFER BTOBD::getRecent(OBDCMDS::CMD cmd) {
	CBUFFER returnval;
	uint8_t cint = offsets[cmd];
    1af8:	fc 01       	movw	r30, r24
    1afa:	e6 0f       	add	r30, r22
    1afc:	f1 1d       	adc	r31, r1
    1afe:	25 a9       	ldd	r18, Z+53	; 0x35
	cmdlock = (int8_t) cmd;
    1b00:	dc 01       	movw	r26, r24
    1b02:	aa 59       	subi	r26, 0x9A	; 154
    1b04:	bf 4f       	sbci	r27, 0xFF	; 255
    1b06:	6c 93       	st	X, r22
	returnval.au = buffer[cint++];
    1b08:	dc 01       	movw	r26, r24
    1b0a:	a2 0f       	add	r26, r18
    1b0c:	b1 1d       	adc	r27, r1
    1b0e:	aa 5b       	subi	r26, 0xBA	; 186
    1b10:	bf 4f       	sbci	r27, 0xFF	; 255
    1b12:	6c 91       	ld	r22, X
    1b14:	41 e0       	ldi	r20, 0x01	; 1
    1b16:	42 0f       	add	r20, r18
	returnval.al = buffer[cint++];
    1b18:	dc 01       	movw	r26, r24
    1b1a:	a4 0f       	add	r26, r20
    1b1c:	b1 1d       	adc	r27, r1
    1b1e:	aa 5b       	subi	r26, 0xBA	; 186
    1b20:	bf 4f       	sbci	r27, 0xFF	; 255
    1b22:	7c 91       	ld	r23, X
	if (sizes[cmd] == 4) {
    1b24:	40 a5       	ldd	r20, Z+40	; 0x28
    1b26:	44 30       	cpi	r20, 0x04	; 4
    1b28:	79 f4       	brne	.+30     	; 0x1b48 <_ZN5BTOBD9getRecentEN7OBDCMDS3CMDE+0x50>
CBUFFER BTOBD::getRecent(OBDCMDS::CMD cmd) {
	CBUFFER returnval;
	uint8_t cint = offsets[cmd];
	cmdlock = (int8_t) cmd;
	returnval.au = buffer[cint++];
	returnval.al = buffer[cint++];
    1b2a:	32 e0       	ldi	r19, 0x02	; 2
    1b2c:	32 0f       	add	r19, r18
	if (sizes[cmd] == 4) {
		returnval.bu = buffer[cint++];
    1b2e:	fc 01       	movw	r30, r24
    1b30:	e3 0f       	add	r30, r19
    1b32:	f1 1d       	adc	r31, r1
    1b34:	ea 5b       	subi	r30, 0xBA	; 186
    1b36:	ff 4f       	sbci	r31, 0xFF	; 255
    1b38:	30 81       	ld	r19, Z
    1b3a:	2d 5f       	subi	r18, 0xFD	; 253
		returnval.bl = buffer[cint++];
    1b3c:	fc 01       	movw	r30, r24
    1b3e:	e2 0f       	add	r30, r18
    1b40:	f1 1d       	adc	r31, r1
    1b42:	ea 5b       	subi	r30, 0xBA	; 186
    1b44:	ff 4f       	sbci	r31, 0xFF	; 255
    1b46:	50 81       	ld	r21, Z
	}
	cmdlock = -1;
    1b48:	fc 01       	movw	r30, r24
    1b4a:	ea 59       	subi	r30, 0x9A	; 154
    1b4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b4e:	2f ef       	ldi	r18, 0xFF	; 255
    1b50:	20 83       	st	Z, r18
	return returnval;
    1b52:	83 2f       	mov	r24, r19
    1b54:	95 2f       	mov	r25, r21
    1b56:	08 95       	ret

00001b58 <_ZN9ByteArrayC1Ei>:
	this->_size = size;
	array = (char *) malloc(sizeof(char) * size);
 }

 ByteArray::~ByteArray() {
	free(array);
    1b58:	cf 93       	push	r28
    1b5a:	df 93       	push	r29
    1b5c:	ec 01       	movw	r28, r24
    1b5e:	cb 01       	movw	r24, r22
    1b60:	68 83       	st	Y, r22
    1b62:	79 83       	std	Y+1, r23	; 0x01
    1b64:	0e 94 4d 1c 	call	0x389a	; 0x389a <malloc>
    1b68:	8a 83       	std	Y+2, r24	; 0x02
    1b6a:	9b 83       	std	Y+3, r25	; 0x03
    1b6c:	df 91       	pop	r29
    1b6e:	cf 91       	pop	r28
    1b70:	08 95       	ret

00001b72 <_ZN9ByteArray2atEi>:
 }

char ByteArray::at(int i) {
	return array[i];
    1b72:	fc 01       	movw	r30, r24
    1b74:	82 81       	ldd	r24, Z+2	; 0x02
    1b76:	93 81       	ldd	r25, Z+3	; 0x03
    1b78:	fc 01       	movw	r30, r24
    1b7a:	e6 0f       	add	r30, r22
    1b7c:	f7 1f       	adc	r31, r23
 }
    1b7e:	80 81       	ld	r24, Z
    1b80:	08 95       	ret

00001b82 <_ZN9ByteArray3setEic>:
 void ByteArray::set(int i, char c) {
	array[i] = c;
    1b82:	fc 01       	movw	r30, r24
    1b84:	82 81       	ldd	r24, Z+2	; 0x02
    1b86:	93 81       	ldd	r25, Z+3	; 0x03
    1b88:	fc 01       	movw	r30, r24
    1b8a:	e6 0f       	add	r30, r22
    1b8c:	f7 1f       	adc	r31, r23
    1b8e:	40 83       	st	Z, r20
    1b90:	08 95       	ret

00001b92 <_ZN9ByteQueueC1Ei>:
 *  Author: ee63pc3-user
 */ 

 #include "ByteQueue.h"

 ByteQueue::ByteQueue(int bufferSize) : queue(bufferSize){
    1b92:	0f 93       	push	r16
    1b94:	1f 93       	push	r17
    1b96:	cf 93       	push	r28
    1b98:	df 93       	push	r29
    1b9a:	ec 01       	movw	r28, r24
    1b9c:	8b 01       	movw	r16, r22
    1b9e:	08 96       	adiw	r24, 0x08	; 8
    1ba0:	db df       	rcall	.-74     	; 0x1b58 <_ZN9ByteArrayC1Ei>
	max_size = bufferSize;
    1ba2:	08 83       	st	Y, r16
    1ba4:	19 83       	std	Y+1, r17	; 0x01
	wptr = 0;
    1ba6:	1c 82       	std	Y+4, r1	; 0x04
    1ba8:	1d 82       	std	Y+5, r1	; 0x05
	rptr = 0;
    1baa:	1e 82       	std	Y+6, r1	; 0x06
    1bac:	1f 82       	std	Y+7, r1	; 0x07
	numitems = 0;
    1bae:	1a 82       	std	Y+2, r1	; 0x02
    1bb0:	1b 82       	std	Y+3, r1	; 0x03
 }
    1bb2:	df 91       	pop	r29
    1bb4:	cf 91       	pop	r28
    1bb6:	1f 91       	pop	r17
    1bb8:	0f 91       	pop	r16
    1bba:	08 95       	ret

00001bbc <_ZN9ByteQueue7enqueueEc>:



 void ByteQueue::enqueue(char element){
    1bbc:	cf 93       	push	r28
    1bbe:	df 93       	push	r29
    1bc0:	ec 01       	movw	r28, r24
	 	numitems--;
 	}
	return element;
 }

 bool ByteQueue::isFull() {return numitems == max_size;}
    1bc2:	2a 81       	ldd	r18, Y+2	; 0x02
    1bc4:	3b 81       	ldd	r19, Y+3	; 0x03
 }



 void ByteQueue::enqueue(char element){
	if (!isFull()) {
    1bc6:	88 81       	ld	r24, Y
    1bc8:	99 81       	ldd	r25, Y+1	; 0x01
    1bca:	28 17       	cp	r18, r24
    1bcc:	39 07       	cpc	r19, r25
    1bce:	e1 f0       	breq	.+56     	; 0x1c08 <_ZN9ByteQueue7enqueueEc+0x4c>
		queue.set(wptr, element);
    1bd0:	8c 81       	ldd	r24, Y+4	; 0x04
    1bd2:	9d 81       	ldd	r25, Y+5	; 0x05
    1bd4:	46 2f       	mov	r20, r22
    1bd6:	bc 01       	movw	r22, r24
    1bd8:	ce 01       	movw	r24, r28
    1bda:	08 96       	adiw	r24, 0x08	; 8
    1bdc:	d2 df       	rcall	.-92     	; 0x1b82 <_ZN9ByteArray3setEic>
		//Took this out because modulus is very expensive on micro
		//(Since we're incrementing by one every time, we don't have to deal with any cases where our
		// pointer is over 2*max_size - 1, this should be more efficient)
		//wptr = (wptr + 1) % (max_size-1);
		if ((++wptr) >= max_size) wptr = wptr - max_size;
    1bde:	8c 81       	ldd	r24, Y+4	; 0x04
    1be0:	9d 81       	ldd	r25, Y+5	; 0x05
    1be2:	01 96       	adiw	r24, 0x01	; 1
    1be4:	8c 83       	std	Y+4, r24	; 0x04
    1be6:	9d 83       	std	Y+5, r25	; 0x05
    1be8:	28 81       	ld	r18, Y
    1bea:	39 81       	ldd	r19, Y+1	; 0x01
    1bec:	82 17       	cp	r24, r18
    1bee:	93 07       	cpc	r25, r19
    1bf0:	34 f0       	brlt	.+12     	; 0x1bfe <_ZN9ByteQueue7enqueueEc+0x42>
    1bf2:	8c 81       	ldd	r24, Y+4	; 0x04
    1bf4:	9d 81       	ldd	r25, Y+5	; 0x05
    1bf6:	82 1b       	sub	r24, r18
    1bf8:	93 0b       	sbc	r25, r19
    1bfa:	8c 83       	std	Y+4, r24	; 0x04
    1bfc:	9d 83       	std	Y+5, r25	; 0x05
		numitems++;
    1bfe:	8a 81       	ldd	r24, Y+2	; 0x02
    1c00:	9b 81       	ldd	r25, Y+3	; 0x03
    1c02:	01 96       	adiw	r24, 0x01	; 1
    1c04:	8a 83       	std	Y+2, r24	; 0x02
    1c06:	9b 83       	std	Y+3, r25	; 0x03
	}
 }
    1c08:	df 91       	pop	r29
    1c0a:	cf 91       	pop	r28
    1c0c:	08 95       	ret

00001c0e <_ZN9ByteQueue7dequeueEv>:

 char ByteQueue::dequeue(){
    1c0e:	cf 93       	push	r28
    1c10:	df 93       	push	r29
    1c12:	ec 01       	movw	r28, r24
 	}
	return element;
 }

 bool ByteQueue::isFull() {return numitems == max_size;}
 bool ByteQueue::isEmpty(){return numitems == 0;}
    1c14:	8a 81       	ldd	r24, Y+2	; 0x02
    1c16:	9b 81       	ldd	r25, Y+3	; 0x03
	}
 }

 char ByteQueue::dequeue(){
 	char element = '\0';
	if (!isEmpty()) {
    1c18:	89 2b       	or	r24, r25
    1c1a:	e9 f0       	breq	.+58     	; 0x1c56 <_ZN9ByteQueue7dequeueEv+0x48>
	 	element = queue.at(rptr);
    1c1c:	6e 81       	ldd	r22, Y+6	; 0x06
    1c1e:	7f 81       	ldd	r23, Y+7	; 0x07
    1c20:	ce 01       	movw	r24, r28
    1c22:	08 96       	adiw	r24, 0x08	; 8
    1c24:	a6 df       	rcall	.-180    	; 0x1b72 <_ZN9ByteArray2atEi>
		//Read comment in enqueue()
	 	//rptr = (rptr + 1) % (max_size-1)
		if ((++rptr) >= max_size) rptr = rptr - max_size;
    1c26:	2e 81       	ldd	r18, Y+6	; 0x06
    1c28:	3f 81       	ldd	r19, Y+7	; 0x07
    1c2a:	2f 5f       	subi	r18, 0xFF	; 255
    1c2c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c2e:	2e 83       	std	Y+6, r18	; 0x06
    1c30:	3f 83       	std	Y+7, r19	; 0x07
    1c32:	48 81       	ld	r20, Y
    1c34:	59 81       	ldd	r21, Y+1	; 0x01
    1c36:	24 17       	cp	r18, r20
    1c38:	35 07       	cpc	r19, r21
    1c3a:	34 f0       	brlt	.+12     	; 0x1c48 <_ZN9ByteQueue7dequeueEv+0x3a>
    1c3c:	2e 81       	ldd	r18, Y+6	; 0x06
    1c3e:	3f 81       	ldd	r19, Y+7	; 0x07
    1c40:	24 1b       	sub	r18, r20
    1c42:	35 0b       	sbc	r19, r21
    1c44:	2e 83       	std	Y+6, r18	; 0x06
    1c46:	3f 83       	std	Y+7, r19	; 0x07
	 	numitems--;
    1c48:	2a 81       	ldd	r18, Y+2	; 0x02
    1c4a:	3b 81       	ldd	r19, Y+3	; 0x03
    1c4c:	21 50       	subi	r18, 0x01	; 1
    1c4e:	31 09       	sbc	r19, r1
    1c50:	2a 83       	std	Y+2, r18	; 0x02
    1c52:	3b 83       	std	Y+3, r19	; 0x03
    1c54:	01 c0       	rjmp	.+2      	; 0x1c58 <_ZN9ByteQueue7dequeueEv+0x4a>
		numitems++;
	}
 }

 char ByteQueue::dequeue(){
 	char element = '\0';
    1c56:	80 e0       	ldi	r24, 0x00	; 0
	 	//rptr = (rptr + 1) % (max_size-1)
		if ((++rptr) >= max_size) rptr = rptr - max_size;
	 	numitems--;
 	}
	return element;
 }
    1c58:	df 91       	pop	r29
    1c5a:	cf 91       	pop	r28
    1c5c:	08 95       	ret

00001c5e <_ZN9ByteQueue6isFullEv>:

 bool ByteQueue::isFull() {return numitems == max_size;}
    1c5e:	fc 01       	movw	r30, r24
    1c60:	42 81       	ldd	r20, Z+2	; 0x02
    1c62:	53 81       	ldd	r21, Z+3	; 0x03
    1c64:	81 e0       	ldi	r24, 0x01	; 1
    1c66:	20 81       	ld	r18, Z
    1c68:	31 81       	ldd	r19, Z+1	; 0x01
    1c6a:	42 17       	cp	r20, r18
    1c6c:	53 07       	cpc	r21, r19
    1c6e:	09 f0       	breq	.+2      	; 0x1c72 <_ZN9ByteQueue6isFullEv+0x14>
    1c70:	80 e0       	ldi	r24, 0x00	; 0
    1c72:	08 95       	ret

00001c74 <_ZN9ByteQueue7isEmptyEv>:
 bool ByteQueue::isEmpty(){return numitems == 0;}
    1c74:	fc 01       	movw	r30, r24
    1c76:	22 81       	ldd	r18, Z+2	; 0x02
    1c78:	33 81       	ldd	r19, Z+3	; 0x03
    1c7a:	81 e0       	ldi	r24, 0x01	; 1
    1c7c:	23 2b       	or	r18, r19
    1c7e:	09 f0       	breq	.+2      	; 0x1c82 <_ZN9ByteQueue7isEmptyEv+0xe>
    1c80:	80 e0       	ldi	r24, 0x00	; 0
    1c82:	08 95       	ret

00001c84 <_ZN3GPSC1Ev>:
		char c = uart.rxDequeue();
		lcd->write(c);
		
	}*/

}
    1c84:	af 92       	push	r10
    1c86:	bf 92       	push	r11
    1c88:	cf 92       	push	r12
    1c8a:	ef 92       	push	r14
    1c8c:	0f 93       	push	r16
    1c8e:	cf 93       	push	r28
    1c90:	df 93       	push	r29
    1c92:	ec 01       	movw	r28, r24
    1c94:	8b e0       	ldi	r24, 0x0B	; 11
    1c96:	e0 e2       	ldi	r30, 0x20	; 32
    1c98:	f0 e2       	ldi	r31, 0x20	; 32
    1c9a:	de 01       	movw	r26, r28
    1c9c:	01 90       	ld	r0, Z+
    1c9e:	0d 92       	st	X+, r0
    1ca0:	8a 95       	dec	r24
    1ca2:	e1 f7       	brne	.-8      	; 0x1c9c <_ZN3GPSC1Ev+0x18>
    1ca4:	8a e0       	ldi	r24, 0x0A	; 10
    1ca6:	eb e2       	ldi	r30, 0x2B	; 43
    1ca8:	f0 e2       	ldi	r31, 0x20	; 32
    1caa:	de 01       	movw	r26, r28
    1cac:	1b 96       	adiw	r26, 0x0b	; 11
    1cae:	01 90       	ld	r0, Z+
    1cb0:	0d 92       	st	X+, r0
    1cb2:	8a 95       	dec	r24
    1cb4:	e1 f7       	brne	.-8      	; 0x1cae <_ZN3GPSC1Ev+0x2a>
    1cb6:	fe 01       	movw	r30, r28
    1cb8:	ee 5a       	subi	r30, 0xAE	; 174
    1cba:	ff 4f       	sbci	r31, 0xFF	; 255
    1cbc:	10 82       	st	Z, r1
    1cbe:	31 96       	adiw	r30, 0x01	; 1
    1cc0:	10 82       	st	Z, r1
    1cc2:	5e 01       	movw	r10, r28
    1cc4:	84 e5       	ldi	r24, 0x54	; 84
    1cc6:	a8 0e       	add	r10, r24
    1cc8:	b1 1c       	adc	r11, r1
    1cca:	40 e5       	ldi	r20, 0x50	; 80
    1ccc:	50 e0       	ldi	r21, 0x00	; 0
    1cce:	6c ed       	ldi	r22, 0xDC	; 220
    1cd0:	70 e0       	ldi	r23, 0x00	; 0
    1cd2:	c5 01       	movw	r24, r10
    1cd4:	0e 94 64 1a 	call	0x34c8	; 0x34c8 <_ZN10UartDriverC1Eii>
    1cd8:	0f 2e       	mov	r0, r31
    1cda:	f0 e5       	ldi	r31, 0x50	; 80
    1cdc:	cf 2e       	mov	r12, r31
    1cde:	f0 2d       	mov	r31, r0
    1ce0:	0f 2e       	mov	r0, r31
    1ce2:	fc e0       	ldi	r31, 0x0C	; 12
    1ce4:	ef 2e       	mov	r14, r31
    1ce6:	f0 2d       	mov	r31, r0
    1ce8:	00 e0       	ldi	r16, 0x00	; 0
    1cea:	23 e0       	ldi	r18, 0x03	; 3
    1cec:	40 e0       	ldi	r20, 0x00	; 0
    1cee:	60 eb       	ldi	r22, 0xB0	; 176
    1cf0:	79 e0       	ldi	r23, 0x09	; 9
    1cf2:	c5 01       	movw	r24, r10
    1cf4:	0e 94 77 1a 	call	0x34ee	; 0x34ee <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc>
    1cf8:	1d 8a       	std	Y+21, r1	; 0x15
    1cfa:	1e 8a       	std	Y+22, r1	; 0x16
    1cfc:	de 01       	movw	r26, r28
    1cfe:	57 96       	adiw	r26, 0x17	; 23
    1d00:	80 e0       	ldi	r24, 0x00	; 0
    1d02:	1d 92       	st	X+, r1
    1d04:	8f 5f       	subi	r24, 0xFF	; 255
    1d06:	8b 33       	cpi	r24, 0x3B	; 59
    1d08:	e1 f7       	brne	.-8      	; 0x1d02 <_ZN3GPSC1Ev+0x7e>
    1d0a:	df 91       	pop	r29
    1d0c:	cf 91       	pop	r28
    1d0e:	0f 91       	pop	r16
    1d10:	ef 90       	pop	r14
    1d12:	cf 90       	pop	r12
    1d14:	bf 90       	pop	r11
    1d16:	af 90       	pop	r10
    1d18:	08 95       	ret

00001d1a <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc>:
    1d1a:	0f 93       	push	r16
    1d1c:	1f 93       	push	r17
    1d1e:	ca 01       	movw	r24, r20
    1d20:	20 e3       	ldi	r18, 0x30	; 48
    1d22:	fa 01       	movw	r30, r20
    1d24:	20 83       	st	Z, r18
    1d26:	06 2f       	mov	r16, r22
    1d28:	10 e0       	ldi	r17, 0x00	; 0
    1d2a:	07 30       	cpi	r16, 0x07	; 7
    1d2c:	11 05       	cpc	r17, r1
    1d2e:	00 f5       	brcc	.+64     	; 0x1d70 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    1d30:	f8 01       	movw	r30, r16
    1d32:	e2 5e       	subi	r30, 0xE2	; 226
    1d34:	fe 4f       	sbci	r31, 0xFE	; 254
    1d36:	0c 94 34 1c 	jmp	0x3868	; 0x3868 <__tablejump2__>
    1d3a:	20 e3       	ldi	r18, 0x30	; 48
    1d3c:	fa 01       	movw	r30, r20
    1d3e:	21 83       	std	Z+1, r18	; 0x01
    1d40:	17 c0       	rjmp	.+46     	; 0x1d70 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    1d42:	21 e3       	ldi	r18, 0x31	; 49
    1d44:	fa 01       	movw	r30, r20
    1d46:	21 83       	std	Z+1, r18	; 0x01
    1d48:	13 c0       	rjmp	.+38     	; 0x1d70 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    1d4a:	22 e3       	ldi	r18, 0x32	; 50
    1d4c:	fa 01       	movw	r30, r20
    1d4e:	21 83       	std	Z+1, r18	; 0x01
    1d50:	0f c0       	rjmp	.+30     	; 0x1d70 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    1d52:	23 e3       	ldi	r18, 0x33	; 51
    1d54:	fa 01       	movw	r30, r20
    1d56:	21 83       	std	Z+1, r18	; 0x01
    1d58:	0b c0       	rjmp	.+22     	; 0x1d70 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    1d5a:	24 e3       	ldi	r18, 0x34	; 52
    1d5c:	fa 01       	movw	r30, r20
    1d5e:	21 83       	std	Z+1, r18	; 0x01
    1d60:	07 c0       	rjmp	.+14     	; 0x1d70 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    1d62:	25 e3       	ldi	r18, 0x35	; 53
    1d64:	fa 01       	movw	r30, r20
    1d66:	21 83       	std	Z+1, r18	; 0x01
    1d68:	03 c0       	rjmp	.+6      	; 0x1d70 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    1d6a:	28 e3       	ldi	r18, 0x38	; 56
    1d6c:	fa 01       	movw	r30, r20
    1d6e:	21 83       	std	Z+1, r18	; 0x01
    1d70:	1f 91       	pop	r17
    1d72:	0f 91       	pop	r16
    1d74:	08 95       	ret

00001d76 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>:
    1d76:	af 92       	push	r10
    1d78:	bf 92       	push	r11
    1d7a:	cf 92       	push	r12
    1d7c:	df 92       	push	r13
    1d7e:	ef 92       	push	r14
    1d80:	ff 92       	push	r15
    1d82:	0f 93       	push	r16
    1d84:	1f 93       	push	r17
    1d86:	cf 93       	push	r28
    1d88:	df 93       	push	r29
    1d8a:	00 d0       	rcall	.+0      	; 0x1d8c <_ZN3GPS11setPeriodicEN4NMEA3CMDEh+0x16>
    1d8c:	00 d0       	rcall	.+0      	; 0x1d8e <_ZN3GPS11setPeriodicEN4NMEA3CMDEh+0x18>
    1d8e:	cd b7       	in	r28, 0x3d	; 61
    1d90:	de b7       	in	r29, 0x3e	; 62
    1d92:	6c 01       	movw	r12, r24
    1d94:	a6 2e       	mov	r10, r22
    1d96:	4e 83       	std	Y+6, r20	; 0x06
    1d98:	1d 82       	std	Y+5, r1	; 0x05
    1d9a:	2d 81       	ldd	r18, Y+5	; 0x05
    1d9c:	8c 01       	movw	r16, r24
    1d9e:	0c 5a       	subi	r16, 0xAC	; 172
    1da0:	1f 4f       	sbci	r17, 0xFF	; 255
    1da2:	49 e0       	ldi	r20, 0x09	; 9
    1da4:	50 e0       	ldi	r21, 0x00	; 0
    1da6:	66 e5       	ldi	r22, 0x56	; 86
    1da8:	70 e2       	ldi	r23, 0x20	; 32
    1daa:	c8 01       	movw	r24, r16
    1dac:	0e 94 0e 1b 	call	0x361c	; 0x361c <_ZN10UartDriver10sendStringEPKcih>
    1db0:	8d 83       	std	Y+5, r24	; 0x05
    1db2:	bd 80       	ldd	r11, Y+5	; 0x05
    1db4:	ce 01       	movw	r24, r28
    1db6:	01 96       	adiw	r24, 0x01	; 1
    1db8:	7c 01       	movw	r14, r24
    1dba:	ac 01       	movw	r20, r24
    1dbc:	6a 2d       	mov	r22, r10
    1dbe:	c6 01       	movw	r24, r12
    1dc0:	ac df       	rcall	.-168    	; 0x1d1a <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc>
    1dc2:	2b 2d       	mov	r18, r11
    1dc4:	42 e0       	ldi	r20, 0x02	; 2
    1dc6:	50 e0       	ldi	r21, 0x00	; 0
    1dc8:	bc 01       	movw	r22, r24
    1dca:	c8 01       	movw	r24, r16
    1dcc:	0e 94 0e 1b 	call	0x361c	; 0x361c <_ZN10UartDriver10sendStringEPKcih>
    1dd0:	8d 83       	std	Y+5, r24	; 0x05
    1dd2:	2d 81       	ldd	r18, Y+5	; 0x05
    1dd4:	44 e0       	ldi	r20, 0x04	; 4
    1dd6:	50 e0       	ldi	r21, 0x00	; 0
    1dd8:	60 e6       	ldi	r22, 0x60	; 96
    1dda:	70 e2       	ldi	r23, 0x20	; 32
    1ddc:	c8 01       	movw	r24, r16
    1dde:	0e 94 0e 1b 	call	0x361c	; 0x361c <_ZN10UartDriver10sendStringEPKcih>
    1de2:	8d 83       	std	Y+5, r24	; 0x05
    1de4:	8e 81       	ldd	r24, Y+6	; 0x06
    1de6:	1f 92       	push	r1
    1de8:	8f 93       	push	r24
    1dea:	85 e6       	ldi	r24, 0x65	; 101
    1dec:	90 e2       	ldi	r25, 0x20	; 32
    1dee:	9f 93       	push	r25
    1df0:	8f 93       	push	r24
    1df2:	ff 92       	push	r15
    1df4:	ef 92       	push	r14
    1df6:	0e 94 97 1d 	call	0x3b2e	; 0x3b2e <sprintf>
    1dfa:	2d 81       	ldd	r18, Y+5	; 0x05
    1dfc:	43 e0       	ldi	r20, 0x03	; 3
    1dfe:	50 e0       	ldi	r21, 0x00	; 0
    1e00:	b7 01       	movw	r22, r14
    1e02:	c8 01       	movw	r24, r16
    1e04:	0e 94 0e 1b 	call	0x361c	; 0x361c <_ZN10UartDriver10sendStringEPKcih>
    1e08:	8d 83       	std	Y+5, r24	; 0x05
    1e0a:	2d 81       	ldd	r18, Y+5	; 0x05
    1e0c:	44 e0       	ldi	r20, 0x04	; 4
    1e0e:	50 e0       	ldi	r21, 0x00	; 0
    1e10:	6a e6       	ldi	r22, 0x6A	; 106
    1e12:	70 e2       	ldi	r23, 0x20	; 32
    1e14:	c8 01       	movw	r24, r16
    1e16:	0e 94 0e 1b 	call	0x361c	; 0x361c <_ZN10UartDriver10sendStringEPKcih>
    1e1a:	8d 83       	std	Y+5, r24	; 0x05
    1e1c:	dd 80       	ldd	r13, Y+5	; 0x05
    1e1e:	8d 81       	ldd	r24, Y+5	; 0x05
    1e20:	40 e1       	ldi	r20, 0x10	; 16
    1e22:	b7 01       	movw	r22, r14
    1e24:	90 e0       	ldi	r25, 0x00	; 0
    1e26:	0e 94 74 1d 	call	0x3ae8	; 0x3ae8 <__itoa_ncheck>
    1e2a:	2d 2d       	mov	r18, r13
    1e2c:	42 e0       	ldi	r20, 0x02	; 2
    1e2e:	50 e0       	ldi	r21, 0x00	; 0
    1e30:	bc 01       	movw	r22, r24
    1e32:	c8 01       	movw	r24, r16
    1e34:	0e 94 0e 1b 	call	0x361c	; 0x361c <_ZN10UartDriver10sendStringEPKcih>
    1e38:	2d 81       	ldd	r18, Y+5	; 0x05
    1e3a:	42 e0       	ldi	r20, 0x02	; 2
    1e3c:	50 e0       	ldi	r21, 0x00	; 0
    1e3e:	6c e7       	ldi	r22, 0x7C	; 124
    1e40:	70 e2       	ldi	r23, 0x20	; 32
    1e42:	c8 01       	movw	r24, r16
    1e44:	0e 94 0e 1b 	call	0x361c	; 0x361c <_ZN10UartDriver10sendStringEPKcih>
    1e48:	0f 90       	pop	r0
    1e4a:	0f 90       	pop	r0
    1e4c:	0f 90       	pop	r0
    1e4e:	0f 90       	pop	r0
    1e50:	0f 90       	pop	r0
    1e52:	0f 90       	pop	r0
    1e54:	26 96       	adiw	r28, 0x06	; 6
    1e56:	cd bf       	out	0x3d, r28	; 61
    1e58:	de bf       	out	0x3e, r29	; 62
    1e5a:	df 91       	pop	r29
    1e5c:	cf 91       	pop	r28
    1e5e:	1f 91       	pop	r17
    1e60:	0f 91       	pop	r16
    1e62:	ff 90       	pop	r15
    1e64:	ef 90       	pop	r14
    1e66:	df 90       	pop	r13
    1e68:	cf 90       	pop	r12
    1e6a:	bf 90       	pop	r11
    1e6c:	af 90       	pop	r10
    1e6e:	08 95       	ret

00001e70 <_ZN3GPS4initEv>:
    1e70:	cf 93       	push	r28
    1e72:	df 93       	push	r29
    1e74:	ec 01       	movw	r28, r24
    1e76:	20 e0       	ldi	r18, 0x00	; 0
    1e78:	4f e0       	ldi	r20, 0x0F	; 15
    1e7a:	50 e0       	ldi	r21, 0x00	; 0
    1e7c:	6f e6       	ldi	r22, 0x6F	; 111
    1e7e:	70 e2       	ldi	r23, 0x20	; 32
    1e80:	8c 5a       	subi	r24, 0xAC	; 172
    1e82:	9f 4f       	sbci	r25, 0xFF	; 255
    1e84:	0e 94 0e 1b 	call	0x361c	; 0x361c <_ZN10UartDriver10sendStringEPKcih>
    1e88:	2f ef       	ldi	r18, 0xFF	; 255
    1e8a:	83 ec       	ldi	r24, 0xC3	; 195
    1e8c:	99 e0       	ldi	r25, 0x09	; 9
    1e8e:	21 50       	subi	r18, 0x01	; 1
    1e90:	80 40       	sbci	r24, 0x00	; 0
    1e92:	90 40       	sbci	r25, 0x00	; 0
    1e94:	e1 f7       	brne	.-8      	; 0x1e8e <_ZN3GPS4initEv+0x1e>
    1e96:	00 c0       	rjmp	.+0      	; 0x1e98 <_ZN3GPS4initEv+0x28>
    1e98:	00 00       	nop
    1e9a:	40 e0       	ldi	r20, 0x00	; 0
    1e9c:	60 e0       	ldi	r22, 0x00	; 0
    1e9e:	ce 01       	movw	r24, r28
    1ea0:	6a df       	rcall	.-300    	; 0x1d76 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1ea2:	2f ef       	ldi	r18, 0xFF	; 255
    1ea4:	83 ec       	ldi	r24, 0xC3	; 195
    1ea6:	99 e0       	ldi	r25, 0x09	; 9
    1ea8:	21 50       	subi	r18, 0x01	; 1
    1eaa:	80 40       	sbci	r24, 0x00	; 0
    1eac:	90 40       	sbci	r25, 0x00	; 0
    1eae:	e1 f7       	brne	.-8      	; 0x1ea8 <_ZN3GPS4initEv+0x38>
    1eb0:	00 c0       	rjmp	.+0      	; 0x1eb2 <_ZN3GPS4initEv+0x42>
    1eb2:	00 00       	nop
    1eb4:	40 e0       	ldi	r20, 0x00	; 0
    1eb6:	65 e0       	ldi	r22, 0x05	; 5
    1eb8:	ce 01       	movw	r24, r28
    1eba:	5d df       	rcall	.-326    	; 0x1d76 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1ebc:	2f ef       	ldi	r18, 0xFF	; 255
    1ebe:	83 ec       	ldi	r24, 0xC3	; 195
    1ec0:	99 e0       	ldi	r25, 0x09	; 9
    1ec2:	21 50       	subi	r18, 0x01	; 1
    1ec4:	80 40       	sbci	r24, 0x00	; 0
    1ec6:	90 40       	sbci	r25, 0x00	; 0
    1ec8:	e1 f7       	brne	.-8      	; 0x1ec2 <_ZN3GPS4initEv+0x52>
    1eca:	00 c0       	rjmp	.+0      	; 0x1ecc <_ZN3GPS4initEv+0x5c>
    1ecc:	00 00       	nop
    1ece:	40 e0       	ldi	r20, 0x00	; 0
    1ed0:	62 e0       	ldi	r22, 0x02	; 2
    1ed2:	ce 01       	movw	r24, r28
    1ed4:	50 df       	rcall	.-352    	; 0x1d76 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1ed6:	2f ef       	ldi	r18, 0xFF	; 255
    1ed8:	83 ec       	ldi	r24, 0xC3	; 195
    1eda:	99 e0       	ldi	r25, 0x09	; 9
    1edc:	21 50       	subi	r18, 0x01	; 1
    1ede:	80 40       	sbci	r24, 0x00	; 0
    1ee0:	90 40       	sbci	r25, 0x00	; 0
    1ee2:	e1 f7       	brne	.-8      	; 0x1edc <_ZN3GPS4initEv+0x6c>
    1ee4:	00 c0       	rjmp	.+0      	; 0x1ee6 <_ZN3GPS4initEv+0x76>
    1ee6:	00 00       	nop
    1ee8:	40 e0       	ldi	r20, 0x00	; 0
    1eea:	61 e0       	ldi	r22, 0x01	; 1
    1eec:	ce 01       	movw	r24, r28
    1eee:	43 df       	rcall	.-378    	; 0x1d76 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1ef0:	2f ef       	ldi	r18, 0xFF	; 255
    1ef2:	83 ec       	ldi	r24, 0xC3	; 195
    1ef4:	99 e0       	ldi	r25, 0x09	; 9
    1ef6:	21 50       	subi	r18, 0x01	; 1
    1ef8:	80 40       	sbci	r24, 0x00	; 0
    1efa:	90 40       	sbci	r25, 0x00	; 0
    1efc:	e1 f7       	brne	.-8      	; 0x1ef6 <_ZN3GPS4initEv+0x86>
    1efe:	00 c0       	rjmp	.+0      	; 0x1f00 <_ZN3GPS4initEv+0x90>
    1f00:	00 00       	nop
    1f02:	41 e0       	ldi	r20, 0x01	; 1
    1f04:	63 e0       	ldi	r22, 0x03	; 3
    1f06:	ce 01       	movw	r24, r28
    1f08:	36 df       	rcall	.-404    	; 0x1d76 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1f0a:	2f ef       	ldi	r18, 0xFF	; 255
    1f0c:	83 ec       	ldi	r24, 0xC3	; 195
    1f0e:	99 e0       	ldi	r25, 0x09	; 9
    1f10:	21 50       	subi	r18, 0x01	; 1
    1f12:	80 40       	sbci	r24, 0x00	; 0
    1f14:	90 40       	sbci	r25, 0x00	; 0
    1f16:	e1 f7       	brne	.-8      	; 0x1f10 <_ZN3GPS4initEv+0xa0>
    1f18:	00 c0       	rjmp	.+0      	; 0x1f1a <_ZN3GPS4initEv+0xaa>
    1f1a:	00 00       	nop
    1f1c:	40 e0       	ldi	r20, 0x00	; 0
    1f1e:	64 e0       	ldi	r22, 0x04	; 4
    1f20:	ce 01       	movw	r24, r28
    1f22:	29 df       	rcall	.-430    	; 0x1d76 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1f24:	2f ef       	ldi	r18, 0xFF	; 255
    1f26:	83 ec       	ldi	r24, 0xC3	; 195
    1f28:	99 e0       	ldi	r25, 0x09	; 9
    1f2a:	21 50       	subi	r18, 0x01	; 1
    1f2c:	80 40       	sbci	r24, 0x00	; 0
    1f2e:	90 40       	sbci	r25, 0x00	; 0
    1f30:	e1 f7       	brne	.-8      	; 0x1f2a <_ZN3GPS4initEv+0xba>
    1f32:	00 c0       	rjmp	.+0      	; 0x1f34 <_ZN3GPS4initEv+0xc4>
    1f34:	00 00       	nop
    1f36:	40 e0       	ldi	r20, 0x00	; 0
    1f38:	66 e0       	ldi	r22, 0x06	; 6
    1f3a:	ce 01       	movw	r24, r28
    1f3c:	1c df       	rcall	.-456    	; 0x1d76 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1f3e:	df 91       	pop	r29
    1f40:	cf 91       	pop	r28
    1f42:	08 95       	ret

00001f44 <_ZN3GPS13interceptByteEv>:
    1f44:	ff 92       	push	r15
    1f46:	0f 93       	push	r16
    1f48:	1f 93       	push	r17
    1f4a:	cf 93       	push	r28
    1f4c:	df 93       	push	r29
    1f4e:	ec 01       	movw	r28, r24
    1f50:	8c 01       	movw	r16, r24
    1f52:	0c 5a       	subi	r16, 0xAC	; 172
    1f54:	1f 4f       	sbci	r17, 0xFF	; 255
    1f56:	c8 01       	movw	r24, r16
    1f58:	0e 94 0a 1b 	call	0x3614	; 0x3614 <_ZN10UartDriver11getUARTPortEv>
    1f5c:	fc 01       	movw	r30, r24
    1f5e:	f0 80       	ld	r15, Z
    1f60:	fe 01       	movw	r30, r28
    1f62:	ee 5a       	subi	r30, 0xAE	; 174
    1f64:	ff 4f       	sbci	r31, 0xFF	; 255
    1f66:	80 81       	ld	r24, Z
    1f68:	88 23       	and	r24, r24
    1f6a:	61 f0       	breq	.+24     	; 0x1f84 <_ZN3GPS13interceptByteEv+0x40>
    1f6c:	6f 2d       	mov	r22, r15
    1f6e:	c8 01       	movw	r24, r16
    1f70:	0e 94 f6 1a 	call	0x35ec	; 0x35ec <_ZN10UartDriver7rcvByteEc>
    1f74:	fa e0       	ldi	r31, 0x0A	; 10
    1f76:	ff 12       	cpse	r15, r31
    1f78:	05 c0       	rjmp	.+10     	; 0x1f84 <_ZN3GPS13interceptByteEv+0x40>
    1f7a:	cd 5a       	subi	r28, 0xAD	; 173
    1f7c:	df 4f       	sbci	r29, 0xFF	; 255
    1f7e:	88 81       	ld	r24, Y
    1f80:	8f 5f       	subi	r24, 0xFF	; 255
    1f82:	88 83       	st	Y, r24
    1f84:	df 91       	pop	r29
    1f86:	cf 91       	pop	r28
    1f88:	1f 91       	pop	r17
    1f8a:	0f 91       	pop	r16
    1f8c:	ff 90       	pop	r15
    1f8e:	08 95       	ret

00001f90 <_ZN3GPS15updateRegistersEv>:
    1f90:	5f 92       	push	r5
    1f92:	6f 92       	push	r6
    1f94:	7f 92       	push	r7
    1f96:	8f 92       	push	r8
    1f98:	9f 92       	push	r9
    1f9a:	af 92       	push	r10
    1f9c:	bf 92       	push	r11
    1f9e:	cf 92       	push	r12
    1fa0:	df 92       	push	r13
    1fa2:	ef 92       	push	r14
    1fa4:	ff 92       	push	r15
    1fa6:	0f 93       	push	r16
    1fa8:	1f 93       	push	r17
    1faa:	cf 93       	push	r28
    1fac:	df 93       	push	r29
    1fae:	4c 01       	movw	r8, r24
    1fb0:	fc 01       	movw	r30, r24
    1fb2:	ed 5a       	subi	r30, 0xAD	; 173
    1fb4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fb6:	80 81       	ld	r24, Z
    1fb8:	88 23       	and	r24, r24
    1fba:	09 f4       	brne	.+2      	; 0x1fbe <_ZN3GPS15updateRegistersEv+0x2e>
    1fbc:	7a c0       	rjmp	.+244    	; 0x20b2 <_ZN3GPS15updateRegistersEv+0x122>
    1fbe:	82 30       	cpi	r24, 0x02	; 2
    1fc0:	88 f0       	brcs	.+34     	; 0x1fe4 <_ZN3GPS15updateRegistersEv+0x54>
    1fc2:	e4 01       	movw	r28, r8
    1fc4:	cc 5a       	subi	r28, 0xAC	; 172
    1fc6:	df 4f       	sbci	r29, 0xFF	; 255
    1fc8:	8f 01       	movw	r16, r30
    1fca:	ce 01       	movw	r24, r28
    1fcc:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    1fd0:	8a 30       	cpi	r24, 0x0A	; 10
    1fd2:	d9 f7       	brne	.-10     	; 0x1fca <_ZN3GPS15updateRegistersEv+0x3a>
    1fd4:	f8 94       	cli
    1fd6:	f8 01       	movw	r30, r16
    1fd8:	80 81       	ld	r24, Z
    1fda:	81 50       	subi	r24, 0x01	; 1
    1fdc:	80 83       	st	Z, r24
    1fde:	78 94       	sei
    1fe0:	82 30       	cpi	r24, 0x02	; 2
    1fe2:	98 f7       	brcc	.-26     	; 0x1fca <_ZN3GPS15updateRegistersEv+0x3a>
    1fe4:	e4 01       	movw	r28, r8
    1fe6:	cc 5a       	subi	r28, 0xAC	; 172
    1fe8:	df 4f       	sbci	r29, 0xFF	; 255
    1fea:	6c 2e       	mov	r6, r28
    1fec:	5d 2e       	mov	r5, r29
    1fee:	ce 01       	movw	r24, r28
    1ff0:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    1ff4:	8c 32       	cpi	r24, 0x2C	; 44
    1ff6:	c9 f7       	brne	.-14     	; 0x1fea <_ZN3GPS15updateRegistersEv+0x5a>
    1ff8:	54 01       	movw	r10, r8
    1ffa:	64 01       	movw	r12, r8
    1ffc:	fa e0       	ldi	r31, 0x0A	; 10
    1ffe:	cf 0e       	add	r12, r31
    2000:	d1 1c       	adc	r13, r1
    2002:	84 01       	movw	r16, r8
    2004:	ee 24       	eor	r14, r14
    2006:	e3 94       	inc	r14
    2008:	f1 2c       	mov	r15, r1
    200a:	e8 01       	movw	r28, r16
    200c:	ca 19       	sub	r28, r10
    200e:	db 09       	sbc	r29, r11
    2010:	f8 01       	movw	r30, r16
    2012:	71 90       	ld	r7, Z+
    2014:	8f 01       	movw	r16, r30
    2016:	c7 01       	movw	r24, r14
    2018:	02 c0       	rjmp	.+4      	; 0x201e <_ZN3GPS15updateRegistersEv+0x8e>
    201a:	88 0f       	add	r24, r24
    201c:	99 1f       	adc	r25, r25
    201e:	ca 95       	dec	r28
    2020:	e2 f7       	brpl	.-8      	; 0x201a <_ZN3GPS15updateRegistersEv+0x8a>
    2022:	ec 01       	movw	r28, r24
    2024:	14 c0       	rjmp	.+40     	; 0x204e <_ZN3GPS15updateRegistersEv+0xbe>
    2026:	27 2d       	mov	r18, r7
    2028:	30 e0       	ldi	r19, 0x00	; 0
    202a:	f4 01       	movw	r30, r8
    202c:	e2 0f       	add	r30, r18
    202e:	f3 1f       	adc	r31, r19
    2030:	97 89       	ldd	r25, Z+23	; 0x17
    2032:	98 17       	cp	r25, r24
    2034:	39 f0       	breq	.+14     	; 0x2044 <_ZN3GPS15updateRegistersEv+0xb4>
    2036:	f4 01       	movw	r30, r8
    2038:	45 89       	ldd	r20, Z+21	; 0x15
    203a:	56 89       	ldd	r21, Z+22	; 0x16
    203c:	4c 2b       	or	r20, r28
    203e:	5d 2b       	or	r21, r29
    2040:	45 8b       	std	Z+21, r20	; 0x15
    2042:	56 8b       	std	Z+22, r21	; 0x16
    2044:	73 94       	inc	r7
    2046:	f4 01       	movw	r30, r8
    2048:	e2 0f       	add	r30, r18
    204a:	f3 1f       	adc	r31, r19
    204c:	87 8b       	std	Z+23, r24	; 0x17
    204e:	86 2d       	mov	r24, r6
    2050:	95 2d       	mov	r25, r5
    2052:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    2056:	8c 32       	cpi	r24, 0x2C	; 44
    2058:	31 f7       	brne	.-52     	; 0x2026 <_ZN3GPS15updateRegistersEv+0x96>
    205a:	f8 01       	movw	r30, r16
    205c:	40 81       	ld	r20, Z
    205e:	74 16       	cp	r7, r20
    2060:	b0 f4       	brcc	.+44     	; 0x208e <_ZN3GPS15updateRegistersEv+0xfe>
    2062:	27 2d       	mov	r18, r7
    2064:	30 e0       	ldi	r19, 0x00	; 0
    2066:	f4 01       	movw	r30, r8
    2068:	e2 0f       	add	r30, r18
    206a:	f3 1f       	adc	r31, r19
    206c:	87 89       	ldd	r24, Z+23	; 0x17
    206e:	88 23       	and	r24, r24
    2070:	39 f0       	breq	.+14     	; 0x2080 <_ZN3GPS15updateRegistersEv+0xf0>
    2072:	f4 01       	movw	r30, r8
    2074:	85 89       	ldd	r24, Z+21	; 0x15
    2076:	96 89       	ldd	r25, Z+22	; 0x16
    2078:	8c 2b       	or	r24, r28
    207a:	9d 2b       	or	r25, r29
    207c:	85 8b       	std	Z+21, r24	; 0x15
    207e:	96 8b       	std	Z+22, r25	; 0x16
    2080:	73 94       	inc	r7
    2082:	f4 01       	movw	r30, r8
    2084:	e2 0f       	add	r30, r18
    2086:	f3 1f       	adc	r31, r19
    2088:	17 8a       	std	Z+23, r1	; 0x17
    208a:	74 16       	cp	r7, r20
    208c:	50 f3       	brcs	.-44     	; 0x2062 <_ZN3GPS15updateRegistersEv+0xd2>
    208e:	0c 15       	cp	r16, r12
    2090:	1d 05       	cpc	r17, r13
    2092:	09 f0       	breq	.+2      	; 0x2096 <_ZN3GPS15updateRegistersEv+0x106>
    2094:	ba cf       	rjmp	.-140    	; 0x200a <_ZN3GPS15updateRegistersEv+0x7a>
    2096:	86 2d       	mov	r24, r6
    2098:	95 2d       	mov	r25, r5
    209a:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <_ZN10UartDriver9rxDequeueEv>
    209e:	8a 30       	cpi	r24, 0x0A	; 10
    20a0:	d1 f7       	brne	.-12     	; 0x2096 <_ZN3GPS15updateRegistersEv+0x106>
    20a2:	f8 94       	cli
    20a4:	f4 01       	movw	r30, r8
    20a6:	ed 5a       	subi	r30, 0xAD	; 173
    20a8:	ff 4f       	sbci	r31, 0xFF	; 255
    20aa:	80 81       	ld	r24, Z
    20ac:	81 50       	subi	r24, 0x01	; 1
    20ae:	80 83       	st	Z, r24
    20b0:	78 94       	sei
    20b2:	df 91       	pop	r29
    20b4:	cf 91       	pop	r28
    20b6:	1f 91       	pop	r17
    20b8:	0f 91       	pop	r16
    20ba:	ff 90       	pop	r15
    20bc:	ef 90       	pop	r14
    20be:	df 90       	pop	r13
    20c0:	cf 90       	pop	r12
    20c2:	bf 90       	pop	r11
    20c4:	af 90       	pop	r10
    20c6:	9f 90       	pop	r9
    20c8:	8f 90       	pop	r8
    20ca:	7f 90       	pop	r7
    20cc:	6f 90       	pop	r6
    20ce:	5f 90       	pop	r5
    20d0:	08 95       	ret

000020d2 <_ZN3GPS9getStatusEv>:
    20d2:	fc 01       	movw	r30, r24
    20d4:	85 89       	ldd	r24, Z+21	; 0x15
    20d6:	96 89       	ldd	r25, Z+22	; 0x16
    20d8:	08 95       	ret

000020da <_ZN3GPS11clearStatusEv>:
    20da:	fc 01       	movw	r30, r24
    20dc:	15 8a       	std	Z+21, r1	; 0x15
    20de:	16 8a       	std	Z+22, r1	; 0x16
    20e0:	08 95       	ret

000020e2 <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>:

char * GPS::retrieve(GPSVAL::VAL value, char * b) {
    20e2:	ef 92       	push	r14
    20e4:	ff 92       	push	r15
    20e6:	0f 93       	push	r16
    20e8:	1f 93       	push	r17
    20ea:	cf 93       	push	r28
    20ec:	df 93       	push	r29
	uint8_t i,y;
	y = 0;
	for (i = offsets[value]; i<offsets[value] + sizes[value]; i++, y++) {
    20ee:	c6 2f       	mov	r28, r22
    20f0:	d0 e0       	ldi	r29, 0x00	; 0
    20f2:	fc 01       	movw	r30, r24
    20f4:	ec 0f       	add	r30, r28
    20f6:	fd 1f       	adc	r31, r29
    20f8:	00 81       	ld	r16, Z
    20fa:	20 2f       	mov	r18, r16
    20fc:	30 e0       	ldi	r19, 0x00	; 0
    20fe:	63 85       	ldd	r22, Z+11	; 0x0b
    2100:	79 01       	movw	r14, r18
    2102:	e6 0e       	add	r14, r22
    2104:	f1 1c       	adc	r15, r1
    2106:	2e 15       	cp	r18, r14
    2108:	3f 05       	cpc	r19, r15
    210a:	64 f5       	brge	.+88     	; 0x2164 <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x82>
		b[y] = buffer[i];
    210c:	fc 01       	movw	r30, r24
    210e:	e2 0f       	add	r30, r18
    2110:	f3 1f       	adc	r31, r19
    2112:	27 89       	ldd	r18, Z+23	; 0x17
    2114:	da 01       	movw	r26, r20
    2116:	2c 93       	st	X, r18
		if (buffer[i] == '\0') return b;
    2118:	27 89       	ldd	r18, Z+23	; 0x17
    211a:	22 23       	and	r18, r18
    211c:	41 f1       	breq	.+80     	; 0x216e <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x8c>
}

char * GPS::retrieve(GPSVAL::VAL value, char * b) {
	uint8_t i,y;
	y = 0;
	for (i = offsets[value]; i<offsets[value] + sizes[value]; i++, y++) {
    211e:	10 2f       	mov	r17, r16
    2120:	c8 0f       	add	r28, r24
    2122:	d9 1f       	adc	r29, r25
    2124:	be 01       	movw	r22, r28
    2126:	65 5f       	subi	r22, 0xF5	; 245
    2128:	7f 4f       	sbci	r23, 0xFF	; 255
    212a:	0c c0       	rjmp	.+24     	; 0x2144 <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x62>
		b[y] = buffer[i];
    212c:	fc 01       	movw	r30, r24
    212e:	e2 0f       	add	r30, r18
    2130:	f3 1f       	adc	r31, r19
    2132:	27 89       	ldd	r18, Z+23	; 0x17
    2134:	7a 01       	movw	r14, r20
    2136:	ea 0e       	add	r14, r26
    2138:	f1 1c       	adc	r15, r1
    213a:	d7 01       	movw	r26, r14
    213c:	2c 93       	st	X, r18
		if (buffer[i] == '\0') return b;
    213e:	27 89       	ldd	r18, Z+23	; 0x17
    2140:	22 23       	and	r18, r18
    2142:	a9 f0       	breq	.+42     	; 0x216e <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x8c>
}

char * GPS::retrieve(GPSVAL::VAL value, char * b) {
	uint8_t i,y;
	y = 0;
	for (i = offsets[value]; i<offsets[value] + sizes[value]; i++, y++) {
    2144:	1f 5f       	subi	r17, 0xFF	; 255
    2146:	a1 2f       	mov	r26, r17
    2148:	a0 1b       	sub	r26, r16
    214a:	21 2f       	mov	r18, r17
    214c:	30 e0       	ldi	r19, 0x00	; 0
    214e:	b8 81       	ld	r27, Y
    2150:	fb 01       	movw	r30, r22
    2152:	f0 80       	ld	r15, Z
    2154:	ef 2d       	mov	r30, r15
    2156:	f0 e0       	ldi	r31, 0x00	; 0
    2158:	eb 0f       	add	r30, r27
    215a:	f1 1d       	adc	r31, r1
    215c:	2e 17       	cp	r18, r30
    215e:	3f 07       	cpc	r19, r31
    2160:	2c f3       	brlt	.-54     	; 0x212c <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x4a>
    2162:	01 c0       	rjmp	.+2      	; 0x2166 <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x84>

}

char * GPS::retrieve(GPSVAL::VAL value, char * b) {
	uint8_t i,y;
	y = 0;
    2164:	a0 e0       	ldi	r26, 0x00	; 0
	for (i = offsets[value]; i<offsets[value] + sizes[value]; i++, y++) {
		b[y] = buffer[i];
		if (buffer[i] == '\0') return b;
	}
	b[y] = '\0';
    2166:	fa 01       	movw	r30, r20
    2168:	ea 0f       	add	r30, r26
    216a:	f1 1d       	adc	r31, r1
    216c:	10 82       	st	Z, r1
	return b;
}
    216e:	ca 01       	movw	r24, r20
    2170:	df 91       	pop	r29
    2172:	cf 91       	pop	r28
    2174:	1f 91       	pop	r17
    2176:	0f 91       	pop	r16
    2178:	ff 90       	pop	r15
    217a:	ef 90       	pop	r14
    217c:	08 95       	ret

0000217e <_ZN3GPS9handleDREEv>:

 void GPS::handleDRE() {
    217e:	0f 93       	push	r16
    2180:	1f 93       	push	r17
    2182:	cf 93       	push	r28
    2184:	df 93       	push	r29
	 if (!uart.txIsEmpty()) {
    2186:	ec 01       	movw	r28, r24
    2188:	cc 5a       	subi	r28, 0xAC	; 172
    218a:	df 4f       	sbci	r29, 0xFF	; 255
    218c:	ce 01       	movw	r24, r28
    218e:	0e 94 02 1b 	call	0x3604	; 0x3604 <_ZN10UartDriver9txIsEmptyEv>
    2192:	81 11       	cpse	r24, r1
    2194:	0a c0       	rjmp	.+20     	; 0x21aa <_ZN3GPS9handleDREEv+0x2c>
		 uart.getUARTPort()->DATA = uart.txDequeue();
    2196:	ce 01       	movw	r24, r28
    2198:	0e 94 0a 1b 	call	0x3614	; 0x3614 <_ZN10UartDriver11getUARTPortEv>
    219c:	8c 01       	movw	r16, r24
    219e:	ce 01       	movw	r24, r28
    21a0:	0e 94 06 1b 	call	0x360c	; 0x360c <_ZN10UartDriver9txDequeueEv>
    21a4:	f8 01       	movw	r30, r16
    21a6:	80 83       	st	Z, r24
    21a8:	07 c0       	rjmp	.+14     	; 0x21b8 <_ZN3GPS9handleDREEv+0x3a>
	 } else {
		 uart.getUARTPort()->CTRLA &= ~(0x03); //Disable DREint
    21aa:	ce 01       	movw	r24, r28
    21ac:	0e 94 0a 1b 	call	0x3614	; 0x3614 <_ZN10UartDriver11getUARTPortEv>
    21b0:	fc 01       	movw	r30, r24
    21b2:	23 81       	ldd	r18, Z+3	; 0x03
    21b4:	2c 7f       	andi	r18, 0xFC	; 252
    21b6:	23 83       	std	Z+3, r18	; 0x03
	 }
 }
    21b8:	df 91       	pop	r29
    21ba:	cf 91       	pop	r28
    21bc:	1f 91       	pop	r17
    21be:	0f 91       	pop	r16
    21c0:	08 95       	ret

000021c2 <_ZN3GPS14startReceivingEv>:
 
 void GPS::startReceiving() {
	 allowRcv = true;
    21c2:	8e 5a       	subi	r24, 0xAE	; 174
    21c4:	9f 4f       	sbci	r25, 0xFF	; 255
    21c6:	21 e0       	ldi	r18, 0x01	; 1
    21c8:	fc 01       	movw	r30, r24
    21ca:	20 83       	st	Z, r18
    21cc:	08 95       	ret

000021ce <_ZN10LCD_Driver4initEv>:
		asm("NOP");
		_delay_ms(10);
		asm("NOP");
	}
	LCD_DATA_PORT.DIR= 0xFF;
}
    21ce:	dc 01       	movw	r26, r24
    21d0:	e0 e6       	ldi	r30, 0x60	; 96
    21d2:	f6 e0       	ldi	r31, 0x06	; 6
    21d4:	81 81       	ldd	r24, Z+1	; 0x01
    21d6:	81 60       	ori	r24, 0x01	; 1
    21d8:	81 83       	std	Z+1, r24	; 0x01
    21da:	84 81       	ldd	r24, Z+4	; 0x04
    21dc:	81 60       	ori	r24, 0x01	; 1
    21de:	84 83       	std	Z+4, r24	; 0x04
    21e0:	8f ef       	ldi	r24, 0xFF	; 255
    21e2:	e0 e4       	ldi	r30, 0x40	; 64
    21e4:	f6 e0       	ldi	r31, 0x06	; 6
    21e6:	81 83       	std	Z+1, r24	; 0x01
    21e8:	e0 e0       	ldi	r30, 0x00	; 0
    21ea:	f6 e0       	ldi	r31, 0x06	; 6
    21ec:	81 81       	ldd	r24, Z+1	; 0x01
    21ee:	88 60       	ori	r24, 0x08	; 8
    21f0:	81 83       	std	Z+1, r24	; 0x01
    21f2:	81 81       	ldd	r24, Z+1	; 0x01
    21f4:	84 60       	ori	r24, 0x04	; 4
    21f6:	81 83       	std	Z+1, r24	; 0x01
    21f8:	81 81       	ldd	r24, Z+1	; 0x01
    21fa:	82 60       	ori	r24, 0x02	; 2
    21fc:	81 83       	std	Z+1, r24	; 0x01
    21fe:	81 81       	ldd	r24, Z+1	; 0x01
    2200:	81 60       	ori	r24, 0x01	; 1
    2202:	81 83       	std	Z+1, r24	; 0x01
    2204:	84 81       	ldd	r24, Z+4	; 0x04
    2206:	81 60       	ori	r24, 0x01	; 1
    2208:	84 83       	std	Z+4, r24	; 0x04
    220a:	84 81       	ldd	r24, Z+4	; 0x04
    220c:	84 60       	ori	r24, 0x04	; 4
    220e:	84 83       	std	Z+4, r24	; 0x04
    2210:	84 81       	ldd	r24, Z+4	; 0x04
    2212:	88 60       	ori	r24, 0x08	; 8
    2214:	84 83       	std	Z+4, r24	; 0x04
    2216:	84 81       	ldd	r24, Z+4	; 0x04
    2218:	82 60       	ori	r24, 0x02	; 2
    221a:	84 83       	std	Z+4, r24	; 0x04
    221c:	55 96       	adiw	r26, 0x15	; 21
    221e:	1c 92       	st	X, r1
    2220:	55 97       	sbiw	r26, 0x15	; 21
    2222:	1a 96       	adiw	r26, 0x0a	; 10
    2224:	1d 92       	st	X+, r1
    2226:	1c 92       	st	X, r1
    2228:	1b 97       	sbiw	r26, 0x0b	; 11
    222a:	1c 96       	adiw	r26, 0x0c	; 12
    222c:	1d 92       	st	X+, r1
    222e:	1c 92       	st	X, r1
    2230:	1d 97       	sbiw	r26, 0x0d	; 13
    2232:	81 e0       	ldi	r24, 0x01	; 1
    2234:	54 96       	adiw	r26, 0x14	; 20
    2236:	8c 93       	st	X, r24
    2238:	54 97       	sbiw	r26, 0x14	; 20
    223a:	50 96       	adiw	r26, 0x10	; 16
    223c:	1d 92       	st	X+, r1
    223e:	1c 92       	st	X, r1
    2240:	51 97       	sbiw	r26, 0x11	; 17
    2242:	80 e4       	ldi	r24, 0x40	; 64
    2244:	91 e0       	ldi	r25, 0x01	; 1
    2246:	16 96       	adiw	r26, 0x06	; 6
    2248:	8d 93       	st	X+, r24
    224a:	9c 93       	st	X, r25
    224c:	17 97       	sbiw	r26, 0x07	; 7
    224e:	80 ee       	ldi	r24, 0xE0	; 224
    2250:	91 e0       	ldi	r25, 0x01	; 1
    2252:	18 96       	adiw	r26, 0x08	; 8
    2254:	8d 93       	st	X+, r24
    2256:	9c 93       	st	X, r25
    2258:	19 97       	sbiw	r26, 0x09	; 9
    225a:	08 95       	ret

0000225c <_ZN10LCD_DriverC1Ev>:
    225c:	cf 93       	push	r28
    225e:	df 93       	push	r29
    2260:	ec 01       	movw	r28, r24
    2262:	40 ee       	ldi	r20, 0xE0	; 224
    2264:	51 e0       	ldi	r21, 0x01	; 1
    2266:	60 e4       	ldi	r22, 0x40	; 64
    2268:	71 e0       	ldi	r23, 0x01	; 1
    226a:	0e 94 79 05 	call	0xaf2	; 0xaf2 <_ZN12Adafruit_GFXC1Eii>
    226e:	8f ec       	ldi	r24, 0xCF	; 207
    2270:	90 e2       	ldi	r25, 0x20	; 32
    2272:	88 83       	st	Y, r24
    2274:	99 83       	std	Y+1, r25	; 0x01
    2276:	ce 01       	movw	r24, r28
    2278:	aa df       	rcall	.-172    	; 0x21ce <_ZN10LCD_Driver4initEv>
    227a:	df 91       	pop	r29
    227c:	cf 91       	pop	r28
    227e:	08 95       	ret

00002280 <_ZN10LCD_Driver9writeDataEh>:
    2280:	e0 e4       	ldi	r30, 0x40	; 64
    2282:	f6 e0       	ldi	r31, 0x06	; 6
    2284:	64 83       	std	Z+4, r22	; 0x04
    2286:	e0 e0       	ldi	r30, 0x00	; 0
    2288:	f6 e0       	ldi	r31, 0x06	; 6
    228a:	84 81       	ldd	r24, Z+4	; 0x04
    228c:	8b 7f       	andi	r24, 0xFB	; 251
    228e:	84 83       	std	Z+4, r24	; 0x04
    2290:	84 81       	ldd	r24, Z+4	; 0x04
    2292:	84 60       	ori	r24, 0x04	; 4
    2294:	84 83       	std	Z+4, r24	; 0x04
    2296:	08 95       	ret

00002298 <_ZN10LCD_Driver5resetEv>:
    2298:	cf 93       	push	r28
    229a:	df 93       	push	r29
    229c:	e0 e0       	ldi	r30, 0x00	; 0
    229e:	f6 e0       	ldi	r31, 0x06	; 6
    22a0:	24 81       	ldd	r18, Z+4	; 0x04
    22a2:	21 60       	ori	r18, 0x01	; 1
    22a4:	24 83       	std	Z+4, r18	; 0x04
    22a6:	24 81       	ldd	r18, Z+4	; 0x04
    22a8:	24 60       	ori	r18, 0x04	; 4
    22aa:	24 83       	std	Z+4, r18	; 0x04
    22ac:	24 81       	ldd	r18, Z+4	; 0x04
    22ae:	28 60       	ori	r18, 0x08	; 8
    22b0:	24 83       	std	Z+4, r18	; 0x04
    22b2:	e0 e6       	ldi	r30, 0x60	; 96
    22b4:	f6 e0       	ldi	r31, 0x06	; 6
    22b6:	24 81       	ldd	r18, Z+4	; 0x04
    22b8:	2e 7f       	andi	r18, 0xFE	; 254
    22ba:	24 83       	std	Z+4, r18	; 0x04
    22bc:	e7 ee       	ldi	r30, 0xE7	; 231
    22be:	f3 e0       	ldi	r31, 0x03	; 3
    22c0:	31 97       	sbiw	r30, 0x01	; 1
    22c2:	f1 f7       	brne	.-4      	; 0x22c0 <_ZN10LCD_Driver5resetEv+0x28>
    22c4:	00 c0       	rjmp	.+0      	; 0x22c6 <_ZN10LCD_Driver5resetEv+0x2e>
    22c6:	00 00       	nop
    22c8:	e0 e6       	ldi	r30, 0x60	; 96
    22ca:	f6 e0       	ldi	r31, 0x06	; 6
    22cc:	24 81       	ldd	r18, Z+4	; 0x04
    22ce:	21 60       	ori	r18, 0x01	; 1
    22d0:	24 83       	std	Z+4, r18	; 0x04
    22d2:	c0 e0       	ldi	r28, 0x00	; 0
    22d4:	d6 e0       	ldi	r29, 0x06	; 6
    22d6:	2c 81       	ldd	r18, Y+4	; 0x04
    22d8:	2e 7f       	andi	r18, 0xFE	; 254
    22da:	2c 83       	std	Y+4, r18	; 0x04
    22dc:	2c 81       	ldd	r18, Y+4	; 0x04
    22de:	2d 7f       	andi	r18, 0xFD	; 253
    22e0:	2c 83       	std	Y+4, r18	; 0x04
    22e2:	60 e0       	ldi	r22, 0x00	; 0
    22e4:	cd df       	rcall	.-102    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    22e6:	8c 81       	ldd	r24, Y+4	; 0x04
    22e8:	8b 7f       	andi	r24, 0xFB	; 251
    22ea:	8c 83       	std	Y+4, r24	; 0x04
    22ec:	8c 81       	ldd	r24, Y+4	; 0x04
    22ee:	84 60       	ori	r24, 0x04	; 4
    22f0:	8c 83       	std	Y+4, r24	; 0x04
    22f2:	8c 81       	ldd	r24, Y+4	; 0x04
    22f4:	8b 7f       	andi	r24, 0xFB	; 251
    22f6:	8c 83       	std	Y+4, r24	; 0x04
    22f8:	8c 81       	ldd	r24, Y+4	; 0x04
    22fa:	84 60       	ori	r24, 0x04	; 4
    22fc:	8c 83       	std	Y+4, r24	; 0x04
    22fe:	8c 81       	ldd	r24, Y+4	; 0x04
    2300:	8b 7f       	andi	r24, 0xFB	; 251
    2302:	8c 83       	std	Y+4, r24	; 0x04
    2304:	8c 81       	ldd	r24, Y+4	; 0x04
    2306:	84 60       	ori	r24, 0x04	; 4
    2308:	8c 83       	std	Y+4, r24	; 0x04
    230a:	8c 81       	ldd	r24, Y+4	; 0x04
    230c:	81 60       	ori	r24, 0x01	; 1
    230e:	8c 83       	std	Y+4, r24	; 0x04
    2310:	df 91       	pop	r29
    2312:	cf 91       	pop	r28
    2314:	08 95       	ret

00002316 <_ZN10LCD_Driver5beginEv>:
    2316:	ef 92       	push	r14
    2318:	ff 92       	push	r15
    231a:	0f 93       	push	r16
    231c:	1f 93       	push	r17
    231e:	cf 93       	push	r28
    2320:	df 93       	push	r29
    2322:	cd b7       	in	r28, 0x3d	; 61
    2324:	de b7       	in	r29, 0x3e	; 62
    2326:	25 97       	sbiw	r28, 0x05	; 5
    2328:	cd bf       	out	0x3d, r28	; 61
    232a:	de bf       	out	0x3e, r29	; 62
    232c:	8c 01       	movw	r16, r24
    232e:	1d 82       	std	Y+5, r1	; 0x05
    2330:	b3 df       	rcall	.-154    	; 0x2298 <_ZN10LCD_Driver5resetEv>
    2332:	2f e7       	ldi	r18, 0x7F	; 127
    2334:	88 e3       	ldi	r24, 0x38	; 56
    2336:	91 e0       	ldi	r25, 0x01	; 1
    2338:	21 50       	subi	r18, 0x01	; 1
    233a:	80 40       	sbci	r24, 0x00	; 0
    233c:	90 40       	sbci	r25, 0x00	; 0
    233e:	e1 f7       	brne	.-8      	; 0x2338 <_ZN10LCD_Driver5beginEv+0x22>
    2340:	00 c0       	rjmp	.+0      	; 0x2342 <_ZN10LCD_Driver5beginEv+0x2c>
    2342:	00 00       	nop
    2344:	e0 e0       	ldi	r30, 0x00	; 0
    2346:	f6 e0       	ldi	r31, 0x06	; 6
    2348:	84 81       	ldd	r24, Z+4	; 0x04
    234a:	8e 7f       	andi	r24, 0xFE	; 254
    234c:	84 83       	std	Z+4, r24	; 0x04
    234e:	0f 2e       	mov	r0, r31
    2350:	e1 2c       	mov	r14, r1
    2352:	f6 e0       	ldi	r31, 0x06	; 6
    2354:	ff 2e       	mov	r15, r31
    2356:	f0 2d       	mov	r31, r0
    2358:	49 c0       	rjmp	.+146    	; 0x23ec <_ZN10LCD_Driver5beginEv+0xd6>
    235a:	ed 81       	ldd	r30, Y+5	; 0x05
    235c:	81 e0       	ldi	r24, 0x01	; 1
    235e:	8e 0f       	add	r24, r30
    2360:	8d 83       	std	Y+5, r24	; 0x05
    2362:	f0 e0       	ldi	r31, 0x00	; 0
    2364:	eb 57       	subi	r30, 0x7B	; 123
    2366:	ff 4d       	sbci	r31, 0xDF	; 223
    2368:	80 81       	ld	r24, Z
    236a:	8c 83       	std	Y+4, r24	; 0x04
    236c:	ed 81       	ldd	r30, Y+5	; 0x05
    236e:	81 e0       	ldi	r24, 0x01	; 1
    2370:	8e 0f       	add	r24, r30
    2372:	8d 83       	std	Y+5, r24	; 0x05
    2374:	f0 e0       	ldi	r31, 0x00	; 0
    2376:	eb 57       	subi	r30, 0x7B	; 123
    2378:	ff 4d       	sbci	r31, 0xDF	; 223
    237a:	80 81       	ld	r24, Z
    237c:	8b 83       	std	Y+3, r24	; 0x03
    237e:	8c 81       	ldd	r24, Y+4	; 0x04
    2380:	81 11       	cpse	r24, r1
    2382:	0a c0       	rjmp	.+20     	; 0x2398 <_ZN10LCD_Driver5beginEv+0x82>
    2384:	ef eb       	ldi	r30, 0xBF	; 191
    2386:	f4 ed       	ldi	r31, 0xD4	; 212
    2388:	21 e0       	ldi	r18, 0x01	; 1
    238a:	e1 50       	subi	r30, 0x01	; 1
    238c:	f0 40       	sbci	r31, 0x00	; 0
    238e:	20 40       	sbci	r18, 0x00	; 0
    2390:	e1 f7       	brne	.-8      	; 0x238a <_ZN10LCD_Driver5beginEv+0x74>
    2392:	00 c0       	rjmp	.+0      	; 0x2394 <_ZN10LCD_Driver5beginEv+0x7e>
    2394:	00 00       	nop
    2396:	2a c0       	rjmp	.+84     	; 0x23ec <_ZN10LCD_Driver5beginEv+0xd6>
    2398:	f7 01       	movw	r30, r14
    239a:	84 81       	ldd	r24, Z+4	; 0x04
    239c:	8e 7f       	andi	r24, 0xFE	; 254
    239e:	84 83       	std	Z+4, r24	; 0x04
    23a0:	84 81       	ldd	r24, Z+4	; 0x04
    23a2:	8d 7f       	andi	r24, 0xFD	; 253
    23a4:	84 83       	std	Z+4, r24	; 0x04
    23a6:	6c 81       	ldd	r22, Y+4	; 0x04
    23a8:	c8 01       	movw	r24, r16
    23aa:	6a df       	rcall	.-300    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    23ac:	f7 01       	movw	r30, r14
    23ae:	84 81       	ldd	r24, Z+4	; 0x04
    23b0:	82 60       	ori	r24, 0x02	; 2
    23b2:	84 83       	std	Z+4, r24	; 0x04
    23b4:	1a 82       	std	Y+2, r1	; 0x02
    23b6:	9a 81       	ldd	r25, Y+2	; 0x02
    23b8:	8b 81       	ldd	r24, Y+3	; 0x03
    23ba:	98 17       	cp	r25, r24
    23bc:	98 f4       	brcc	.+38     	; 0x23e4 <_ZN10LCD_Driver5beginEv+0xce>
    23be:	ed 81       	ldd	r30, Y+5	; 0x05
    23c0:	81 e0       	ldi	r24, 0x01	; 1
    23c2:	8e 0f       	add	r24, r30
    23c4:	8d 83       	std	Y+5, r24	; 0x05
    23c6:	f0 e0       	ldi	r31, 0x00	; 0
    23c8:	eb 57       	subi	r30, 0x7B	; 123
    23ca:	ff 4d       	sbci	r31, 0xDF	; 223
    23cc:	80 81       	ld	r24, Z
    23ce:	89 83       	std	Y+1, r24	; 0x01
    23d0:	69 81       	ldd	r22, Y+1	; 0x01
    23d2:	c8 01       	movw	r24, r16
    23d4:	55 df       	rcall	.-342    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    23d6:	8a 81       	ldd	r24, Y+2	; 0x02
    23d8:	8f 5f       	subi	r24, 0xFF	; 255
    23da:	8a 83       	std	Y+2, r24	; 0x02
    23dc:	9a 81       	ldd	r25, Y+2	; 0x02
    23de:	8b 81       	ldd	r24, Y+3	; 0x03
    23e0:	98 17       	cp	r25, r24
    23e2:	68 f3       	brcs	.-38     	; 0x23be <_ZN10LCD_Driver5beginEv+0xa8>
    23e4:	f7 01       	movw	r30, r14
    23e6:	84 81       	ldd	r24, Z+4	; 0x04
    23e8:	81 60       	ori	r24, 0x01	; 1
    23ea:	84 83       	std	Z+4, r24	; 0x04
    23ec:	8d 81       	ldd	r24, Y+5	; 0x05
    23ee:	86 34       	cpi	r24, 0x46	; 70
    23f0:	08 f4       	brcc	.+2      	; 0x23f4 <_ZN10LCD_Driver5beginEv+0xde>
    23f2:	b3 cf       	rjmp	.-154    	; 0x235a <_ZN10LCD_Driver5beginEv+0x44>
    23f4:	25 96       	adiw	r28, 0x05	; 5
    23f6:	cd bf       	out	0x3d, r28	; 61
    23f8:	de bf       	out	0x3e, r29	; 62
    23fa:	df 91       	pop	r29
    23fc:	cf 91       	pop	r28
    23fe:	1f 91       	pop	r17
    2400:	0f 91       	pop	r16
    2402:	ff 90       	pop	r15
    2404:	ef 90       	pop	r14
    2406:	08 95       	ret

00002408 <_ZN10LCD_Driver5floodEjm>:
    2408:	4f 92       	push	r4
    240a:	5f 92       	push	r5
    240c:	6f 92       	push	r6
    240e:	7f 92       	push	r7
    2410:	af 92       	push	r10
    2412:	bf 92       	push	r11
    2414:	cf 92       	push	r12
    2416:	df 92       	push	r13
    2418:	ef 92       	push	r14
    241a:	ff 92       	push	r15
    241c:	0f 93       	push	r16
    241e:	1f 93       	push	r17
    2420:	cf 93       	push	r28
    2422:	df 93       	push	r29
    2424:	cd b7       	in	r28, 0x3d	; 61
    2426:	de b7       	in	r29, 0x3e	; 62
    2428:	28 97       	sbiw	r28, 0x08	; 8
    242a:	cd bf       	out	0x3d, r28	; 61
    242c:	de bf       	out	0x3e, r29	; 62
    242e:	8c 01       	movw	r16, r24
    2430:	d6 2e       	mov	r13, r22
    2432:	c7 2e       	mov	r12, r23
    2434:	29 01       	movw	r4, r18
    2436:	3a 01       	movw	r6, r20
    2438:	b7 2e       	mov	r11, r23
    243a:	a6 2e       	mov	r10, r22
    243c:	0f 2e       	mov	r0, r31
    243e:	e1 2c       	mov	r14, r1
    2440:	f6 e0       	ldi	r31, 0x06	; 6
    2442:	ff 2e       	mov	r15, r31
    2444:	f0 2d       	mov	r31, r0
    2446:	f7 01       	movw	r30, r14
    2448:	84 81       	ldd	r24, Z+4	; 0x04
    244a:	8e 7f       	andi	r24, 0xFE	; 254
    244c:	84 83       	std	Z+4, r24	; 0x04
    244e:	84 81       	ldd	r24, Z+4	; 0x04
    2450:	8d 7f       	andi	r24, 0xFD	; 253
    2452:	84 83       	std	Z+4, r24	; 0x04
    2454:	6c e2       	ldi	r22, 0x2C	; 44
    2456:	c8 01       	movw	r24, r16
    2458:	13 df       	rcall	.-474    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    245a:	f7 01       	movw	r30, r14
    245c:	84 81       	ldd	r24, Z+4	; 0x04
    245e:	82 60       	ori	r24, 0x02	; 2
    2460:	84 83       	std	Z+4, r24	; 0x04
    2462:	6c 2d       	mov	r22, r12
    2464:	c8 01       	movw	r24, r16
    2466:	0c df       	rcall	.-488    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    2468:	6d 2d       	mov	r22, r13
    246a:	c8 01       	movw	r24, r16
    246c:	09 df       	rcall	.-494    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    246e:	cd 10       	cpse	r12, r13
    2470:	38 c0       	rjmp	.+112    	; 0x24e2 <_ZN10LCD_Driver5floodEjm+0xda>
    2472:	1d 82       	std	Y+5, r1	; 0x05
    2474:	1e 82       	std	Y+6, r1	; 0x06
    2476:	1f 82       	std	Y+7, r1	; 0x07
    2478:	18 86       	std	Y+8, r1	; 0x08
    247a:	73 01       	movw	r14, r6
    247c:	62 01       	movw	r12, r4
    247e:	f1 e0       	ldi	r31, 0x01	; 1
    2480:	cf 1a       	sub	r12, r31
    2482:	d1 08       	sbc	r13, r1
    2484:	e1 08       	sbc	r14, r1
    2486:	f1 08       	sbc	r15, r1
    2488:	8d 81       	ldd	r24, Y+5	; 0x05
    248a:	9e 81       	ldd	r25, Y+6	; 0x06
    248c:	af 81       	ldd	r26, Y+7	; 0x07
    248e:	b8 85       	ldd	r27, Y+8	; 0x08
    2490:	8c 15       	cp	r24, r12
    2492:	9d 05       	cpc	r25, r13
    2494:	ae 05       	cpc	r26, r14
    2496:	bf 05       	cpc	r27, r15
    2498:	08 f0       	brcs	.+2      	; 0x249c <_ZN10LCD_Driver5floodEjm+0x94>
    249a:	51 c0       	rjmp	.+162    	; 0x253e <_ZN10LCD_Driver5floodEjm+0x136>
    249c:	e0 e0       	ldi	r30, 0x00	; 0
    249e:	f6 e0       	ldi	r31, 0x06	; 6
    24a0:	84 81       	ldd	r24, Z+4	; 0x04
    24a2:	8b 7f       	andi	r24, 0xFB	; 251
    24a4:	84 83       	std	Z+4, r24	; 0x04
    24a6:	84 81       	ldd	r24, Z+4	; 0x04
    24a8:	84 60       	ori	r24, 0x04	; 4
    24aa:	84 83       	std	Z+4, r24	; 0x04
    24ac:	84 81       	ldd	r24, Z+4	; 0x04
    24ae:	8b 7f       	andi	r24, 0xFB	; 251
    24b0:	84 83       	std	Z+4, r24	; 0x04
    24b2:	84 81       	ldd	r24, Z+4	; 0x04
    24b4:	84 60       	ori	r24, 0x04	; 4
    24b6:	84 83       	std	Z+4, r24	; 0x04
    24b8:	8d 81       	ldd	r24, Y+5	; 0x05
    24ba:	9e 81       	ldd	r25, Y+6	; 0x06
    24bc:	af 81       	ldd	r26, Y+7	; 0x07
    24be:	b8 85       	ldd	r27, Y+8	; 0x08
    24c0:	01 96       	adiw	r24, 0x01	; 1
    24c2:	a1 1d       	adc	r26, r1
    24c4:	b1 1d       	adc	r27, r1
    24c6:	8d 83       	std	Y+5, r24	; 0x05
    24c8:	9e 83       	std	Y+6, r25	; 0x06
    24ca:	af 83       	std	Y+7, r26	; 0x07
    24cc:	b8 87       	std	Y+8, r27	; 0x08
    24ce:	8d 81       	ldd	r24, Y+5	; 0x05
    24d0:	9e 81       	ldd	r25, Y+6	; 0x06
    24d2:	af 81       	ldd	r26, Y+7	; 0x07
    24d4:	b8 85       	ldd	r27, Y+8	; 0x08
    24d6:	8c 15       	cp	r24, r12
    24d8:	9d 05       	cpc	r25, r13
    24da:	ae 05       	cpc	r26, r14
    24dc:	bf 05       	cpc	r27, r15
    24de:	00 f3       	brcs	.-64     	; 0x24a0 <_ZN10LCD_Driver5floodEjm+0x98>
    24e0:	2e c0       	rjmp	.+92     	; 0x253e <_ZN10LCD_Driver5floodEjm+0x136>
    24e2:	19 82       	std	Y+1, r1	; 0x01
    24e4:	1a 82       	std	Y+2, r1	; 0x02
    24e6:	1b 82       	std	Y+3, r1	; 0x03
    24e8:	1c 82       	std	Y+4, r1	; 0x04
    24ea:	73 01       	movw	r14, r6
    24ec:	62 01       	movw	r12, r4
    24ee:	81 e0       	ldi	r24, 0x01	; 1
    24f0:	c8 1a       	sub	r12, r24
    24f2:	d1 08       	sbc	r13, r1
    24f4:	e1 08       	sbc	r14, r1
    24f6:	f1 08       	sbc	r15, r1
    24f8:	89 81       	ldd	r24, Y+1	; 0x01
    24fa:	9a 81       	ldd	r25, Y+2	; 0x02
    24fc:	ab 81       	ldd	r26, Y+3	; 0x03
    24fe:	bc 81       	ldd	r27, Y+4	; 0x04
    2500:	8c 15       	cp	r24, r12
    2502:	9d 05       	cpc	r25, r13
    2504:	ae 05       	cpc	r26, r14
    2506:	bf 05       	cpc	r27, r15
    2508:	d0 f4       	brcc	.+52     	; 0x253e <_ZN10LCD_Driver5floodEjm+0x136>
    250a:	6b 2d       	mov	r22, r11
    250c:	c8 01       	movw	r24, r16
    250e:	b8 de       	rcall	.-656    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    2510:	6a 2d       	mov	r22, r10
    2512:	c8 01       	movw	r24, r16
    2514:	b5 de       	rcall	.-662    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    2516:	89 81       	ldd	r24, Y+1	; 0x01
    2518:	9a 81       	ldd	r25, Y+2	; 0x02
    251a:	ab 81       	ldd	r26, Y+3	; 0x03
    251c:	bc 81       	ldd	r27, Y+4	; 0x04
    251e:	01 96       	adiw	r24, 0x01	; 1
    2520:	a1 1d       	adc	r26, r1
    2522:	b1 1d       	adc	r27, r1
    2524:	89 83       	std	Y+1, r24	; 0x01
    2526:	9a 83       	std	Y+2, r25	; 0x02
    2528:	ab 83       	std	Y+3, r26	; 0x03
    252a:	bc 83       	std	Y+4, r27	; 0x04
    252c:	49 81       	ldd	r20, Y+1	; 0x01
    252e:	5a 81       	ldd	r21, Y+2	; 0x02
    2530:	6b 81       	ldd	r22, Y+3	; 0x03
    2532:	7c 81       	ldd	r23, Y+4	; 0x04
    2534:	4c 15       	cp	r20, r12
    2536:	5d 05       	cpc	r21, r13
    2538:	6e 05       	cpc	r22, r14
    253a:	7f 05       	cpc	r23, r15
    253c:	30 f3       	brcs	.-52     	; 0x250a <_ZN10LCD_Driver5floodEjm+0x102>
    253e:	e0 e0       	ldi	r30, 0x00	; 0
    2540:	f6 e0       	ldi	r31, 0x06	; 6
    2542:	84 81       	ldd	r24, Z+4	; 0x04
    2544:	81 60       	ori	r24, 0x01	; 1
    2546:	84 83       	std	Z+4, r24	; 0x04
    2548:	28 96       	adiw	r28, 0x08	; 8
    254a:	cd bf       	out	0x3d, r28	; 61
    254c:	de bf       	out	0x3e, r29	; 62
    254e:	df 91       	pop	r29
    2550:	cf 91       	pop	r28
    2552:	1f 91       	pop	r17
    2554:	0f 91       	pop	r16
    2556:	ff 90       	pop	r15
    2558:	ef 90       	pop	r14
    255a:	df 90       	pop	r13
    255c:	cf 90       	pop	r12
    255e:	bf 90       	pop	r11
    2560:	af 90       	pop	r10
    2562:	7f 90       	pop	r7
    2564:	6f 90       	pop	r6
    2566:	5f 90       	pop	r5
    2568:	4f 90       	pop	r4
    256a:	08 95       	ret

0000256c <_ZN10LCD_Driver15writeRegister32Ehm>:
	writeRegister32(HX8357_PASET, t);
	CS_IDLE;
}

void LCD_Driver::writeRegister32(uint8_t r, uint32_t d) 
{
    256c:	cf 92       	push	r12
    256e:	df 92       	push	r13
    2570:	ef 92       	push	r14
    2572:	ff 92       	push	r15
    2574:	0f 93       	push	r16
    2576:	1f 93       	push	r17
    2578:	cf 93       	push	r28
    257a:	df 93       	push	r29
    257c:	ec 01       	movw	r28, r24
    257e:	69 01       	movw	r12, r18
    2580:	7a 01       	movw	r14, r20
    CS_ACTIVE;
    2582:	00 e0       	ldi	r16, 0x00	; 0
    2584:	16 e0       	ldi	r17, 0x06	; 6
    2586:	f8 01       	movw	r30, r16
    2588:	84 81       	ldd	r24, Z+4	; 0x04
    258a:	8e 7f       	andi	r24, 0xFE	; 254
    258c:	84 83       	std	Z+4, r24	; 0x04
    CD_COMMAND;
    258e:	84 81       	ldd	r24, Z+4	; 0x04
    2590:	8d 7f       	andi	r24, 0xFD	; 253
    2592:	84 83       	std	Z+4, r24	; 0x04
    writeData(r);
    2594:	ce 01       	movw	r24, r28
    2596:	74 de       	rcall	.-792    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    CD_DATA;
    2598:	f8 01       	movw	r30, r16
    259a:	84 81       	ldd	r24, Z+4	; 0x04
    259c:	82 60       	ori	r24, 0x02	; 2
    259e:	84 83       	std	Z+4, r24	; 0x04
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    25a0:	f6 e0       	ldi	r31, 0x06	; 6
    25a2:	fa 95       	dec	r31
    25a4:	f1 f7       	brne	.-4      	; 0x25a2 <_ZN10LCD_Driver15writeRegister32Ehm+0x36>
    25a6:	00 c0       	rjmp	.+0      	; 0x25a8 <_ZN10LCD_Driver15writeRegister32Ehm+0x3c>
    _delay_us(10);
    writeData(d >> 24);
    25a8:	6f 2d       	mov	r22, r15
    25aa:	77 27       	eor	r23, r23
    25ac:	88 27       	eor	r24, r24
    25ae:	99 27       	eor	r25, r25
    25b0:	ce 01       	movw	r24, r28
    25b2:	66 de       	rcall	.-820    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    25b4:	86 e0       	ldi	r24, 0x06	; 6
    25b6:	8a 95       	dec	r24
    25b8:	f1 f7       	brne	.-4      	; 0x25b6 <_ZN10LCD_Driver15writeRegister32Ehm+0x4a>
    25ba:	00 c0       	rjmp	.+0      	; 0x25bc <_ZN10LCD_Driver15writeRegister32Ehm+0x50>
    _delay_us(10);
    writeData(d >> 16);
    25bc:	b7 01       	movw	r22, r14
    25be:	88 27       	eor	r24, r24
    25c0:	99 27       	eor	r25, r25
    25c2:	ce 01       	movw	r24, r28
    25c4:	5d de       	rcall	.-838    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    25c6:	e6 e0       	ldi	r30, 0x06	; 6
    25c8:	ea 95       	dec	r30
    25ca:	f1 f7       	brne	.-4      	; 0x25c8 <_ZN10LCD_Driver15writeRegister32Ehm+0x5c>
    25cc:	00 c0       	rjmp	.+0      	; 0x25ce <_ZN10LCD_Driver15writeRegister32Ehm+0x62>
    _delay_us(10);
    writeData(d >> 8);
    25ce:	99 27       	eor	r25, r25
    25d0:	8f 2d       	mov	r24, r15
    25d2:	7e 2d       	mov	r23, r14
    25d4:	6d 2d       	mov	r22, r13
    25d6:	ce 01       	movw	r24, r28
    25d8:	53 de       	rcall	.-858    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    25da:	f6 e0       	ldi	r31, 0x06	; 6
    25dc:	fa 95       	dec	r31
    25de:	f1 f7       	brne	.-4      	; 0x25dc <_ZN10LCD_Driver15writeRegister32Ehm+0x70>
    25e0:	00 c0       	rjmp	.+0      	; 0x25e2 <_ZN10LCD_Driver15writeRegister32Ehm+0x76>
    _delay_us(10);
    writeData(d);
    25e2:	6c 2d       	mov	r22, r12
    25e4:	ce 01       	movw	r24, r28
    25e6:	4c de       	rcall	.-872    	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
    CS_IDLE;
    25e8:	e0 e0       	ldi	r30, 0x00	; 0
    25ea:	f6 e0       	ldi	r31, 0x06	; 6
    25ec:	84 81       	ldd	r24, Z+4	; 0x04
    25ee:	81 60       	ori	r24, 0x01	; 1
    25f0:	84 83       	std	Z+4, r24	; 0x04
}
    25f2:	df 91       	pop	r29
    25f4:	cf 91       	pop	r28
    25f6:	1f 91       	pop	r17
    25f8:	0f 91       	pop	r16
    25fa:	ff 90       	pop	r15
    25fc:	ef 90       	pop	r14
    25fe:	df 90       	pop	r13
    2600:	cf 90       	pop	r12
    2602:	08 95       	ret

00002604 <_ZN10LCD_Driver13setAddrWindowEjjjj>:
	LCD_DATA_PORT.DIR= 0xFF;
}


void LCD_Driver::setAddrWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2)
{
    2604:	cf 92       	push	r12
    2606:	df 92       	push	r13
    2608:	ef 92       	push	r14
    260a:	ff 92       	push	r15
    260c:	0f 93       	push	r16
    260e:	1f 93       	push	r17
    2610:	cf 93       	push	r28
    2612:	df 93       	push	r29
    2614:	7c 01       	movw	r14, r24
    2616:	6a 01       	movw	r12, r20
    2618:	c9 01       	movw	r24, r18
	CS_ACTIVE;
    261a:	c0 e0       	ldi	r28, 0x00	; 0
    261c:	d6 e0       	ldi	r29, 0x06	; 6
    261e:	2c 81       	ldd	r18, Y+4	; 0x04
    2620:	2e 7f       	andi	r18, 0xFE	; 254
    2622:	2c 83       	std	Y+4, r18	; 0x04
	uint32_t t;

	t = x1;
    2624:	ab 01       	movw	r20, r22
    2626:	60 e0       	ldi	r22, 0x00	; 0
    2628:	70 e0       	ldi	r23, 0x00	; 0
	t <<= 16;
    262a:	ba 01       	movw	r22, r20
    262c:	55 27       	eor	r21, r21
    262e:	44 27       	eor	r20, r20
	t |= x2;
    2630:	a0 e0       	ldi	r26, 0x00	; 0
    2632:	b0 e0       	ldi	r27, 0x00	; 0
    2634:	9a 01       	movw	r18, r20
    2636:	ab 01       	movw	r20, r22
    2638:	28 2b       	or	r18, r24
    263a:	39 2b       	or	r19, r25
    263c:	4a 2b       	or	r20, r26
    263e:	5b 2b       	or	r21, r27
	//TODO move register
	//writeRegister32(ILI9341_COLADDRSET, t);  // HX8357D uses same registers!
	writeRegister32(HX8357_CASET, t);
    2640:	6a e2       	ldi	r22, 0x2A	; 42
    2642:	c7 01       	movw	r24, r14
    2644:	93 df       	rcall	.-218    	; 0x256c <_ZN10LCD_Driver15writeRegister32Ehm>
	t = y1;
    2646:	a6 01       	movw	r20, r12
    2648:	60 e0       	ldi	r22, 0x00	; 0
    264a:	70 e0       	ldi	r23, 0x00	; 0
	t <<= 16;
    264c:	ba 01       	movw	r22, r20
    264e:	55 27       	eor	r21, r21
    2650:	44 27       	eor	r20, r20
	t |= y2;
    2652:	20 e0       	ldi	r18, 0x00	; 0
    2654:	30 e0       	ldi	r19, 0x00	; 0
    2656:	db 01       	movw	r26, r22
    2658:	ca 01       	movw	r24, r20
    265a:	80 2b       	or	r24, r16
    265c:	91 2b       	or	r25, r17
    265e:	a2 2b       	or	r26, r18
    2660:	b3 2b       	or	r27, r19
    2662:	9c 01       	movw	r18, r24
    2664:	ad 01       	movw	r20, r26
	//TODO move register
	//writeRegister32(ILI9341_PAGEADDRSET, t); // HX8357D uses same registers!
	writeRegister32(HX8357_PASET, t);
    2666:	6b e2       	ldi	r22, 0x2B	; 43
    2668:	c7 01       	movw	r24, r14
    266a:	80 df       	rcall	.-256    	; 0x256c <_ZN10LCD_Driver15writeRegister32Ehm>
	CS_IDLE;
    266c:	8c 81       	ldd	r24, Y+4	; 0x04
    266e:	81 60       	ori	r24, 0x01	; 1
    2670:	8c 83       	std	Y+4, r24	; 0x04
}
    2672:	df 91       	pop	r29
    2674:	cf 91       	pop	r28
    2676:	1f 91       	pop	r17
    2678:	0f 91       	pop	r16
    267a:	ff 90       	pop	r15
    267c:	ef 90       	pop	r14
    267e:	df 90       	pop	r13
    2680:	cf 90       	pop	r12
    2682:	08 95       	ret

00002684 <_ZN10LCD_Driver11setRotationEh>:

  CS_IDLE;
}

void LCD_Driver::setRotation(uint8_t x)
{
    2684:	ff 92       	push	r15
    2686:	0f 93       	push	r16
    2688:	1f 93       	push	r17
    268a:	cf 93       	push	r28
    268c:	df 93       	push	r29
    268e:	ec 01       	movw	r28, r24
    Adafruit_GFX::setRotation(x);
    2690:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setRotationEh>
	CS_ACTIVE;
    2694:	e0 e0       	ldi	r30, 0x00	; 0
    2696:	f6 e0       	ldi	r31, 0x06	; 6
    2698:	84 81       	ldd	r24, Z+4	; 0x04
    269a:	8e 7f       	andi	r24, 0xFE	; 254
    269c:	84 83       	std	Z+4, r24	; 0x04

	uint8_t t;
	switch (rotation)
    269e:	8d 89       	ldd	r24, Y+21	; 0x15
    26a0:	81 30       	cpi	r24, 0x01	; 1
    26a2:	31 f0       	breq	.+12     	; 0x26b0 <_ZN10LCD_Driver11setRotationEh+0x2c>
    26a4:	88 f0       	brcs	.+34     	; 0x26c8 <_ZN10LCD_Driver11setRotationEh+0x44>
    26a6:	82 30       	cpi	r24, 0x02	; 2
    26a8:	41 f0       	breq	.+16     	; 0x26ba <_ZN10LCD_Driver11setRotationEh+0x36>
    26aa:	83 30       	cpi	r24, 0x03	; 3
    26ac:	41 f0       	breq	.+16     	; 0x26be <_ZN10LCD_Driver11setRotationEh+0x3a>
    26ae:	10 c0       	rjmp	.+32     	; 0x26d0 <_ZN10LCD_Driver11setRotationEh+0x4c>
	{
	    case 0: t = HX8357B_MADCTL_MX | HX8357B_MADCTL_MY | HX8357B_MADCTL_RGB; break;
		case 1: t = HX8357B_MADCTL_MY | HX8357B_MADCTL_MV | HX8357B_MADCTL_RGB; break;
    26b0:	0f 2e       	mov	r0, r31
    26b2:	f0 ea       	ldi	r31, 0xA0	; 160
    26b4:	ff 2e       	mov	r15, r31
    26b6:	f0 2d       	mov	r31, r0
    26b8:	0b c0       	rjmp	.+22     	; 0x26d0 <_ZN10LCD_Driver11setRotationEh+0x4c>
		case 2: t = HX8357B_MADCTL_RGB; break;
    26ba:	f1 2c       	mov	r15, r1
    26bc:	09 c0       	rjmp	.+18     	; 0x26d0 <_ZN10LCD_Driver11setRotationEh+0x4c>
		case 3: t = HX8357B_MADCTL_MX | HX8357B_MADCTL_MV | HX8357B_MADCTL_RGB; break;
    26be:	0f 2e       	mov	r0, r31
    26c0:	f0 e6       	ldi	r31, 0x60	; 96
    26c2:	ff 2e       	mov	r15, r31
    26c4:	f0 2d       	mov	r31, r0
    26c6:	04 c0       	rjmp	.+8      	; 0x26d0 <_ZN10LCD_Driver11setRotationEh+0x4c>
	CS_ACTIVE;

	uint8_t t;
	switch (rotation)
	{
	    case 0: t = HX8357B_MADCTL_MX | HX8357B_MADCTL_MY | HX8357B_MADCTL_RGB; break;
    26c8:	0f 2e       	mov	r0, r31
    26ca:	f0 ec       	ldi	r31, 0xC0	; 192
    26cc:	ff 2e       	mov	r15, r31
    26ce:	f0 2d       	mov	r31, r0
		case 1: t = HX8357B_MADCTL_MY | HX8357B_MADCTL_MV | HX8357B_MADCTL_RGB; break;
		case 2: t = HX8357B_MADCTL_RGB; break;
		case 3: t = HX8357B_MADCTL_MX | HX8357B_MADCTL_MV | HX8357B_MADCTL_RGB; break;
	}

	CD_COMMAND;
    26d0:	00 e0       	ldi	r16, 0x00	; 0
    26d2:	16 e0       	ldi	r17, 0x06	; 6
    26d4:	f8 01       	movw	r30, r16
    26d6:	84 81       	ldd	r24, Z+4	; 0x04
    26d8:	8d 7f       	andi	r24, 0xFD	; 253
    26da:	84 83       	std	Z+4, r24	; 0x04
	writeData(ILI9341_MADCTL);
    26dc:	66 e3       	ldi	r22, 0x36	; 54
    26de:	ce 01       	movw	r24, r28
    26e0:	cf dd       	rcall	.-1122   	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
	CD_DATA;
    26e2:	f8 01       	movw	r30, r16
    26e4:	84 81       	ldd	r24, Z+4	; 0x04
    26e6:	82 60       	ori	r24, 0x02	; 2
    26e8:	84 83       	std	Z+4, r24	; 0x04
	writeData(t);
    26ea:	6f 2d       	mov	r22, r15
    26ec:	ce 01       	movw	r24, r28
    26ee:	c8 dd       	rcall	.-1136   	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
	setAddrWindow(0, 0, _width-1, _height-1);
    26f0:	08 85       	ldd	r16, Y+8	; 0x08
    26f2:	19 85       	ldd	r17, Y+9	; 0x09
    26f4:	01 50       	subi	r16, 0x01	; 1
    26f6:	11 09       	sbc	r17, r1
    26f8:	2e 81       	ldd	r18, Y+6	; 0x06
    26fa:	3f 81       	ldd	r19, Y+7	; 0x07
    26fc:	21 50       	subi	r18, 0x01	; 1
    26fe:	31 09       	sbc	r19, r1
    2700:	40 e0       	ldi	r20, 0x00	; 0
    2702:	50 e0       	ldi	r21, 0x00	; 0
    2704:	60 e0       	ldi	r22, 0x00	; 0
    2706:	70 e0       	ldi	r23, 0x00	; 0
    2708:	ce 01       	movw	r24, r28
    270a:	7c df       	rcall	.-264    	; 0x2604 <_ZN10LCD_Driver13setAddrWindowEjjjj>
}
    270c:	df 91       	pop	r29
    270e:	cf 91       	pop	r28
    2710:	1f 91       	pop	r17
    2712:	0f 91       	pop	r16
    2714:	ff 90       	pop	r15
    2716:	08 95       	ret

00002718 <_ZN10LCD_Driver9drawPixelEiij>:

void LCD_Driver::drawPixel(int16_t x, int16_t y, uint16_t color)
{
    2718:	cf 92       	push	r12
    271a:	df 92       	push	r13
    271c:	ef 92       	push	r14
    271e:	ff 92       	push	r15
    2720:	0f 93       	push	r16
    2722:	1f 93       	push	r17
    2724:	cf 93       	push	r28
    2726:	df 93       	push	r29
    2728:	ec 01       	movw	r28, r24
    272a:	d2 2e       	mov	r13, r18
    272c:	c3 2e       	mov	r12, r19
	if((x < 0) || (y < 0) || (x >= _width) || (y >= _height)) return;
    272e:	77 23       	and	r23, r23
    2730:	c4 f1       	brlt	.+112    	; 0x27a2 <_ZN10LCD_Driver9drawPixelEiij+0x8a>
    2732:	55 23       	and	r21, r21
    2734:	b4 f1       	brlt	.+108    	; 0x27a2 <_ZN10LCD_Driver9drawPixelEiij+0x8a>
    2736:	8e 81       	ldd	r24, Y+6	; 0x06
    2738:	9f 81       	ldd	r25, Y+7	; 0x07
    273a:	68 17       	cp	r22, r24
    273c:	79 07       	cpc	r23, r25
    273e:	8c f5       	brge	.+98     	; 0x27a2 <_ZN10LCD_Driver9drawPixelEiij+0x8a>
    2740:	88 85       	ldd	r24, Y+8	; 0x08
    2742:	99 85       	ldd	r25, Y+9	; 0x09
    2744:	48 17       	cp	r20, r24
    2746:	59 07       	cpc	r21, r25
    2748:	64 f5       	brge	.+88     	; 0x27a2 <_ZN10LCD_Driver9drawPixelEiij+0x8a>
	CS_ACTIVE;
    274a:	0f 2e       	mov	r0, r31
    274c:	e1 2c       	mov	r14, r1
    274e:	f6 e0       	ldi	r31, 0x06	; 6
    2750:	ff 2e       	mov	r15, r31
    2752:	f0 2d       	mov	r31, r0
    2754:	f7 01       	movw	r30, r14
    2756:	84 81       	ldd	r24, Z+4	; 0x04
    2758:	8e 7f       	andi	r24, 0xFE	; 254
    275a:	84 83       	std	Z+4, r24	; 0x04
	setAddrWindow(x, y, _width-1, _height-1);
    275c:	08 85       	ldd	r16, Y+8	; 0x08
    275e:	19 85       	ldd	r17, Y+9	; 0x09
    2760:	01 50       	subi	r16, 0x01	; 1
    2762:	11 09       	sbc	r17, r1
    2764:	8e 81       	ldd	r24, Y+6	; 0x06
    2766:	9f 81       	ldd	r25, Y+7	; 0x07
    2768:	9c 01       	movw	r18, r24
    276a:	21 50       	subi	r18, 0x01	; 1
    276c:	31 09       	sbc	r19, r1
    276e:	ce 01       	movw	r24, r28
    2770:	49 df       	rcall	.-366    	; 0x2604 <_ZN10LCD_Driver13setAddrWindowEjjjj>
	CS_ACTIVE;
    2772:	f7 01       	movw	r30, r14
    2774:	84 81       	ldd	r24, Z+4	; 0x04
    2776:	8e 7f       	andi	r24, 0xFE	; 254
    2778:	84 83       	std	Z+4, r24	; 0x04
	CD_COMMAND;
    277a:	84 81       	ldd	r24, Z+4	; 0x04
    277c:	8d 7f       	andi	r24, 0xFD	; 253
    277e:	84 83       	std	Z+4, r24	; 0x04
	writeData(0x2C);
    2780:	6c e2       	ldi	r22, 0x2C	; 44
    2782:	ce 01       	movw	r24, r28
    2784:	7d dd       	rcall	.-1286   	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
	CD_DATA;
    2786:	f7 01       	movw	r30, r14
    2788:	84 81       	ldd	r24, Z+4	; 0x04
    278a:	82 60       	ori	r24, 0x02	; 2
    278c:	84 83       	std	Z+4, r24	; 0x04
	writeData(color >> 8);
    278e:	6c 2d       	mov	r22, r12
    2790:	ce 01       	movw	r24, r28
    2792:	76 dd       	rcall	.-1300   	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
	writeData(color);
    2794:	6d 2d       	mov	r22, r13
    2796:	ce 01       	movw	r24, r28
    2798:	73 dd       	rcall	.-1306   	; 0x2280 <_ZN10LCD_Driver9writeDataEh>
	CS_IDLE;
    279a:	f7 01       	movw	r30, r14
    279c:	84 81       	ldd	r24, Z+4	; 0x04
    279e:	81 60       	ori	r24, 0x01	; 1
    27a0:	84 83       	std	Z+4, r24	; 0x04
}
    27a2:	df 91       	pop	r29
    27a4:	cf 91       	pop	r28
    27a6:	1f 91       	pop	r17
    27a8:	0f 91       	pop	r16
    27aa:	ff 90       	pop	r15
    27ac:	ef 90       	pop	r14
    27ae:	df 90       	pop	r13
    27b0:	cf 90       	pop	r12
    27b2:	08 95       	ret

000027b4 <_ZN10LCD_Driver10fillScreenEj>:
{
	LCD_DATA_PORT.OUT = data;
	WR_STROBE;
}

void LCD_Driver::fillScreen(uint16_t color) {
    27b4:	ef 92       	push	r14
    27b6:	ff 92       	push	r15
    27b8:	0f 93       	push	r16
    27ba:	1f 93       	push	r17
    27bc:	cf 93       	push	r28
    27be:	df 93       	push	r29
    27c0:	ec 01       	movw	r28, r24
    27c2:	7b 01       	movw	r14, r22
	setAddrWindow(0,0, _width-1, _height - 1);
    27c4:	08 85       	ldd	r16, Y+8	; 0x08
    27c6:	19 85       	ldd	r17, Y+9	; 0x09
    27c8:	01 50       	subi	r16, 0x01	; 1
    27ca:	11 09       	sbc	r17, r1
    27cc:	2e 81       	ldd	r18, Y+6	; 0x06
    27ce:	3f 81       	ldd	r19, Y+7	; 0x07
    27d0:	21 50       	subi	r18, 0x01	; 1
    27d2:	31 09       	sbc	r19, r1
    27d4:	40 e0       	ldi	r20, 0x00	; 0
    27d6:	50 e0       	ldi	r21, 0x00	; 0
    27d8:	60 e0       	ldi	r22, 0x00	; 0
    27da:	70 e0       	ldi	r23, 0x00	; 0
    27dc:	13 df       	rcall	.-474    	; 0x2604 <_ZN10LCD_Driver13setAddrWindowEjjjj>
	flood(color, (long)TFTWIDTH * (long) TFTHEIGHT);
    27de:	20 e0       	ldi	r18, 0x00	; 0
    27e0:	38 e5       	ldi	r19, 0x58	; 88
    27e2:	42 e0       	ldi	r20, 0x02	; 2
    27e4:	50 e0       	ldi	r21, 0x00	; 0
    27e6:	b7 01       	movw	r22, r14
    27e8:	ce 01       	movw	r24, r28
    27ea:	0e de       	rcall	.-996    	; 0x2408 <_ZN10LCD_Driver5floodEjm>
}
    27ec:	df 91       	pop	r29
    27ee:	cf 91       	pop	r28
    27f0:	1f 91       	pop	r17
    27f2:	0f 91       	pop	r16
    27f4:	ff 90       	pop	r15
    27f6:	ef 90       	pop	r14
    27f8:	08 95       	ret

000027fa <_ZN10LCD_Driver8writeStrEPc>:
    _delay_us(10);
    writeData(d);
    CS_IDLE;
}

void LCD_Driver::writeStr(char * str) {
    27fa:	0f 93       	push	r16
    27fc:	1f 93       	push	r17
    27fe:	cf 93       	push	r28
    2800:	df 93       	push	r29
    2802:	ec 01       	movw	r28, r24
    2804:	fb 01       	movw	r30, r22
	while(*str) {
    2806:	60 81       	ld	r22, Z
    2808:	66 23       	and	r22, r22
    280a:	79 f0       	breq	.+30     	; 0x282a <_ZN10LCD_Driver8writeStrEPc+0x30>
    280c:	8f 01       	movw	r16, r30
    280e:	0f 5f       	subi	r16, 0xFF	; 255
    2810:	1f 4f       	sbci	r17, 0xFF	; 255
		this->write(*str++);
    2812:	e8 81       	ld	r30, Y
    2814:	f9 81       	ldd	r31, Y+1	; 0x01
    2816:	00 88       	ldd	r0, Z+16	; 0x10
    2818:	f1 89       	ldd	r31, Z+17	; 0x11
    281a:	e0 2d       	mov	r30, r0
    281c:	ce 01       	movw	r24, r28
    281e:	19 95       	eicall
    writeData(d);
    CS_IDLE;
}

void LCD_Driver::writeStr(char * str) {
	while(*str) {
    2820:	f8 01       	movw	r30, r16
    2822:	61 91       	ld	r22, Z+
    2824:	8f 01       	movw	r16, r30
    2826:	61 11       	cpse	r22, r1
    2828:	f4 cf       	rjmp	.-24     	; 0x2812 <_ZN10LCD_Driver8writeStrEPc+0x18>
		this->write(*str++);
	}

}
    282a:	df 91       	pop	r29
    282c:	cf 91       	pop	r28
    282e:	1f 91       	pop	r17
    2830:	0f 91       	pop	r16
    2832:	08 95       	ret

00002834 <_ZN10MainScreenC1EP10LCD_Driver>:
 *  Author: ee63pc3-user
 */ 

 #include "MainScreen.h"

 MainScreen::MainScreen(LCD_Driver * lcdscreen) : Screen(lcdscreen) {}
    2834:	9a c5       	rjmp	.+2868   	; 0x336a <_ZN6ScreenC1EP10LCD_Driver>
    2836:	08 95       	ret

00002838 <_ZN10MainScreen5clearEv>:
		status >>= 1;
		value = static_cast<GPSVAL::VAL>(((int)value)+1);
	}

 }
 void MainScreen::clear() {
    2838:	0f 93       	push	r16
    283a:	1f 93       	push	r17
    283c:	cf 93       	push	r28
    283e:	df 93       	push	r29
    2840:	ec 01       	movw	r28, r24
	lcd->fillScreen(BLACK);
    2842:	88 81       	ld	r24, Y
    2844:	99 81       	ldd	r25, Y+1	; 0x01
    2846:	dc 01       	movw	r26, r24
    2848:	ed 91       	ld	r30, X+
    284a:	fc 91       	ld	r31, X
    284c:	04 84       	ldd	r0, Z+12	; 0x0c
    284e:	f5 85       	ldd	r31, Z+13	; 0x0d
    2850:	e0 2d       	mov	r30, r0
    2852:	60 e0       	ldi	r22, 0x00	; 0
    2854:	70 e0       	ldi	r23, 0x00	; 0
    2856:	19 95       	eicall
	lcd->drawFastVLine(239, 0, 320, WHITE);
    2858:	88 81       	ld	r24, Y
    285a:	99 81       	ldd	r25, Y+1	; 0x01
    285c:	dc 01       	movw	r26, r24
    285e:	ed 91       	ld	r30, X+
    2860:	fc 91       	ld	r31, X
    2862:	04 80       	ldd	r0, Z+4	; 0x04
    2864:	f5 81       	ldd	r31, Z+5	; 0x05
    2866:	e0 2d       	mov	r30, r0
    2868:	0f ef       	ldi	r16, 0xFF	; 255
    286a:	1f ef       	ldi	r17, 0xFF	; 255
    286c:	20 e4       	ldi	r18, 0x40	; 64
    286e:	31 e0       	ldi	r19, 0x01	; 1
    2870:	40 e0       	ldi	r20, 0x00	; 0
    2872:	50 e0       	ldi	r21, 0x00	; 0
    2874:	6f ee       	ldi	r22, 0xEF	; 239
    2876:	70 e0       	ldi	r23, 0x00	; 0
    2878:	19 95       	eicall
	lcd->drawFastHLine(0, 119, 480, WHITE);
    287a:	88 81       	ld	r24, Y
    287c:	99 81       	ldd	r25, Y+1	; 0x01
    287e:	dc 01       	movw	r26, r24
    2880:	ed 91       	ld	r30, X+
    2882:	fc 91       	ld	r31, X
    2884:	06 80       	ldd	r0, Z+6	; 0x06
    2886:	f7 81       	ldd	r31, Z+7	; 0x07
    2888:	e0 2d       	mov	r30, r0
    288a:	20 ee       	ldi	r18, 0xE0	; 224
    288c:	31 e0       	ldi	r19, 0x01	; 1
    288e:	47 e7       	ldi	r20, 0x77	; 119
    2890:	50 e0       	ldi	r21, 0x00	; 0
    2892:	60 e0       	ldi	r22, 0x00	; 0
    2894:	70 e0       	ldi	r23, 0x00	; 0
    2896:	19 95       	eicall
	lcd->drawFastHLine(0, 239, 480, WHITE);
    2898:	88 81       	ld	r24, Y
    289a:	99 81       	ldd	r25, Y+1	; 0x01
    289c:	dc 01       	movw	r26, r24
    289e:	ed 91       	ld	r30, X+
    28a0:	fc 91       	ld	r31, X
    28a2:	06 80       	ldd	r0, Z+6	; 0x06
    28a4:	f7 81       	ldd	r31, Z+7	; 0x07
    28a6:	e0 2d       	mov	r30, r0
    28a8:	20 ee       	ldi	r18, 0xE0	; 224
    28aa:	31 e0       	ldi	r19, 0x01	; 1
    28ac:	4f ee       	ldi	r20, 0xEF	; 239
    28ae:	50 e0       	ldi	r21, 0x00	; 0
    28b0:	60 e0       	ldi	r22, 0x00	; 0
    28b2:	70 e0       	ldi	r23, 0x00	; 0
    28b4:	19 95       	eicall
	lcd->setTextColor(WHITE, BLACK);
    28b6:	40 e0       	ldi	r20, 0x00	; 0
    28b8:	50 e0       	ldi	r21, 0x00	; 0
    28ba:	6f ef       	ldi	r22, 0xFF	; 255
    28bc:	7f ef       	ldi	r23, 0xFF	; 255
    28be:	88 81       	ld	r24, Y
    28c0:	99 81       	ldd	r25, Y+1	; 0x01
    28c2:	0e 94 02 07 	call	0xe04	; 0xe04 <_ZN12Adafruit_GFX12setTextColorEjj>
	lcd->setTextSize(2);
    28c6:	62 e0       	ldi	r22, 0x02	; 2
    28c8:	88 81       	ld	r24, Y
    28ca:	99 81       	ldd	r25, Y+1	; 0x01
    28cc:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZN12Adafruit_GFX11setTextSizeEh>
	lcd->setCursor(200,50);
    28d0:	42 e3       	ldi	r20, 0x32	; 50
    28d2:	50 e0       	ldi	r21, 0x00	; 0
    28d4:	68 ec       	ldi	r22, 0xC8	; 200
    28d6:	70 e0       	ldi	r23, 0x00	; 0
    28d8:	88 81       	ld	r24, Y
    28da:	99 81       	ldd	r25, Y+1	; 0x01
    28dc:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("MPH");
    28e0:	61 ee       	ldi	r22, 0xE1	; 225
    28e2:	70 e2       	ldi	r23, 0x20	; 32
    28e4:	88 81       	ld	r24, Y
    28e6:	99 81       	ldd	r25, Y+1	; 0x01
    28e8:	88 df       	rcall	.-240    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(200,180);
    28ea:	44 eb       	ldi	r20, 0xB4	; 180
    28ec:	50 e0       	ldi	r21, 0x00	; 0
    28ee:	68 ec       	ldi	r22, 0xC8	; 200
    28f0:	70 e0       	ldi	r23, 0x00	; 0
    28f2:	88 81       	ld	r24, Y
    28f4:	99 81       	ldd	r25, Y+1	; 0x01
    28f6:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("RPM");
    28fa:	65 ee       	ldi	r22, 0xE5	; 229
    28fc:	70 e2       	ldi	r23, 0x20	; 32
    28fe:	88 81       	ld	r24, Y
    2900:	99 81       	ldd	r25, Y+1	; 0x01
    2902:	7b df       	rcall	.-266    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(10,300);
    2904:	4c e2       	ldi	r20, 0x2C	; 44
    2906:	51 e0       	ldi	r21, 0x01	; 1
    2908:	6a e0       	ldi	r22, 0x0A	; 10
    290a:	70 e0       	ldi	r23, 0x00	; 0
    290c:	88 81       	ld	r24, Y
    290e:	99 81       	ldd	r25, Y+1	; 0x01
    2910:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("Lat:");
    2914:	69 ee       	ldi	r22, 0xE9	; 233
    2916:	70 e2       	ldi	r23, 0x20	; 32
    2918:	88 81       	ld	r24, Y
    291a:	99 81       	ldd	r25, Y+1	; 0x01
    291c:	6e df       	rcall	.-292    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(249, 300);
    291e:	4c e2       	ldi	r20, 0x2C	; 44
    2920:	51 e0       	ldi	r21, 0x01	; 1
    2922:	69 ef       	ldi	r22, 0xF9	; 249
    2924:	70 e0       	ldi	r23, 0x00	; 0
    2926:	88 81       	ld	r24, Y
    2928:	99 81       	ldd	r25, Y+1	; 0x01
    292a:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("Lon:");
    292e:	6e ee       	ldi	r22, 0xEE	; 238
    2930:	70 e2       	ldi	r23, 0x20	; 32
    2932:	88 81       	ld	r24, Y
    2934:	99 81       	ldd	r25, Y+1	; 0x01
    2936:	61 df       	rcall	.-318    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(429,75);
    2938:	4b e4       	ldi	r20, 0x4B	; 75
    293a:	50 e0       	ldi	r21, 0x00	; 0
    293c:	6d ea       	ldi	r22, 0xAD	; 173
    293e:	71 e0       	ldi	r23, 0x01	; 1
    2940:	88 81       	ld	r24, Y
    2942:	99 81       	ldd	r25, Y+1	; 0x01
    2944:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("Eng\nLoad");
    2948:	63 ef       	ldi	r22, 0xF3	; 243
    294a:	70 e2       	ldi	r23, 0x20	; 32
    294c:	88 81       	ld	r24, Y
    294e:	99 81       	ldd	r25, Y+1	; 0x01
    2950:	54 df       	rcall	.-344    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(429,195);
    2952:	43 ec       	ldi	r20, 0xC3	; 195
    2954:	50 e0       	ldi	r21, 0x00	; 0
    2956:	6d ea       	ldi	r22, 0xAD	; 173
    2958:	71 e0       	ldi	r23, 0x01	; 1
    295a:	88 81       	ld	r24, Y
    295c:	99 81       	ldd	r25, Y+1	; 0x01
    295e:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("Pdl\nPos");
    2962:	6c ef       	ldi	r22, 0xFC	; 252
    2964:	70 e2       	ldi	r23, 0x20	; 32
    2966:	88 81       	ld	r24, Y
    2968:	99 81       	ldd	r25, Y+1	; 0x01
    296a:	47 df       	rcall	.-370    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>

	lcd->setTextSize(9);
    296c:	69 e0       	ldi	r22, 0x09	; 9
    296e:	88 81       	ld	r24, Y
    2970:	99 81       	ldd	r25, Y+1	; 0x01
    2972:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZN12Adafruit_GFX11setTextSizeEh>
	lcd->setCursor(30, 30);
    2976:	4e e1       	ldi	r20, 0x1E	; 30
    2978:	50 e0       	ldi	r21, 0x00	; 0
    297a:	6e e1       	ldi	r22, 0x1E	; 30
    297c:	70 e0       	ldi	r23, 0x00	; 0
    297e:	88 81       	ld	r24, Y
    2980:	99 81       	ldd	r25, Y+1	; 0x01
    2982:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("000");
    2986:	69 e0       	ldi	r22, 0x09	; 9
    2988:	71 e2       	ldi	r23, 0x21	; 33
    298a:	88 81       	ld	r24, Y
    298c:	99 81       	ldd	r25, Y+1	; 0x01
    298e:	35 df       	rcall	.-406    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(259,30);
    2990:	4e e1       	ldi	r20, 0x1E	; 30
    2992:	50 e0       	ldi	r21, 0x00	; 0
    2994:	63 e0       	ldi	r22, 0x03	; 3
    2996:	71 e0       	ldi	r23, 0x01	; 1
    2998:	88 81       	ld	r24, Y
    299a:	99 81       	ldd	r25, Y+1	; 0x01
    299c:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("100");
    29a0:	64 e0       	ldi	r22, 0x04	; 4
    29a2:	71 e2       	ldi	r23, 0x21	; 33
    29a4:	88 81       	ld	r24, Y
    29a6:	99 81       	ldd	r25, Y+1	; 0x01
    29a8:	28 df       	rcall	.-432    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(259,149);
    29aa:	45 e9       	ldi	r20, 0x95	; 149
    29ac:	50 e0       	ldi	r21, 0x00	; 0
    29ae:	63 e0       	ldi	r22, 0x03	; 3
    29b0:	71 e0       	ldi	r23, 0x01	; 1
    29b2:	88 81       	ld	r24, Y
    29b4:	99 81       	ldd	r25, Y+1	; 0x01
    29b6:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("100");
    29ba:	64 e0       	ldi	r22, 0x04	; 4
    29bc:	71 e2       	ldi	r23, 0x21	; 33
    29be:	88 81       	ld	r24, Y
    29c0:	99 81       	ldd	r25, Y+1	; 0x01
    29c2:	1b df       	rcall	.-458    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>


	lcd->setTextSize(8);
    29c4:	68 e0       	ldi	r22, 0x08	; 8
    29c6:	88 81       	ld	r24, Y
    29c8:	99 81       	ldd	r25, Y+1	; 0x01
    29ca:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZN12Adafruit_GFX11setTextSizeEh>
	lcd->setCursor(5,149);
    29ce:	45 e9       	ldi	r20, 0x95	; 149
    29d0:	50 e0       	ldi	r21, 0x00	; 0
    29d2:	65 e0       	ldi	r22, 0x05	; 5
    29d4:	70 e0       	ldi	r23, 0x00	; 0
    29d6:	88 81       	ld	r24, Y
    29d8:	99 81       	ldd	r25, Y+1	; 0x01
    29da:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("0000");
    29de:	68 e0       	ldi	r22, 0x08	; 8
    29e0:	71 e2       	ldi	r23, 0x21	; 33
    29e2:	88 81       	ld	r24, Y
    29e4:	99 81       	ldd	r25, Y+1	; 0x01
    29e6:	09 df       	rcall	.-494    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(429,10);
    29e8:	4a e0       	ldi	r20, 0x0A	; 10
    29ea:	50 e0       	ldi	r21, 0x00	; 0
    29ec:	6d ea       	ldi	r22, 0xAD	; 173
    29ee:	71 e0       	ldi	r23, 0x01	; 1
    29f0:	88 81       	ld	r24, Y
    29f2:	99 81       	ldd	r25, Y+1	; 0x01
    29f4:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->write('%');
    29f8:	88 81       	ld	r24, Y
    29fa:	99 81       	ldd	r25, Y+1	; 0x01
    29fc:	dc 01       	movw	r26, r24
    29fe:	ed 91       	ld	r30, X+
    2a00:	fc 91       	ld	r31, X
    2a02:	00 88       	ldd	r0, Z+16	; 0x10
    2a04:	f1 89       	ldd	r31, Z+17	; 0x11
    2a06:	e0 2d       	mov	r30, r0
    2a08:	65 e2       	ldi	r22, 0x25	; 37
    2a0a:	19 95       	eicall
	lcd->setCursor(429,129);
    2a0c:	41 e8       	ldi	r20, 0x81	; 129
    2a0e:	50 e0       	ldi	r21, 0x00	; 0
    2a10:	6d ea       	ldi	r22, 0xAD	; 173
    2a12:	71 e0       	ldi	r23, 0x01	; 1
    2a14:	88 81       	ld	r24, Y
    2a16:	99 81       	ldd	r25, Y+1	; 0x01
    2a18:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->write('%');
    2a1c:	88 81       	ld	r24, Y
    2a1e:	99 81       	ldd	r25, Y+1	; 0x01
    2a20:	dc 01       	movw	r26, r24
    2a22:	ed 91       	ld	r30, X+
    2a24:	fc 91       	ld	r31, X
    2a26:	00 88       	ldd	r0, Z+16	; 0x10
    2a28:	f1 89       	ldd	r31, Z+17	; 0x11
    2a2a:	e0 2d       	mov	r30, r0
    2a2c:	65 e2       	ldi	r22, 0x25	; 37
    2a2e:	19 95       	eicall
 }
    2a30:	df 91       	pop	r29
    2a32:	cf 91       	pop	r28
    2a34:	1f 91       	pop	r17
    2a36:	0f 91       	pop	r16
    2a38:	08 95       	ret

00002a3a <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD>:
 void MainScreen::draw(OBDCMDS::CMD cmd, BTOBD * bt){
    2a3a:	bf 92       	push	r11
    2a3c:	cf 92       	push	r12
    2a3e:	df 92       	push	r13
    2a40:	ef 92       	push	r14
    2a42:	ff 92       	push	r15
    2a44:	0f 93       	push	r16
    2a46:	1f 93       	push	r17
    2a48:	cf 93       	push	r28
    2a4a:	df 93       	push	r29
    2a4c:	cd b7       	in	r28, 0x3d	; 61
    2a4e:	de b7       	in	r29, 0x3e	; 62
    2a50:	25 97       	sbiw	r28, 0x05	; 5
    2a52:	cd bf       	out	0x3d, r28	; 61
    2a54:	de bf       	out	0x3e, r29	; 62
    2a56:	8c 01       	movw	r16, r24
    2a58:	f6 2e       	mov	r15, r22
    2a5a:	ca 01       	movw	r24, r20
 	CBUFFER resp = bt->getRecent(cmd);
    2a5c:	4d d8       	rcall	.-3942   	; 0x1af8 <_ZN5BTOBD9getRecentEN7OBDCMDS3CMDE>
    2a5e:	e6 2e       	mov	r14, r22
    2a60:	d7 2e       	mov	r13, r23
    2a62:	c8 2e       	mov	r12, r24
    2a64:	b9 2e       	mov	r11, r25
	uint16_t val;
	char wbuf[5];
	switch(cmd) {
    2a66:	81 e0       	ldi	r24, 0x01	; 1
    2a68:	f8 16       	cp	r15, r24
    2a6a:	09 f4       	brne	.+2      	; 0x2a6e <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x34>
    2a6c:	4b c0       	rjmp	.+150    	; 0x2b04 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0xca>
    2a6e:	f8 16       	cp	r15, r24
    2a70:	48 f0       	brcs	.+18     	; 0x2a84 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x4a>
    2a72:	a2 e0       	ldi	r26, 0x02	; 2
    2a74:	fa 16       	cp	r15, r26
    2a76:	09 f4       	brne	.+2      	; 0x2a7a <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x40>
    2a78:	de c0       	rjmp	.+444    	; 0x2c36 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x1fc>
    2a7a:	b6 e0       	ldi	r27, 0x06	; 6
    2a7c:	fb 16       	cp	r15, r27
    2a7e:	09 f4       	brne	.+2      	; 0x2a82 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x48>
    2a80:	9a c0       	rjmp	.+308    	; 0x2bb6 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x17c>
    2a82:	18 c1       	rjmp	.+560    	; 0x2cb4 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x27a>
	case OBDCMDS::SPEED:
		lcd->setCursor(30,30);
    2a84:	4e e1       	ldi	r20, 0x1E	; 30
    2a86:	50 e0       	ldi	r21, 0x00	; 0
    2a88:	6e e1       	ldi	r22, 0x1E	; 30
    2a8a:	70 e0       	ldi	r23, 0x00	; 0
    2a8c:	f8 01       	movw	r30, r16
    2a8e:	80 81       	ld	r24, Z
    2a90:	91 81       	ldd	r25, Z+1	; 0x01
    2a92:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(9);
    2a96:	69 e0       	ldi	r22, 0x09	; 9
    2a98:	d8 01       	movw	r26, r16
    2a9a:	8d 91       	ld	r24, X+
    2a9c:	9c 91       	ld	r25, X
    2a9e:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZN12Adafruit_GFX11setTextSizeEh>
		val = OBDConversion::speed(resp.au, resp.al);
    2aa2:	6d 2d       	mov	r22, r13
    2aa4:	8e 2d       	mov	r24, r14
    2aa6:	3c d2       	rcall	.+1144   	; 0x2f20 <_ZN13OBDConversion5speedEcc>
    2aa8:	d8 2e       	mov	r13, r24
    2aaa:	e8 2e       	mov	r14, r24
    2aac:	f1 2c       	mov	r15, r1
		if (val < 100) lcd->write(' ');
    2aae:	b4 e6       	ldi	r27, 0x64	; 100
    2ab0:	eb 16       	cp	r14, r27
    2ab2:	f1 04       	cpc	r15, r1
    2ab4:	58 f4       	brcc	.+22     	; 0x2acc <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x92>
    2ab6:	f8 01       	movw	r30, r16
    2ab8:	80 81       	ld	r24, Z
    2aba:	91 81       	ldd	r25, Z+1	; 0x01
    2abc:	dc 01       	movw	r26, r24
    2abe:	ed 91       	ld	r30, X+
    2ac0:	fc 91       	ld	r31, X
    2ac2:	00 88       	ldd	r0, Z+16	; 0x10
    2ac4:	f1 89       	ldd	r31, Z+17	; 0x11
    2ac6:	e0 2d       	mov	r30, r0
    2ac8:	60 e2       	ldi	r22, 0x20	; 32
    2aca:	19 95       	eicall
		if (val < 10) lcd->write(' ');
    2acc:	ba e0       	ldi	r27, 0x0A	; 10
    2ace:	eb 16       	cp	r14, r27
    2ad0:	f1 04       	cpc	r15, r1
    2ad2:	58 f4       	brcc	.+22     	; 0x2aea <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0xb0>
    2ad4:	f8 01       	movw	r30, r16
    2ad6:	80 81       	ld	r24, Z
    2ad8:	91 81       	ldd	r25, Z+1	; 0x01
    2ada:	dc 01       	movw	r26, r24
    2adc:	ed 91       	ld	r30, X+
    2ade:	fc 91       	ld	r31, X
    2ae0:	00 88       	ldd	r0, Z+16	; 0x10
    2ae2:	f1 89       	ldd	r31, Z+17	; 0x11
    2ae4:	e0 2d       	mov	r30, r0
    2ae6:	60 e2       	ldi	r22, 0x20	; 32
    2ae8:	19 95       	eicall
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    2aea:	4a e0       	ldi	r20, 0x0A	; 10
    2aec:	be 01       	movw	r22, r28
    2aee:	6f 5f       	subi	r22, 0xFF	; 255
    2af0:	7f 4f       	sbci	r23, 0xFF	; 255
    2af2:	8d 2d       	mov	r24, r13
    2af4:	90 e0       	ldi	r25, 0x00	; 0
    2af6:	f8 d7       	rcall	.+4080   	; 0x3ae8 <__itoa_ncheck>
		lcd->writeStr(itoa(val, wbuf, 10));
    2af8:	bc 01       	movw	r22, r24
    2afa:	f8 01       	movw	r30, r16
    2afc:	80 81       	ld	r24, Z
    2afe:	91 81       	ldd	r25, Z+1	; 0x01
    2b00:	7c de       	rcall	.-776    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
		break;
    2b02:	d8 c0       	rjmp	.+432    	; 0x2cb4 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x27a>
	case OBDCMDS::RPM:
		lcd->setCursor(5,149);
    2b04:	45 e9       	ldi	r20, 0x95	; 149
    2b06:	50 e0       	ldi	r21, 0x00	; 0
    2b08:	65 e0       	ldi	r22, 0x05	; 5
    2b0a:	70 e0       	ldi	r23, 0x00	; 0
    2b0c:	d8 01       	movw	r26, r16
    2b0e:	8d 91       	ld	r24, X+
    2b10:	9c 91       	ld	r25, X
    2b12:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(8);
    2b16:	68 e0       	ldi	r22, 0x08	; 8
    2b18:	f8 01       	movw	r30, r16
    2b1a:	80 81       	ld	r24, Z
    2b1c:	91 81       	ldd	r25, Z+1	; 0x01
    2b1e:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZN12Adafruit_GFX11setTextSizeEh>
		val = OBDConversion::rpm(resp.au, resp.al, resp.bu, resp.bl);
    2b22:	2b 2d       	mov	r18, r11
    2b24:	4c 2d       	mov	r20, r12
    2b26:	6d 2d       	mov	r22, r13
    2b28:	8e 2d       	mov	r24, r14
    2b2a:	20 d2       	rcall	.+1088   	; 0x2f6c <_ZN13OBDConversion3rpmEcccc>
    2b2c:	7c 01       	movw	r14, r24
    2b2e:	80 31       	cpi	r24, 0x10	; 16
    2b30:	f7 e2       	ldi	r31, 0x27	; 39
    2b32:	9f 07       	cpc	r25, r31
    2b34:	30 f0       	brcs	.+12     	; 0x2b42 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x108>
    2b36:	0f 2e       	mov	r0, r31
    2b38:	ff e0       	ldi	r31, 0x0F	; 15
    2b3a:	ef 2e       	mov	r14, r31
    2b3c:	f7 e2       	ldi	r31, 0x27	; 39
    2b3e:	ff 2e       	mov	r15, r31
    2b40:	f0 2d       	mov	r31, r0
		if (val >= 10000) val = 9999;
		if (val < 1000) lcd->write(' ');
    2b42:	88 ee       	ldi	r24, 0xE8	; 232
    2b44:	e8 16       	cp	r14, r24
    2b46:	83 e0       	ldi	r24, 0x03	; 3
    2b48:	f8 06       	cpc	r15, r24
    2b4a:	58 f4       	brcc	.+22     	; 0x2b62 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x128>
    2b4c:	d8 01       	movw	r26, r16
    2b4e:	8d 91       	ld	r24, X+
    2b50:	9c 91       	ld	r25, X
    2b52:	dc 01       	movw	r26, r24
    2b54:	ed 91       	ld	r30, X+
    2b56:	fc 91       	ld	r31, X
    2b58:	00 88       	ldd	r0, Z+16	; 0x10
    2b5a:	f1 89       	ldd	r31, Z+17	; 0x11
    2b5c:	e0 2d       	mov	r30, r0
    2b5e:	60 e2       	ldi	r22, 0x20	; 32
    2b60:	19 95       	eicall
		if (val < 100) lcd->write(' ');
    2b62:	b4 e6       	ldi	r27, 0x64	; 100
    2b64:	eb 16       	cp	r14, r27
    2b66:	f1 04       	cpc	r15, r1
    2b68:	58 f4       	brcc	.+22     	; 0x2b80 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x146>
    2b6a:	f8 01       	movw	r30, r16
    2b6c:	80 81       	ld	r24, Z
    2b6e:	91 81       	ldd	r25, Z+1	; 0x01
    2b70:	dc 01       	movw	r26, r24
    2b72:	ed 91       	ld	r30, X+
    2b74:	fc 91       	ld	r31, X
    2b76:	00 88       	ldd	r0, Z+16	; 0x10
    2b78:	f1 89       	ldd	r31, Z+17	; 0x11
    2b7a:	e0 2d       	mov	r30, r0
    2b7c:	60 e2       	ldi	r22, 0x20	; 32
    2b7e:	19 95       	eicall
		if (val < 10) lcd->write(' ');
    2b80:	ba e0       	ldi	r27, 0x0A	; 10
    2b82:	eb 16       	cp	r14, r27
    2b84:	f1 04       	cpc	r15, r1
    2b86:	58 f4       	brcc	.+22     	; 0x2b9e <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x164>
    2b88:	f8 01       	movw	r30, r16
    2b8a:	80 81       	ld	r24, Z
    2b8c:	91 81       	ldd	r25, Z+1	; 0x01
    2b8e:	dc 01       	movw	r26, r24
    2b90:	ed 91       	ld	r30, X+
    2b92:	fc 91       	ld	r31, X
    2b94:	00 88       	ldd	r0, Z+16	; 0x10
    2b96:	f1 89       	ldd	r31, Z+17	; 0x11
    2b98:	e0 2d       	mov	r30, r0
    2b9a:	60 e2       	ldi	r22, 0x20	; 32
    2b9c:	19 95       	eicall
    2b9e:	4a e0       	ldi	r20, 0x0A	; 10
    2ba0:	be 01       	movw	r22, r28
    2ba2:	6f 5f       	subi	r22, 0xFF	; 255
    2ba4:	7f 4f       	sbci	r23, 0xFF	; 255
    2ba6:	c7 01       	movw	r24, r14
    2ba8:	9f d7       	rcall	.+3902   	; 0x3ae8 <__itoa_ncheck>
		lcd->writeStr(itoa(val, wbuf, 10));
    2baa:	bc 01       	movw	r22, r24
    2bac:	f8 01       	movw	r30, r16
    2bae:	80 81       	ld	r24, Z
    2bb0:	91 81       	ldd	r25, Z+1	; 0x01
    2bb2:	23 de       	rcall	.-954    	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
		break;
    2bb4:	7f c0       	rjmp	.+254    	; 0x2cb4 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x27a>
	case OBDCMDS::ENGINE_LOAD:
		lcd->setCursor(259,30);
    2bb6:	4e e1       	ldi	r20, 0x1E	; 30
    2bb8:	50 e0       	ldi	r21, 0x00	; 0
    2bba:	63 e0       	ldi	r22, 0x03	; 3
    2bbc:	71 e0       	ldi	r23, 0x01	; 1
    2bbe:	d8 01       	movw	r26, r16
    2bc0:	8d 91       	ld	r24, X+
    2bc2:	9c 91       	ld	r25, X
    2bc4:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(9);
    2bc8:	69 e0       	ldi	r22, 0x09	; 9
    2bca:	f8 01       	movw	r30, r16
    2bcc:	80 81       	ld	r24, Z
    2bce:	91 81       	ldd	r25, Z+1	; 0x01
    2bd0:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZN12Adafruit_GFX11setTextSizeEh>
		val = OBDConversion::engine_load(resp.au, resp.al);
    2bd4:	6d 2d       	mov	r22, r13
    2bd6:	8e 2d       	mov	r24, r14
    2bd8:	f7 d1       	rcall	.+1006   	; 0x2fc8 <_ZN13OBDConversion11engine_loadEcc>
    2bda:	d8 2e       	mov	r13, r24
    2bdc:	e8 2e       	mov	r14, r24
    2bde:	f1 2c       	mov	r15, r1
		
		if (val < 100) lcd->write(' ');
    2be0:	f4 e6       	ldi	r31, 0x64	; 100
    2be2:	ef 16       	cp	r14, r31
    2be4:	f1 04       	cpc	r15, r1
    2be6:	58 f4       	brcc	.+22     	; 0x2bfe <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x1c4>
    2be8:	d8 01       	movw	r26, r16
    2bea:	8d 91       	ld	r24, X+
    2bec:	9c 91       	ld	r25, X
    2bee:	dc 01       	movw	r26, r24
    2bf0:	ed 91       	ld	r30, X+
    2bf2:	fc 91       	ld	r31, X
    2bf4:	00 88       	ldd	r0, Z+16	; 0x10
    2bf6:	f1 89       	ldd	r31, Z+17	; 0x11
    2bf8:	e0 2d       	mov	r30, r0
    2bfa:	60 e2       	ldi	r22, 0x20	; 32
    2bfc:	19 95       	eicall
		if (val < 10) lcd->write(' ');
    2bfe:	ba e0       	ldi	r27, 0x0A	; 10
    2c00:	eb 16       	cp	r14, r27
    2c02:	f1 04       	cpc	r15, r1
    2c04:	58 f4       	brcc	.+22     	; 0x2c1c <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x1e2>
    2c06:	f8 01       	movw	r30, r16
    2c08:	80 81       	ld	r24, Z
    2c0a:	91 81       	ldd	r25, Z+1	; 0x01
    2c0c:	dc 01       	movw	r26, r24
    2c0e:	ed 91       	ld	r30, X+
    2c10:	fc 91       	ld	r31, X
    2c12:	00 88       	ldd	r0, Z+16	; 0x10
    2c14:	f1 89       	ldd	r31, Z+17	; 0x11
    2c16:	e0 2d       	mov	r30, r0
    2c18:	60 e2       	ldi	r22, 0x20	; 32
    2c1a:	19 95       	eicall
    2c1c:	4a e0       	ldi	r20, 0x0A	; 10
    2c1e:	be 01       	movw	r22, r28
    2c20:	6f 5f       	subi	r22, 0xFF	; 255
    2c22:	7f 4f       	sbci	r23, 0xFF	; 255
    2c24:	8d 2d       	mov	r24, r13
    2c26:	90 e0       	ldi	r25, 0x00	; 0
    2c28:	5f d7       	rcall	.+3774   	; 0x3ae8 <__itoa_ncheck>
		lcd->writeStr(itoa(val, wbuf, 10));
    2c2a:	bc 01       	movw	r22, r24
    2c2c:	f8 01       	movw	r30, r16
    2c2e:	80 81       	ld	r24, Z
    2c30:	91 81       	ldd	r25, Z+1	; 0x01
    2c32:	e3 dd       	rcall	.-1082   	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
		break;
    2c34:	3f c0       	rjmp	.+126    	; 0x2cb4 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x27a>
	case OBDCMDS::THROTTLE_POS:
		lcd->setCursor(259, 149);
    2c36:	45 e9       	ldi	r20, 0x95	; 149
    2c38:	50 e0       	ldi	r21, 0x00	; 0
    2c3a:	63 e0       	ldi	r22, 0x03	; 3
    2c3c:	71 e0       	ldi	r23, 0x01	; 1
    2c3e:	d8 01       	movw	r26, r16
    2c40:	8d 91       	ld	r24, X+
    2c42:	9c 91       	ld	r25, X
    2c44:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(9);
    2c48:	69 e0       	ldi	r22, 0x09	; 9
    2c4a:	f8 01       	movw	r30, r16
    2c4c:	80 81       	ld	r24, Z
    2c4e:	91 81       	ldd	r25, Z+1	; 0x01
    2c50:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZN12Adafruit_GFX11setTextSizeEh>
		val = OBDConversion::throttle_pos(resp.au, resp.al);
    2c54:	6d 2d       	mov	r22, r13
    2c56:	8e 2d       	mov	r24, r14
    2c58:	b9 d1       	rcall	.+882    	; 0x2fcc <_ZN13OBDConversion12throttle_posEcc>
    2c5a:	d8 2e       	mov	r13, r24
    2c5c:	e8 2e       	mov	r14, r24
    2c5e:	f1 2c       	mov	r15, r1
		if (val < 100) lcd->write(' ');
    2c60:	f4 e6       	ldi	r31, 0x64	; 100
    2c62:	ef 16       	cp	r14, r31
    2c64:	f1 04       	cpc	r15, r1
    2c66:	58 f4       	brcc	.+22     	; 0x2c7e <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x244>
    2c68:	d8 01       	movw	r26, r16
    2c6a:	8d 91       	ld	r24, X+
    2c6c:	9c 91       	ld	r25, X
    2c6e:	dc 01       	movw	r26, r24
    2c70:	ed 91       	ld	r30, X+
    2c72:	fc 91       	ld	r31, X
    2c74:	00 88       	ldd	r0, Z+16	; 0x10
    2c76:	f1 89       	ldd	r31, Z+17	; 0x11
    2c78:	e0 2d       	mov	r30, r0
    2c7a:	60 e2       	ldi	r22, 0x20	; 32
    2c7c:	19 95       	eicall
		if (val < 10) lcd->write(' ');
    2c7e:	ba e0       	ldi	r27, 0x0A	; 10
    2c80:	eb 16       	cp	r14, r27
    2c82:	f1 04       	cpc	r15, r1
    2c84:	58 f4       	brcc	.+22     	; 0x2c9c <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x262>
    2c86:	f8 01       	movw	r30, r16
    2c88:	80 81       	ld	r24, Z
    2c8a:	91 81       	ldd	r25, Z+1	; 0x01
    2c8c:	dc 01       	movw	r26, r24
    2c8e:	ed 91       	ld	r30, X+
    2c90:	fc 91       	ld	r31, X
    2c92:	00 88       	ldd	r0, Z+16	; 0x10
    2c94:	f1 89       	ldd	r31, Z+17	; 0x11
    2c96:	e0 2d       	mov	r30, r0
    2c98:	60 e2       	ldi	r22, 0x20	; 32
    2c9a:	19 95       	eicall
    2c9c:	4a e0       	ldi	r20, 0x0A	; 10
    2c9e:	be 01       	movw	r22, r28
    2ca0:	6f 5f       	subi	r22, 0xFF	; 255
    2ca2:	7f 4f       	sbci	r23, 0xFF	; 255
    2ca4:	8d 2d       	mov	r24, r13
    2ca6:	90 e0       	ldi	r25, 0x00	; 0
    2ca8:	1f d7       	rcall	.+3646   	; 0x3ae8 <__itoa_ncheck>
		lcd->writeStr(itoa(val, wbuf, 10));
    2caa:	bc 01       	movw	r22, r24
    2cac:	f8 01       	movw	r30, r16
    2cae:	80 81       	ld	r24, Z
    2cb0:	91 81       	ldd	r25, Z+1	; 0x01
    2cb2:	a3 dd       	rcall	.-1210   	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
		break;
	}
	

 }
    2cb4:	25 96       	adiw	r28, 0x05	; 5
    2cb6:	cd bf       	out	0x3d, r28	; 61
    2cb8:	de bf       	out	0x3e, r29	; 62
    2cba:	df 91       	pop	r29
    2cbc:	cf 91       	pop	r28
    2cbe:	1f 91       	pop	r17
    2cc0:	0f 91       	pop	r16
    2cc2:	ff 90       	pop	r15
    2cc4:	ef 90       	pop	r14
    2cc6:	df 90       	pop	r13
    2cc8:	cf 90       	pop	r12
    2cca:	bf 90       	pop	r11
    2ccc:	08 95       	ret

00002cce <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS>:
 void MainScreen::drawGPS(GPSVAL::VAL value, GPS * gps) {
    2cce:	df 92       	push	r13
    2cd0:	ef 92       	push	r14
    2cd2:	ff 92       	push	r15
    2cd4:	0f 93       	push	r16
    2cd6:	1f 93       	push	r17
    2cd8:	cf 93       	push	r28
    2cda:	df 93       	push	r29
    2cdc:	cd b7       	in	r28, 0x3d	; 61
    2cde:	de b7       	in	r29, 0x3e	; 62
    2ce0:	2f 97       	sbiw	r28, 0x0f	; 15
    2ce2:	cd bf       	out	0x3d, r28	; 61
    2ce4:	de bf       	out	0x3e, r29	; 62
    2ce6:	8c 01       	movw	r16, r24
    2ce8:	d6 2e       	mov	r13, r22
    2cea:	7a 01       	movw	r14, r20
	 char wbuf[15];
	 gps->retrieve(value, wbuf);
    2cec:	ae 01       	movw	r20, r28
    2cee:	4f 5f       	subi	r20, 0xFF	; 255
    2cf0:	5f 4f       	sbci	r21, 0xFF	; 255
    2cf2:	c7 01       	movw	r24, r14
    2cf4:	f6 d9       	rcall	.-3092   	; 0x20e2 <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>
	 switch(value) {
    2cf6:	82 e0       	ldi	r24, 0x02	; 2
    2cf8:	d8 16       	cp	r13, r24
    2cfa:	29 f0       	breq	.+10     	; 0x2d06 <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS+0x38>
    2cfc:	a4 e0       	ldi	r26, 0x04	; 4
    2cfe:	da 16       	cp	r13, r26
    2d00:	09 f4       	brne	.+2      	; 0x2d04 <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS+0x36>
    2d02:	5a c0       	rjmp	.+180    	; 0x2db8 <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS+0xea>
    2d04:	bc c0       	rjmp	.+376    	; 0x2e7e <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS+0x1b0>
	 case GPSVAL::LAT:
		lcd->setCursor(60,300);
    2d06:	4c e2       	ldi	r20, 0x2C	; 44
    2d08:	51 e0       	ldi	r21, 0x01	; 1
    2d0a:	6c e3       	ldi	r22, 0x3C	; 60
    2d0c:	70 e0       	ldi	r23, 0x00	; 0
    2d0e:	f8 01       	movw	r30, r16
    2d10:	80 81       	ld	r24, Z
    2d12:	91 81       	ldd	r25, Z+1	; 0x01
    2d14:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(2);
    2d18:	62 e0       	ldi	r22, 0x02	; 2
    2d1a:	d8 01       	movw	r26, r16
    2d1c:	8d 91       	ld	r24, X+
    2d1e:	9c 91       	ld	r25, X
    2d20:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZN12Adafruit_GFX11setTextSizeEh>
		lcd->write(wbuf[0]);
    2d24:	f8 01       	movw	r30, r16
    2d26:	80 81       	ld	r24, Z
    2d28:	91 81       	ldd	r25, Z+1	; 0x01
    2d2a:	dc 01       	movw	r26, r24
    2d2c:	ed 91       	ld	r30, X+
    2d2e:	fc 91       	ld	r31, X
    2d30:	00 88       	ldd	r0, Z+16	; 0x10
    2d32:	f1 89       	ldd	r31, Z+17	; 0x11
    2d34:	e0 2d       	mov	r30, r0
    2d36:	69 81       	ldd	r22, Y+1	; 0x01
    2d38:	19 95       	eicall
		lcd->write(wbuf[1]);
    2d3a:	f8 01       	movw	r30, r16
    2d3c:	80 81       	ld	r24, Z
    2d3e:	91 81       	ldd	r25, Z+1	; 0x01
    2d40:	dc 01       	movw	r26, r24
    2d42:	ed 91       	ld	r30, X+
    2d44:	fc 91       	ld	r31, X
    2d46:	00 88       	ldd	r0, Z+16	; 0x10
    2d48:	f1 89       	ldd	r31, Z+17	; 0x11
    2d4a:	e0 2d       	mov	r30, r0
    2d4c:	6a 81       	ldd	r22, Y+2	; 0x02
    2d4e:	19 95       	eicall
		lcd->write(248);
    2d50:	f8 01       	movw	r30, r16
    2d52:	80 81       	ld	r24, Z
    2d54:	91 81       	ldd	r25, Z+1	; 0x01
    2d56:	dc 01       	movw	r26, r24
    2d58:	ed 91       	ld	r30, X+
    2d5a:	fc 91       	ld	r31, X
    2d5c:	00 88       	ldd	r0, Z+16	; 0x10
    2d5e:	f1 89       	ldd	r31, Z+17	; 0x11
    2d60:	e0 2d       	mov	r30, r0
    2d62:	68 ef       	ldi	r22, 0xF8	; 248
    2d64:	19 95       	eicall
		lcd->write(' ');
    2d66:	f8 01       	movw	r30, r16
    2d68:	80 81       	ld	r24, Z
    2d6a:	91 81       	ldd	r25, Z+1	; 0x01
    2d6c:	dc 01       	movw	r26, r24
    2d6e:	ed 91       	ld	r30, X+
    2d70:	fc 91       	ld	r31, X
    2d72:	00 88       	ldd	r0, Z+16	; 0x10
    2d74:	f1 89       	ldd	r31, Z+17	; 0x11
    2d76:	e0 2d       	mov	r30, r0
    2d78:	60 e2       	ldi	r22, 0x20	; 32
    2d7a:	19 95       	eicall
		lcd->writeStr(wbuf + 2);
    2d7c:	be 01       	movw	r22, r28
    2d7e:	6d 5f       	subi	r22, 0xFD	; 253
    2d80:	7f 4f       	sbci	r23, 0xFF	; 255
    2d82:	f8 01       	movw	r30, r16
    2d84:	80 81       	ld	r24, Z
    2d86:	91 81       	ldd	r25, Z+1	; 0x01
    2d88:	38 dd       	rcall	.-1424   	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
		lcd->write('\'');
    2d8a:	d8 01       	movw	r26, r16
    2d8c:	8d 91       	ld	r24, X+
    2d8e:	9c 91       	ld	r25, X
    2d90:	dc 01       	movw	r26, r24
    2d92:	ed 91       	ld	r30, X+
    2d94:	fc 91       	ld	r31, X
    2d96:	00 88       	ldd	r0, Z+16	; 0x10
    2d98:	f1 89       	ldd	r31, Z+17	; 0x11
    2d9a:	e0 2d       	mov	r30, r0
    2d9c:	67 e2       	ldi	r22, 0x27	; 39
    2d9e:	19 95       	eicall
		lcd->writeStr(gps->retrieve(GPSVAL::NS, wbuf));
    2da0:	ae 01       	movw	r20, r28
    2da2:	4f 5f       	subi	r20, 0xFF	; 255
    2da4:	5f 4f       	sbci	r21, 0xFF	; 255
    2da6:	63 e0       	ldi	r22, 0x03	; 3
    2da8:	c7 01       	movw	r24, r14
    2daa:	9b d9       	rcall	.-3274   	; 0x20e2 <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>
    2dac:	bc 01       	movw	r22, r24
    2dae:	f8 01       	movw	r30, r16
    2db0:	80 81       	ld	r24, Z
    2db2:	91 81       	ldd	r25, Z+1	; 0x01
    2db4:	22 dd       	rcall	.-1468   	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
		break;
    2db6:	63 c0       	rjmp	.+198    	; 0x2e7e <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS+0x1b0>
	 case GPSVAL::LONG:
		lcd->setCursor(305, 300);
    2db8:	4c e2       	ldi	r20, 0x2C	; 44
    2dba:	51 e0       	ldi	r21, 0x01	; 1
    2dbc:	61 e3       	ldi	r22, 0x31	; 49
    2dbe:	71 e0       	ldi	r23, 0x01	; 1
    2dc0:	d8 01       	movw	r26, r16
    2dc2:	8d 91       	ld	r24, X+
    2dc4:	9c 91       	ld	r25, X
    2dc6:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(2);
    2dca:	62 e0       	ldi	r22, 0x02	; 2
    2dcc:	f8 01       	movw	r30, r16
    2dce:	80 81       	ld	r24, Z
    2dd0:	91 81       	ldd	r25, Z+1	; 0x01
    2dd2:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZN12Adafruit_GFX11setTextSizeEh>
		lcd->write(wbuf[0]);
    2dd6:	d8 01       	movw	r26, r16
    2dd8:	8d 91       	ld	r24, X+
    2dda:	9c 91       	ld	r25, X
    2ddc:	dc 01       	movw	r26, r24
    2dde:	ed 91       	ld	r30, X+
    2de0:	fc 91       	ld	r31, X
    2de2:	00 88       	ldd	r0, Z+16	; 0x10
    2de4:	f1 89       	ldd	r31, Z+17	; 0x11
    2de6:	e0 2d       	mov	r30, r0
    2de8:	69 81       	ldd	r22, Y+1	; 0x01
    2dea:	19 95       	eicall
		lcd->write(wbuf[1]);
    2dec:	f8 01       	movw	r30, r16
    2dee:	80 81       	ld	r24, Z
    2df0:	91 81       	ldd	r25, Z+1	; 0x01
    2df2:	dc 01       	movw	r26, r24
    2df4:	ed 91       	ld	r30, X+
    2df6:	fc 91       	ld	r31, X
    2df8:	00 88       	ldd	r0, Z+16	; 0x10
    2dfa:	f1 89       	ldd	r31, Z+17	; 0x11
    2dfc:	e0 2d       	mov	r30, r0
    2dfe:	6a 81       	ldd	r22, Y+2	; 0x02
    2e00:	19 95       	eicall
		lcd->write(wbuf[2]);
    2e02:	f8 01       	movw	r30, r16
    2e04:	80 81       	ld	r24, Z
    2e06:	91 81       	ldd	r25, Z+1	; 0x01
    2e08:	dc 01       	movw	r26, r24
    2e0a:	ed 91       	ld	r30, X+
    2e0c:	fc 91       	ld	r31, X
    2e0e:	00 88       	ldd	r0, Z+16	; 0x10
    2e10:	f1 89       	ldd	r31, Z+17	; 0x11
    2e12:	e0 2d       	mov	r30, r0
    2e14:	6b 81       	ldd	r22, Y+3	; 0x03
    2e16:	19 95       	eicall
		lcd->write(248);
    2e18:	f8 01       	movw	r30, r16
    2e1a:	80 81       	ld	r24, Z
    2e1c:	91 81       	ldd	r25, Z+1	; 0x01
    2e1e:	dc 01       	movw	r26, r24
    2e20:	ed 91       	ld	r30, X+
    2e22:	fc 91       	ld	r31, X
    2e24:	00 88       	ldd	r0, Z+16	; 0x10
    2e26:	f1 89       	ldd	r31, Z+17	; 0x11
    2e28:	e0 2d       	mov	r30, r0
    2e2a:	68 ef       	ldi	r22, 0xF8	; 248
    2e2c:	19 95       	eicall
		lcd->write(' ');
    2e2e:	f8 01       	movw	r30, r16
    2e30:	80 81       	ld	r24, Z
    2e32:	91 81       	ldd	r25, Z+1	; 0x01
    2e34:	dc 01       	movw	r26, r24
    2e36:	ed 91       	ld	r30, X+
    2e38:	fc 91       	ld	r31, X
    2e3a:	00 88       	ldd	r0, Z+16	; 0x10
    2e3c:	f1 89       	ldd	r31, Z+17	; 0x11
    2e3e:	e0 2d       	mov	r30, r0
    2e40:	60 e2       	ldi	r22, 0x20	; 32
    2e42:	19 95       	eicall
		lcd->writeStr(wbuf + 3);
    2e44:	be 01       	movw	r22, r28
    2e46:	6c 5f       	subi	r22, 0xFC	; 252
    2e48:	7f 4f       	sbci	r23, 0xFF	; 255
    2e4a:	f8 01       	movw	r30, r16
    2e4c:	80 81       	ld	r24, Z
    2e4e:	91 81       	ldd	r25, Z+1	; 0x01
    2e50:	d4 dc       	rcall	.-1624   	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
		lcd->write('\'');
    2e52:	d8 01       	movw	r26, r16
    2e54:	8d 91       	ld	r24, X+
    2e56:	9c 91       	ld	r25, X
    2e58:	dc 01       	movw	r26, r24
    2e5a:	ed 91       	ld	r30, X+
    2e5c:	fc 91       	ld	r31, X
    2e5e:	00 88       	ldd	r0, Z+16	; 0x10
    2e60:	f1 89       	ldd	r31, Z+17	; 0x11
    2e62:	e0 2d       	mov	r30, r0
    2e64:	67 e2       	ldi	r22, 0x27	; 39
    2e66:	19 95       	eicall
		lcd->writeStr(gps->retrieve(GPSVAL::EW, wbuf));
    2e68:	ae 01       	movw	r20, r28
    2e6a:	4f 5f       	subi	r20, 0xFF	; 255
    2e6c:	5f 4f       	sbci	r21, 0xFF	; 255
    2e6e:	65 e0       	ldi	r22, 0x05	; 5
    2e70:	c7 01       	movw	r24, r14
    2e72:	37 d9       	rcall	.-3474   	; 0x20e2 <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>
    2e74:	bc 01       	movw	r22, r24
    2e76:	f8 01       	movw	r30, r16
    2e78:	80 81       	ld	r24, Z
    2e7a:	91 81       	ldd	r25, Z+1	; 0x01
    2e7c:	be dc       	rcall	.-1668   	; 0x27fa <_ZN10LCD_Driver8writeStrEPc>
		break;
	 }
    2e7e:	2f 96       	adiw	r28, 0x0f	; 15
    2e80:	cd bf       	out	0x3d, r28	; 61
    2e82:	de bf       	out	0x3e, r29	; 62
    2e84:	df 91       	pop	r29
    2e86:	cf 91       	pop	r28
    2e88:	1f 91       	pop	r17
    2e8a:	0f 91       	pop	r16
    2e8c:	ff 90       	pop	r15
    2e8e:	ef 90       	pop	r14
    2e90:	df 90       	pop	r13
    2e92:	08 95       	ret

00002e94 <_ZN10MainScreen6updateEP5BTOBDP3GPS>:

 #include "MainScreen.h"

 MainScreen::MainScreen(LCD_Driver * lcdscreen) : Screen(lcdscreen) {}
 
 void MainScreen::update(BTOBD * bt, GPS * gps) {
    2e94:	bf 92       	push	r11
    2e96:	cf 92       	push	r12
    2e98:	df 92       	push	r13
    2e9a:	ef 92       	push	r14
    2e9c:	ff 92       	push	r15
    2e9e:	0f 93       	push	r16
    2ea0:	1f 93       	push	r17
    2ea2:	cf 93       	push	r28
    2ea4:	df 93       	push	r29
    2ea6:	8c 01       	movw	r16, r24
    2ea8:	6b 01       	movw	r12, r22
    2eaa:	7a 01       	movw	r14, r20
	uint16_t status = bt->getStatus();
    2eac:	cb 01       	movw	r24, r22
    2eae:	0e 94 51 0d 	call	0x1aa2	; 0x1aa2 <_ZN5BTOBD9getStatusEv>
    2eb2:	ec 01       	movw	r28, r24
	bt->clearStatus();
    2eb4:	c6 01       	movw	r24, r12
    2eb6:	0e 94 55 0d 	call	0x1aaa	; 0x1aaa <_ZN5BTOBD11clearStatusEv>
	OBDCMDS::CMD cmd = OBDCMDS::SPEED;
	while (status) {
    2eba:	20 97       	sbiw	r28, 0x00	; 0
    2ebc:	61 f0       	breq	.+24     	; 0x2ed6 <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x42>
 MainScreen::MainScreen(LCD_Driver * lcdscreen) : Screen(lcdscreen) {}
 
 void MainScreen::update(BTOBD * bt, GPS * gps) {
	uint16_t status = bt->getStatus();
	bt->clearStatus();
	OBDCMDS::CMD cmd = OBDCMDS::SPEED;
    2ebe:	b1 2c       	mov	r11, r1
	while (status) {
		if (status & 1) draw(cmd, bt);
    2ec0:	c0 ff       	sbrs	r28, 0
    2ec2:	04 c0       	rjmp	.+8      	; 0x2ecc <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x38>
    2ec4:	a6 01       	movw	r20, r12
    2ec6:	6b 2d       	mov	r22, r11
    2ec8:	c8 01       	movw	r24, r16
    2eca:	b7 dd       	rcall	.-1170   	; 0x2a3a <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD>
		status >>= 1;
    2ecc:	d6 95       	lsr	r29
    2ece:	c7 95       	ror	r28
		cmd = static_cast<OBDCMDS::CMD>(((int)cmd)+ 1);
    2ed0:	b3 94       	inc	r11
 
 void MainScreen::update(BTOBD * bt, GPS * gps) {
	uint16_t status = bt->getStatus();
	bt->clearStatus();
	OBDCMDS::CMD cmd = OBDCMDS::SPEED;
	while (status) {
    2ed2:	20 97       	sbiw	r28, 0x00	; 0
    2ed4:	a9 f7       	brne	.-22     	; 0x2ec0 <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x2c>
		if (status & 1) draw(cmd, bt);
		status >>= 1;
		cmd = static_cast<OBDCMDS::CMD>(((int)cmd)+ 1);
	}
	GPSVAL::VAL value = GPSVAL::FIX_TIME;
	status = gps->getStatus();
    2ed6:	c7 01       	movw	r24, r14
    2ed8:	fc d8       	rcall	.-3592   	; 0x20d2 <_ZN3GPS9getStatusEv>
    2eda:	ec 01       	movw	r28, r24
	gps->clearStatus();
    2edc:	c7 01       	movw	r24, r14
    2ede:	fd d8       	rcall	.-3590   	; 0x20da <_ZN3GPS11clearStatusEv>
	while (status) {
    2ee0:	20 97       	sbiw	r28, 0x00	; 0
    2ee2:	61 f0       	breq	.+24     	; 0x2efc <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x68>
	while (status) {
		if (status & 1) draw(cmd, bt);
		status >>= 1;
		cmd = static_cast<OBDCMDS::CMD>(((int)cmd)+ 1);
	}
	GPSVAL::VAL value = GPSVAL::FIX_TIME;
    2ee4:	d1 2c       	mov	r13, r1
	status = gps->getStatus();
	gps->clearStatus();
	while (status) {
		if (status & 1) drawGPS(value, gps);
    2ee6:	c0 ff       	sbrs	r28, 0
    2ee8:	04 c0       	rjmp	.+8      	; 0x2ef2 <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x5e>
    2eea:	a7 01       	movw	r20, r14
    2eec:	6d 2d       	mov	r22, r13
    2eee:	c8 01       	movw	r24, r16
    2ef0:	ee de       	rcall	.-548    	; 0x2cce <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS>
		status >>= 1;
    2ef2:	d6 95       	lsr	r29
    2ef4:	c7 95       	ror	r28
		value = static_cast<GPSVAL::VAL>(((int)value)+1);
    2ef6:	d3 94       	inc	r13
		cmd = static_cast<OBDCMDS::CMD>(((int)cmd)+ 1);
	}
	GPSVAL::VAL value = GPSVAL::FIX_TIME;
	status = gps->getStatus();
	gps->clearStatus();
	while (status) {
    2ef8:	20 97       	sbiw	r28, 0x00	; 0
    2efa:	a9 f7       	brne	.-22     	; 0x2ee6 <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x52>
		if (status & 1) drawGPS(value, gps);
		status >>= 1;
		value = static_cast<GPSVAL::VAL>(((int)value)+1);
	}

 }
    2efc:	df 91       	pop	r29
    2efe:	cf 91       	pop	r28
    2f00:	1f 91       	pop	r17
    2f02:	0f 91       	pop	r16
    2f04:	ff 90       	pop	r15
    2f06:	ef 90       	pop	r14
    2f08:	df 90       	pop	r13
    2f0a:	cf 90       	pop	r12
    2f0c:	bf 90       	pop	r11
    2f0e:	08 95       	ret

00002f10 <_ZN13OBDConversion3hexEc>:

#include "OBDConversion.h"

uint8_t OBDConversion::hex(char c)
{
    if (c >= 48 && c <= 57) return c - 48;
    2f10:	90 ed       	ldi	r25, 0xD0	; 208
    2f12:	98 0f       	add	r25, r24
    2f14:	9a 30       	cpi	r25, 0x0A	; 10
    2f16:	10 f0       	brcs	.+4      	; 0x2f1c <_ZN13OBDConversion3hexEc+0xc>
	else return c - 55;
    2f18:	87 53       	subi	r24, 0x37	; 55
    2f1a:	08 95       	ret

#include "OBDConversion.h"

uint8_t OBDConversion::hex(char c)
{
    if (c >= 48 && c <= 57) return c - 48;
    2f1c:	89 2f       	mov	r24, r25
	else return c - 55;
}
    2f1e:	08 95       	ret

00002f20 <_ZN13OBDConversion5speedEcc>:

uint8_t OBDConversion::speed(char au, char al)
{
    2f20:	cf 93       	push	r28
    2f22:	df 93       	push	r29
    2f24:	d6 2f       	mov	r29, r22
	uint16_t val = (((uint16_t)(16 * hex(au) + hex(al))) * 62 / 100);
    2f26:	f4 df       	rcall	.-24     	; 0x2f10 <_ZN13OBDConversion3hexEc>
    2f28:	c8 2f       	mov	r28, r24
    2f2a:	8d 2f       	mov	r24, r29
    2f2c:	f1 df       	rcall	.-30     	; 0x2f10 <_ZN13OBDConversion3hexEc>
    2f2e:	28 2f       	mov	r18, r24
    2f30:	30 e0       	ldi	r19, 0x00	; 0
    2f32:	c9 01       	movw	r24, r18
    2f34:	40 e1       	ldi	r20, 0x10	; 16
    2f36:	c4 9f       	mul	r28, r20
    2f38:	80 0d       	add	r24, r0
    2f3a:	91 1d       	adc	r25, r1
    2f3c:	11 24       	eor	r1, r1
    2f3e:	4e e3       	ldi	r20, 0x3E	; 62
    2f40:	48 9f       	mul	r20, r24
    2f42:	90 01       	movw	r18, r0
    2f44:	49 9f       	mul	r20, r25
    2f46:	30 0d       	add	r19, r0
    2f48:	11 24       	eor	r1, r1
    2f4a:	36 95       	lsr	r19
    2f4c:	27 95       	ror	r18
    2f4e:	36 95       	lsr	r19
    2f50:	27 95       	ror	r18
    2f52:	ab e7       	ldi	r26, 0x7B	; 123
    2f54:	b4 e1       	ldi	r27, 0x14	; 20
    2f56:	8e d4       	rcall	.+2332   	; 0x3874 <__umulhisi3>
    2f58:	96 95       	lsr	r25
    2f5a:	87 95       	ror	r24
	return val ? val + 1 : 0;
    2f5c:	00 97       	sbiw	r24, 0x00	; 0
    2f5e:	11 f0       	breq	.+4      	; 0x2f64 <_ZN13OBDConversion5speedEcc+0x44>
    2f60:	8f 5f       	subi	r24, 0xFF	; 255
    2f62:	01 c0       	rjmp	.+2      	; 0x2f66 <_ZN13OBDConversion5speedEcc+0x46>
    2f64:	80 e0       	ldi	r24, 0x00	; 0
}
    2f66:	df 91       	pop	r29
    2f68:	cf 91       	pop	r28
    2f6a:	08 95       	ret

00002f6c <_ZN13OBDConversion3rpmEcccc>:

uint16_t OBDConversion::rpm(char au, char al, char bu, char bl)
{
    2f6c:	0f 93       	push	r16
    2f6e:	1f 93       	push	r17
    2f70:	cf 93       	push	r28
    2f72:	df 93       	push	r29
    2f74:	c8 2f       	mov	r28, r24
    2f76:	d6 2f       	mov	r29, r22
    2f78:	84 2f       	mov	r24, r20
    2f7a:	02 2f       	mov	r16, r18
    return ((uint16_t)((uint16_t)256 * ((uint16_t)(16 * hex(au) + hex(al))) + ((uint16_t)(16 * hex(bu) + hex(bl)))) / (uint16_t)4);
    2f7c:	c9 df       	rcall	.-110    	; 0x2f10 <_ZN13OBDConversion3hexEc>
    2f7e:	18 2f       	mov	r17, r24
    2f80:	8c 2f       	mov	r24, r28
    2f82:	c6 df       	rcall	.-116    	; 0x2f10 <_ZN13OBDConversion3hexEc>
    2f84:	c8 2f       	mov	r28, r24
    2f86:	8d 2f       	mov	r24, r29
    2f88:	c3 df       	rcall	.-122    	; 0x2f10 <_ZN13OBDConversion3hexEc>
    2f8a:	d8 2f       	mov	r29, r24
    2f8c:	80 2f       	mov	r24, r16
    2f8e:	c0 df       	rcall	.-128    	; 0x2f10 <_ZN13OBDConversion3hexEc>
    2f90:	48 2f       	mov	r20, r24
    2f92:	50 e0       	ldi	r21, 0x00	; 0
    2f94:	80 e1       	ldi	r24, 0x10	; 16
    2f96:	18 9f       	mul	r17, r24
    2f98:	40 0d       	add	r20, r0
    2f9a:	51 1d       	adc	r21, r1
    2f9c:	11 24       	eor	r1, r1
    2f9e:	2d 2f       	mov	r18, r29
    2fa0:	30 e0       	ldi	r19, 0x00	; 0
    2fa2:	80 e1       	ldi	r24, 0x10	; 16
    2fa4:	c8 9f       	mul	r28, r24
    2fa6:	20 0d       	add	r18, r0
    2fa8:	31 1d       	adc	r19, r1
    2faa:	11 24       	eor	r1, r1
    2fac:	32 2f       	mov	r19, r18
    2fae:	22 27       	eor	r18, r18
    2fb0:	ca 01       	movw	r24, r20
    2fb2:	82 0f       	add	r24, r18
    2fb4:	93 1f       	adc	r25, r19
}
    2fb6:	96 95       	lsr	r25
    2fb8:	87 95       	ror	r24
    2fba:	96 95       	lsr	r25
    2fbc:	87 95       	ror	r24
    2fbe:	df 91       	pop	r29
    2fc0:	cf 91       	pop	r28
    2fc2:	1f 91       	pop	r17
    2fc4:	0f 91       	pop	r16
    2fc6:	08 95       	ret

00002fc8 <_ZN13OBDConversion11engine_loadEcc>:

uint8_t OBDConversion::engine_load(char au, char al) {
	return 0;
}
    2fc8:	80 e0       	ldi	r24, 0x00	; 0
    2fca:	08 95       	ret

00002fcc <_ZN13OBDConversion12throttle_posEcc>:

uint8_t OBDConversion::throttle_pos(char au, char al) {
	return 0;
    2fcc:	80 e0       	ldi	r24, 0x00	; 0
    2fce:	08 95       	ret

00002fd0 <__vector_88>:
	if (fr == FR_OK) {
		fr = f_lseek(fp, f_size(fp));
		if (fr != FR_OK) f_close(fp);
	}
	return fr;
}
    2fd0:	1f 92       	push	r1
    2fd2:	0f 92       	push	r0
    2fd4:	0f b6       	in	r0, 0x3f	; 63
    2fd6:	0f 92       	push	r0
    2fd8:	11 24       	eor	r1, r1
    2fda:	0b b6       	in	r0, 0x3b	; 59
    2fdc:	0f 92       	push	r0
    2fde:	2f 93       	push	r18
    2fe0:	3f 93       	push	r19
    2fe2:	4f 93       	push	r20
    2fe4:	5f 93       	push	r21
    2fe6:	6f 93       	push	r22
    2fe8:	7f 93       	push	r23
    2fea:	8f 93       	push	r24
    2fec:	9f 93       	push	r25
    2fee:	af 93       	push	r26
    2ff0:	bf 93       	push	r27
    2ff2:	ef 93       	push	r30
    2ff4:	ff 93       	push	r31
    2ff6:	80 91 20 21 	lds	r24, 0x2120
    2ffa:	90 91 21 21 	lds	r25, 0x2121
    2ffe:	0e 94 8a 07 	call	0xf14	; 0xf14 <_ZN5BTOBD13interceptByteEv>
    3002:	ff 91       	pop	r31
    3004:	ef 91       	pop	r30
    3006:	bf 91       	pop	r27
    3008:	af 91       	pop	r26
    300a:	9f 91       	pop	r25
    300c:	8f 91       	pop	r24
    300e:	7f 91       	pop	r23
    3010:	6f 91       	pop	r22
    3012:	5f 91       	pop	r21
    3014:	4f 91       	pop	r20
    3016:	3f 91       	pop	r19
    3018:	2f 91       	pop	r18
    301a:	0f 90       	pop	r0
    301c:	0b be       	out	0x3b, r0	; 59
    301e:	0f 90       	pop	r0
    3020:	0f be       	out	0x3f, r0	; 63
    3022:	0f 90       	pop	r0
    3024:	1f 90       	pop	r1
    3026:	18 95       	reti

00003028 <__vector_91>:
    3028:	1f 92       	push	r1
    302a:	0f 92       	push	r0
    302c:	0f b6       	in	r0, 0x3f	; 63
    302e:	0f 92       	push	r0
    3030:	11 24       	eor	r1, r1
    3032:	0b b6       	in	r0, 0x3b	; 59
    3034:	0f 92       	push	r0
    3036:	2f 93       	push	r18
    3038:	3f 93       	push	r19
    303a:	4f 93       	push	r20
    303c:	5f 93       	push	r21
    303e:	6f 93       	push	r22
    3040:	7f 93       	push	r23
    3042:	8f 93       	push	r24
    3044:	9f 93       	push	r25
    3046:	af 93       	push	r26
    3048:	bf 93       	push	r27
    304a:	ef 93       	push	r30
    304c:	ff 93       	push	r31
    304e:	80 91 1c 21 	lds	r24, 0x211C
    3052:	90 91 1d 21 	lds	r25, 0x211D
    3056:	0e 94 a2 0f 	call	0x1f44	; 0x1f44 <_ZN3GPS13interceptByteEv>
    305a:	ff 91       	pop	r31
    305c:	ef 91       	pop	r30
    305e:	bf 91       	pop	r27
    3060:	af 91       	pop	r26
    3062:	9f 91       	pop	r25
    3064:	8f 91       	pop	r24
    3066:	7f 91       	pop	r23
    3068:	6f 91       	pop	r22
    306a:	5f 91       	pop	r21
    306c:	4f 91       	pop	r20
    306e:	3f 91       	pop	r19
    3070:	2f 91       	pop	r18
    3072:	0f 90       	pop	r0
    3074:	0b be       	out	0x3b, r0	; 59
    3076:	0f 90       	pop	r0
    3078:	0f be       	out	0x3f, r0	; 63
    307a:	0f 90       	pop	r0
    307c:	1f 90       	pop	r1
    307e:	18 95       	reti

00003080 <__vector_90>:
    3080:	1f 92       	push	r1
    3082:	0f 92       	push	r0
    3084:	0f b6       	in	r0, 0x3f	; 63
    3086:	0f 92       	push	r0
    3088:	11 24       	eor	r1, r1
    308a:	0f 90       	pop	r0
    308c:	0f be       	out	0x3f, r0	; 63
    308e:	0f 90       	pop	r0
    3090:	1f 90       	pop	r1
    3092:	18 95       	reti

00003094 <__vector_93>:
    3094:	1f 92       	push	r1
    3096:	0f 92       	push	r0
    3098:	0f b6       	in	r0, 0x3f	; 63
    309a:	0f 92       	push	r0
    309c:	11 24       	eor	r1, r1
    309e:	0f 90       	pop	r0
    30a0:	0f be       	out	0x3f, r0	; 63
    30a2:	0f 90       	pop	r0
    30a4:	1f 90       	pop	r1
    30a6:	18 95       	reti

000030a8 <__vector_89>:
    30a8:	1f 92       	push	r1
    30aa:	0f 92       	push	r0
    30ac:	0f b6       	in	r0, 0x3f	; 63
    30ae:	0f 92       	push	r0
    30b0:	11 24       	eor	r1, r1
    30b2:	0b b6       	in	r0, 0x3b	; 59
    30b4:	0f 92       	push	r0
    30b6:	2f 93       	push	r18
    30b8:	3f 93       	push	r19
    30ba:	4f 93       	push	r20
    30bc:	5f 93       	push	r21
    30be:	6f 93       	push	r22
    30c0:	7f 93       	push	r23
    30c2:	8f 93       	push	r24
    30c4:	9f 93       	push	r25
    30c6:	af 93       	push	r26
    30c8:	bf 93       	push	r27
    30ca:	ef 93       	push	r30
    30cc:	ff 93       	push	r31
    30ce:	80 91 20 21 	lds	r24, 0x2120
    30d2:	90 91 21 21 	lds	r25, 0x2121
    30d6:	0e 94 a2 07 	call	0xf44	; 0xf44 <_ZN5BTOBD9handleDREEv>
    30da:	ff 91       	pop	r31
    30dc:	ef 91       	pop	r30
    30de:	bf 91       	pop	r27
    30e0:	af 91       	pop	r26
    30e2:	9f 91       	pop	r25
    30e4:	8f 91       	pop	r24
    30e6:	7f 91       	pop	r23
    30e8:	6f 91       	pop	r22
    30ea:	5f 91       	pop	r21
    30ec:	4f 91       	pop	r20
    30ee:	3f 91       	pop	r19
    30f0:	2f 91       	pop	r18
    30f2:	0f 90       	pop	r0
    30f4:	0b be       	out	0x3b, r0	; 59
    30f6:	0f 90       	pop	r0
    30f8:	0f be       	out	0x3f, r0	; 63
    30fa:	0f 90       	pop	r0
    30fc:	1f 90       	pop	r1
    30fe:	18 95       	reti

00003100 <__vector_92>:
    3100:	1f 92       	push	r1
    3102:	0f 92       	push	r0
    3104:	0f b6       	in	r0, 0x3f	; 63
    3106:	0f 92       	push	r0
    3108:	11 24       	eor	r1, r1
    310a:	0b b6       	in	r0, 0x3b	; 59
    310c:	0f 92       	push	r0
    310e:	2f 93       	push	r18
    3110:	3f 93       	push	r19
    3112:	4f 93       	push	r20
    3114:	5f 93       	push	r21
    3116:	6f 93       	push	r22
    3118:	7f 93       	push	r23
    311a:	8f 93       	push	r24
    311c:	9f 93       	push	r25
    311e:	af 93       	push	r26
    3120:	bf 93       	push	r27
    3122:	ef 93       	push	r30
    3124:	ff 93       	push	r31
    3126:	80 91 1c 21 	lds	r24, 0x211C
    312a:	90 91 1d 21 	lds	r25, 0x211D
    312e:	27 d8       	rcall	.-4018   	; 0x217e <_ZN3GPS9handleDREEv>
    3130:	ff 91       	pop	r31
    3132:	ef 91       	pop	r30
    3134:	bf 91       	pop	r27
    3136:	af 91       	pop	r26
    3138:	9f 91       	pop	r25
    313a:	8f 91       	pop	r24
    313c:	7f 91       	pop	r23
    313e:	6f 91       	pop	r22
    3140:	5f 91       	pop	r21
    3142:	4f 91       	pop	r20
    3144:	3f 91       	pop	r19
    3146:	2f 91       	pop	r18
    3148:	0f 90       	pop	r0
    314a:	0b be       	out	0x3b, r0	; 59
    314c:	0f 90       	pop	r0
    314e:	0f be       	out	0x3f, r0	; 63
    3150:	0f 90       	pop	r0
    3152:	1f 90       	pop	r1
    3154:	18 95       	reti

00003156 <__vector_default>:
    3156:	1f 92       	push	r1
    3158:	0f 92       	push	r0
    315a:	0f b6       	in	r0, 0x3f	; 63
    315c:	0f 92       	push	r0
    315e:	11 24       	eor	r1, r1
    3160:	00 00       	nop
    3162:	0f 90       	pop	r0
    3164:	0f be       	out	0x3f, r0	; 63
    3166:	0f 90       	pop	r0
    3168:	1f 90       	pop	r1
    316a:	18 95       	reti

0000316c <__vector_57>:
    316c:	1f 92       	push	r1
    316e:	0f 92       	push	r0
    3170:	0f b6       	in	r0, 0x3f	; 63
    3172:	0f 92       	push	r0
    3174:	11 24       	eor	r1, r1
    3176:	0f 90       	pop	r0
    3178:	0f be       	out	0x3f, r0	; 63
    317a:	0f 90       	pop	r0
    317c:	1f 90       	pop	r1
    317e:	18 95       	reti

00003180 <__vector_16>:
    3180:	1f 92       	push	r1
    3182:	0f 92       	push	r0
    3184:	0f b6       	in	r0, 0x3f	; 63
    3186:	0f 92       	push	r0
    3188:	11 24       	eor	r1, r1
    318a:	0b b6       	in	r0, 0x3b	; 59
    318c:	0f 92       	push	r0
    318e:	2f 93       	push	r18
    3190:	3f 93       	push	r19
    3192:	4f 93       	push	r20
    3194:	5f 93       	push	r21
    3196:	6f 93       	push	r22
    3198:	7f 93       	push	r23
    319a:	8f 93       	push	r24
    319c:	9f 93       	push	r25
    319e:	af 93       	push	r26
    31a0:	bf 93       	push	r27
    31a2:	ef 93       	push	r30
    31a4:	ff 93       	push	r31
    31a6:	e0 e0       	ldi	r30, 0x00	; 0
    31a8:	f8 e0       	ldi	r31, 0x08	; 8
    31aa:	10 a2       	std	Z+32, r1	; 0x20
    31ac:	11 a2       	std	Z+33, r1	; 0x21
    31ae:	80 91 1a 21 	lds	r24, 0x211A
    31b2:	90 91 1b 21 	lds	r25, 0x211B
    31b6:	57 d1       	rcall	.+686    	; 0x3466 <_ZN5Touch7processEv>
    31b8:	80 91 1a 21 	lds	r24, 0x211A
    31bc:	90 91 1b 21 	lds	r25, 0x211B
    31c0:	7b d1       	rcall	.+758    	; 0x34b8 <_ZN5Touch4getXEv>
    31c2:	81 30       	cpi	r24, 0x01	; 1
    31c4:	94 40       	sbci	r25, 0x04	; 4
    31c6:	44 f4       	brge	.+16     	; 0x31d8 <__vector_16+0x58>
    31c8:	80 91 1a 21 	lds	r24, 0x211A
    31cc:	90 91 1b 21 	lds	r25, 0x211B
    31d0:	77 d1       	rcall	.+750    	; 0x34c0 <_ZN5Touch4getYEv>
    31d2:	81 30       	cpi	r24, 0x01	; 1
    31d4:	94 40       	sbci	r25, 0x04	; 4
    31d6:	2c f0       	brlt	.+10     	; 0x31e2 <__vector_16+0x62>
    31d8:	81 e0       	ldi	r24, 0x01	; 1
    31da:	e0 ea       	ldi	r30, 0xA0	; 160
    31dc:	f6 e0       	ldi	r31, 0x06	; 6
    31de:	85 83       	std	Z+5, r24	; 0x05
    31e0:	04 c0       	rjmp	.+8      	; 0x31ea <__vector_16+0x6a>
    31e2:	81 e0       	ldi	r24, 0x01	; 1
    31e4:	e0 ea       	ldi	r30, 0xA0	; 160
    31e6:	f6 e0       	ldi	r31, 0x06	; 6
    31e8:	86 83       	std	Z+6, r24	; 0x06
    31ea:	ff 91       	pop	r31
    31ec:	ef 91       	pop	r30
    31ee:	bf 91       	pop	r27
    31f0:	af 91       	pop	r26
    31f2:	9f 91       	pop	r25
    31f4:	8f 91       	pop	r24
    31f6:	7f 91       	pop	r23
    31f8:	6f 91       	pop	r22
    31fa:	5f 91       	pop	r21
    31fc:	4f 91       	pop	r20
    31fe:	3f 91       	pop	r19
    3200:	2f 91       	pop	r18
    3202:	0f 90       	pop	r0
    3204:	0b be       	out	0x3b, r0	; 59
    3206:	0f 90       	pop	r0
    3208:	0f be       	out	0x3f, r0	; 63
    320a:	0f 90       	pop	r0
    320c:	1f 90       	pop	r1
    320e:	18 95       	reti

00003210 <_Z15setClockTo32MHzv>:
    3210:	88 ed       	ldi	r24, 0xD8	; 216
    3212:	84 bf       	out	0x34, r24	; 52
    3214:	82 e0       	ldi	r24, 0x02	; 2
    3216:	80 93 50 00 	sts	0x0050, r24
    321a:	e0 e5       	ldi	r30, 0x50	; 80
    321c:	f0 e0       	ldi	r31, 0x00	; 0
    321e:	81 81       	ldd	r24, Z+1	; 0x01
    3220:	81 ff       	sbrs	r24, 1
    3222:	fd cf       	rjmp	.-6      	; 0x321e <_Z15setClockTo32MHzv+0xe>
    3224:	88 ed       	ldi	r24, 0xD8	; 216
    3226:	84 bf       	out	0x34, r24	; 52
    3228:	81 e0       	ldi	r24, 0x01	; 1
    322a:	80 93 40 00 	sts	0x0040, r24
    322e:	08 95       	ret

00003230 <main>:


int main(void)
{
    3230:	cf 93       	push	r28
    3232:	df 93       	push	r29
    3234:	cd b7       	in	r28, 0x3d	; 61
    3236:	de b7       	in	r29, 0x3e	; 62
    3238:	c3 5f       	subi	r28, 0xF3	; 243
    323a:	d1 09       	sbc	r29, r1
    323c:	cd bf       	out	0x3d, r28	; 61
    323e:	de bf       	out	0x3e, r29	; 62
	asm("cli");
    3240:	f8 94       	cli
	setClockTo32MHz();
    3242:	e6 df       	rcall	.-52     	; 0x3210 <_Z15setClockTo32MHzv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    3244:	2f ef       	ldi	r18, 0xFF	; 255
    3246:	87 ea       	ldi	r24, 0xA7	; 167
    3248:	91 e6       	ldi	r25, 0x61	; 97
    324a:	21 50       	subi	r18, 0x01	; 1
    324c:	80 40       	sbci	r24, 0x00	; 0
    324e:	90 40       	sbci	r25, 0x00	; 0
    3250:	e1 f7       	brne	.-8      	; 0x324a <main+0x1a>
    3252:	00 c0       	rjmp	.+0      	; 0x3254 <main+0x24>
    3254:	00 00       	nop
	_delay_ms(1000);

	// Set pins as outputs
	PORTD.OUT = 0x88;
    3256:	e0 e6       	ldi	r30, 0x60	; 96
    3258:	f6 e0       	ldi	r31, 0x06	; 6
    325a:	88 e8       	ldi	r24, 0x88	; 136
    325c:	84 83       	std	Z+4, r24	; 0x04
	PORTD.DIR = 0x88;
    325e:	80 83       	st	Z, r24
	PORTE.DIR = 0xB0;
    3260:	80 eb       	ldi	r24, 0xB0	; 176
    3262:	80 93 80 06 	sts	0x0680, r24
	PORTF.DIR = 0x01;
    3266:	81 e0       	ldi	r24, 0x01	; 1
    3268:	80 93 a0 06 	sts	0x06A0, r24

	// LCD setup
	LCD_Driver LCD;
    326c:	8e 01       	movw	r16, r28
    326e:	05 52       	subi	r16, 0x25	; 37
    3270:	1f 4f       	sbci	r17, 0xFF	; 255
    3272:	c8 01       	movw	r24, r16
    3274:	0e 94 2e 11 	call	0x225c	; 0x225c <_ZN10LCD_DriverC1Ev>
	LCDref = &LCD;
    3278:	00 93 1e 21 	sts	0x211E, r16
    327c:	10 93 1f 21 	sts	0x211F, r17
	LCD.begin();
    3280:	c8 01       	movw	r24, r16
    3282:	49 d8       	rcall	.-3950   	; 0x2316 <_ZN10LCD_Driver5beginEv>
	LCD.fillScreen(0x0000);
    3284:	60 e0       	ldi	r22, 0x00	; 0
    3286:	70 e0       	ldi	r23, 0x00	; 0
    3288:	c8 01       	movw	r24, r16
    328a:	94 da       	rcall	.-2776   	; 0x27b4 <_ZN10LCD_Driver10fillScreenEj>
	LCD.setRotation(3);
    328c:	63 e0       	ldi	r22, 0x03	; 3
    328e:	c8 01       	movw	r24, r16
    3290:	f9 d9       	rcall	.-3086   	; 0x2684 <_ZN10LCD_Driver11setRotationEh>
	LCD.setCursor(0,0);
    3292:	40 e0       	ldi	r20, 0x00	; 0
    3294:	50 e0       	ldi	r21, 0x00	; 0
    3296:	60 e0       	ldi	r22, 0x00	; 0
    3298:	70 e0       	ldi	r23, 0x00	; 0
    329a:	c8 01       	movw	r24, r16
    329c:	0e 94 f4 06 	call	0xde8	; 0xde8 <_ZN12Adafruit_GFX9setCursorEii>
	LCD.setTextColor(0xFFFF, 0x0000);
    32a0:	40 e0       	ldi	r20, 0x00	; 0
    32a2:	50 e0       	ldi	r21, 0x00	; 0
    32a4:	6f ef       	ldi	r22, 0xFF	; 255
    32a6:	7f ef       	ldi	r23, 0xFF	; 255
    32a8:	c8 01       	movw	r24, r16
    32aa:	0e 94 02 07 	call	0xe04	; 0xe04 <_ZN12Adafruit_GFX12setTextColorEjj>
	LCD.setTextSize(2);
    32ae:	62 e0       	ldi	r22, 0x02	; 2
    32b0:	c8 01       	movw	r24, r16
    32b2:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <_ZN12Adafruit_GFX11setTextSizeEh>
	LCD.setTextWrap(true);
    32b6:	61 e0       	ldi	r22, 0x01	; 1
    32b8:	c8 01       	movw	r24, r16
    32ba:	0e 94 08 07 	call	0xe10	; 0xe10 <_ZN12Adafruit_GFX11setTextWrapEb>
	//Touch toucj;
	//Touchref = &toucj;
	//_delay_ms(1000);
	
	// GPS setup
	GPS GPSModule;
    32be:	0a 5d       	subi	r16, 0xDA	; 218
    32c0:	11 09       	sbc	r17, r1
    32c2:	c8 01       	movw	r24, r16
    32c4:	0e 94 42 0e 	call	0x1c84	; 0x1c84 <_ZN3GPSC1Ev>
	GPSref = &GPSModule;
    32c8:	00 93 1c 21 	sts	0x211C, r16
    32cc:	10 93 1d 21 	sts	0x211D, r17

	// BT setup
	BTOBD OBDModule;
    32d0:	02 59       	subi	r16, 0x92	; 146
    32d2:	1f 4f       	sbci	r17, 0xFF	; 255
    32d4:	c8 01       	movw	r24, r16
    32d6:	0e 94 28 07 	call	0xe50	; 0xe50 <_ZN5BTOBDC1Ev>
	OBDref = &OBDModule;
    32da:	00 93 20 21 	sts	0x2120, r16
    32de:	10 93 21 21 	sts	0x2121, r17

	PMIC.CTRL |= 0x07;
    32e2:	e0 ea       	ldi	r30, 0xA0	; 160
    32e4:	f0 e0       	ldi	r31, 0x00	; 0
    32e6:	82 81       	ldd	r24, Z+2	; 0x02
    32e8:	87 60       	ori	r24, 0x07	; 7
    32ea:	82 83       	std	Z+2, r24	; 0x02
	asm("sei");
    32ec:	78 94       	sei


	bool send = true;
	//OBDModule.initialize("000666643F8F", LCDref);
	OBDModule.initialize("00195DE8057A", LCDref);
    32ee:	40 91 1e 21 	lds	r20, 0x211E
    32f2:	50 91 1f 21 	lds	r21, 0x211F
    32f6:	6d e0       	ldi	r22, 0x0D	; 13
    32f8:	71 e2       	ldi	r23, 0x21	; 33
    32fa:	ce 01       	movw	r24, r28
    32fc:	81 59       	subi	r24, 0x91	; 145
    32fe:	9f 4f       	sbci	r25, 0xFF	; 255
    3300:	0e 94 5c 0c 	call	0x18b8	; 0x18b8 <_ZN5BTOBD10initializeEPcP10LCD_Driver>
	GPSModule.init();
    3304:	ce 01       	movw	r24, r28
    3306:	01 96       	adiw	r24, 0x01	; 1
    3308:	0e 94 38 0f 	call	0x1e70	; 0x1e70 <_ZN3GPS4initEv>
	MainScreen ms(LCDref);
    330c:	60 91 1e 21 	lds	r22, 0x211E
    3310:	70 91 1f 21 	lds	r23, 0x211F
    3314:	ce 01       	movw	r24, r28
    3316:	8e 50       	subi	r24, 0x0E	; 14
    3318:	9f 4f       	sbci	r25, 0xFF	; 255
    331a:	8c da       	rcall	.-2792   	; 0x2834 <_ZN10MainScreenC1EP10LCD_Driver>
	ms.clear();
    331c:	ce 01       	movw	r24, r28
    331e:	8e 50       	subi	r24, 0x0E	; 14
    3320:	9f 4f       	sbci	r25, 0xFF	; 255
    3322:	8a da       	rcall	.-2796   	; 0x2838 <_ZN10MainScreen5clearEv>
	GPSModule.startReceiving();
    3324:	ce 01       	movw	r24, r28
    3326:	01 96       	adiw	r24, 0x01	; 1
    3328:	0e 94 e1 10 	call	0x21c2	; 0x21c2 <_ZN3GPS14startReceivingEv>

	PMIC.CTRL |= 0x07;
	asm("sei");


	bool send = true;
    332c:	11 e0       	ldi	r17, 0x01	; 1
	GPSModule.init();
	MainScreen ms(LCDref);
	ms.clear();
	GPSModule.startReceiving();
	while (1) {
		if (send) {
    332e:	11 23       	and	r17, r17
    3330:	29 f0       	breq	.+10     	; 0x333c <main+0x10c>
			OBDModule.sendCmd();
    3332:	ce 01       	movw	r24, r28
    3334:	81 59       	subi	r24, 0x91	; 145
    3336:	9f 4f       	sbci	r25, 0xFF	; 255
    3338:	0e 94 59 0d 	call	0x1ab2	; 0x1ab2 <_ZN5BTOBD7sendCmdEv>
		}
		send = OBDModule.rcvResp();
    333c:	ce 01       	movw	r24, r28
    333e:	81 59       	subi	r24, 0x91	; 145
    3340:	9f 4f       	sbci	r25, 0xFF	; 255
    3342:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <_ZN5BTOBD7rcvRespEv>
    3346:	18 2f       	mov	r17, r24
		GPSModule.updateRegisters();
    3348:	ce 01       	movw	r24, r28
    334a:	01 96       	adiw	r24, 0x01	; 1
    334c:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <_ZN3GPS15updateRegistersEv>

		//GPSModule.vomit(LCDref);
		ms.update(OBDref, GPSref);
    3350:	40 91 1c 21 	lds	r20, 0x211C
    3354:	50 91 1d 21 	lds	r21, 0x211D
    3358:	60 91 20 21 	lds	r22, 0x2120
    335c:	70 91 21 21 	lds	r23, 0x2121
    3360:	ce 01       	movw	r24, r28
    3362:	8e 50       	subi	r24, 0x0E	; 14
    3364:	9f 4f       	sbci	r25, 0xFF	; 255
    3366:	96 dd       	rcall	.-1236   	; 0x2e94 <_ZN10MainScreen6updateEP5BTOBDP3GPS>
    3368:	e2 cf       	rjmp	.-60     	; 0x332e <main+0xfe>

0000336a <_ZN6ScreenC1EP10LCD_Driver>:
 *  Author: ee63pc3-user
 */ 

 #include "Screen.h"

 Screen::Screen(LCD_Driver * lcdscreen) {lcd = lcdscreen;}
    336a:	fc 01       	movw	r30, r24
    336c:	60 83       	st	Z, r22
    336e:	71 83       	std	Z+1, r23	; 0x01
    3370:	08 95       	ret

00003372 <_ZN6SDCardC1EP10SPI_struct>:
	return sdcard.write(buff, sector, count);
 }
 DRESULT disk_ioctl (BYTE pdrv, BYTE cmd, void* buff){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
	return sdcard.IOctl(cmd, buff);
 }
    3372:	cf 93       	push	r28
    3374:	df 93       	push	r29
    3376:	ec 01       	movw	r28, r24
    3378:	18 d0       	rcall	.+48     	; 0x33aa <_ZN10SPI_DriverC1EP10SPI_struct>
    337a:	81 e0       	ldi	r24, 0x01	; 1
    337c:	8c 83       	std	Y+4, r24	; 0x04
    337e:	e0 e8       	ldi	r30, 0x80	; 128
    3380:	f6 e0       	ldi	r31, 0x06	; 6
    3382:	80 81       	ld	r24, Z
    3384:	83 7f       	andi	r24, 0xF3	; 243
    3386:	80 83       	st	Z, r24
    3388:	80 85       	ldd	r24, Z+8	; 0x08
    338a:	83 ff       	sbrs	r24, 3
    338c:	03 c0       	rjmp	.+6      	; 0x3394 <_ZN6SDCardC1EP10SPI_struct+0x22>
    338e:	8c 81       	ldd	r24, Y+4	; 0x04
    3390:	82 60       	ori	r24, 0x02	; 2
    3392:	8c 83       	std	Y+4, r24	; 0x04
    3394:	ce 01       	movw	r24, r28
    3396:	14 d0       	rcall	.+40     	; 0x33c0 <_ZN10SPI_Driver6enableEv>
    3398:	df 91       	pop	r29
    339a:	cf 91       	pop	r28
    339c:	08 95       	ret

0000339e <_GLOBAL__sub_I_sdcard>:
	DSTATUS getStatus();
	DRESULT read(BYTE* buff, DWORD sector, UINT count);
	DRESULT write(const BYTE* buff, DWORD sector, UINT count);
	DRESULT IOctl(BYTE ctrl, void* buff);
};
SDCard sdcard(&SPIE);
    339e:	60 ec       	ldi	r22, 0xC0	; 192
    33a0:	7a e0       	ldi	r23, 0x0A	; 10
    33a2:	82 e2       	ldi	r24, 0x22	; 34
    33a4:	91 e2       	ldi	r25, 0x21	; 33
    33a6:	e5 cf       	rjmp	.-54     	; 0x3372 <_ZN6SDCardC1EP10SPI_struct>
    33a8:	08 95       	ret

000033aa <_ZN10SPI_DriverC1EP10SPI_struct>:
	//spi->INTCTRL = 0x03; // High level interrupt
	spi->INTCTRL = 0x00; // No interrupt, polling mode
 }
 void SPI_Driver::clockRate(char bit710) {
	spi->CTRL &= ~0x83;
	spi->CTRL |= bit710;
    33aa:	dc 01       	movw	r26, r24
    33ac:	6d 93       	st	X+, r22
    33ae:	7c 93       	st	X, r23
    33b0:	11 97       	sbiw	r26, 0x01	; 1
    33b2:	23 e9       	ldi	r18, 0x93	; 147
    33b4:	fb 01       	movw	r30, r22
    33b6:	20 83       	st	Z, r18
    33b8:	ed 91       	ld	r30, X+
    33ba:	fc 91       	ld	r31, X
    33bc:	11 82       	std	Z+1, r1	; 0x01
    33be:	08 95       	ret

000033c0 <_ZN10SPI_Driver6enableEv>:
 }
 void SPI_Driver::enable() {
	spi->CTRL |= 0x40;
    33c0:	dc 01       	movw	r26, r24
    33c2:	ed 91       	ld	r30, X+
    33c4:	fc 91       	ld	r31, X
    33c6:	80 81       	ld	r24, Z
    33c8:	80 64       	ori	r24, 0x40	; 64
    33ca:	80 83       	st	Z, r24
    33cc:	08 95       	ret

000033ce <_ZN5Touch8getCycleEv>:

void Touch::startY() {

	// Start ADC
	ADCA.CH0.MUXCTRL = 0x2F;
	ADCA.CH0.CTRL = 0x82;
    33ce:	fc 01       	movw	r30, r24
    33d0:	20 81       	ld	r18, Z
    33d2:	31 81       	ldd	r19, Z+1	; 0x01
    33d4:	2f 5f       	subi	r18, 0xFF	; 255
    33d6:	3f 4f       	sbci	r19, 0xFF	; 255
    33d8:	24 30       	cpi	r18, 0x04	; 4
    33da:	31 05       	cpc	r19, r1
    33dc:	19 f4       	brne	.+6      	; 0x33e4 <_ZN5Touch8getCycleEv+0x16>
    33de:	80 e0       	ldi	r24, 0x00	; 0
    33e0:	90 e0       	ldi	r25, 0x00	; 0
    33e2:	02 c0       	rjmp	.+4      	; 0x33e8 <_ZN5Touch8getCycleEv+0x1a>
    33e4:	82 2f       	mov	r24, r18
    33e6:	93 2f       	mov	r25, r19
    33e8:	80 83       	st	Z, r24
    33ea:	91 83       	std	Z+1, r25	; 0x01
    33ec:	08 95       	ret

000033ee <_ZN5Touch6setupXEv>:

	//return ADCA.CH0.RES;
}

void Touch::setupX()
{
    33ee:	dc 01       	movw	r26, r24
    while(!(ADCA.CH0.INTFLAGS & 0x01));
    33f0:	e0 e0       	ldi	r30, 0x00	; 0
    33f2:	f2 e0       	ldi	r31, 0x02	; 2
    33f4:	83 a1       	ldd	r24, Z+35	; 0x23
    33f6:	80 ff       	sbrs	r24, 0
    33f8:	fd cf       	rjmp	.-6      	; 0x33f4 <_ZN5Touch6setupXEv+0x6>
	xout = xin;
    33fa:	16 96       	adiw	r26, 0x06	; 6
    33fc:	8d 91       	ld	r24, X+
    33fe:	9c 91       	ld	r25, X
    3400:	17 97       	sbiw	r26, 0x07	; 7
    3402:	12 96       	adiw	r26, 0x02	; 2
    3404:	8d 93       	st	X+, r24
    3406:	9c 93       	st	X, r25
    3408:	13 97       	sbiw	r26, 0x03	; 3
	yout = ADCA.CH0.RES;
    340a:	e0 e0       	ldi	r30, 0x00	; 0
    340c:	f2 e0       	ldi	r31, 0x02	; 2
    340e:	84 a1       	ldd	r24, Z+36	; 0x24
    3410:	95 a1       	ldd	r25, Z+37	; 0x25
    3412:	14 96       	adiw	r26, 0x04	; 4
    3414:	8d 93       	st	X+, r24
    3416:	9c 93       	st	X, r25
    3418:	15 97       	sbiw	r26, 0x05	; 5

    //// Set yp high, set xp input
	TFT_CTRL_PORT.DIRCLR = 0x50;
    341a:	e0 e0       	ldi	r30, 0x00	; 0
    341c:	f6 e0       	ldi	r31, 0x06	; 6
    341e:	80 e5       	ldi	r24, 0x50	; 80
    3420:	82 83       	std	Z+2, r24	; 0x02
	TFT_CTRL_PORT.DIRSET = 0xA0;
    3422:	80 ea       	ldi	r24, 0xA0	; 160
    3424:	81 83       	std	Z+1, r24	; 0x01
	TFT_Y_P_SET;
    3426:	84 81       	ldd	r24, Z+4	; 0x04
    3428:	80 62       	ori	r24, 0x20	; 32
    342a:	84 83       	std	Z+4, r24	; 0x04
	TFT_Y_M_CLR;
    342c:	84 81       	ldd	r24, Z+4	; 0x04
    342e:	8f 77       	andi	r24, 0x7F	; 127
    3430:	84 83       	std	Z+4, r24	; 0x04
    3432:	08 95       	ret

00003434 <_ZN5Touch6setupYEv>:
}

void Touch::setupY()
{
    while(!(ADCA.CH0.INTFLAGS & 0x01));
    3434:	e0 e0       	ldi	r30, 0x00	; 0
    3436:	f2 e0       	ldi	r31, 0x02	; 2
    3438:	23 a1       	ldd	r18, Z+35	; 0x23
    343a:	20 ff       	sbrs	r18, 0
    343c:	fd cf       	rjmp	.-6      	; 0x3438 <_ZN5Touch6setupYEv+0x4>
	xin = ADCA.CH0.RES;
    343e:	e0 e0       	ldi	r30, 0x00	; 0
    3440:	f2 e0       	ldi	r31, 0x02	; 2
    3442:	24 a1       	ldd	r18, Z+36	; 0x24
    3444:	35 a1       	ldd	r19, Z+37	; 0x25
    3446:	fc 01       	movw	r30, r24
    3448:	26 83       	std	Z+6, r18	; 0x06
    344a:	37 83       	std	Z+7, r19	; 0x07

    // Set xp high, set yp input
	TFT_CTRL_PORT.DIRCLR = 0xA0;
    344c:	e0 e0       	ldi	r30, 0x00	; 0
    344e:	f6 e0       	ldi	r31, 0x06	; 6
    3450:	80 ea       	ldi	r24, 0xA0	; 160
    3452:	82 83       	std	Z+2, r24	; 0x02
	TFT_CTRL_PORT.DIRSET = 0x50;
    3454:	80 e5       	ldi	r24, 0x50	; 80
    3456:	81 83       	std	Z+1, r24	; 0x01
	TFT_X_P_SET;
    3458:	84 81       	ldd	r24, Z+4	; 0x04
    345a:	80 61       	ori	r24, 0x10	; 16
    345c:	84 83       	std	Z+4, r24	; 0x04
	TFT_X_M_CLR;
    345e:	84 81       	ldd	r24, Z+4	; 0x04
    3460:	8f 7b       	andi	r24, 0xBF	; 191
    3462:	84 83       	std	Z+4, r24	; 0x04
    3464:	08 95       	ret

00003466 <_ZN5Touch7processEv>:
}

void Touch::process()
{
    3466:	cf 93       	push	r28
    3468:	df 93       	push	r29
    346a:	ec 01       	movw	r28, r24
    switch (this->getCycle())
    346c:	b0 df       	rcall	.-160    	; 0x33ce <_ZN5Touch8getCycleEv>
    346e:	81 30       	cpi	r24, 0x01	; 1
    3470:	91 05       	cpc	r25, r1
    3472:	69 f0       	breq	.+26     	; 0x348e <_ZN5Touch7processEv+0x28>
    3474:	1c f4       	brge	.+6      	; 0x347c <_ZN5Touch7processEv+0x16>
    3476:	89 2b       	or	r24, r25
    3478:	39 f0       	breq	.+14     	; 0x3488 <_ZN5Touch7processEv+0x22>
    347a:	1a c0       	rjmp	.+52     	; 0x34b0 <_ZN5Touch7processEv+0x4a>
    347c:	82 30       	cpi	r24, 0x02	; 2
    347e:	91 05       	cpc	r25, r1
    3480:	69 f0       	breq	.+26     	; 0x349c <_ZN5Touch7processEv+0x36>
    3482:	03 97       	sbiw	r24, 0x03	; 3
    3484:	71 f0       	breq	.+28     	; 0x34a2 <_ZN5Touch7processEv+0x3c>
    3486:	14 c0       	rjmp	.+40     	; 0x34b0 <_ZN5Touch7processEv+0x4a>
	{
	    case 0: setupX(); break;
    3488:	ce 01       	movw	r24, r28
    348a:	b1 df       	rcall	.-158    	; 0x33ee <_ZN5Touch6setupXEv>
    348c:	12 c0       	rjmp	.+36     	; 0x34b2 <_ZN5Touch7processEv+0x4c>
}

void Touch::startX() {

	// Start ADC
	ADCA.CH0.MUXCTRL = 0x27;
    348e:	e0 e0       	ldi	r30, 0x00	; 0
    3490:	f2 e0       	ldi	r31, 0x02	; 2
    3492:	87 e2       	ldi	r24, 0x27	; 39
    3494:	81 a3       	std	Z+33, r24	; 0x21
	ADCA.CH0.CTRL = 0x82;
    3496:	82 e8       	ldi	r24, 0x82	; 130
    3498:	80 a3       	std	Z+32, r24	; 0x20
    349a:	0b c0       	rjmp	.+22     	; 0x34b2 <_ZN5Touch7processEv+0x4c>
{
    switch (this->getCycle())
	{
	    case 0: setupX(); break;
		case 1: startX(); break;
		case 2: setupY(); break;
    349c:	ce 01       	movw	r24, r28
    349e:	ca df       	rcall	.-108    	; 0x3434 <_ZN5Touch6setupYEv>
    34a0:	08 c0       	rjmp	.+16     	; 0x34b2 <_ZN5Touch7processEv+0x4c>
}

void Touch::startY() {

	// Start ADC
	ADCA.CH0.MUXCTRL = 0x2F;
    34a2:	e0 e0       	ldi	r30, 0x00	; 0
    34a4:	f2 e0       	ldi	r31, 0x02	; 2
    34a6:	8f e2       	ldi	r24, 0x2F	; 47
    34a8:	81 a3       	std	Z+33, r24	; 0x21
	ADCA.CH0.CTRL = 0x82;
    34aa:	82 e8       	ldi	r24, 0x82	; 130
    34ac:	80 a3       	std	Z+32, r24	; 0x20
    34ae:	01 c0       	rjmp	.+2      	; 0x34b2 <_ZN5Touch7processEv+0x4c>
	{
	    case 0: setupX(); break;
		case 1: startX(); break;
		case 2: setupY(); break;
		case 3: startY(); break;
		default: asm("nop");
    34b0:	00 00       	nop
	}
}
    34b2:	df 91       	pop	r29
    34b4:	cf 91       	pop	r28
    34b6:	08 95       	ret

000034b8 <_ZN5Touch4getXEv>:

int Touch::getX()
{
    return this->xout;
}
    34b8:	fc 01       	movw	r30, r24
    34ba:	82 81       	ldd	r24, Z+2	; 0x02
    34bc:	93 81       	ldd	r25, Z+3	; 0x03
    34be:	08 95       	ret

000034c0 <_ZN5Touch4getYEv>:

int Touch::getY()
{
    return this->yout;
    34c0:	fc 01       	movw	r30, r24
    34c2:	84 81       	ldd	r24, Z+4	; 0x04
    34c4:	95 81       	ldd	r25, Z+5	; 0x05
    34c6:	08 95       	ret

000034c8 <_ZN10UartDriverC1Eii>:
 *  Author: ee63pc3-user
 */ 

#include "uart_driver.h"

UartDriver::UartDriver(int rx_buffer_size, int tx_buffer_size) : rxQueue(rx_buffer_size), txQueue(tx_buffer_size) {}
    34c8:	0f 93       	push	r16
    34ca:	1f 93       	push	r17
    34cc:	cf 93       	push	r28
    34ce:	df 93       	push	r29
    34d0:	ec 01       	movw	r28, r24
    34d2:	8a 01       	movw	r16, r20
    34d4:	02 96       	adiw	r24, 0x02	; 2
    34d6:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <_ZN9ByteQueueC1Ei>
    34da:	b8 01       	movw	r22, r16
    34dc:	ce 01       	movw	r24, r28
    34de:	0e 96       	adiw	r24, 0x0e	; 14
    34e0:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <_ZN9ByteQueueC1Ei>
    34e4:	df 91       	pop	r29
    34e6:	cf 91       	pop	r28
    34e8:	1f 91       	pop	r17
    34ea:	0f 91       	pop	r16
    34ec:	08 95       	ret

000034ee <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc>:

void UartDriver::init(USART_t * uval, ParityMode::PMODE pmode, CharSize::CHSIZE chsize, bool stopbit, char baudctrla, char baudctrlb)
{
    34ee:	cf 92       	push	r12
    34f0:	ef 92       	push	r14
    34f2:	0f 93       	push	r16
    34f4:	fc 01       	movw	r30, r24
	this->uval = uval;
    34f6:	60 83       	st	Z, r22
    34f8:	71 83       	std	Z+1, r23	; 0x01
	this->uval->CTRLC = 0x00;
    34fa:	db 01       	movw	r26, r22
    34fc:	15 96       	adiw	r26, 0x05	; 5
    34fe:	1c 92       	st	X, r1
	this->uval->BAUDCTRLA = baudctrla;
    3500:	a0 81       	ld	r26, Z
    3502:	b1 81       	ldd	r27, Z+1	; 0x01
    3504:	16 96       	adiw	r26, 0x06	; 6
    3506:	ec 92       	st	X, r14
	this->uval->BAUDCTRLB = baudctrlb;
    3508:	a0 81       	ld	r26, Z
    350a:	b1 81       	ldd	r27, Z+1	; 0x01
    350c:	17 96       	adiw	r26, 0x07	; 7
    350e:	cc 92       	st	X, r12

	if (pmode == ParityMode::EVEN) this->uval->CTRLC |= 0x20;
    3510:	41 30       	cpi	r20, 0x01	; 1
    3512:	49 f4       	brne	.+18     	; 0x3526 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x38>
    3514:	a0 81       	ld	r26, Z
    3516:	b1 81       	ldd	r27, Z+1	; 0x01
    3518:	15 96       	adiw	r26, 0x05	; 5
    351a:	8c 91       	ld	r24, X
    351c:	15 97       	sbiw	r26, 0x05	; 5
    351e:	80 62       	ori	r24, 0x20	; 32
    3520:	15 96       	adiw	r26, 0x05	; 5
    3522:	8c 93       	st	X, r24
    3524:	0a c0       	rjmp	.+20     	; 0x353a <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x4c>
	else if (pmode == ParityMode::ODD) this->uval->CTRLC |= 0x30;
    3526:	42 30       	cpi	r20, 0x02	; 2
    3528:	41 f4       	brne	.+16     	; 0x353a <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x4c>
    352a:	a0 81       	ld	r26, Z
    352c:	b1 81       	ldd	r27, Z+1	; 0x01
    352e:	15 96       	adiw	r26, 0x05	; 5
    3530:	8c 91       	ld	r24, X
    3532:	15 97       	sbiw	r26, 0x05	; 5
    3534:	80 63       	ori	r24, 0x30	; 48
    3536:	15 96       	adiw	r26, 0x05	; 5
    3538:	8c 93       	st	X, r24
	
	if (chsize == CharSize::SIX) this->uval->CTRLC |= 0x01;
    353a:	21 30       	cpi	r18, 0x01	; 1
    353c:	49 f4       	brne	.+18     	; 0x3550 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x62>
    353e:	a0 81       	ld	r26, Z
    3540:	b1 81       	ldd	r27, Z+1	; 0x01
    3542:	15 96       	adiw	r26, 0x05	; 5
    3544:	8c 91       	ld	r24, X
    3546:	15 97       	sbiw	r26, 0x05	; 5
    3548:	81 60       	ori	r24, 0x01	; 1
    354a:	15 96       	adiw	r26, 0x05	; 5
    354c:	8c 93       	st	X, r24
    354e:	20 c0       	rjmp	.+64     	; 0x3590 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
	else if (chsize == CharSize::SEVEN) this->uval->CTRLC |= 0x02;
    3550:	22 30       	cpi	r18, 0x02	; 2
    3552:	49 f4       	brne	.+18     	; 0x3566 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x78>
    3554:	a0 81       	ld	r26, Z
    3556:	b1 81       	ldd	r27, Z+1	; 0x01
    3558:	15 96       	adiw	r26, 0x05	; 5
    355a:	8c 91       	ld	r24, X
    355c:	15 97       	sbiw	r26, 0x05	; 5
    355e:	82 60       	ori	r24, 0x02	; 2
    3560:	15 96       	adiw	r26, 0x05	; 5
    3562:	8c 93       	st	X, r24
    3564:	15 c0       	rjmp	.+42     	; 0x3590 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
	else if (chsize == CharSize::EIGHT) this->uval->CTRLC |= 0x03;
    3566:	23 30       	cpi	r18, 0x03	; 3
    3568:	49 f4       	brne	.+18     	; 0x357c <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x8e>
    356a:	a0 81       	ld	r26, Z
    356c:	b1 81       	ldd	r27, Z+1	; 0x01
    356e:	15 96       	adiw	r26, 0x05	; 5
    3570:	8c 91       	ld	r24, X
    3572:	15 97       	sbiw	r26, 0x05	; 5
    3574:	83 60       	ori	r24, 0x03	; 3
    3576:	15 96       	adiw	r26, 0x05	; 5
    3578:	8c 93       	st	X, r24
    357a:	0a c0       	rjmp	.+20     	; 0x3590 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
	else if (chsize == CharSize::NINE) this->uval->CTRLC |= 0x07;
    357c:	24 30       	cpi	r18, 0x04	; 4
    357e:	41 f4       	brne	.+16     	; 0x3590 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
    3580:	a0 81       	ld	r26, Z
    3582:	b1 81       	ldd	r27, Z+1	; 0x01
    3584:	15 96       	adiw	r26, 0x05	; 5
    3586:	8c 91       	ld	r24, X
    3588:	15 97       	sbiw	r26, 0x05	; 5
    358a:	87 60       	ori	r24, 0x07	; 7
    358c:	15 96       	adiw	r26, 0x05	; 5
    358e:	8c 93       	st	X, r24
	
	if (stopbit) this->uval->CTRLC |= 0x08;
    3590:	00 23       	and	r16, r16
    3592:	41 f0       	breq	.+16     	; 0x35a4 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xb6>
    3594:	a0 81       	ld	r26, Z
    3596:	b1 81       	ldd	r27, Z+1	; 0x01
    3598:	15 96       	adiw	r26, 0x05	; 5
    359a:	8c 91       	ld	r24, X
    359c:	15 97       	sbiw	r26, 0x05	; 5
    359e:	88 60       	ori	r24, 0x08	; 8
    35a0:	15 96       	adiw	r26, 0x05	; 5
    35a2:	8c 93       	st	X, r24

	this->uval->CTRLA = 0x3F; //set receive and transmit interrupt to high priority
    35a4:	a0 81       	ld	r26, Z
    35a6:	b1 81       	ldd	r27, Z+1	; 0x01
    35a8:	8f e3       	ldi	r24, 0x3F	; 63
    35aa:	13 96       	adiw	r26, 0x03	; 3
    35ac:	8c 93       	st	X, r24
	this->uval->CTRLB = 0x18; //set rxen, txen
    35ae:	01 90       	ld	r0, Z+
    35b0:	f0 81       	ld	r31, Z
    35b2:	e0 2d       	mov	r30, r0
    35b4:	88 e1       	ldi	r24, 0x18	; 24
    35b6:	84 83       	std	Z+4, r24	; 0x04
}
    35b8:	0f 91       	pop	r16
    35ba:	ef 90       	pop	r14
    35bc:	cf 90       	pop	r12
    35be:	08 95       	ret

000035c0 <_ZN10UartDriver8sendByteEc>:

void UartDriver::sendByte(char c) {
    35c0:	cf 93       	push	r28
    35c2:	df 93       	push	r29
    35c4:	ec 01       	movw	r28, r24
	if (this->uval->STATUS & USART_DREIF_bm) {
    35c6:	e8 81       	ld	r30, Y
    35c8:	f9 81       	ldd	r31, Y+1	; 0x01
    35ca:	81 81       	ldd	r24, Z+1	; 0x01
    35cc:	85 ff       	sbrs	r24, 5
    35ce:	02 c0       	rjmp	.+4      	; 0x35d4 <_ZN10UartDriver8sendByteEc+0x14>
		//IF data register is empty, transmit the next character
		this->uval->DATA = c;
    35d0:	60 83       	st	Z, r22
    35d2:	04 c0       	rjmp	.+8      	; 0x35dc <_ZN10UartDriver8sendByteEc+0x1c>
	}else {
		//try to add to the queue if it is not empty (not guaranteed)
		txQueue.enqueue(c);
    35d4:	ce 01       	movw	r24, r28
    35d6:	0e 96       	adiw	r24, 0x0e	; 14
    35d8:	0e 94 de 0d 	call	0x1bbc	; 0x1bbc <_ZN9ByteQueue7enqueueEc>
	}
	uval->CTRLA |= (0x03);
    35dc:	e8 81       	ld	r30, Y
    35de:	f9 81       	ldd	r31, Y+1	; 0x01
    35e0:	83 81       	ldd	r24, Z+3	; 0x03
    35e2:	83 60       	ori	r24, 0x03	; 3
    35e4:	83 83       	std	Z+3, r24	; 0x03
}
    35e6:	df 91       	pop	r29
    35e8:	cf 91       	pop	r28
    35ea:	08 95       	ret

000035ec <_ZN10UartDriver7rcvByteEc>:
void UartDriver::rcvByte(char c) {
	rxQueue.enqueue(c);
    35ec:	02 96       	adiw	r24, 0x02	; 2
    35ee:	0c 94 de 0d 	jmp	0x1bbc	; 0x1bbc <_ZN9ByteQueue7enqueueEc>
    35f2:	08 95       	ret

000035f4 <_ZN10UartDriver9rxDequeueEv>:
}

char UartDriver::rxDequeue() {
	return rxQueue.dequeue();
    35f4:	02 96       	adiw	r24, 0x02	; 2
    35f6:	0c 94 07 0e 	jmp	0x1c0e	; 0x1c0e <_ZN9ByteQueue7dequeueEv>
}
    35fa:	08 95       	ret

000035fc <_ZN10UartDriver9rxIsEmptyEv>:
bool UartDriver::rxIsEmpty() {
	return rxQueue.isEmpty();
    35fc:	02 96       	adiw	r24, 0x02	; 2
    35fe:	0c 94 3a 0e 	jmp	0x1c74	; 0x1c74 <_ZN9ByteQueue7isEmptyEv>
}
    3602:	08 95       	ret

00003604 <_ZN10UartDriver9txIsEmptyEv>:
bool UartDriver::txIsEmpty() {
	return txQueue.isEmpty();
    3604:	0e 96       	adiw	r24, 0x0e	; 14
    3606:	0c 94 3a 0e 	jmp	0x1c74	; 0x1c74 <_ZN9ByteQueue7isEmptyEv>
}
    360a:	08 95       	ret

0000360c <_ZN10UartDriver9txDequeueEv>:
char UartDriver::txDequeue() {
	return txQueue.dequeue();
    360c:	0e 96       	adiw	r24, 0x0e	; 14
    360e:	0c 94 07 0e 	jmp	0x1c0e	; 0x1c0e <_ZN9ByteQueue7dequeueEv>
}
    3612:	08 95       	ret

00003614 <_ZN10UartDriver11getUARTPortEv>:
USART_t * UartDriver::getUARTPort() {
	return uval;
}
    3614:	fc 01       	movw	r30, r24
    3616:	80 81       	ld	r24, Z
    3618:	91 81       	ldd	r25, Z+1	; 0x01
    361a:	08 95       	ret

0000361c <_ZN10UartDriver10sendStringEPKcih>:

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
    361c:	af 92       	push	r10
    361e:	bf 92       	push	r11
    3620:	cf 92       	push	r12
    3622:	df 92       	push	r13
    3624:	ef 92       	push	r14
    3626:	ff 92       	push	r15
    3628:	0f 93       	push	r16
    362a:	1f 93       	push	r17
    362c:	cf 93       	push	r28
    362e:	df 93       	push	r29
    3630:	00 d0       	rcall	.+0      	; 0x3632 <_ZN10UartDriver10sendStringEPKcih+0x16>
    3632:	cd b7       	in	r28, 0x3d	; 61
    3634:	de b7       	in	r29, 0x3e	; 62
    3636:	5c 01       	movw	r10, r24
    3638:	7b 01       	movw	r14, r22
    363a:	6a 01       	movw	r12, r20
    363c:	2b 83       	std	Y+3, r18	; 0x03
	 for (volatile int i = 0; i < numchars; i++) {
    363e:	19 82       	std	Y+1, r1	; 0x01
    3640:	1a 82       	std	Y+2, r1	; 0x02
    3642:	89 81       	ldd	r24, Y+1	; 0x01
    3644:	9a 81       	ldd	r25, Y+2	; 0x02
    3646:	84 17       	cp	r24, r20
    3648:	95 07       	cpc	r25, r21
    364a:	b4 f5       	brge	.+108    	; 0x36b8 <_ZN10UartDriver10sendStringEPKcih+0x9c>
		if (str[i] == '\0') break;
    364c:	e9 81       	ldd	r30, Y+1	; 0x01
    364e:	fa 81       	ldd	r31, Y+2	; 0x02
    3650:	e6 0f       	add	r30, r22
    3652:	f7 1f       	adc	r31, r23
    3654:	80 81       	ld	r24, Z
    3656:	88 23       	and	r24, r24
    3658:	79 f1       	breq	.+94     	; 0x36b8 <_ZN10UartDriver10sendStringEPKcih+0x9c>
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
		while (txQueue.isFull()) {}
    365a:	85 01       	movw	r16, r10
    365c:	02 5f       	subi	r16, 0xF2	; 242
    365e:	1f 4f       	sbci	r17, 0xFF	; 255
    3660:	07 c0       	rjmp	.+14     	; 0x3670 <_ZN10UartDriver10sendStringEPKcih+0x54>
	return uval;
}

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
	 for (volatile int i = 0; i < numchars; i++) {
		if (str[i] == '\0') break;
    3662:	e9 81       	ldd	r30, Y+1	; 0x01
    3664:	fa 81       	ldd	r31, Y+2	; 0x02
    3666:	ee 0d       	add	r30, r14
    3668:	ff 1d       	adc	r31, r15
    366a:	80 81       	ld	r24, Z
    366c:	88 23       	and	r24, r24
    366e:	21 f1       	breq	.+72     	; 0x36b8 <_ZN10UartDriver10sendStringEPKcih+0x9c>
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
    3670:	e9 81       	ldd	r30, Y+1	; 0x01
    3672:	fa 81       	ldd	r31, Y+2	; 0x02
    3674:	ee 0d       	add	r30, r14
    3676:	ff 1d       	adc	r31, r15
    3678:	80 81       	ld	r24, Z
    367a:	84 32       	cpi	r24, 0x24	; 36
    367c:	39 f0       	breq	.+14     	; 0x368c <_ZN10UartDriver10sendStringEPKcih+0x70>
    367e:	e9 81       	ldd	r30, Y+1	; 0x01
    3680:	fa 81       	ldd	r31, Y+2	; 0x02
    3682:	ee 0d       	add	r30, r14
    3684:	ff 1d       	adc	r31, r15
    3686:	80 81       	ld	r24, Z
    3688:	8a 32       	cpi	r24, 0x2A	; 42
    368a:	c1 f4       	brne	.+48     	; 0x36bc <_ZN10UartDriver10sendStringEPKcih+0xa0>
		while (txQueue.isFull()) {}
    368c:	c8 01       	movw	r24, r16
    368e:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <_ZN9ByteQueue6isFullEv>
    3692:	81 11       	cpse	r24, r1
    3694:	fb cf       	rjmp	.-10     	; 0x368c <_ZN10UartDriver10sendStringEPKcih+0x70>
		this->sendByte(str[i]);
    3696:	e9 81       	ldd	r30, Y+1	; 0x01
    3698:	fa 81       	ldd	r31, Y+2	; 0x02
    369a:	ee 0d       	add	r30, r14
    369c:	ff 1d       	adc	r31, r15
    369e:	60 81       	ld	r22, Z
    36a0:	c5 01       	movw	r24, r10
    36a2:	8e df       	rcall	.-228    	; 0x35c0 <_ZN10UartDriver8sendByteEc>
USART_t * UartDriver::getUARTPort() {
	return uval;
}

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
	 for (volatile int i = 0; i < numchars; i++) {
    36a4:	89 81       	ldd	r24, Y+1	; 0x01
    36a6:	9a 81       	ldd	r25, Y+2	; 0x02
    36a8:	01 96       	adiw	r24, 0x01	; 1
    36aa:	89 83       	std	Y+1, r24	; 0x01
    36ac:	9a 83       	std	Y+2, r25	; 0x02
    36ae:	29 81       	ldd	r18, Y+1	; 0x01
    36b0:	3a 81       	ldd	r19, Y+2	; 0x02
    36b2:	2c 15       	cp	r18, r12
    36b4:	3d 05       	cpc	r19, r13
    36b6:	ac f2       	brlt	.-86     	; 0x3662 <_ZN10UartDriver10sendStringEPKcih+0x46>
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
		while (txQueue.isFull()) {}
		this->sendByte(str[i]);
	 }

	 return checksum;
    36b8:	8b 81       	ldd	r24, Y+3	; 0x03
    36ba:	09 c0       	rjmp	.+18     	; 0x36ce <_ZN10UartDriver10sendStringEPKcih+0xb2>
}

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
	 for (volatile int i = 0; i < numchars; i++) {
		if (str[i] == '\0') break;
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
    36bc:	e9 81       	ldd	r30, Y+1	; 0x01
    36be:	fa 81       	ldd	r31, Y+2	; 0x02
    36c0:	9b 81       	ldd	r25, Y+3	; 0x03
    36c2:	ee 0d       	add	r30, r14
    36c4:	ff 1d       	adc	r31, r15
    36c6:	80 81       	ld	r24, Z
    36c8:	89 27       	eor	r24, r25
    36ca:	8b 83       	std	Y+3, r24	; 0x03
    36cc:	df cf       	rjmp	.-66     	; 0x368c <_ZN10UartDriver10sendStringEPKcih+0x70>
		while (txQueue.isFull()) {}
		this->sendByte(str[i]);
	 }

	 return checksum;
    36ce:	23 96       	adiw	r28, 0x03	; 3
    36d0:	cd bf       	out	0x3d, r28	; 61
    36d2:	de bf       	out	0x3e, r29	; 62
    36d4:	df 91       	pop	r29
    36d6:	cf 91       	pop	r28
    36d8:	1f 91       	pop	r17
    36da:	0f 91       	pop	r16
    36dc:	ff 90       	pop	r15
    36de:	ef 90       	pop	r14
    36e0:	df 90       	pop	r13
    36e2:	cf 90       	pop	r12
    36e4:	bf 90       	pop	r11
    36e6:	af 90       	pop	r10
    36e8:	08 95       	ret

000036ea <__fixsfsi>:
    36ea:	04 d0       	rcall	.+8      	; 0x36f4 <__fixunssfsi>
    36ec:	68 94       	set
    36ee:	b1 11       	cpse	r27, r1
    36f0:	8d c0       	rjmp	.+282    	; 0x380c <__fp_szero>
    36f2:	08 95       	ret

000036f4 <__fixunssfsi>:
    36f4:	70 d0       	rcall	.+224    	; 0x37d6 <__fp_splitA>
    36f6:	88 f0       	brcs	.+34     	; 0x371a <__fixunssfsi+0x26>
    36f8:	9f 57       	subi	r25, 0x7F	; 127
    36fa:	90 f0       	brcs	.+36     	; 0x3720 <__fixunssfsi+0x2c>
    36fc:	b9 2f       	mov	r27, r25
    36fe:	99 27       	eor	r25, r25
    3700:	b7 51       	subi	r27, 0x17	; 23
    3702:	a0 f0       	brcs	.+40     	; 0x372c <__fixunssfsi+0x38>
    3704:	d1 f0       	breq	.+52     	; 0x373a <__fixunssfsi+0x46>
    3706:	66 0f       	add	r22, r22
    3708:	77 1f       	adc	r23, r23
    370a:	88 1f       	adc	r24, r24
    370c:	99 1f       	adc	r25, r25
    370e:	1a f0       	brmi	.+6      	; 0x3716 <__fixunssfsi+0x22>
    3710:	ba 95       	dec	r27
    3712:	c9 f7       	brne	.-14     	; 0x3706 <__fixunssfsi+0x12>
    3714:	12 c0       	rjmp	.+36     	; 0x373a <__fixunssfsi+0x46>
    3716:	b1 30       	cpi	r27, 0x01	; 1
    3718:	81 f0       	breq	.+32     	; 0x373a <__fixunssfsi+0x46>
    371a:	77 d0       	rcall	.+238    	; 0x380a <__fp_zero>
    371c:	b1 e0       	ldi	r27, 0x01	; 1
    371e:	08 95       	ret
    3720:	74 c0       	rjmp	.+232    	; 0x380a <__fp_zero>
    3722:	67 2f       	mov	r22, r23
    3724:	78 2f       	mov	r23, r24
    3726:	88 27       	eor	r24, r24
    3728:	b8 5f       	subi	r27, 0xF8	; 248
    372a:	39 f0       	breq	.+14     	; 0x373a <__fixunssfsi+0x46>
    372c:	b9 3f       	cpi	r27, 0xF9	; 249
    372e:	cc f3       	brlt	.-14     	; 0x3722 <__fixunssfsi+0x2e>
    3730:	86 95       	lsr	r24
    3732:	77 95       	ror	r23
    3734:	67 95       	ror	r22
    3736:	b3 95       	inc	r27
    3738:	d9 f7       	brne	.-10     	; 0x3730 <__fixunssfsi+0x3c>
    373a:	3e f4       	brtc	.+14     	; 0x374a <__fixunssfsi+0x56>
    373c:	90 95       	com	r25
    373e:	80 95       	com	r24
    3740:	70 95       	com	r23
    3742:	61 95       	neg	r22
    3744:	7f 4f       	sbci	r23, 0xFF	; 255
    3746:	8f 4f       	sbci	r24, 0xFF	; 255
    3748:	9f 4f       	sbci	r25, 0xFF	; 255
    374a:	08 95       	ret

0000374c <__floatunsisf>:
    374c:	e8 94       	clt
    374e:	09 c0       	rjmp	.+18     	; 0x3762 <__floatsisf+0x12>

00003750 <__floatsisf>:
    3750:	97 fb       	bst	r25, 7
    3752:	3e f4       	brtc	.+14     	; 0x3762 <__floatsisf+0x12>
    3754:	90 95       	com	r25
    3756:	80 95       	com	r24
    3758:	70 95       	com	r23
    375a:	61 95       	neg	r22
    375c:	7f 4f       	sbci	r23, 0xFF	; 255
    375e:	8f 4f       	sbci	r24, 0xFF	; 255
    3760:	9f 4f       	sbci	r25, 0xFF	; 255
    3762:	99 23       	and	r25, r25
    3764:	a9 f0       	breq	.+42     	; 0x3790 <__floatsisf+0x40>
    3766:	f9 2f       	mov	r31, r25
    3768:	96 e9       	ldi	r25, 0x96	; 150
    376a:	bb 27       	eor	r27, r27
    376c:	93 95       	inc	r25
    376e:	f6 95       	lsr	r31
    3770:	87 95       	ror	r24
    3772:	77 95       	ror	r23
    3774:	67 95       	ror	r22
    3776:	b7 95       	ror	r27
    3778:	f1 11       	cpse	r31, r1
    377a:	f8 cf       	rjmp	.-16     	; 0x376c <__floatsisf+0x1c>
    377c:	fa f4       	brpl	.+62     	; 0x37bc <__floatsisf+0x6c>
    377e:	bb 0f       	add	r27, r27
    3780:	11 f4       	brne	.+4      	; 0x3786 <__floatsisf+0x36>
    3782:	60 ff       	sbrs	r22, 0
    3784:	1b c0       	rjmp	.+54     	; 0x37bc <__floatsisf+0x6c>
    3786:	6f 5f       	subi	r22, 0xFF	; 255
    3788:	7f 4f       	sbci	r23, 0xFF	; 255
    378a:	8f 4f       	sbci	r24, 0xFF	; 255
    378c:	9f 4f       	sbci	r25, 0xFF	; 255
    378e:	16 c0       	rjmp	.+44     	; 0x37bc <__floatsisf+0x6c>
    3790:	88 23       	and	r24, r24
    3792:	11 f0       	breq	.+4      	; 0x3798 <__floatsisf+0x48>
    3794:	96 e9       	ldi	r25, 0x96	; 150
    3796:	11 c0       	rjmp	.+34     	; 0x37ba <__floatsisf+0x6a>
    3798:	77 23       	and	r23, r23
    379a:	21 f0       	breq	.+8      	; 0x37a4 <__floatsisf+0x54>
    379c:	9e e8       	ldi	r25, 0x8E	; 142
    379e:	87 2f       	mov	r24, r23
    37a0:	76 2f       	mov	r23, r22
    37a2:	05 c0       	rjmp	.+10     	; 0x37ae <__floatsisf+0x5e>
    37a4:	66 23       	and	r22, r22
    37a6:	71 f0       	breq	.+28     	; 0x37c4 <__floatsisf+0x74>
    37a8:	96 e8       	ldi	r25, 0x86	; 134
    37aa:	86 2f       	mov	r24, r22
    37ac:	70 e0       	ldi	r23, 0x00	; 0
    37ae:	60 e0       	ldi	r22, 0x00	; 0
    37b0:	2a f0       	brmi	.+10     	; 0x37bc <__floatsisf+0x6c>
    37b2:	9a 95       	dec	r25
    37b4:	66 0f       	add	r22, r22
    37b6:	77 1f       	adc	r23, r23
    37b8:	88 1f       	adc	r24, r24
    37ba:	da f7       	brpl	.-10     	; 0x37b2 <__floatsisf+0x62>
    37bc:	88 0f       	add	r24, r24
    37be:	96 95       	lsr	r25
    37c0:	87 95       	ror	r24
    37c2:	97 f9       	bld	r25, 7
    37c4:	08 95       	ret

000037c6 <__fp_split3>:
    37c6:	57 fd       	sbrc	r21, 7
    37c8:	90 58       	subi	r25, 0x80	; 128
    37ca:	44 0f       	add	r20, r20
    37cc:	55 1f       	adc	r21, r21
    37ce:	59 f0       	breq	.+22     	; 0x37e6 <__fp_splitA+0x10>
    37d0:	5f 3f       	cpi	r21, 0xFF	; 255
    37d2:	71 f0       	breq	.+28     	; 0x37f0 <__fp_splitA+0x1a>
    37d4:	47 95       	ror	r20

000037d6 <__fp_splitA>:
    37d6:	88 0f       	add	r24, r24
    37d8:	97 fb       	bst	r25, 7
    37da:	99 1f       	adc	r25, r25
    37dc:	61 f0       	breq	.+24     	; 0x37f6 <__fp_splitA+0x20>
    37de:	9f 3f       	cpi	r25, 0xFF	; 255
    37e0:	79 f0       	breq	.+30     	; 0x3800 <__fp_splitA+0x2a>
    37e2:	87 95       	ror	r24
    37e4:	08 95       	ret
    37e6:	12 16       	cp	r1, r18
    37e8:	13 06       	cpc	r1, r19
    37ea:	14 06       	cpc	r1, r20
    37ec:	55 1f       	adc	r21, r21
    37ee:	f2 cf       	rjmp	.-28     	; 0x37d4 <__fp_split3+0xe>
    37f0:	46 95       	lsr	r20
    37f2:	f1 df       	rcall	.-30     	; 0x37d6 <__fp_splitA>
    37f4:	08 c0       	rjmp	.+16     	; 0x3806 <__fp_splitA+0x30>
    37f6:	16 16       	cp	r1, r22
    37f8:	17 06       	cpc	r1, r23
    37fa:	18 06       	cpc	r1, r24
    37fc:	99 1f       	adc	r25, r25
    37fe:	f1 cf       	rjmp	.-30     	; 0x37e2 <__fp_splitA+0xc>
    3800:	86 95       	lsr	r24
    3802:	71 05       	cpc	r23, r1
    3804:	61 05       	cpc	r22, r1
    3806:	08 94       	sec
    3808:	08 95       	ret

0000380a <__fp_zero>:
    380a:	e8 94       	clt

0000380c <__fp_szero>:
    380c:	bb 27       	eor	r27, r27
    380e:	66 27       	eor	r22, r22
    3810:	77 27       	eor	r23, r23
    3812:	cb 01       	movw	r24, r22
    3814:	97 f9       	bld	r25, 7
    3816:	08 95       	ret

00003818 <__gesf2>:
    3818:	03 d0       	rcall	.+6      	; 0x3820 <__fp_cmp>
    381a:	08 f4       	brcc	.+2      	; 0x381e <__gesf2+0x6>
    381c:	8f ef       	ldi	r24, 0xFF	; 255
    381e:	08 95       	ret

00003820 <__fp_cmp>:
    3820:	99 0f       	add	r25, r25
    3822:	00 08       	sbc	r0, r0
    3824:	55 0f       	add	r21, r21
    3826:	aa 0b       	sbc	r26, r26
    3828:	e0 e8       	ldi	r30, 0x80	; 128
    382a:	fe ef       	ldi	r31, 0xFE	; 254
    382c:	16 16       	cp	r1, r22
    382e:	17 06       	cpc	r1, r23
    3830:	e8 07       	cpc	r30, r24
    3832:	f9 07       	cpc	r31, r25
    3834:	c0 f0       	brcs	.+48     	; 0x3866 <__fp_cmp+0x46>
    3836:	12 16       	cp	r1, r18
    3838:	13 06       	cpc	r1, r19
    383a:	e4 07       	cpc	r30, r20
    383c:	f5 07       	cpc	r31, r21
    383e:	98 f0       	brcs	.+38     	; 0x3866 <__fp_cmp+0x46>
    3840:	62 1b       	sub	r22, r18
    3842:	73 0b       	sbc	r23, r19
    3844:	84 0b       	sbc	r24, r20
    3846:	95 0b       	sbc	r25, r21
    3848:	39 f4       	brne	.+14     	; 0x3858 <__fp_cmp+0x38>
    384a:	0a 26       	eor	r0, r26
    384c:	61 f0       	breq	.+24     	; 0x3866 <__fp_cmp+0x46>
    384e:	23 2b       	or	r18, r19
    3850:	24 2b       	or	r18, r20
    3852:	25 2b       	or	r18, r21
    3854:	21 f4       	brne	.+8      	; 0x385e <__fp_cmp+0x3e>
    3856:	08 95       	ret
    3858:	0a 26       	eor	r0, r26
    385a:	09 f4       	brne	.+2      	; 0x385e <__fp_cmp+0x3e>
    385c:	a1 40       	sbci	r26, 0x01	; 1
    385e:	a6 95       	lsr	r26
    3860:	8f ef       	ldi	r24, 0xFF	; 255
    3862:	81 1d       	adc	r24, r1
    3864:	81 1d       	adc	r24, r1
    3866:	08 95       	ret

00003868 <__tablejump2__>:
    3868:	ee 0f       	add	r30, r30
    386a:	ff 1f       	adc	r31, r31

0000386c <__tablejump__>:
    386c:	05 90       	lpm	r0, Z+
    386e:	f4 91       	lpm	r31, Z
    3870:	e0 2d       	mov	r30, r0
    3872:	19 94       	eijmp

00003874 <__umulhisi3>:
    3874:	a2 9f       	mul	r26, r18
    3876:	b0 01       	movw	r22, r0
    3878:	b3 9f       	mul	r27, r19
    387a:	c0 01       	movw	r24, r0
    387c:	a3 9f       	mul	r26, r19
    387e:	70 0d       	add	r23, r0
    3880:	81 1d       	adc	r24, r1
    3882:	11 24       	eor	r1, r1
    3884:	91 1d       	adc	r25, r1
    3886:	b2 9f       	mul	r27, r18
    3888:	70 0d       	add	r23, r0
    388a:	81 1d       	adc	r24, r1
    388c:	11 24       	eor	r1, r1
    388e:	91 1d       	adc	r25, r1
    3890:	08 95       	ret

00003892 <__tablejump_elpm__>:
    3892:	07 90       	elpm	r0, Z+
    3894:	f6 91       	elpm	r31, Z
    3896:	e0 2d       	mov	r30, r0
    3898:	19 94       	eijmp

0000389a <malloc>:
    389a:	cf 93       	push	r28
    389c:	df 93       	push	r29
    389e:	82 30       	cpi	r24, 0x02	; 2
    38a0:	91 05       	cpc	r25, r1
    38a2:	10 f4       	brcc	.+4      	; 0x38a8 <malloc+0xe>
    38a4:	82 e0       	ldi	r24, 0x02	; 2
    38a6:	90 e0       	ldi	r25, 0x00	; 0
    38a8:	e0 91 29 21 	lds	r30, 0x2129
    38ac:	f0 91 2a 21 	lds	r31, 0x212A
    38b0:	20 e0       	ldi	r18, 0x00	; 0
    38b2:	30 e0       	ldi	r19, 0x00	; 0
    38b4:	a0 e0       	ldi	r26, 0x00	; 0
    38b6:	b0 e0       	ldi	r27, 0x00	; 0
    38b8:	30 97       	sbiw	r30, 0x00	; 0
    38ba:	39 f1       	breq	.+78     	; 0x390a <malloc+0x70>
    38bc:	40 81       	ld	r20, Z
    38be:	51 81       	ldd	r21, Z+1	; 0x01
    38c0:	48 17       	cp	r20, r24
    38c2:	59 07       	cpc	r21, r25
    38c4:	b8 f0       	brcs	.+46     	; 0x38f4 <malloc+0x5a>
    38c6:	48 17       	cp	r20, r24
    38c8:	59 07       	cpc	r21, r25
    38ca:	71 f4       	brne	.+28     	; 0x38e8 <malloc+0x4e>
    38cc:	82 81       	ldd	r24, Z+2	; 0x02
    38ce:	93 81       	ldd	r25, Z+3	; 0x03
    38d0:	10 97       	sbiw	r26, 0x00	; 0
    38d2:	29 f0       	breq	.+10     	; 0x38de <malloc+0x44>
    38d4:	12 96       	adiw	r26, 0x02	; 2
    38d6:	8d 93       	st	X+, r24
    38d8:	9c 93       	st	X, r25
    38da:	13 97       	sbiw	r26, 0x03	; 3
    38dc:	2c c0       	rjmp	.+88     	; 0x3936 <malloc+0x9c>
    38de:	80 93 29 21 	sts	0x2129, r24
    38e2:	90 93 2a 21 	sts	0x212A, r25
    38e6:	27 c0       	rjmp	.+78     	; 0x3936 <malloc+0x9c>
    38e8:	21 15       	cp	r18, r1
    38ea:	31 05       	cpc	r19, r1
    38ec:	31 f0       	breq	.+12     	; 0x38fa <malloc+0x60>
    38ee:	42 17       	cp	r20, r18
    38f0:	53 07       	cpc	r21, r19
    38f2:	18 f0       	brcs	.+6      	; 0x38fa <malloc+0x60>
    38f4:	a9 01       	movw	r20, r18
    38f6:	db 01       	movw	r26, r22
    38f8:	01 c0       	rjmp	.+2      	; 0x38fc <malloc+0x62>
    38fa:	ef 01       	movw	r28, r30
    38fc:	9a 01       	movw	r18, r20
    38fe:	bd 01       	movw	r22, r26
    3900:	df 01       	movw	r26, r30
    3902:	02 80       	ldd	r0, Z+2	; 0x02
    3904:	f3 81       	ldd	r31, Z+3	; 0x03
    3906:	e0 2d       	mov	r30, r0
    3908:	d7 cf       	rjmp	.-82     	; 0x38b8 <malloc+0x1e>
    390a:	21 15       	cp	r18, r1
    390c:	31 05       	cpc	r19, r1
    390e:	f9 f0       	breq	.+62     	; 0x394e <malloc+0xb4>
    3910:	28 1b       	sub	r18, r24
    3912:	39 0b       	sbc	r19, r25
    3914:	24 30       	cpi	r18, 0x04	; 4
    3916:	31 05       	cpc	r19, r1
    3918:	80 f4       	brcc	.+32     	; 0x393a <malloc+0xa0>
    391a:	8a 81       	ldd	r24, Y+2	; 0x02
    391c:	9b 81       	ldd	r25, Y+3	; 0x03
    391e:	61 15       	cp	r22, r1
    3920:	71 05       	cpc	r23, r1
    3922:	21 f0       	breq	.+8      	; 0x392c <malloc+0x92>
    3924:	fb 01       	movw	r30, r22
    3926:	82 83       	std	Z+2, r24	; 0x02
    3928:	93 83       	std	Z+3, r25	; 0x03
    392a:	04 c0       	rjmp	.+8      	; 0x3934 <malloc+0x9a>
    392c:	80 93 29 21 	sts	0x2129, r24
    3930:	90 93 2a 21 	sts	0x212A, r25
    3934:	fe 01       	movw	r30, r28
    3936:	32 96       	adiw	r30, 0x02	; 2
    3938:	44 c0       	rjmp	.+136    	; 0x39c2 <malloc+0x128>
    393a:	fe 01       	movw	r30, r28
    393c:	e2 0f       	add	r30, r18
    393e:	f3 1f       	adc	r31, r19
    3940:	81 93       	st	Z+, r24
    3942:	91 93       	st	Z+, r25
    3944:	22 50       	subi	r18, 0x02	; 2
    3946:	31 09       	sbc	r19, r1
    3948:	28 83       	st	Y, r18
    394a:	39 83       	std	Y+1, r19	; 0x01
    394c:	3a c0       	rjmp	.+116    	; 0x39c2 <malloc+0x128>
    394e:	20 91 27 21 	lds	r18, 0x2127
    3952:	30 91 28 21 	lds	r19, 0x2128
    3956:	23 2b       	or	r18, r19
    3958:	41 f4       	brne	.+16     	; 0x396a <malloc+0xd0>
    395a:	20 91 02 20 	lds	r18, 0x2002
    395e:	30 91 03 20 	lds	r19, 0x2003
    3962:	20 93 27 21 	sts	0x2127, r18
    3966:	30 93 28 21 	sts	0x2128, r19
    396a:	20 91 00 20 	lds	r18, 0x2000
    396e:	30 91 01 20 	lds	r19, 0x2001
    3972:	21 15       	cp	r18, r1
    3974:	31 05       	cpc	r19, r1
    3976:	41 f4       	brne	.+16     	; 0x3988 <malloc+0xee>
    3978:	2d b7       	in	r18, 0x3d	; 61
    397a:	3e b7       	in	r19, 0x3e	; 62
    397c:	40 91 04 20 	lds	r20, 0x2004
    3980:	50 91 05 20 	lds	r21, 0x2005
    3984:	24 1b       	sub	r18, r20
    3986:	35 0b       	sbc	r19, r21
    3988:	e0 91 27 21 	lds	r30, 0x2127
    398c:	f0 91 28 21 	lds	r31, 0x2128
    3990:	e2 17       	cp	r30, r18
    3992:	f3 07       	cpc	r31, r19
    3994:	a0 f4       	brcc	.+40     	; 0x39be <malloc+0x124>
    3996:	2e 1b       	sub	r18, r30
    3998:	3f 0b       	sbc	r19, r31
    399a:	28 17       	cp	r18, r24
    399c:	39 07       	cpc	r19, r25
    399e:	78 f0       	brcs	.+30     	; 0x39be <malloc+0x124>
    39a0:	ac 01       	movw	r20, r24
    39a2:	4e 5f       	subi	r20, 0xFE	; 254
    39a4:	5f 4f       	sbci	r21, 0xFF	; 255
    39a6:	24 17       	cp	r18, r20
    39a8:	35 07       	cpc	r19, r21
    39aa:	48 f0       	brcs	.+18     	; 0x39be <malloc+0x124>
    39ac:	4e 0f       	add	r20, r30
    39ae:	5f 1f       	adc	r21, r31
    39b0:	40 93 27 21 	sts	0x2127, r20
    39b4:	50 93 28 21 	sts	0x2128, r21
    39b8:	81 93       	st	Z+, r24
    39ba:	91 93       	st	Z+, r25
    39bc:	02 c0       	rjmp	.+4      	; 0x39c2 <malloc+0x128>
    39be:	e0 e0       	ldi	r30, 0x00	; 0
    39c0:	f0 e0       	ldi	r31, 0x00	; 0
    39c2:	cf 01       	movw	r24, r30
    39c4:	df 91       	pop	r29
    39c6:	cf 91       	pop	r28
    39c8:	08 95       	ret

000039ca <free>:
    39ca:	cf 93       	push	r28
    39cc:	df 93       	push	r29
    39ce:	00 97       	sbiw	r24, 0x00	; 0
    39d0:	09 f4       	brne	.+2      	; 0x39d4 <free+0xa>
    39d2:	87 c0       	rjmp	.+270    	; 0x3ae2 <free+0x118>
    39d4:	fc 01       	movw	r30, r24
    39d6:	32 97       	sbiw	r30, 0x02	; 2
    39d8:	12 82       	std	Z+2, r1	; 0x02
    39da:	13 82       	std	Z+3, r1	; 0x03
    39dc:	c0 91 29 21 	lds	r28, 0x2129
    39e0:	d0 91 2a 21 	lds	r29, 0x212A
    39e4:	20 97       	sbiw	r28, 0x00	; 0
    39e6:	81 f4       	brne	.+32     	; 0x3a08 <free+0x3e>
    39e8:	20 81       	ld	r18, Z
    39ea:	31 81       	ldd	r19, Z+1	; 0x01
    39ec:	28 0f       	add	r18, r24
    39ee:	39 1f       	adc	r19, r25
    39f0:	80 91 27 21 	lds	r24, 0x2127
    39f4:	90 91 28 21 	lds	r25, 0x2128
    39f8:	82 17       	cp	r24, r18
    39fa:	93 07       	cpc	r25, r19
    39fc:	79 f5       	brne	.+94     	; 0x3a5c <free+0x92>
    39fe:	e0 93 27 21 	sts	0x2127, r30
    3a02:	f0 93 28 21 	sts	0x2128, r31
    3a06:	6d c0       	rjmp	.+218    	; 0x3ae2 <free+0x118>
    3a08:	de 01       	movw	r26, r28
    3a0a:	20 e0       	ldi	r18, 0x00	; 0
    3a0c:	30 e0       	ldi	r19, 0x00	; 0
    3a0e:	ae 17       	cp	r26, r30
    3a10:	bf 07       	cpc	r27, r31
    3a12:	50 f4       	brcc	.+20     	; 0x3a28 <free+0x5e>
    3a14:	12 96       	adiw	r26, 0x02	; 2
    3a16:	4d 91       	ld	r20, X+
    3a18:	5c 91       	ld	r21, X
    3a1a:	13 97       	sbiw	r26, 0x03	; 3
    3a1c:	9d 01       	movw	r18, r26
    3a1e:	41 15       	cp	r20, r1
    3a20:	51 05       	cpc	r21, r1
    3a22:	09 f1       	breq	.+66     	; 0x3a66 <free+0x9c>
    3a24:	da 01       	movw	r26, r20
    3a26:	f3 cf       	rjmp	.-26     	; 0x3a0e <free+0x44>
    3a28:	a2 83       	std	Z+2, r26	; 0x02
    3a2a:	b3 83       	std	Z+3, r27	; 0x03
    3a2c:	40 81       	ld	r20, Z
    3a2e:	51 81       	ldd	r21, Z+1	; 0x01
    3a30:	84 0f       	add	r24, r20
    3a32:	95 1f       	adc	r25, r21
    3a34:	8a 17       	cp	r24, r26
    3a36:	9b 07       	cpc	r25, r27
    3a38:	71 f4       	brne	.+28     	; 0x3a56 <free+0x8c>
    3a3a:	8d 91       	ld	r24, X+
    3a3c:	9c 91       	ld	r25, X
    3a3e:	11 97       	sbiw	r26, 0x01	; 1
    3a40:	84 0f       	add	r24, r20
    3a42:	95 1f       	adc	r25, r21
    3a44:	02 96       	adiw	r24, 0x02	; 2
    3a46:	80 83       	st	Z, r24
    3a48:	91 83       	std	Z+1, r25	; 0x01
    3a4a:	12 96       	adiw	r26, 0x02	; 2
    3a4c:	8d 91       	ld	r24, X+
    3a4e:	9c 91       	ld	r25, X
    3a50:	13 97       	sbiw	r26, 0x03	; 3
    3a52:	82 83       	std	Z+2, r24	; 0x02
    3a54:	93 83       	std	Z+3, r25	; 0x03
    3a56:	21 15       	cp	r18, r1
    3a58:	31 05       	cpc	r19, r1
    3a5a:	29 f4       	brne	.+10     	; 0x3a66 <free+0x9c>
    3a5c:	e0 93 29 21 	sts	0x2129, r30
    3a60:	f0 93 2a 21 	sts	0x212A, r31
    3a64:	3e c0       	rjmp	.+124    	; 0x3ae2 <free+0x118>
    3a66:	d9 01       	movw	r26, r18
    3a68:	12 96       	adiw	r26, 0x02	; 2
    3a6a:	ed 93       	st	X+, r30
    3a6c:	fc 93       	st	X, r31
    3a6e:	13 97       	sbiw	r26, 0x03	; 3
    3a70:	4d 91       	ld	r20, X+
    3a72:	5d 91       	ld	r21, X+
    3a74:	a4 0f       	add	r26, r20
    3a76:	b5 1f       	adc	r27, r21
    3a78:	ea 17       	cp	r30, r26
    3a7a:	fb 07       	cpc	r31, r27
    3a7c:	79 f4       	brne	.+30     	; 0x3a9c <free+0xd2>
    3a7e:	80 81       	ld	r24, Z
    3a80:	91 81       	ldd	r25, Z+1	; 0x01
    3a82:	84 0f       	add	r24, r20
    3a84:	95 1f       	adc	r25, r21
    3a86:	02 96       	adiw	r24, 0x02	; 2
    3a88:	d9 01       	movw	r26, r18
    3a8a:	8d 93       	st	X+, r24
    3a8c:	9c 93       	st	X, r25
    3a8e:	11 97       	sbiw	r26, 0x01	; 1
    3a90:	82 81       	ldd	r24, Z+2	; 0x02
    3a92:	93 81       	ldd	r25, Z+3	; 0x03
    3a94:	12 96       	adiw	r26, 0x02	; 2
    3a96:	8d 93       	st	X+, r24
    3a98:	9c 93       	st	X, r25
    3a9a:	13 97       	sbiw	r26, 0x03	; 3
    3a9c:	e0 e0       	ldi	r30, 0x00	; 0
    3a9e:	f0 e0       	ldi	r31, 0x00	; 0
    3aa0:	8a 81       	ldd	r24, Y+2	; 0x02
    3aa2:	9b 81       	ldd	r25, Y+3	; 0x03
    3aa4:	00 97       	sbiw	r24, 0x00	; 0
    3aa6:	19 f0       	breq	.+6      	; 0x3aae <free+0xe4>
    3aa8:	fe 01       	movw	r30, r28
    3aaa:	ec 01       	movw	r28, r24
    3aac:	f9 cf       	rjmp	.-14     	; 0x3aa0 <free+0xd6>
    3aae:	ce 01       	movw	r24, r28
    3ab0:	02 96       	adiw	r24, 0x02	; 2
    3ab2:	28 81       	ld	r18, Y
    3ab4:	39 81       	ldd	r19, Y+1	; 0x01
    3ab6:	82 0f       	add	r24, r18
    3ab8:	93 1f       	adc	r25, r19
    3aba:	20 91 27 21 	lds	r18, 0x2127
    3abe:	30 91 28 21 	lds	r19, 0x2128
    3ac2:	28 17       	cp	r18, r24
    3ac4:	39 07       	cpc	r19, r25
    3ac6:	69 f4       	brne	.+26     	; 0x3ae2 <free+0x118>
    3ac8:	30 97       	sbiw	r30, 0x00	; 0
    3aca:	29 f4       	brne	.+10     	; 0x3ad6 <free+0x10c>
    3acc:	10 92 29 21 	sts	0x2129, r1
    3ad0:	10 92 2a 21 	sts	0x212A, r1
    3ad4:	02 c0       	rjmp	.+4      	; 0x3ada <free+0x110>
    3ad6:	12 82       	std	Z+2, r1	; 0x02
    3ad8:	13 82       	std	Z+3, r1	; 0x03
    3ada:	c0 93 27 21 	sts	0x2127, r28
    3ade:	d0 93 28 21 	sts	0x2128, r29
    3ae2:	df 91       	pop	r29
    3ae4:	cf 91       	pop	r28
    3ae6:	08 95       	ret

00003ae8 <__itoa_ncheck>:
    3ae8:	bb 27       	eor	r27, r27
    3aea:	4a 30       	cpi	r20, 0x0A	; 10
    3aec:	31 f4       	brne	.+12     	; 0x3afa <__itoa_ncheck+0x12>
    3aee:	99 23       	and	r25, r25
    3af0:	22 f4       	brpl	.+8      	; 0x3afa <__itoa_ncheck+0x12>
    3af2:	bd e2       	ldi	r27, 0x2D	; 45
    3af4:	90 95       	com	r25
    3af6:	81 95       	neg	r24
    3af8:	9f 4f       	sbci	r25, 0xFF	; 255
    3afa:	01 c0       	rjmp	.+2      	; 0x3afe <__utoa_common>

00003afc <__utoa_ncheck>:
    3afc:	bb 27       	eor	r27, r27

00003afe <__utoa_common>:
    3afe:	fb 01       	movw	r30, r22
    3b00:	55 27       	eor	r21, r21
    3b02:	aa 27       	eor	r26, r26
    3b04:	88 0f       	add	r24, r24
    3b06:	99 1f       	adc	r25, r25
    3b08:	aa 1f       	adc	r26, r26
    3b0a:	a4 17       	cp	r26, r20
    3b0c:	10 f0       	brcs	.+4      	; 0x3b12 <__utoa_common+0x14>
    3b0e:	a4 1b       	sub	r26, r20
    3b10:	83 95       	inc	r24
    3b12:	50 51       	subi	r21, 0x10	; 16
    3b14:	b9 f7       	brne	.-18     	; 0x3b04 <__utoa_common+0x6>
    3b16:	a0 5d       	subi	r26, 0xD0	; 208
    3b18:	aa 33       	cpi	r26, 0x3A	; 58
    3b1a:	08 f0       	brcs	.+2      	; 0x3b1e <__utoa_common+0x20>
    3b1c:	a9 5d       	subi	r26, 0xD9	; 217
    3b1e:	a1 93       	st	Z+, r26
    3b20:	00 97       	sbiw	r24, 0x00	; 0
    3b22:	79 f7       	brne	.-34     	; 0x3b02 <__utoa_common+0x4>
    3b24:	b1 11       	cpse	r27, r1
    3b26:	b1 93       	st	Z+, r27
    3b28:	11 92       	st	Z+, r1
    3b2a:	cb 01       	movw	r24, r22
    3b2c:	26 c2       	rjmp	.+1100   	; 0x3f7a <strrev>

00003b2e <sprintf>:
    3b2e:	0f 93       	push	r16
    3b30:	1f 93       	push	r17
    3b32:	cf 93       	push	r28
    3b34:	df 93       	push	r29
    3b36:	cd b7       	in	r28, 0x3d	; 61
    3b38:	de b7       	in	r29, 0x3e	; 62
    3b3a:	2e 97       	sbiw	r28, 0x0e	; 14
    3b3c:	cd bf       	out	0x3d, r28	; 61
    3b3e:	de bf       	out	0x3e, r29	; 62
    3b40:	0e 89       	ldd	r16, Y+22	; 0x16
    3b42:	1f 89       	ldd	r17, Y+23	; 0x17
    3b44:	86 e0       	ldi	r24, 0x06	; 6
    3b46:	8c 83       	std	Y+4, r24	; 0x04
    3b48:	09 83       	std	Y+1, r16	; 0x01
    3b4a:	1a 83       	std	Y+2, r17	; 0x02
    3b4c:	8f ef       	ldi	r24, 0xFF	; 255
    3b4e:	9f e7       	ldi	r25, 0x7F	; 127
    3b50:	8d 83       	std	Y+5, r24	; 0x05
    3b52:	9e 83       	std	Y+6, r25	; 0x06
    3b54:	ae 01       	movw	r20, r28
    3b56:	46 5e       	subi	r20, 0xE6	; 230
    3b58:	5f 4f       	sbci	r21, 0xFF	; 255
    3b5a:	68 8d       	ldd	r22, Y+24	; 0x18
    3b5c:	79 8d       	ldd	r23, Y+25	; 0x19
    3b5e:	ce 01       	movw	r24, r28
    3b60:	01 96       	adiw	r24, 0x01	; 1
    3b62:	0d d0       	rcall	.+26     	; 0x3b7e <vfprintf>
    3b64:	ef 81       	ldd	r30, Y+7	; 0x07
    3b66:	f8 85       	ldd	r31, Y+8	; 0x08
    3b68:	e0 0f       	add	r30, r16
    3b6a:	f1 1f       	adc	r31, r17
    3b6c:	10 82       	st	Z, r1
    3b6e:	2e 96       	adiw	r28, 0x0e	; 14
    3b70:	cd bf       	out	0x3d, r28	; 61
    3b72:	de bf       	out	0x3e, r29	; 62
    3b74:	df 91       	pop	r29
    3b76:	cf 91       	pop	r28
    3b78:	1f 91       	pop	r17
    3b7a:	0f 91       	pop	r16
    3b7c:	08 95       	ret

00003b7e <vfprintf>:
    3b7e:	2f 92       	push	r2
    3b80:	3f 92       	push	r3
    3b82:	4f 92       	push	r4
    3b84:	5f 92       	push	r5
    3b86:	6f 92       	push	r6
    3b88:	7f 92       	push	r7
    3b8a:	8f 92       	push	r8
    3b8c:	9f 92       	push	r9
    3b8e:	af 92       	push	r10
    3b90:	bf 92       	push	r11
    3b92:	cf 92       	push	r12
    3b94:	df 92       	push	r13
    3b96:	ef 92       	push	r14
    3b98:	ff 92       	push	r15
    3b9a:	0f 93       	push	r16
    3b9c:	1f 93       	push	r17
    3b9e:	cf 93       	push	r28
    3ba0:	df 93       	push	r29
    3ba2:	cd b7       	in	r28, 0x3d	; 61
    3ba4:	de b7       	in	r29, 0x3e	; 62
    3ba6:	2c 97       	sbiw	r28, 0x0c	; 12
    3ba8:	cd bf       	out	0x3d, r28	; 61
    3baa:	de bf       	out	0x3e, r29	; 62
    3bac:	7c 01       	movw	r14, r24
    3bae:	6b 01       	movw	r12, r22
    3bb0:	8a 01       	movw	r16, r20
    3bb2:	fc 01       	movw	r30, r24
    3bb4:	16 82       	std	Z+6, r1	; 0x06
    3bb6:	17 82       	std	Z+7, r1	; 0x07
    3bb8:	83 81       	ldd	r24, Z+3	; 0x03
    3bba:	81 ff       	sbrs	r24, 1
    3bbc:	b0 c1       	rjmp	.+864    	; 0x3f1e <vfprintf+0x3a0>
    3bbe:	ce 01       	movw	r24, r28
    3bc0:	01 96       	adiw	r24, 0x01	; 1
    3bc2:	4c 01       	movw	r8, r24
    3bc4:	f7 01       	movw	r30, r14
    3bc6:	93 81       	ldd	r25, Z+3	; 0x03
    3bc8:	f6 01       	movw	r30, r12
    3bca:	93 fd       	sbrc	r25, 3
    3bcc:	85 91       	lpm	r24, Z+
    3bce:	93 ff       	sbrs	r25, 3
    3bd0:	81 91       	ld	r24, Z+
    3bd2:	6f 01       	movw	r12, r30
    3bd4:	88 23       	and	r24, r24
    3bd6:	09 f4       	brne	.+2      	; 0x3bda <vfprintf+0x5c>
    3bd8:	9e c1       	rjmp	.+828    	; 0x3f16 <vfprintf+0x398>
    3bda:	85 32       	cpi	r24, 0x25	; 37
    3bdc:	39 f4       	brne	.+14     	; 0x3bec <vfprintf+0x6e>
    3bde:	93 fd       	sbrc	r25, 3
    3be0:	85 91       	lpm	r24, Z+
    3be2:	93 ff       	sbrs	r25, 3
    3be4:	81 91       	ld	r24, Z+
    3be6:	6f 01       	movw	r12, r30
    3be8:	85 32       	cpi	r24, 0x25	; 37
    3bea:	21 f4       	brne	.+8      	; 0x3bf4 <vfprintf+0x76>
    3bec:	b7 01       	movw	r22, r14
    3bee:	90 e0       	ldi	r25, 0x00	; 0
    3bf0:	d4 d1       	rcall	.+936    	; 0x3f9a <fputc>
    3bf2:	e8 cf       	rjmp	.-48     	; 0x3bc4 <vfprintf+0x46>
    3bf4:	51 2c       	mov	r5, r1
    3bf6:	31 2c       	mov	r3, r1
    3bf8:	20 e0       	ldi	r18, 0x00	; 0
    3bfa:	20 32       	cpi	r18, 0x20	; 32
    3bfc:	a0 f4       	brcc	.+40     	; 0x3c26 <vfprintf+0xa8>
    3bfe:	8b 32       	cpi	r24, 0x2B	; 43
    3c00:	69 f0       	breq	.+26     	; 0x3c1c <vfprintf+0x9e>
    3c02:	30 f4       	brcc	.+12     	; 0x3c10 <vfprintf+0x92>
    3c04:	80 32       	cpi	r24, 0x20	; 32
    3c06:	59 f0       	breq	.+22     	; 0x3c1e <vfprintf+0xa0>
    3c08:	83 32       	cpi	r24, 0x23	; 35
    3c0a:	69 f4       	brne	.+26     	; 0x3c26 <vfprintf+0xa8>
    3c0c:	20 61       	ori	r18, 0x10	; 16
    3c0e:	2c c0       	rjmp	.+88     	; 0x3c68 <vfprintf+0xea>
    3c10:	8d 32       	cpi	r24, 0x2D	; 45
    3c12:	39 f0       	breq	.+14     	; 0x3c22 <vfprintf+0xa4>
    3c14:	80 33       	cpi	r24, 0x30	; 48
    3c16:	39 f4       	brne	.+14     	; 0x3c26 <vfprintf+0xa8>
    3c18:	21 60       	ori	r18, 0x01	; 1
    3c1a:	26 c0       	rjmp	.+76     	; 0x3c68 <vfprintf+0xea>
    3c1c:	22 60       	ori	r18, 0x02	; 2
    3c1e:	24 60       	ori	r18, 0x04	; 4
    3c20:	23 c0       	rjmp	.+70     	; 0x3c68 <vfprintf+0xea>
    3c22:	28 60       	ori	r18, 0x08	; 8
    3c24:	21 c0       	rjmp	.+66     	; 0x3c68 <vfprintf+0xea>
    3c26:	27 fd       	sbrc	r18, 7
    3c28:	27 c0       	rjmp	.+78     	; 0x3c78 <vfprintf+0xfa>
    3c2a:	30 ed       	ldi	r19, 0xD0	; 208
    3c2c:	38 0f       	add	r19, r24
    3c2e:	3a 30       	cpi	r19, 0x0A	; 10
    3c30:	78 f4       	brcc	.+30     	; 0x3c50 <vfprintf+0xd2>
    3c32:	26 ff       	sbrs	r18, 6
    3c34:	06 c0       	rjmp	.+12     	; 0x3c42 <vfprintf+0xc4>
    3c36:	fa e0       	ldi	r31, 0x0A	; 10
    3c38:	5f 9e       	mul	r5, r31
    3c3a:	30 0d       	add	r19, r0
    3c3c:	11 24       	eor	r1, r1
    3c3e:	53 2e       	mov	r5, r19
    3c40:	13 c0       	rjmp	.+38     	; 0x3c68 <vfprintf+0xea>
    3c42:	8a e0       	ldi	r24, 0x0A	; 10
    3c44:	38 9e       	mul	r3, r24
    3c46:	30 0d       	add	r19, r0
    3c48:	11 24       	eor	r1, r1
    3c4a:	33 2e       	mov	r3, r19
    3c4c:	20 62       	ori	r18, 0x20	; 32
    3c4e:	0c c0       	rjmp	.+24     	; 0x3c68 <vfprintf+0xea>
    3c50:	8e 32       	cpi	r24, 0x2E	; 46
    3c52:	21 f4       	brne	.+8      	; 0x3c5c <vfprintf+0xde>
    3c54:	26 fd       	sbrc	r18, 6
    3c56:	5f c1       	rjmp	.+702    	; 0x3f16 <vfprintf+0x398>
    3c58:	20 64       	ori	r18, 0x40	; 64
    3c5a:	06 c0       	rjmp	.+12     	; 0x3c68 <vfprintf+0xea>
    3c5c:	8c 36       	cpi	r24, 0x6C	; 108
    3c5e:	11 f4       	brne	.+4      	; 0x3c64 <vfprintf+0xe6>
    3c60:	20 68       	ori	r18, 0x80	; 128
    3c62:	02 c0       	rjmp	.+4      	; 0x3c68 <vfprintf+0xea>
    3c64:	88 36       	cpi	r24, 0x68	; 104
    3c66:	41 f4       	brne	.+16     	; 0x3c78 <vfprintf+0xfa>
    3c68:	f6 01       	movw	r30, r12
    3c6a:	93 fd       	sbrc	r25, 3
    3c6c:	85 91       	lpm	r24, Z+
    3c6e:	93 ff       	sbrs	r25, 3
    3c70:	81 91       	ld	r24, Z+
    3c72:	6f 01       	movw	r12, r30
    3c74:	81 11       	cpse	r24, r1
    3c76:	c1 cf       	rjmp	.-126    	; 0x3bfa <vfprintf+0x7c>
    3c78:	98 2f       	mov	r25, r24
    3c7a:	9f 7d       	andi	r25, 0xDF	; 223
    3c7c:	95 54       	subi	r25, 0x45	; 69
    3c7e:	93 30       	cpi	r25, 0x03	; 3
    3c80:	28 f4       	brcc	.+10     	; 0x3c8c <vfprintf+0x10e>
    3c82:	0c 5f       	subi	r16, 0xFC	; 252
    3c84:	1f 4f       	sbci	r17, 0xFF	; 255
    3c86:	ff e3       	ldi	r31, 0x3F	; 63
    3c88:	f9 83       	std	Y+1, r31	; 0x01
    3c8a:	0d c0       	rjmp	.+26     	; 0x3ca6 <vfprintf+0x128>
    3c8c:	83 36       	cpi	r24, 0x63	; 99
    3c8e:	31 f0       	breq	.+12     	; 0x3c9c <vfprintf+0x11e>
    3c90:	83 37       	cpi	r24, 0x73	; 115
    3c92:	71 f0       	breq	.+28     	; 0x3cb0 <vfprintf+0x132>
    3c94:	83 35       	cpi	r24, 0x53	; 83
    3c96:	09 f0       	breq	.+2      	; 0x3c9a <vfprintf+0x11c>
    3c98:	57 c0       	rjmp	.+174    	; 0x3d48 <vfprintf+0x1ca>
    3c9a:	21 c0       	rjmp	.+66     	; 0x3cde <vfprintf+0x160>
    3c9c:	f8 01       	movw	r30, r16
    3c9e:	80 81       	ld	r24, Z
    3ca0:	89 83       	std	Y+1, r24	; 0x01
    3ca2:	0e 5f       	subi	r16, 0xFE	; 254
    3ca4:	1f 4f       	sbci	r17, 0xFF	; 255
    3ca6:	44 24       	eor	r4, r4
    3ca8:	43 94       	inc	r4
    3caa:	51 2c       	mov	r5, r1
    3cac:	54 01       	movw	r10, r8
    3cae:	14 c0       	rjmp	.+40     	; 0x3cd8 <vfprintf+0x15a>
    3cb0:	38 01       	movw	r6, r16
    3cb2:	f2 e0       	ldi	r31, 0x02	; 2
    3cb4:	6f 0e       	add	r6, r31
    3cb6:	71 1c       	adc	r7, r1
    3cb8:	f8 01       	movw	r30, r16
    3cba:	a0 80       	ld	r10, Z
    3cbc:	b1 80       	ldd	r11, Z+1	; 0x01
    3cbe:	26 ff       	sbrs	r18, 6
    3cc0:	03 c0       	rjmp	.+6      	; 0x3cc8 <vfprintf+0x14a>
    3cc2:	65 2d       	mov	r22, r5
    3cc4:	70 e0       	ldi	r23, 0x00	; 0
    3cc6:	02 c0       	rjmp	.+4      	; 0x3ccc <vfprintf+0x14e>
    3cc8:	6f ef       	ldi	r22, 0xFF	; 255
    3cca:	7f ef       	ldi	r23, 0xFF	; 255
    3ccc:	c5 01       	movw	r24, r10
    3cce:	2c 87       	std	Y+12, r18	; 0x0c
    3cd0:	49 d1       	rcall	.+658    	; 0x3f64 <strnlen>
    3cd2:	2c 01       	movw	r4, r24
    3cd4:	83 01       	movw	r16, r6
    3cd6:	2c 85       	ldd	r18, Y+12	; 0x0c
    3cd8:	2f 77       	andi	r18, 0x7F	; 127
    3cda:	22 2e       	mov	r2, r18
    3cdc:	16 c0       	rjmp	.+44     	; 0x3d0a <vfprintf+0x18c>
    3cde:	38 01       	movw	r6, r16
    3ce0:	f2 e0       	ldi	r31, 0x02	; 2
    3ce2:	6f 0e       	add	r6, r31
    3ce4:	71 1c       	adc	r7, r1
    3ce6:	f8 01       	movw	r30, r16
    3ce8:	a0 80       	ld	r10, Z
    3cea:	b1 80       	ldd	r11, Z+1	; 0x01
    3cec:	26 ff       	sbrs	r18, 6
    3cee:	03 c0       	rjmp	.+6      	; 0x3cf6 <vfprintf+0x178>
    3cf0:	65 2d       	mov	r22, r5
    3cf2:	70 e0       	ldi	r23, 0x00	; 0
    3cf4:	02 c0       	rjmp	.+4      	; 0x3cfa <vfprintf+0x17c>
    3cf6:	6f ef       	ldi	r22, 0xFF	; 255
    3cf8:	7f ef       	ldi	r23, 0xFF	; 255
    3cfa:	c5 01       	movw	r24, r10
    3cfc:	2c 87       	std	Y+12, r18	; 0x0c
    3cfe:	27 d1       	rcall	.+590    	; 0x3f4e <strnlen_P>
    3d00:	2c 01       	movw	r4, r24
    3d02:	2c 85       	ldd	r18, Y+12	; 0x0c
    3d04:	20 68       	ori	r18, 0x80	; 128
    3d06:	22 2e       	mov	r2, r18
    3d08:	83 01       	movw	r16, r6
    3d0a:	23 fc       	sbrc	r2, 3
    3d0c:	19 c0       	rjmp	.+50     	; 0x3d40 <vfprintf+0x1c2>
    3d0e:	83 2d       	mov	r24, r3
    3d10:	90 e0       	ldi	r25, 0x00	; 0
    3d12:	48 16       	cp	r4, r24
    3d14:	59 06       	cpc	r5, r25
    3d16:	a0 f4       	brcc	.+40     	; 0x3d40 <vfprintf+0x1c2>
    3d18:	b7 01       	movw	r22, r14
    3d1a:	80 e2       	ldi	r24, 0x20	; 32
    3d1c:	90 e0       	ldi	r25, 0x00	; 0
    3d1e:	3d d1       	rcall	.+634    	; 0x3f9a <fputc>
    3d20:	3a 94       	dec	r3
    3d22:	f5 cf       	rjmp	.-22     	; 0x3d0e <vfprintf+0x190>
    3d24:	f5 01       	movw	r30, r10
    3d26:	27 fc       	sbrc	r2, 7
    3d28:	85 91       	lpm	r24, Z+
    3d2a:	27 fe       	sbrs	r2, 7
    3d2c:	81 91       	ld	r24, Z+
    3d2e:	5f 01       	movw	r10, r30
    3d30:	b7 01       	movw	r22, r14
    3d32:	90 e0       	ldi	r25, 0x00	; 0
    3d34:	32 d1       	rcall	.+612    	; 0x3f9a <fputc>
    3d36:	31 10       	cpse	r3, r1
    3d38:	3a 94       	dec	r3
    3d3a:	f1 e0       	ldi	r31, 0x01	; 1
    3d3c:	4f 1a       	sub	r4, r31
    3d3e:	51 08       	sbc	r5, r1
    3d40:	41 14       	cp	r4, r1
    3d42:	51 04       	cpc	r5, r1
    3d44:	79 f7       	brne	.-34     	; 0x3d24 <vfprintf+0x1a6>
    3d46:	de c0       	rjmp	.+444    	; 0x3f04 <vfprintf+0x386>
    3d48:	84 36       	cpi	r24, 0x64	; 100
    3d4a:	11 f0       	breq	.+4      	; 0x3d50 <vfprintf+0x1d2>
    3d4c:	89 36       	cpi	r24, 0x69	; 105
    3d4e:	31 f5       	brne	.+76     	; 0x3d9c <vfprintf+0x21e>
    3d50:	f8 01       	movw	r30, r16
    3d52:	27 ff       	sbrs	r18, 7
    3d54:	07 c0       	rjmp	.+14     	; 0x3d64 <vfprintf+0x1e6>
    3d56:	60 81       	ld	r22, Z
    3d58:	71 81       	ldd	r23, Z+1	; 0x01
    3d5a:	82 81       	ldd	r24, Z+2	; 0x02
    3d5c:	93 81       	ldd	r25, Z+3	; 0x03
    3d5e:	0c 5f       	subi	r16, 0xFC	; 252
    3d60:	1f 4f       	sbci	r17, 0xFF	; 255
    3d62:	08 c0       	rjmp	.+16     	; 0x3d74 <vfprintf+0x1f6>
    3d64:	60 81       	ld	r22, Z
    3d66:	71 81       	ldd	r23, Z+1	; 0x01
    3d68:	88 27       	eor	r24, r24
    3d6a:	77 fd       	sbrc	r23, 7
    3d6c:	80 95       	com	r24
    3d6e:	98 2f       	mov	r25, r24
    3d70:	0e 5f       	subi	r16, 0xFE	; 254
    3d72:	1f 4f       	sbci	r17, 0xFF	; 255
    3d74:	2f 76       	andi	r18, 0x6F	; 111
    3d76:	b2 2e       	mov	r11, r18
    3d78:	97 ff       	sbrs	r25, 7
    3d7a:	09 c0       	rjmp	.+18     	; 0x3d8e <vfprintf+0x210>
    3d7c:	90 95       	com	r25
    3d7e:	80 95       	com	r24
    3d80:	70 95       	com	r23
    3d82:	61 95       	neg	r22
    3d84:	7f 4f       	sbci	r23, 0xFF	; 255
    3d86:	8f 4f       	sbci	r24, 0xFF	; 255
    3d88:	9f 4f       	sbci	r25, 0xFF	; 255
    3d8a:	20 68       	ori	r18, 0x80	; 128
    3d8c:	b2 2e       	mov	r11, r18
    3d8e:	2a e0       	ldi	r18, 0x0A	; 10
    3d90:	30 e0       	ldi	r19, 0x00	; 0
    3d92:	a4 01       	movw	r20, r8
    3d94:	34 d1       	rcall	.+616    	; 0x3ffe <__ultoa_invert>
    3d96:	a8 2e       	mov	r10, r24
    3d98:	a8 18       	sub	r10, r8
    3d9a:	43 c0       	rjmp	.+134    	; 0x3e22 <vfprintf+0x2a4>
    3d9c:	85 37       	cpi	r24, 0x75	; 117
    3d9e:	29 f4       	brne	.+10     	; 0x3daa <vfprintf+0x22c>
    3da0:	2f 7e       	andi	r18, 0xEF	; 239
    3da2:	b2 2e       	mov	r11, r18
    3da4:	2a e0       	ldi	r18, 0x0A	; 10
    3da6:	30 e0       	ldi	r19, 0x00	; 0
    3da8:	25 c0       	rjmp	.+74     	; 0x3df4 <vfprintf+0x276>
    3daa:	f2 2f       	mov	r31, r18
    3dac:	f9 7f       	andi	r31, 0xF9	; 249
    3dae:	bf 2e       	mov	r11, r31
    3db0:	8f 36       	cpi	r24, 0x6F	; 111
    3db2:	c1 f0       	breq	.+48     	; 0x3de4 <vfprintf+0x266>
    3db4:	18 f4       	brcc	.+6      	; 0x3dbc <vfprintf+0x23e>
    3db6:	88 35       	cpi	r24, 0x58	; 88
    3db8:	79 f0       	breq	.+30     	; 0x3dd8 <vfprintf+0x25a>
    3dba:	ad c0       	rjmp	.+346    	; 0x3f16 <vfprintf+0x398>
    3dbc:	80 37       	cpi	r24, 0x70	; 112
    3dbe:	19 f0       	breq	.+6      	; 0x3dc6 <vfprintf+0x248>
    3dc0:	88 37       	cpi	r24, 0x78	; 120
    3dc2:	21 f0       	breq	.+8      	; 0x3dcc <vfprintf+0x24e>
    3dc4:	a8 c0       	rjmp	.+336    	; 0x3f16 <vfprintf+0x398>
    3dc6:	2f 2f       	mov	r18, r31
    3dc8:	20 61       	ori	r18, 0x10	; 16
    3dca:	b2 2e       	mov	r11, r18
    3dcc:	b4 fe       	sbrs	r11, 4
    3dce:	0d c0       	rjmp	.+26     	; 0x3dea <vfprintf+0x26c>
    3dd0:	8b 2d       	mov	r24, r11
    3dd2:	84 60       	ori	r24, 0x04	; 4
    3dd4:	b8 2e       	mov	r11, r24
    3dd6:	09 c0       	rjmp	.+18     	; 0x3dea <vfprintf+0x26c>
    3dd8:	24 ff       	sbrs	r18, 4
    3dda:	0a c0       	rjmp	.+20     	; 0x3df0 <vfprintf+0x272>
    3ddc:	9f 2f       	mov	r25, r31
    3dde:	96 60       	ori	r25, 0x06	; 6
    3de0:	b9 2e       	mov	r11, r25
    3de2:	06 c0       	rjmp	.+12     	; 0x3df0 <vfprintf+0x272>
    3de4:	28 e0       	ldi	r18, 0x08	; 8
    3de6:	30 e0       	ldi	r19, 0x00	; 0
    3de8:	05 c0       	rjmp	.+10     	; 0x3df4 <vfprintf+0x276>
    3dea:	20 e1       	ldi	r18, 0x10	; 16
    3dec:	30 e0       	ldi	r19, 0x00	; 0
    3dee:	02 c0       	rjmp	.+4      	; 0x3df4 <vfprintf+0x276>
    3df0:	20 e1       	ldi	r18, 0x10	; 16
    3df2:	32 e0       	ldi	r19, 0x02	; 2
    3df4:	f8 01       	movw	r30, r16
    3df6:	b7 fe       	sbrs	r11, 7
    3df8:	07 c0       	rjmp	.+14     	; 0x3e08 <vfprintf+0x28a>
    3dfa:	60 81       	ld	r22, Z
    3dfc:	71 81       	ldd	r23, Z+1	; 0x01
    3dfe:	82 81       	ldd	r24, Z+2	; 0x02
    3e00:	93 81       	ldd	r25, Z+3	; 0x03
    3e02:	0c 5f       	subi	r16, 0xFC	; 252
    3e04:	1f 4f       	sbci	r17, 0xFF	; 255
    3e06:	06 c0       	rjmp	.+12     	; 0x3e14 <vfprintf+0x296>
    3e08:	60 81       	ld	r22, Z
    3e0a:	71 81       	ldd	r23, Z+1	; 0x01
    3e0c:	80 e0       	ldi	r24, 0x00	; 0
    3e0e:	90 e0       	ldi	r25, 0x00	; 0
    3e10:	0e 5f       	subi	r16, 0xFE	; 254
    3e12:	1f 4f       	sbci	r17, 0xFF	; 255
    3e14:	a4 01       	movw	r20, r8
    3e16:	f3 d0       	rcall	.+486    	; 0x3ffe <__ultoa_invert>
    3e18:	a8 2e       	mov	r10, r24
    3e1a:	a8 18       	sub	r10, r8
    3e1c:	fb 2d       	mov	r31, r11
    3e1e:	ff 77       	andi	r31, 0x7F	; 127
    3e20:	bf 2e       	mov	r11, r31
    3e22:	b6 fe       	sbrs	r11, 6
    3e24:	0b c0       	rjmp	.+22     	; 0x3e3c <vfprintf+0x2be>
    3e26:	2b 2d       	mov	r18, r11
    3e28:	2e 7f       	andi	r18, 0xFE	; 254
    3e2a:	a5 14       	cp	r10, r5
    3e2c:	50 f4       	brcc	.+20     	; 0x3e42 <vfprintf+0x2c4>
    3e2e:	b4 fe       	sbrs	r11, 4
    3e30:	0a c0       	rjmp	.+20     	; 0x3e46 <vfprintf+0x2c8>
    3e32:	b2 fc       	sbrc	r11, 2
    3e34:	08 c0       	rjmp	.+16     	; 0x3e46 <vfprintf+0x2c8>
    3e36:	2b 2d       	mov	r18, r11
    3e38:	2e 7e       	andi	r18, 0xEE	; 238
    3e3a:	05 c0       	rjmp	.+10     	; 0x3e46 <vfprintf+0x2c8>
    3e3c:	7a 2c       	mov	r7, r10
    3e3e:	2b 2d       	mov	r18, r11
    3e40:	03 c0       	rjmp	.+6      	; 0x3e48 <vfprintf+0x2ca>
    3e42:	7a 2c       	mov	r7, r10
    3e44:	01 c0       	rjmp	.+2      	; 0x3e48 <vfprintf+0x2ca>
    3e46:	75 2c       	mov	r7, r5
    3e48:	24 ff       	sbrs	r18, 4
    3e4a:	0d c0       	rjmp	.+26     	; 0x3e66 <vfprintf+0x2e8>
    3e4c:	fe 01       	movw	r30, r28
    3e4e:	ea 0d       	add	r30, r10
    3e50:	f1 1d       	adc	r31, r1
    3e52:	80 81       	ld	r24, Z
    3e54:	80 33       	cpi	r24, 0x30	; 48
    3e56:	11 f4       	brne	.+4      	; 0x3e5c <vfprintf+0x2de>
    3e58:	29 7e       	andi	r18, 0xE9	; 233
    3e5a:	09 c0       	rjmp	.+18     	; 0x3e6e <vfprintf+0x2f0>
    3e5c:	22 ff       	sbrs	r18, 2
    3e5e:	06 c0       	rjmp	.+12     	; 0x3e6c <vfprintf+0x2ee>
    3e60:	73 94       	inc	r7
    3e62:	73 94       	inc	r7
    3e64:	04 c0       	rjmp	.+8      	; 0x3e6e <vfprintf+0x2f0>
    3e66:	82 2f       	mov	r24, r18
    3e68:	86 78       	andi	r24, 0x86	; 134
    3e6a:	09 f0       	breq	.+2      	; 0x3e6e <vfprintf+0x2f0>
    3e6c:	73 94       	inc	r7
    3e6e:	23 fd       	sbrc	r18, 3
    3e70:	12 c0       	rjmp	.+36     	; 0x3e96 <vfprintf+0x318>
    3e72:	20 ff       	sbrs	r18, 0
    3e74:	06 c0       	rjmp	.+12     	; 0x3e82 <vfprintf+0x304>
    3e76:	5a 2c       	mov	r5, r10
    3e78:	73 14       	cp	r7, r3
    3e7a:	18 f4       	brcc	.+6      	; 0x3e82 <vfprintf+0x304>
    3e7c:	53 0c       	add	r5, r3
    3e7e:	57 18       	sub	r5, r7
    3e80:	73 2c       	mov	r7, r3
    3e82:	73 14       	cp	r7, r3
    3e84:	60 f4       	brcc	.+24     	; 0x3e9e <vfprintf+0x320>
    3e86:	b7 01       	movw	r22, r14
    3e88:	80 e2       	ldi	r24, 0x20	; 32
    3e8a:	90 e0       	ldi	r25, 0x00	; 0
    3e8c:	2c 87       	std	Y+12, r18	; 0x0c
    3e8e:	85 d0       	rcall	.+266    	; 0x3f9a <fputc>
    3e90:	73 94       	inc	r7
    3e92:	2c 85       	ldd	r18, Y+12	; 0x0c
    3e94:	f6 cf       	rjmp	.-20     	; 0x3e82 <vfprintf+0x304>
    3e96:	73 14       	cp	r7, r3
    3e98:	10 f4       	brcc	.+4      	; 0x3e9e <vfprintf+0x320>
    3e9a:	37 18       	sub	r3, r7
    3e9c:	01 c0       	rjmp	.+2      	; 0x3ea0 <vfprintf+0x322>
    3e9e:	31 2c       	mov	r3, r1
    3ea0:	24 ff       	sbrs	r18, 4
    3ea2:	11 c0       	rjmp	.+34     	; 0x3ec6 <vfprintf+0x348>
    3ea4:	b7 01       	movw	r22, r14
    3ea6:	80 e3       	ldi	r24, 0x30	; 48
    3ea8:	90 e0       	ldi	r25, 0x00	; 0
    3eaa:	2c 87       	std	Y+12, r18	; 0x0c
    3eac:	76 d0       	rcall	.+236    	; 0x3f9a <fputc>
    3eae:	2c 85       	ldd	r18, Y+12	; 0x0c
    3eb0:	22 ff       	sbrs	r18, 2
    3eb2:	16 c0       	rjmp	.+44     	; 0x3ee0 <vfprintf+0x362>
    3eb4:	21 ff       	sbrs	r18, 1
    3eb6:	03 c0       	rjmp	.+6      	; 0x3ebe <vfprintf+0x340>
    3eb8:	88 e5       	ldi	r24, 0x58	; 88
    3eba:	90 e0       	ldi	r25, 0x00	; 0
    3ebc:	02 c0       	rjmp	.+4      	; 0x3ec2 <vfprintf+0x344>
    3ebe:	88 e7       	ldi	r24, 0x78	; 120
    3ec0:	90 e0       	ldi	r25, 0x00	; 0
    3ec2:	b7 01       	movw	r22, r14
    3ec4:	0c c0       	rjmp	.+24     	; 0x3ede <vfprintf+0x360>
    3ec6:	82 2f       	mov	r24, r18
    3ec8:	86 78       	andi	r24, 0x86	; 134
    3eca:	51 f0       	breq	.+20     	; 0x3ee0 <vfprintf+0x362>
    3ecc:	21 fd       	sbrc	r18, 1
    3ece:	02 c0       	rjmp	.+4      	; 0x3ed4 <vfprintf+0x356>
    3ed0:	80 e2       	ldi	r24, 0x20	; 32
    3ed2:	01 c0       	rjmp	.+2      	; 0x3ed6 <vfprintf+0x358>
    3ed4:	8b e2       	ldi	r24, 0x2B	; 43
    3ed6:	27 fd       	sbrc	r18, 7
    3ed8:	8d e2       	ldi	r24, 0x2D	; 45
    3eda:	b7 01       	movw	r22, r14
    3edc:	90 e0       	ldi	r25, 0x00	; 0
    3ede:	5d d0       	rcall	.+186    	; 0x3f9a <fputc>
    3ee0:	a5 14       	cp	r10, r5
    3ee2:	30 f4       	brcc	.+12     	; 0x3ef0 <vfprintf+0x372>
    3ee4:	b7 01       	movw	r22, r14
    3ee6:	80 e3       	ldi	r24, 0x30	; 48
    3ee8:	90 e0       	ldi	r25, 0x00	; 0
    3eea:	57 d0       	rcall	.+174    	; 0x3f9a <fputc>
    3eec:	5a 94       	dec	r5
    3eee:	f8 cf       	rjmp	.-16     	; 0x3ee0 <vfprintf+0x362>
    3ef0:	aa 94       	dec	r10
    3ef2:	f4 01       	movw	r30, r8
    3ef4:	ea 0d       	add	r30, r10
    3ef6:	f1 1d       	adc	r31, r1
    3ef8:	80 81       	ld	r24, Z
    3efa:	b7 01       	movw	r22, r14
    3efc:	90 e0       	ldi	r25, 0x00	; 0
    3efe:	4d d0       	rcall	.+154    	; 0x3f9a <fputc>
    3f00:	a1 10       	cpse	r10, r1
    3f02:	f6 cf       	rjmp	.-20     	; 0x3ef0 <vfprintf+0x372>
    3f04:	33 20       	and	r3, r3
    3f06:	09 f4       	brne	.+2      	; 0x3f0a <vfprintf+0x38c>
    3f08:	5d ce       	rjmp	.-838    	; 0x3bc4 <vfprintf+0x46>
    3f0a:	b7 01       	movw	r22, r14
    3f0c:	80 e2       	ldi	r24, 0x20	; 32
    3f0e:	90 e0       	ldi	r25, 0x00	; 0
    3f10:	44 d0       	rcall	.+136    	; 0x3f9a <fputc>
    3f12:	3a 94       	dec	r3
    3f14:	f7 cf       	rjmp	.-18     	; 0x3f04 <vfprintf+0x386>
    3f16:	f7 01       	movw	r30, r14
    3f18:	86 81       	ldd	r24, Z+6	; 0x06
    3f1a:	97 81       	ldd	r25, Z+7	; 0x07
    3f1c:	02 c0       	rjmp	.+4      	; 0x3f22 <vfprintf+0x3a4>
    3f1e:	8f ef       	ldi	r24, 0xFF	; 255
    3f20:	9f ef       	ldi	r25, 0xFF	; 255
    3f22:	2c 96       	adiw	r28, 0x0c	; 12
    3f24:	cd bf       	out	0x3d, r28	; 61
    3f26:	de bf       	out	0x3e, r29	; 62
    3f28:	df 91       	pop	r29
    3f2a:	cf 91       	pop	r28
    3f2c:	1f 91       	pop	r17
    3f2e:	0f 91       	pop	r16
    3f30:	ff 90       	pop	r15
    3f32:	ef 90       	pop	r14
    3f34:	df 90       	pop	r13
    3f36:	cf 90       	pop	r12
    3f38:	bf 90       	pop	r11
    3f3a:	af 90       	pop	r10
    3f3c:	9f 90       	pop	r9
    3f3e:	8f 90       	pop	r8
    3f40:	7f 90       	pop	r7
    3f42:	6f 90       	pop	r6
    3f44:	5f 90       	pop	r5
    3f46:	4f 90       	pop	r4
    3f48:	3f 90       	pop	r3
    3f4a:	2f 90       	pop	r2
    3f4c:	08 95       	ret

00003f4e <strnlen_P>:
    3f4e:	fc 01       	movw	r30, r24
    3f50:	05 90       	lpm	r0, Z+
    3f52:	61 50       	subi	r22, 0x01	; 1
    3f54:	70 40       	sbci	r23, 0x00	; 0
    3f56:	01 10       	cpse	r0, r1
    3f58:	d8 f7       	brcc	.-10     	; 0x3f50 <strnlen_P+0x2>
    3f5a:	80 95       	com	r24
    3f5c:	90 95       	com	r25
    3f5e:	8e 0f       	add	r24, r30
    3f60:	9f 1f       	adc	r25, r31
    3f62:	08 95       	ret

00003f64 <strnlen>:
    3f64:	fc 01       	movw	r30, r24
    3f66:	61 50       	subi	r22, 0x01	; 1
    3f68:	70 40       	sbci	r23, 0x00	; 0
    3f6a:	01 90       	ld	r0, Z+
    3f6c:	01 10       	cpse	r0, r1
    3f6e:	d8 f7       	brcc	.-10     	; 0x3f66 <strnlen+0x2>
    3f70:	80 95       	com	r24
    3f72:	90 95       	com	r25
    3f74:	8e 0f       	add	r24, r30
    3f76:	9f 1f       	adc	r25, r31
    3f78:	08 95       	ret

00003f7a <strrev>:
    3f7a:	dc 01       	movw	r26, r24
    3f7c:	fc 01       	movw	r30, r24
    3f7e:	67 2f       	mov	r22, r23
    3f80:	71 91       	ld	r23, Z+
    3f82:	77 23       	and	r23, r23
    3f84:	e1 f7       	brne	.-8      	; 0x3f7e <strrev+0x4>
    3f86:	32 97       	sbiw	r30, 0x02	; 2
    3f88:	04 c0       	rjmp	.+8      	; 0x3f92 <strrev+0x18>
    3f8a:	7c 91       	ld	r23, X
    3f8c:	6d 93       	st	X+, r22
    3f8e:	70 83       	st	Z, r23
    3f90:	62 91       	ld	r22, -Z
    3f92:	ae 17       	cp	r26, r30
    3f94:	bf 07       	cpc	r27, r31
    3f96:	c8 f3       	brcs	.-14     	; 0x3f8a <strrev+0x10>
    3f98:	08 95       	ret

00003f9a <fputc>:
    3f9a:	0f 93       	push	r16
    3f9c:	1f 93       	push	r17
    3f9e:	cf 93       	push	r28
    3fa0:	df 93       	push	r29
    3fa2:	18 2f       	mov	r17, r24
    3fa4:	09 2f       	mov	r16, r25
    3fa6:	eb 01       	movw	r28, r22
    3fa8:	8b 81       	ldd	r24, Y+3	; 0x03
    3faa:	81 fd       	sbrc	r24, 1
    3fac:	03 c0       	rjmp	.+6      	; 0x3fb4 <fputc+0x1a>
    3fae:	8f ef       	ldi	r24, 0xFF	; 255
    3fb0:	9f ef       	ldi	r25, 0xFF	; 255
    3fb2:	20 c0       	rjmp	.+64     	; 0x3ff4 <fputc+0x5a>
    3fb4:	82 ff       	sbrs	r24, 2
    3fb6:	10 c0       	rjmp	.+32     	; 0x3fd8 <fputc+0x3e>
    3fb8:	4e 81       	ldd	r20, Y+6	; 0x06
    3fba:	5f 81       	ldd	r21, Y+7	; 0x07
    3fbc:	2c 81       	ldd	r18, Y+4	; 0x04
    3fbe:	3d 81       	ldd	r19, Y+5	; 0x05
    3fc0:	42 17       	cp	r20, r18
    3fc2:	53 07       	cpc	r21, r19
    3fc4:	7c f4       	brge	.+30     	; 0x3fe4 <fputc+0x4a>
    3fc6:	e8 81       	ld	r30, Y
    3fc8:	f9 81       	ldd	r31, Y+1	; 0x01
    3fca:	9f 01       	movw	r18, r30
    3fcc:	2f 5f       	subi	r18, 0xFF	; 255
    3fce:	3f 4f       	sbci	r19, 0xFF	; 255
    3fd0:	28 83       	st	Y, r18
    3fd2:	39 83       	std	Y+1, r19	; 0x01
    3fd4:	10 83       	st	Z, r17
    3fd6:	06 c0       	rjmp	.+12     	; 0x3fe4 <fputc+0x4a>
    3fd8:	e8 85       	ldd	r30, Y+8	; 0x08
    3fda:	f9 85       	ldd	r31, Y+9	; 0x09
    3fdc:	81 2f       	mov	r24, r17
    3fde:	19 95       	eicall
    3fe0:	89 2b       	or	r24, r25
    3fe2:	29 f7       	brne	.-54     	; 0x3fae <fputc+0x14>
    3fe4:	2e 81       	ldd	r18, Y+6	; 0x06
    3fe6:	3f 81       	ldd	r19, Y+7	; 0x07
    3fe8:	2f 5f       	subi	r18, 0xFF	; 255
    3fea:	3f 4f       	sbci	r19, 0xFF	; 255
    3fec:	2e 83       	std	Y+6, r18	; 0x06
    3fee:	3f 83       	std	Y+7, r19	; 0x07
    3ff0:	81 2f       	mov	r24, r17
    3ff2:	90 2f       	mov	r25, r16
    3ff4:	df 91       	pop	r29
    3ff6:	cf 91       	pop	r28
    3ff8:	1f 91       	pop	r17
    3ffa:	0f 91       	pop	r16
    3ffc:	08 95       	ret

00003ffe <__ultoa_invert>:
    3ffe:	fa 01       	movw	r30, r20
    4000:	aa 27       	eor	r26, r26
    4002:	28 30       	cpi	r18, 0x08	; 8
    4004:	51 f1       	breq	.+84     	; 0x405a <__stack+0x5b>
    4006:	20 31       	cpi	r18, 0x10	; 16
    4008:	81 f1       	breq	.+96     	; 0x406a <__stack+0x6b>
    400a:	e8 94       	clt
    400c:	6f 93       	push	r22
    400e:	6e 7f       	andi	r22, 0xFE	; 254
    4010:	6e 5f       	subi	r22, 0xFE	; 254
    4012:	7f 4f       	sbci	r23, 0xFF	; 255
    4014:	8f 4f       	sbci	r24, 0xFF	; 255
    4016:	9f 4f       	sbci	r25, 0xFF	; 255
    4018:	af 4f       	sbci	r26, 0xFF	; 255
    401a:	b1 e0       	ldi	r27, 0x01	; 1
    401c:	3e d0       	rcall	.+124    	; 0x409a <__stack+0x9b>
    401e:	b4 e0       	ldi	r27, 0x04	; 4
    4020:	3c d0       	rcall	.+120    	; 0x409a <__stack+0x9b>
    4022:	67 0f       	add	r22, r23
    4024:	78 1f       	adc	r23, r24
    4026:	89 1f       	adc	r24, r25
    4028:	9a 1f       	adc	r25, r26
    402a:	a1 1d       	adc	r26, r1
    402c:	68 0f       	add	r22, r24
    402e:	79 1f       	adc	r23, r25
    4030:	8a 1f       	adc	r24, r26
    4032:	91 1d       	adc	r25, r1
    4034:	a1 1d       	adc	r26, r1
    4036:	6a 0f       	add	r22, r26
    4038:	71 1d       	adc	r23, r1
    403a:	81 1d       	adc	r24, r1
    403c:	91 1d       	adc	r25, r1
    403e:	a1 1d       	adc	r26, r1
    4040:	20 d0       	rcall	.+64     	; 0x4082 <__stack+0x83>
    4042:	09 f4       	brne	.+2      	; 0x4046 <__stack+0x47>
    4044:	68 94       	set
    4046:	3f 91       	pop	r19
    4048:	2a e0       	ldi	r18, 0x0A	; 10
    404a:	26 9f       	mul	r18, r22
    404c:	11 24       	eor	r1, r1
    404e:	30 19       	sub	r19, r0
    4050:	30 5d       	subi	r19, 0xD0	; 208
    4052:	31 93       	st	Z+, r19
    4054:	de f6       	brtc	.-74     	; 0x400c <__stack+0xd>
    4056:	cf 01       	movw	r24, r30
    4058:	08 95       	ret
    405a:	46 2f       	mov	r20, r22
    405c:	47 70       	andi	r20, 0x07	; 7
    405e:	40 5d       	subi	r20, 0xD0	; 208
    4060:	41 93       	st	Z+, r20
    4062:	b3 e0       	ldi	r27, 0x03	; 3
    4064:	0f d0       	rcall	.+30     	; 0x4084 <__stack+0x85>
    4066:	c9 f7       	brne	.-14     	; 0x405a <__stack+0x5b>
    4068:	f6 cf       	rjmp	.-20     	; 0x4056 <__stack+0x57>
    406a:	46 2f       	mov	r20, r22
    406c:	4f 70       	andi	r20, 0x0F	; 15
    406e:	40 5d       	subi	r20, 0xD0	; 208
    4070:	4a 33       	cpi	r20, 0x3A	; 58
    4072:	18 f0       	brcs	.+6      	; 0x407a <__stack+0x7b>
    4074:	49 5d       	subi	r20, 0xD9	; 217
    4076:	31 fd       	sbrc	r19, 1
    4078:	40 52       	subi	r20, 0x20	; 32
    407a:	41 93       	st	Z+, r20
    407c:	02 d0       	rcall	.+4      	; 0x4082 <__stack+0x83>
    407e:	a9 f7       	brne	.-22     	; 0x406a <__stack+0x6b>
    4080:	ea cf       	rjmp	.-44     	; 0x4056 <__stack+0x57>
    4082:	b4 e0       	ldi	r27, 0x04	; 4
    4084:	a6 95       	lsr	r26
    4086:	97 95       	ror	r25
    4088:	87 95       	ror	r24
    408a:	77 95       	ror	r23
    408c:	67 95       	ror	r22
    408e:	ba 95       	dec	r27
    4090:	c9 f7       	brne	.-14     	; 0x4084 <__stack+0x85>
    4092:	00 97       	sbiw	r24, 0x00	; 0
    4094:	61 05       	cpc	r22, r1
    4096:	71 05       	cpc	r23, r1
    4098:	08 95       	ret
    409a:	9b 01       	movw	r18, r22
    409c:	ac 01       	movw	r20, r24
    409e:	0a 2e       	mov	r0, r26
    40a0:	06 94       	lsr	r0
    40a2:	57 95       	ror	r21
    40a4:	47 95       	ror	r20
    40a6:	37 95       	ror	r19
    40a8:	27 95       	ror	r18
    40aa:	ba 95       	dec	r27
    40ac:	c9 f7       	brne	.-14     	; 0x40a0 <__stack+0xa1>
    40ae:	62 0f       	add	r22, r18
    40b0:	73 1f       	adc	r23, r19
    40b2:	84 1f       	adc	r24, r20
    40b4:	95 1f       	adc	r25, r21
    40b6:	a0 1d       	adc	r26, r0
    40b8:	08 95       	ret

000040ba <_exit>:
    40ba:	f8 94       	cli

000040bc <__stop_program>:
    40bc:	ff cf       	rjmp	.-2      	; 0x40bc <__stop_program>
