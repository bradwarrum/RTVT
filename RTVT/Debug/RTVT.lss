
RTVT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000081ce  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000015a  00802000  000081ce  00008262  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001c  0080215a  0080215a  000083bc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000083bc  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000007d8  00000000  00000000  00008418  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00013757  00000000  00000000  00008bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002f3c  00000000  00000000  0001c347  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00006bb7  00000000  00000000  0001f283  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000023fc  00000000  00000000  00025e3c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0001db54  00000000  00000000  00028238  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000c6e4  00000000  00000000  00045d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000840  00000000  00000000  00052470  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00007673  00000000  00000000  00052cb0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b2 c3       	rjmp	.+1892   	; 0x766 <__ctors_end>
       2:	00 00       	nop
       4:	e1 c3       	rjmp	.+1986   	; 0x7c8 <__bad_interrupt>
       6:	00 00       	nop
       8:	df c3       	rjmp	.+1982   	; 0x7c8 <__bad_interrupt>
       a:	00 00       	nop
       c:	dd c3       	rjmp	.+1978   	; 0x7c8 <__bad_interrupt>
       e:	00 00       	nop
      10:	db c3       	rjmp	.+1974   	; 0x7c8 <__bad_interrupt>
      12:	00 00       	nop
      14:	d9 c3       	rjmp	.+1970   	; 0x7c8 <__bad_interrupt>
      16:	00 00       	nop
      18:	d7 c3       	rjmp	.+1966   	; 0x7c8 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	d5 c3       	rjmp	.+1962   	; 0x7c8 <__bad_interrupt>
      1e:	00 00       	nop
      20:	d3 c3       	rjmp	.+1958   	; 0x7c8 <__bad_interrupt>
      22:	00 00       	nop
      24:	d1 c3       	rjmp	.+1954   	; 0x7c8 <__bad_interrupt>
      26:	00 00       	nop
      28:	cf c3       	rjmp	.+1950   	; 0x7c8 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	cd c3       	rjmp	.+1946   	; 0x7c8 <__bad_interrupt>
      2e:	00 00       	nop
      30:	cb c3       	rjmp	.+1942   	; 0x7c8 <__bad_interrupt>
      32:	00 00       	nop
      34:	c9 c3       	rjmp	.+1938   	; 0x7c8 <__bad_interrupt>
      36:	00 00       	nop
      38:	c7 c3       	rjmp	.+1934   	; 0x7c8 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	c5 c3       	rjmp	.+1930   	; 0x7c8 <__bad_interrupt>
      3e:	00 00       	nop
      40:	0c 94 d6 31 	jmp	0x63ac	; 0x63ac <__vector_16>
      44:	c1 c3       	rjmp	.+1922   	; 0x7c8 <__bad_interrupt>
      46:	00 00       	nop
      48:	bf c3       	rjmp	.+1918   	; 0x7c8 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	bd c3       	rjmp	.+1914   	; 0x7c8 <__bad_interrupt>
      4e:	00 00       	nop
      50:	bb c3       	rjmp	.+1910   	; 0x7c8 <__bad_interrupt>
      52:	00 00       	nop
      54:	b9 c3       	rjmp	.+1906   	; 0x7c8 <__bad_interrupt>
      56:	00 00       	nop
      58:	b7 c3       	rjmp	.+1902   	; 0x7c8 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	b5 c3       	rjmp	.+1898   	; 0x7c8 <__bad_interrupt>
      5e:	00 00       	nop
      60:	b3 c3       	rjmp	.+1894   	; 0x7c8 <__bad_interrupt>
      62:	00 00       	nop
      64:	b1 c3       	rjmp	.+1890   	; 0x7c8 <__bad_interrupt>
      66:	00 00       	nop
      68:	af c3       	rjmp	.+1886   	; 0x7c8 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	ad c3       	rjmp	.+1882   	; 0x7c8 <__bad_interrupt>
      6e:	00 00       	nop
      70:	ab c3       	rjmp	.+1878   	; 0x7c8 <__bad_interrupt>
      72:	00 00       	nop
      74:	a9 c3       	rjmp	.+1874   	; 0x7c8 <__bad_interrupt>
      76:	00 00       	nop
      78:	a7 c3       	rjmp	.+1870   	; 0x7c8 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	a5 c3       	rjmp	.+1866   	; 0x7c8 <__bad_interrupt>
      7e:	00 00       	nop
      80:	a3 c3       	rjmp	.+1862   	; 0x7c8 <__bad_interrupt>
      82:	00 00       	nop
      84:	a1 c3       	rjmp	.+1858   	; 0x7c8 <__bad_interrupt>
      86:	00 00       	nop
      88:	9f c3       	rjmp	.+1854   	; 0x7c8 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	9d c3       	rjmp	.+1850   	; 0x7c8 <__bad_interrupt>
      8e:	00 00       	nop
      90:	9b c3       	rjmp	.+1846   	; 0x7c8 <__bad_interrupt>
      92:	00 00       	nop
      94:	99 c3       	rjmp	.+1842   	; 0x7c8 <__bad_interrupt>
      96:	00 00       	nop
      98:	97 c3       	rjmp	.+1838   	; 0x7c8 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	95 c3       	rjmp	.+1834   	; 0x7c8 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	93 c3       	rjmp	.+1830   	; 0x7c8 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	91 c3       	rjmp	.+1826   	; 0x7c8 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	8f c3       	rjmp	.+1822   	; 0x7c8 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	8d c3       	rjmp	.+1818   	; 0x7c8 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	8b c3       	rjmp	.+1814   	; 0x7c8 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	89 c3       	rjmp	.+1810   	; 0x7c8 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	87 c3       	rjmp	.+1806   	; 0x7c8 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	85 c3       	rjmp	.+1802   	; 0x7c8 <__bad_interrupt>
      be:	00 00       	nop
      c0:	83 c3       	rjmp	.+1798   	; 0x7c8 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	81 c3       	rjmp	.+1794   	; 0x7c8 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	7f c3       	rjmp	.+1790   	; 0x7c8 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	7d c3       	rjmp	.+1786   	; 0x7c8 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	7b c3       	rjmp	.+1782   	; 0x7c8 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	79 c3       	rjmp	.+1778   	; 0x7c8 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	77 c3       	rjmp	.+1774   	; 0x7c8 <__bad_interrupt>
      da:	00 00       	nop
      dc:	75 c3       	rjmp	.+1770   	; 0x7c8 <__bad_interrupt>
      de:	00 00       	nop
      e0:	73 c3       	rjmp	.+1766   	; 0x7c8 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	0c 94 cc 31 	jmp	0x6398	; 0x6398 <__vector_57>
      e8:	6f c3       	rjmp	.+1758   	; 0x7c8 <__bad_interrupt>
      ea:	00 00       	nop
      ec:	6d c3       	rjmp	.+1754   	; 0x7c8 <__bad_interrupt>
      ee:	00 00       	nop
      f0:	6b c3       	rjmp	.+1750   	; 0x7c8 <__bad_interrupt>
      f2:	00 00       	nop
      f4:	69 c3       	rjmp	.+1746   	; 0x7c8 <__bad_interrupt>
      f6:	00 00       	nop
      f8:	67 c3       	rjmp	.+1742   	; 0x7c8 <__bad_interrupt>
      fa:	00 00       	nop
      fc:	65 c3       	rjmp	.+1738   	; 0x7c8 <__bad_interrupt>
      fe:	00 00       	nop
     100:	63 c3       	rjmp	.+1734   	; 0x7c8 <__bad_interrupt>
     102:	00 00       	nop
     104:	61 c3       	rjmp	.+1730   	; 0x7c8 <__bad_interrupt>
     106:	00 00       	nop
     108:	5f c3       	rjmp	.+1726   	; 0x7c8 <__bad_interrupt>
     10a:	00 00       	nop
     10c:	5d c3       	rjmp	.+1722   	; 0x7c8 <__bad_interrupt>
     10e:	00 00       	nop
     110:	5b c3       	rjmp	.+1718   	; 0x7c8 <__bad_interrupt>
     112:	00 00       	nop
     114:	59 c3       	rjmp	.+1714   	; 0x7c8 <__bad_interrupt>
     116:	00 00       	nop
     118:	57 c3       	rjmp	.+1710   	; 0x7c8 <__bad_interrupt>
     11a:	00 00       	nop
     11c:	55 c3       	rjmp	.+1706   	; 0x7c8 <__bad_interrupt>
     11e:	00 00       	nop
     120:	53 c3       	rjmp	.+1702   	; 0x7c8 <__bad_interrupt>
     122:	00 00       	nop
     124:	51 c3       	rjmp	.+1698   	; 0x7c8 <__bad_interrupt>
     126:	00 00       	nop
     128:	4f c3       	rjmp	.+1694   	; 0x7c8 <__bad_interrupt>
     12a:	00 00       	nop
     12c:	4d c3       	rjmp	.+1690   	; 0x7c8 <__bad_interrupt>
     12e:	00 00       	nop
     130:	4b c3       	rjmp	.+1686   	; 0x7c8 <__bad_interrupt>
     132:	00 00       	nop
     134:	49 c3       	rjmp	.+1682   	; 0x7c8 <__bad_interrupt>
     136:	00 00       	nop
     138:	47 c3       	rjmp	.+1678   	; 0x7c8 <__bad_interrupt>
     13a:	00 00       	nop
     13c:	45 c3       	rjmp	.+1674   	; 0x7c8 <__bad_interrupt>
     13e:	00 00       	nop
     140:	43 c3       	rjmp	.+1670   	; 0x7c8 <__bad_interrupt>
     142:	00 00       	nop
     144:	41 c3       	rjmp	.+1666   	; 0x7c8 <__bad_interrupt>
     146:	00 00       	nop
     148:	3f c3       	rjmp	.+1662   	; 0x7c8 <__bad_interrupt>
     14a:	00 00       	nop
     14c:	3d c3       	rjmp	.+1658   	; 0x7c8 <__bad_interrupt>
     14e:	00 00       	nop
     150:	3b c3       	rjmp	.+1654   	; 0x7c8 <__bad_interrupt>
     152:	00 00       	nop
     154:	39 c3       	rjmp	.+1650   	; 0x7c8 <__bad_interrupt>
     156:	00 00       	nop
     158:	37 c3       	rjmp	.+1646   	; 0x7c8 <__bad_interrupt>
     15a:	00 00       	nop
     15c:	35 c3       	rjmp	.+1642   	; 0x7c8 <__bad_interrupt>
     15e:	00 00       	nop
     160:	0c 94 fd 30 	jmp	0x61fa	; 0x61fa <__vector_88>
     164:	0c 94 69 31 	jmp	0x62d2	; 0x62d2 <__vector_89>
     168:	0c 94 55 31 	jmp	0x62aa	; 0x62aa <__vector_90>
     16c:	0c 94 29 31 	jmp	0x6252	; 0x6252 <__vector_91>
     170:	0c 94 95 31 	jmp	0x632a	; 0x632a <__vector_92>
     174:	0c 94 5f 31 	jmp	0x62be	; 0x62be <__vector_93>
     178:	27 c3       	rjmp	.+1614   	; 0x7c8 <__bad_interrupt>
     17a:	00 00       	nop
     17c:	25 c3       	rjmp	.+1610   	; 0x7c8 <__bad_interrupt>
     17e:	00 00       	nop
     180:	23 c3       	rjmp	.+1606   	; 0x7c8 <__bad_interrupt>
     182:	00 00       	nop
     184:	21 c3       	rjmp	.+1602   	; 0x7c8 <__bad_interrupt>
     186:	00 00       	nop
     188:	1f c3       	rjmp	.+1598   	; 0x7c8 <__bad_interrupt>
     18a:	00 00       	nop
     18c:	1d c3       	rjmp	.+1594   	; 0x7c8 <__bad_interrupt>
     18e:	00 00       	nop
     190:	1b c3       	rjmp	.+1590   	; 0x7c8 <__bad_interrupt>
     192:	00 00       	nop
     194:	19 c3       	rjmp	.+1586   	; 0x7c8 <__bad_interrupt>
     196:	00 00       	nop
     198:	17 c3       	rjmp	.+1582   	; 0x7c8 <__bad_interrupt>
     19a:	00 00       	nop
     19c:	15 c3       	rjmp	.+1578   	; 0x7c8 <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	13 c3       	rjmp	.+1574   	; 0x7c8 <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	11 c3       	rjmp	.+1570   	; 0x7c8 <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	0f c3       	rjmp	.+1566   	; 0x7c8 <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	0d c3       	rjmp	.+1562   	; 0x7c8 <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	0b c3       	rjmp	.+1558   	; 0x7c8 <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	09 c3       	rjmp	.+1554   	; 0x7c8 <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	07 c3       	rjmp	.+1550   	; 0x7c8 <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	05 c3       	rjmp	.+1546   	; 0x7c8 <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	03 c3       	rjmp	.+1542   	; 0x7c8 <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	01 c3       	rjmp	.+1538   	; 0x7c8 <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	ff c2       	rjmp	.+1534   	; 0x7c8 <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	fd c2       	rjmp	.+1530   	; 0x7c8 <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	fb c2       	rjmp	.+1526   	; 0x7c8 <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	f9 c2       	rjmp	.+1522   	; 0x7c8 <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	f7 c2       	rjmp	.+1518   	; 0x7c8 <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	f5 c2       	rjmp	.+1514   	; 0x7c8 <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	f3 c2       	rjmp	.+1510   	; 0x7c8 <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	f1 c2       	rjmp	.+1506   	; 0x7c8 <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	ef c2       	rjmp	.+1502   	; 0x7c8 <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	ed c2       	rjmp	.+1498   	; 0x7c8 <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	eb c2       	rjmp	.+1494   	; 0x7c8 <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	e9 c2       	rjmp	.+1490   	; 0x7c8 <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	e7 c2       	rjmp	.+1486   	; 0x7c8 <__bad_interrupt>
     1fa:	00 00       	nop
     1fc:	67 09       	sbc	r22, r7
     1fe:	46 09       	sbc	r20, r6
     200:	88 09       	sbc	r24, r8
     202:	a8 09       	sbc	r26, r8
     204:	c9 09       	sbc	r28, r9
     206:	ea 09       	sbc	r30, r10
     208:	0b 0a       	sbc	r0, r27
     20a:	2c 0a       	sbc	r2, r28
     20c:	4d 0a       	sbc	r4, r29
     20e:	6e 0a       	sbc	r6, r30
     210:	8f 0a       	sbc	r8, r31
     212:	af 0a       	sbc	r10, r31
     214:	d0 0a       	sbc	r13, r16
     216:	2e 08       	sbc	r2, r14
     218:	4a 08       	sbc	r4, r10
     21a:	6a 08       	sbc	r6, r10
     21c:	72 08       	sbc	r7, r2
     21e:	7e 08       	sbc	r7, r14
     220:	92 08       	sbc	r9, r2
     222:	3a 08       	sbc	r3, r10
     224:	a1 08       	sbc	r10, r1
     226:	b6 08       	sbc	r11, r6
     228:	ca 08       	sbc	r12, r10
     22a:	e2 08       	sbc	r14, r2
     22c:	fa 08       	sbc	r15, r10
     22e:	12 09       	sbc	r17, r2
     230:	2a 09       	sbc	r18, r10
     232:	f1 0a       	sbc	r15, r17
     234:	11 0b       	sbc	r17, r17
     236:	32 0b       	sbc	r19, r18
     238:	53 0b       	sbc	r21, r19
     23a:	74 0b       	sbc	r23, r20
     23c:	69 27       	eor	r22, r25
     23e:	71 27       	eor	r23, r17
     240:	75 27       	eor	r23, r21
     242:	79 27       	eor	r23, r25
     244:	7d 27       	eor	r23, r29
     246:	6d 27       	eor	r22, r29
     248:	81 27       	eor	r24, r17
     24a:	0a 38       	cpi	r16, 0x8A	; 138
     24c:	17 38       	cpi	r17, 0x87	; 135
     24e:	96 38       	cpi	r25, 0x86	; 134
     250:	9d 38       	cpi	r25, 0x8D	; 141
     252:	a7 39       	cpi	r26, 0x97	; 151
     254:	a7 39       	cpi	r26, 0x97	; 151
     256:	a7 39       	cpi	r26, 0x97	; 151
     258:	a7 39       	cpi	r26, 0x97	; 151
     25a:	a7 39       	cpi	r26, 0x97	; 151
     25c:	a7 39       	cpi	r26, 0x97	; 151
     25e:	45 39       	cpi	r20, 0x95	; 149
     260:	4b 39       	cpi	r20, 0x9B	; 155
     262:	61 39       	cpi	r22, 0x91	; 145
     264:	77 39       	cpi	r23, 0x97	; 151
     266:	93 39       	cpi	r25, 0x93	; 147

00000268 <__trampolines_end>:
     268:	00 00       	nop
     26a:	00 00       	nop
     26c:	00 3e       	cpi	r16, 0xE0	; 224
     26e:	5b 4f       	sbci	r21, 0xFB	; 251
     270:	5b 3e       	cpi	r21, 0xEB	; 235
     272:	3e 6b       	ori	r19, 0xBE	; 190
     274:	4f 6b       	ori	r20, 0xBF	; 191
     276:	3e 1c       	adc	r3, r14
     278:	3e 7c       	andi	r19, 0xCE	; 206
     27a:	3e 1c       	adc	r3, r14
     27c:	18 3c       	cpi	r17, 0xC8	; 200
     27e:	7e 3c       	cpi	r23, 0xCE	; 206
     280:	18 1c       	adc	r1, r8
     282:	57 7d       	andi	r21, 0xD7	; 215
     284:	57 1c       	adc	r5, r7
     286:	1c 5e       	subi	r17, 0xEC	; 236
     288:	7f 5e       	subi	r23, 0xEF	; 239
     28a:	1c 00       	.word	0x001c	; ????
     28c:	18 3c       	cpi	r17, 0xC8	; 200
     28e:	18 00       	.word	0x0018	; ????
     290:	ff e7       	ldi	r31, 0x7F	; 127
     292:	c3 e7       	ldi	r28, 0x73	; 115
     294:	ff 00       	.word	0x00ff	; ????
     296:	18 24       	eor	r1, r8
     298:	18 00       	.word	0x0018	; ????
     29a:	ff e7       	ldi	r31, 0x7F	; 127
     29c:	db e7       	ldi	r29, 0x7B	; 123
     29e:	ff 30       	cpi	r31, 0x0F	; 15
     2a0:	48 3a       	cpi	r20, 0xA8	; 168
     2a2:	06 0e       	add	r0, r22
     2a4:	26 29       	or	r18, r6
     2a6:	79 29       	or	r23, r9
     2a8:	26 40       	sbci	r18, 0x06	; 6
     2aa:	7f 05       	cpc	r23, r15
     2ac:	05 07       	cpc	r16, r21
     2ae:	40 7f       	andi	r20, 0xF0	; 240
     2b0:	05 25       	eor	r16, r5
     2b2:	3f 5a       	subi	r19, 0xAF	; 175
     2b4:	3c e7       	ldi	r19, 0x7C	; 124
     2b6:	3c 5a       	subi	r19, 0xAC	; 172
     2b8:	7f 3e       	cpi	r23, 0xEF	; 239
     2ba:	1c 1c       	adc	r1, r12
     2bc:	08 08       	sbc	r0, r8
     2be:	1c 1c       	adc	r1, r12
     2c0:	3e 7f       	andi	r19, 0xFE	; 254
     2c2:	14 22       	and	r1, r20
     2c4:	7f 22       	and	r7, r31
     2c6:	14 5f       	subi	r17, 0xF4	; 244
     2c8:	5f 00       	.word	0x005f	; ????
     2ca:	5f 5f       	subi	r21, 0xFF	; 255
     2cc:	06 09       	sbc	r16, r6
     2ce:	7f 01       	movw	r14, r30
     2d0:	7f 00       	.word	0x007f	; ????
     2d2:	66 89       	ldd	r22, Z+22	; 0x16
     2d4:	95 6a       	ori	r25, 0xA5	; 165
     2d6:	60 60       	ori	r22, 0x00	; 0
     2d8:	60 60       	ori	r22, 0x00	; 0
     2da:	60 94       	com	r6
     2dc:	a2 ff       	sbrs	r26, 2
     2de:	a2 94       	swap	r10
     2e0:	08 04       	cpc	r0, r8
     2e2:	7e 04       	cpc	r7, r14
     2e4:	08 10       	cpse	r0, r8
     2e6:	20 7e       	andi	r18, 0xE0	; 224
     2e8:	20 10       	cpse	r2, r0
     2ea:	08 08       	sbc	r0, r8
     2ec:	2a 1c       	adc	r2, r10
     2ee:	08 08       	sbc	r0, r8
     2f0:	1c 2a       	or	r1, r28
     2f2:	08 08       	sbc	r0, r8
     2f4:	1e 10       	cpse	r1, r14
     2f6:	10 10       	cpse	r1, r0
     2f8:	10 0c       	add	r1, r0
     2fa:	1e 0c       	add	r1, r14
     2fc:	1e 0c       	add	r1, r14
     2fe:	30 38       	cpi	r19, 0x80	; 128
     300:	3e 38       	cpi	r19, 0x8E	; 142
     302:	30 06       	cpc	r3, r16
     304:	0e 3e       	cpi	r16, 0xEE	; 238
     306:	0e 06       	cpc	r0, r30
     308:	00 00       	nop
     30a:	00 00       	nop
     30c:	00 00       	nop
     30e:	00 5f       	subi	r16, 0xF0	; 240
     310:	00 00       	nop
     312:	00 07       	cpc	r16, r16
     314:	00 07       	cpc	r16, r16
     316:	00 14       	cp	r0, r0
     318:	7f 14       	cp	r7, r15
     31a:	7f 14       	cp	r7, r15
     31c:	24 2a       	or	r2, r20
     31e:	7f 2a       	or	r7, r31
     320:	12 23       	and	r17, r18
     322:	13 08       	sbc	r1, r3
     324:	64 62       	ori	r22, 0x24	; 36
     326:	36 49       	sbci	r19, 0x96	; 150
     328:	56 20       	and	r5, r6
     32a:	50 00       	.word	0x0050	; ????
     32c:	08 07       	cpc	r16, r24
     32e:	03 00       	.word	0x0003	; ????
     330:	00 1c       	adc	r0, r0
     332:	22 41       	sbci	r18, 0x12	; 18
     334:	00 00       	nop
     336:	41 22       	and	r4, r17
     338:	1c 00       	.word	0x001c	; ????
     33a:	2a 1c       	adc	r2, r10
     33c:	7f 1c       	adc	r7, r15
     33e:	2a 08       	sbc	r2, r10
     340:	08 3e       	cpi	r16, 0xE8	; 232
     342:	08 08       	sbc	r0, r8
     344:	00 80       	ld	r0, Z
     346:	70 30       	cpi	r23, 0x00	; 0
     348:	00 08       	sbc	r0, r0
     34a:	08 08       	sbc	r0, r8
     34c:	08 08       	sbc	r0, r8
     34e:	00 00       	nop
     350:	60 60       	ori	r22, 0x00	; 0
     352:	00 20       	and	r0, r0
     354:	10 08       	sbc	r1, r0
     356:	04 02       	muls	r16, r20
     358:	3e 51       	subi	r19, 0x1E	; 30
     35a:	49 45       	sbci	r20, 0x59	; 89
     35c:	3e 00       	.word	0x003e	; ????
     35e:	42 7f       	andi	r20, 0xF2	; 242
     360:	40 00       	.word	0x0040	; ????
     362:	72 49       	sbci	r23, 0x92	; 146
     364:	49 49       	sbci	r20, 0x99	; 153
     366:	46 21       	and	r20, r6
     368:	41 49       	sbci	r20, 0x91	; 145
     36a:	4d 33       	cpi	r20, 0x3D	; 61
     36c:	18 14       	cp	r1, r8
     36e:	12 7f       	andi	r17, 0xF2	; 242
     370:	10 27       	eor	r17, r16
     372:	45 45       	sbci	r20, 0x55	; 85
     374:	45 39       	cpi	r20, 0x95	; 149
     376:	3c 4a       	sbci	r19, 0xAC	; 172
     378:	49 49       	sbci	r20, 0x99	; 153
     37a:	31 41       	sbci	r19, 0x11	; 17
     37c:	21 11       	cpse	r18, r1
     37e:	09 07       	cpc	r16, r25
     380:	36 49       	sbci	r19, 0x96	; 150
     382:	49 49       	sbci	r20, 0x99	; 153
     384:	36 46       	sbci	r19, 0x66	; 102
     386:	49 49       	sbci	r20, 0x99	; 153
     388:	29 1e       	adc	r2, r25
     38a:	00 00       	nop
     38c:	14 00       	.word	0x0014	; ????
     38e:	00 00       	nop
     390:	40 34       	cpi	r20, 0x40	; 64
     392:	00 00       	nop
     394:	00 08       	sbc	r0, r0
     396:	14 22       	and	r1, r20
     398:	41 14       	cp	r4, r1
     39a:	14 14       	cp	r1, r4
     39c:	14 14       	cp	r1, r4
     39e:	00 41       	sbci	r16, 0x10	; 16
     3a0:	22 14       	cp	r2, r2
     3a2:	08 02       	muls	r16, r24
     3a4:	01 59       	subi	r16, 0x91	; 145
     3a6:	09 06       	cpc	r0, r25
     3a8:	3e 41       	sbci	r19, 0x1E	; 30
     3aa:	5d 59       	subi	r21, 0x9D	; 157
     3ac:	4e 7c       	andi	r20, 0xCE	; 206
     3ae:	12 11       	cpse	r17, r2
     3b0:	12 7c       	andi	r17, 0xC2	; 194
     3b2:	7f 49       	sbci	r23, 0x9F	; 159
     3b4:	49 49       	sbci	r20, 0x99	; 153
     3b6:	36 3e       	cpi	r19, 0xE6	; 230
     3b8:	41 41       	sbci	r20, 0x11	; 17
     3ba:	41 22       	and	r4, r17
     3bc:	7f 41       	sbci	r23, 0x1F	; 31
     3be:	41 41       	sbci	r20, 0x11	; 17
     3c0:	3e 7f       	andi	r19, 0xFE	; 254
     3c2:	49 49       	sbci	r20, 0x99	; 153
     3c4:	49 41       	sbci	r20, 0x19	; 25
     3c6:	7f 09       	sbc	r23, r15
     3c8:	09 09       	sbc	r16, r9
     3ca:	01 3e       	cpi	r16, 0xE1	; 225
     3cc:	41 41       	sbci	r20, 0x11	; 17
     3ce:	51 73       	andi	r21, 0x31	; 49
     3d0:	7f 08       	sbc	r7, r15
     3d2:	08 08       	sbc	r0, r8
     3d4:	7f 00       	.word	0x007f	; ????
     3d6:	41 7f       	andi	r20, 0xF1	; 241
     3d8:	41 00       	.word	0x0041	; ????
     3da:	20 40       	sbci	r18, 0x00	; 0
     3dc:	41 3f       	cpi	r20, 0xF1	; 241
     3de:	01 7f       	andi	r16, 0xF1	; 241
     3e0:	08 14       	cp	r0, r8
     3e2:	22 41       	sbci	r18, 0x12	; 18
     3e4:	7f 40       	sbci	r23, 0x0F	; 15
     3e6:	40 40       	sbci	r20, 0x00	; 0
     3e8:	40 7f       	andi	r20, 0xF0	; 240
     3ea:	02 1c       	adc	r0, r2
     3ec:	02 7f       	andi	r16, 0xF2	; 242
     3ee:	7f 04       	cpc	r7, r15
     3f0:	08 10       	cpse	r0, r8
     3f2:	7f 3e       	cpi	r23, 0xEF	; 239
     3f4:	41 41       	sbci	r20, 0x11	; 17
     3f6:	41 3e       	cpi	r20, 0xE1	; 225
     3f8:	7f 09       	sbc	r23, r15
     3fa:	09 09       	sbc	r16, r9
     3fc:	06 3e       	cpi	r16, 0xE6	; 230
     3fe:	41 51       	subi	r20, 0x11	; 17
     400:	21 5e       	subi	r18, 0xE1	; 225
     402:	7f 09       	sbc	r23, r15
     404:	19 29       	or	r17, r9
     406:	46 26       	eor	r4, r22
     408:	49 49       	sbci	r20, 0x99	; 153
     40a:	49 32       	cpi	r20, 0x29	; 41
     40c:	03 01       	movw	r0, r6
     40e:	7f 01       	movw	r14, r30
     410:	03 3f       	cpi	r16, 0xF3	; 243
     412:	40 40       	sbci	r20, 0x00	; 0
     414:	40 3f       	cpi	r20, 0xF0	; 240
     416:	1f 20       	and	r1, r15
     418:	40 20       	and	r4, r0
     41a:	1f 3f       	cpi	r17, 0xFF	; 255
     41c:	40 38       	cpi	r20, 0x80	; 128
     41e:	40 3f       	cpi	r20, 0xF0	; 240
     420:	63 14       	cp	r6, r3
     422:	08 14       	cp	r0, r8
     424:	63 03       	mulsu	r22, r19
     426:	04 78       	andi	r16, 0x84	; 132
     428:	04 03       	mulsu	r16, r20
     42a:	61 59       	subi	r22, 0x91	; 145
     42c:	49 4d       	sbci	r20, 0xD9	; 217
     42e:	43 00       	.word	0x0043	; ????
     430:	7f 41       	sbci	r23, 0x1F	; 31
     432:	41 41       	sbci	r20, 0x11	; 17
     434:	02 04       	cpc	r0, r2
     436:	08 10       	cpse	r0, r8
     438:	20 00       	.word	0x0020	; ????
     43a:	41 41       	sbci	r20, 0x11	; 17
     43c:	41 7f       	andi	r20, 0xF1	; 241
     43e:	04 02       	muls	r16, r20
     440:	01 02       	muls	r16, r17
     442:	04 40       	sbci	r16, 0x04	; 4
     444:	40 40       	sbci	r20, 0x00	; 0
     446:	40 40       	sbci	r20, 0x00	; 0
     448:	00 03       	mulsu	r16, r16
     44a:	07 08       	sbc	r0, r7
     44c:	00 20       	and	r0, r0
     44e:	54 54       	subi	r21, 0x44	; 68
     450:	78 40       	sbci	r23, 0x08	; 8
     452:	7f 28       	or	r7, r15
     454:	44 44       	sbci	r20, 0x44	; 68
     456:	38 38       	cpi	r19, 0x88	; 136
     458:	44 44       	sbci	r20, 0x44	; 68
     45a:	44 28       	or	r4, r4
     45c:	38 44       	sbci	r19, 0x48	; 72
     45e:	44 28       	or	r4, r4
     460:	7f 38       	cpi	r23, 0x8F	; 143
     462:	54 54       	subi	r21, 0x44	; 68
     464:	54 18       	sub	r5, r4
     466:	00 08       	sbc	r0, r0
     468:	7e 09       	sbc	r23, r14
     46a:	02 18       	sub	r0, r2
     46c:	a4 a4       	ldd	r10, Z+44	; 0x2c
     46e:	9c 78       	andi	r25, 0x8C	; 140
     470:	7f 08       	sbc	r7, r15
     472:	04 04       	cpc	r0, r4
     474:	78 00       	.word	0x0078	; ????
     476:	44 7d       	andi	r20, 0xD4	; 212
     478:	40 00       	.word	0x0040	; ????
     47a:	20 40       	sbci	r18, 0x00	; 0
     47c:	40 3d       	cpi	r20, 0xD0	; 208
     47e:	00 7f       	andi	r16, 0xF0	; 240
     480:	10 28       	or	r1, r0
     482:	44 00       	.word	0x0044	; ????
     484:	00 41       	sbci	r16, 0x10	; 16
     486:	7f 40       	sbci	r23, 0x0F	; 15
     488:	00 7c       	andi	r16, 0xC0	; 192
     48a:	04 78       	andi	r16, 0x84	; 132
     48c:	04 78       	andi	r16, 0x84	; 132
     48e:	7c 08       	sbc	r7, r12
     490:	04 04       	cpc	r0, r4
     492:	78 38       	cpi	r23, 0x88	; 136
     494:	44 44       	sbci	r20, 0x44	; 68
     496:	44 38       	cpi	r20, 0x84	; 132
     498:	fc 18       	sub	r15, r12
     49a:	24 24       	eor	r2, r4
     49c:	18 18       	sub	r1, r8
     49e:	24 24       	eor	r2, r4
     4a0:	18 fc       	.word	0xfc18	; ????
     4a2:	7c 08       	sbc	r7, r12
     4a4:	04 04       	cpc	r0, r4
     4a6:	08 48       	sbci	r16, 0x88	; 136
     4a8:	54 54       	subi	r21, 0x44	; 68
     4aa:	54 24       	eor	r5, r4
     4ac:	04 04       	cpc	r0, r4
     4ae:	3f 44       	sbci	r19, 0x4F	; 79
     4b0:	24 3c       	cpi	r18, 0xC4	; 196
     4b2:	40 40       	sbci	r20, 0x00	; 0
     4b4:	20 7c       	andi	r18, 0xC0	; 192
     4b6:	1c 20       	and	r1, r12
     4b8:	40 20       	and	r4, r0
     4ba:	1c 3c       	cpi	r17, 0xCC	; 204
     4bc:	40 30       	cpi	r20, 0x00	; 0
     4be:	40 3c       	cpi	r20, 0xC0	; 192
     4c0:	44 28       	or	r4, r4
     4c2:	10 28       	or	r1, r0
     4c4:	44 4c       	sbci	r20, 0xC4	; 196
     4c6:	90 90 90 7c 	lds	r9, 0x7C90
     4ca:	44 64       	ori	r20, 0x44	; 68
     4cc:	54 4c       	sbci	r21, 0xC4	; 196
     4ce:	44 00       	.word	0x0044	; ????
     4d0:	08 36       	cpi	r16, 0x68	; 104
     4d2:	41 00       	.word	0x0041	; ????
     4d4:	00 00       	nop
     4d6:	77 00       	.word	0x0077	; ????
     4d8:	00 00       	nop
     4da:	41 36       	cpi	r20, 0x61	; 97
     4dc:	08 00       	.word	0x0008	; ????
     4de:	02 01       	movw	r0, r4
     4e0:	02 04       	cpc	r0, r2
     4e2:	02 3c       	cpi	r16, 0xC2	; 194
     4e4:	26 23       	and	r18, r22
     4e6:	26 3c       	cpi	r18, 0xC6	; 198
     4e8:	1e a1       	ldd	r17, Y+38	; 0x26
     4ea:	a1 61       	ori	r26, 0x11	; 17
     4ec:	12 3a       	cpi	r17, 0xA2	; 162
     4ee:	40 40       	sbci	r20, 0x00	; 0
     4f0:	20 7a       	andi	r18, 0xA0	; 160
     4f2:	38 54       	subi	r19, 0x48	; 72
     4f4:	54 55       	subi	r21, 0x54	; 84
     4f6:	59 21       	and	r21, r9
     4f8:	55 55       	subi	r21, 0x55	; 85
     4fa:	79 41       	sbci	r23, 0x19	; 25
     4fc:	22 54       	subi	r18, 0x42	; 66
     4fe:	54 78       	andi	r21, 0x84	; 132
     500:	42 21       	and	r20, r2
     502:	55 54       	subi	r21, 0x45	; 69
     504:	78 40       	sbci	r23, 0x08	; 8
     506:	20 54       	subi	r18, 0x40	; 64
     508:	55 79       	andi	r21, 0x95	; 149
     50a:	40 0c       	add	r4, r0
     50c:	1e 52       	subi	r17, 0x2E	; 46
     50e:	72 12       	cpse	r7, r18
     510:	39 55       	subi	r19, 0x59	; 89
     512:	55 55       	subi	r21, 0x55	; 85
     514:	59 39       	cpi	r21, 0x99	; 153
     516:	54 54       	subi	r21, 0x44	; 68
     518:	54 59       	subi	r21, 0x94	; 148
     51a:	39 55       	subi	r19, 0x59	; 89
     51c:	54 54       	subi	r21, 0x44	; 68
     51e:	58 00       	.word	0x0058	; ????
     520:	00 45       	sbci	r16, 0x50	; 80
     522:	7c 41       	sbci	r23, 0x1C	; 28
     524:	00 02       	muls	r16, r16
     526:	45 7d       	andi	r20, 0xD5	; 213
     528:	42 00       	.word	0x0042	; ????
     52a:	01 45       	sbci	r16, 0x51	; 81
     52c:	7c 40       	sbci	r23, 0x0C	; 12
     52e:	7d 12       	cpse	r7, r29
     530:	11 12       	cpse	r1, r17
     532:	7d f0       	brhs	.+30     	; 0x552 <__trampolines_end+0x2ea>
     534:	28 25       	eor	r18, r8
     536:	28 f0       	brcs	.+10     	; 0x542 <__trampolines_end+0x2da>
     538:	7c 54       	subi	r23, 0x4C	; 76
     53a:	55 45       	sbci	r21, 0x55	; 85
     53c:	00 20       	and	r0, r0
     53e:	54 54       	subi	r21, 0x44	; 68
     540:	7c 54       	subi	r23, 0x4C	; 76
     542:	7c 0a       	sbc	r7, r28
     544:	09 7f       	andi	r16, 0xF9	; 249
     546:	49 32       	cpi	r20, 0x29	; 41
     548:	49 49       	sbci	r20, 0x99	; 153
     54a:	49 32       	cpi	r20, 0x29	; 41
     54c:	3a 44       	sbci	r19, 0x4A	; 74
     54e:	44 44       	sbci	r20, 0x44	; 68
     550:	3a 32       	cpi	r19, 0x2A	; 42
     552:	4a 48       	sbci	r20, 0x8A	; 138
     554:	48 30       	cpi	r20, 0x08	; 8
     556:	3a 41       	sbci	r19, 0x1A	; 26
     558:	41 21       	and	r20, r1
     55a:	7a 3a       	cpi	r23, 0xAA	; 170
     55c:	42 40       	sbci	r20, 0x02	; 2
     55e:	20 78       	andi	r18, 0x80	; 128
     560:	00 9d       	mul	r16, r0
     562:	a0 a0       	ldd	r10, Z+32	; 0x20
     564:	7d 3d       	cpi	r23, 0xDD	; 221
     566:	42 42       	sbci	r20, 0x22	; 34
     568:	42 3d       	cpi	r20, 0xD2	; 210
     56a:	3d 40       	sbci	r19, 0x0D	; 13
     56c:	40 40       	sbci	r20, 0x00	; 0
     56e:	3d 3c       	cpi	r19, 0xCD	; 205
     570:	24 ff       	sbrs	r18, 4
     572:	24 24       	eor	r2, r4
     574:	48 7e       	andi	r20, 0xE8	; 232
     576:	49 43       	sbci	r20, 0x39	; 57
     578:	66 2b       	or	r22, r22
     57a:	2f fc       	.word	0xfc2f	; ????
     57c:	2f 2b       	or	r18, r31
     57e:	ff 09       	sbc	r31, r15
     580:	29 f6       	brne	.-118    	; 0x50c <__trampolines_end+0x2a4>
     582:	20 c0       	rjmp	.+64     	; 0x5c4 <__trampolines_end+0x35c>
     584:	88 7e       	andi	r24, 0xE8	; 232
     586:	09 03       	fmul	r16, r17
     588:	20 54       	subi	r18, 0x40	; 64
     58a:	54 79       	andi	r21, 0x94	; 148
     58c:	41 00       	.word	0x0041	; ????
     58e:	00 44       	sbci	r16, 0x40	; 64
     590:	7d 41       	sbci	r23, 0x1D	; 29
     592:	30 48       	sbci	r19, 0x80	; 128
     594:	48 4a       	sbci	r20, 0xA8	; 168
     596:	32 38       	cpi	r19, 0x82	; 130
     598:	40 40       	sbci	r20, 0x00	; 0
     59a:	22 7a       	andi	r18, 0xA2	; 162
     59c:	00 7a       	andi	r16, 0xA0	; 160
     59e:	0a 0a       	sbc	r0, r26
     5a0:	72 7d       	andi	r23, 0xD2	; 210
     5a2:	0d 19       	sub	r16, r13
     5a4:	31 7d       	andi	r19, 0xD1	; 209
     5a6:	26 29       	or	r18, r6
     5a8:	29 2f       	mov	r18, r25
     5aa:	28 26       	eor	r2, r24
     5ac:	29 29       	or	r18, r9
     5ae:	29 26       	eor	r2, r25
     5b0:	30 48       	sbci	r19, 0x80	; 128
     5b2:	4d 40       	sbci	r20, 0x0D	; 13
     5b4:	20 38       	cpi	r18, 0x80	; 128
     5b6:	08 08       	sbc	r0, r8
     5b8:	08 08       	sbc	r0, r8
     5ba:	08 08       	sbc	r0, r8
     5bc:	08 08       	sbc	r0, r8
     5be:	38 2f       	mov	r19, r24
     5c0:	10 c8       	rjmp	.-4064   	; 0xfffff5e2 <__eeprom_end+0xff7ef5e2>
     5c2:	ac ba       	out	0x1c, r10	; 28
     5c4:	2f 10       	cpse	r2, r15
     5c6:	28 34       	cpi	r18, 0x48	; 72
     5c8:	fa 00       	.word	0x00fa	; ????
     5ca:	00 7b       	andi	r16, 0xB0	; 176
     5cc:	00 00       	nop
     5ce:	08 14       	cp	r0, r8
     5d0:	2a 14       	cp	r2, r10
     5d2:	22 22       	and	r2, r18
     5d4:	14 2a       	or	r1, r20
     5d6:	14 08       	sbc	r1, r4
     5d8:	aa 00       	.word	0x00aa	; ????
     5da:	55 00       	.word	0x0055	; ????
     5dc:	aa aa       	std	Y+50, r10	; 0x32
     5de:	55 aa       	std	Z+53, r5	; 0x35
     5e0:	55 aa       	std	Z+53, r5	; 0x35
     5e2:	00 00       	nop
     5e4:	00 ff       	sbrs	r16, 0
     5e6:	00 10       	cpse	r0, r0
     5e8:	10 10       	cpse	r1, r0
     5ea:	ff 00       	.word	0x00ff	; ????
     5ec:	14 14       	cp	r1, r4
     5ee:	14 ff       	sbrs	r17, 4
     5f0:	00 10       	cpse	r0, r0
     5f2:	10 ff       	sbrs	r17, 0
     5f4:	00 ff       	sbrs	r16, 0
     5f6:	10 10       	cpse	r1, r0
     5f8:	f0 10       	cpse	r15, r0
     5fa:	f0 14       	cp	r15, r0
     5fc:	14 14       	cp	r1, r4
     5fe:	fc 00       	.word	0x00fc	; ????
     600:	14 14       	cp	r1, r4
     602:	f7 00       	.word	0x00f7	; ????
     604:	ff 00       	.word	0x00ff	; ????
     606:	00 ff       	sbrs	r16, 0
     608:	00 ff       	sbrs	r16, 0
     60a:	14 14       	cp	r1, r4
     60c:	f4 04       	cpc	r15, r4
     60e:	fc 14       	cp	r15, r12
     610:	14 17       	cp	r17, r20
     612:	10 1f       	adc	r17, r16
     614:	10 10       	cpse	r1, r0
     616:	1f 10       	cpse	r1, r15
     618:	1f 14       	cp	r1, r15
     61a:	14 14       	cp	r1, r4
     61c:	1f 00       	.word	0x001f	; ????
     61e:	10 10       	cpse	r1, r0
     620:	10 f0       	brcs	.+4      	; 0x626 <__trampolines_end+0x3be>
     622:	00 00       	nop
     624:	00 00       	nop
     626:	1f 10       	cpse	r1, r15
     628:	10 10       	cpse	r1, r0
     62a:	10 1f       	adc	r17, r16
     62c:	10 10       	cpse	r1, r0
     62e:	10 10       	cpse	r1, r0
     630:	f0 10       	cpse	r15, r0
     632:	00 00       	nop
     634:	00 ff       	sbrs	r16, 0
     636:	10 10       	cpse	r1, r0
     638:	10 10       	cpse	r1, r0
     63a:	10 10       	cpse	r1, r0
     63c:	10 10       	cpse	r1, r0
     63e:	10 ff       	sbrs	r17, 0
     640:	10 00       	.word	0x0010	; ????
     642:	00 00       	nop
     644:	ff 14       	cp	r15, r15
     646:	00 00       	nop
     648:	ff 00       	.word	0x00ff	; ????
     64a:	ff 00       	.word	0x00ff	; ????
     64c:	00 1f       	adc	r16, r16
     64e:	10 17       	cp	r17, r16
     650:	00 00       	nop
     652:	fc 04       	cpc	r15, r12
     654:	f4 14       	cp	r15, r4
     656:	14 17       	cp	r17, r20
     658:	10 17       	cp	r17, r16
     65a:	14 14       	cp	r1, r4
     65c:	f4 04       	cpc	r15, r4
     65e:	f4 00       	.word	0x00f4	; ????
     660:	00 ff       	sbrs	r16, 0
     662:	00 f7       	brcc	.-64     	; 0x624 <__trampolines_end+0x3bc>
     664:	14 14       	cp	r1, r4
     666:	14 14       	cp	r1, r4
     668:	14 14       	cp	r1, r4
     66a:	14 f7       	brge	.-60     	; 0x630 <__trampolines_end+0x3c8>
     66c:	00 f7       	brcc	.-64     	; 0x62e <__trampolines_end+0x3c6>
     66e:	14 14       	cp	r1, r4
     670:	14 17       	cp	r17, r20
     672:	14 10       	cpse	r1, r4
     674:	10 1f       	adc	r17, r16
     676:	10 1f       	adc	r17, r16
     678:	14 14       	cp	r1, r4
     67a:	14 f4       	brge	.+4      	; 0x680 <__trampolines_end+0x418>
     67c:	14 10       	cpse	r1, r4
     67e:	10 f0       	brcs	.+4      	; 0x684 <__trampolines_end+0x41c>
     680:	10 f0       	brcs	.+4      	; 0x686 <__trampolines_end+0x41e>
     682:	00 00       	nop
     684:	1f 10       	cpse	r1, r15
     686:	1f 00       	.word	0x001f	; ????
     688:	00 00       	nop
     68a:	1f 14       	cp	r1, r15
     68c:	00 00       	nop
     68e:	00 fc       	sbrc	r0, 0
     690:	14 00       	.word	0x0014	; ????
     692:	00 f0       	brcs	.+0      	; 0x694 <__trampolines_end+0x42c>
     694:	10 f0       	brcs	.+4      	; 0x69a <__trampolines_end+0x432>
     696:	10 10       	cpse	r1, r0
     698:	ff 10       	cpse	r15, r15
     69a:	ff 14       	cp	r15, r15
     69c:	14 14       	cp	r1, r4
     69e:	ff 14       	cp	r15, r15
     6a0:	10 10       	cpse	r1, r0
     6a2:	10 1f       	adc	r17, r16
     6a4:	00 00       	nop
     6a6:	00 00       	nop
     6a8:	f0 10       	cpse	r15, r0
     6aa:	ff ff       	.word	0xffff	; ????
     6ac:	ff ff       	.word	0xffff	; ????
     6ae:	ff f0       	brie	.+62     	; 0x6ee <__trampolines_end+0x486>
     6b0:	f0 f0       	brcs	.+60     	; 0x6ee <__trampolines_end+0x486>
     6b2:	f0 f0       	brcs	.+60     	; 0x6f0 <__trampolines_end+0x488>
     6b4:	ff ff       	.word	0xffff	; ????
     6b6:	ff 00       	.word	0x00ff	; ????
     6b8:	00 00       	nop
     6ba:	00 00       	nop
     6bc:	ff ff       	.word	0xffff	; ????
     6be:	0f 0f       	add	r16, r31
     6c0:	0f 0f       	add	r16, r31
     6c2:	0f 38       	cpi	r16, 0x8F	; 143
     6c4:	44 44       	sbci	r20, 0x44	; 68
     6c6:	38 44       	sbci	r19, 0x48	; 72
     6c8:	fc 4a       	sbci	r31, 0xAC	; 172
     6ca:	4a 4a       	sbci	r20, 0xAA	; 170
     6cc:	34 7e       	andi	r19, 0xE4	; 228
     6ce:	02 02       	muls	r16, r18
     6d0:	06 06       	cpc	r0, r22
     6d2:	02 7e       	andi	r16, 0xE2	; 226
     6d4:	02 7e       	andi	r16, 0xE2	; 226
     6d6:	02 63       	ori	r16, 0x32	; 50
     6d8:	55 49       	sbci	r21, 0x95	; 149
     6da:	41 63       	ori	r20, 0x31	; 49
     6dc:	38 44       	sbci	r19, 0x48	; 72
     6de:	44 3c       	cpi	r20, 0xC4	; 196
     6e0:	04 40       	sbci	r16, 0x04	; 4
     6e2:	7e 20       	and	r7, r14
     6e4:	1e 20       	and	r1, r14
     6e6:	06 02       	muls	r16, r22
     6e8:	7e 02       	muls	r23, r30
     6ea:	02 99       	sbic	0x00, 2	; 0
     6ec:	a5 e7       	ldi	r26, 0x75	; 117
     6ee:	a5 99       	sbic	0x14, 5	; 20
     6f0:	1c 2a       	or	r1, r28
     6f2:	49 2a       	or	r4, r25
     6f4:	1c 4c       	sbci	r17, 0xCC	; 204
     6f6:	72 01       	movw	r14, r4
     6f8:	72 4c       	sbci	r23, 0xC2	; 194
     6fa:	30 4a       	sbci	r19, 0xA0	; 160
     6fc:	4d 4d       	sbci	r20, 0xDD	; 221
     6fe:	30 30       	cpi	r19, 0x00	; 0
     700:	48 78       	andi	r20, 0x88	; 136
     702:	48 30       	cpi	r20, 0x08	; 8
     704:	bc 62       	ori	r27, 0x2C	; 44
     706:	5a 46       	sbci	r21, 0x6A	; 106
     708:	3d 3e       	cpi	r19, 0xED	; 237
     70a:	49 49       	sbci	r20, 0x99	; 153
     70c:	49 00       	.word	0x0049	; ????
     70e:	7e 01       	movw	r14, r28
     710:	01 01       	movw	r0, r2
     712:	7e 2a       	or	r7, r30
     714:	2a 2a       	or	r2, r26
     716:	2a 2a       	or	r2, r26
     718:	44 44       	sbci	r20, 0x44	; 68
     71a:	5f 44       	sbci	r21, 0x4F	; 79
     71c:	44 40       	sbci	r20, 0x04	; 4
     71e:	51 4a       	sbci	r21, 0xA1	; 161
     720:	44 40       	sbci	r20, 0x04	; 4
     722:	40 44       	sbci	r20, 0x40	; 64
     724:	4a 51       	subi	r20, 0x1A	; 26
     726:	40 00       	.word	0x0040	; ????
     728:	00 ff       	sbrs	r16, 0
     72a:	01 03       	mulsu	r16, r17
     72c:	e0 80       	ld	r14, Z
     72e:	ff 00       	.word	0x00ff	; ????
     730:	00 08       	sbc	r0, r0
     732:	08 6b       	ori	r16, 0xB8	; 184
     734:	6b 08       	sbc	r6, r11
     736:	36 12       	cpse	r3, r22
     738:	36 24       	eor	r3, r6
     73a:	36 06       	cpc	r3, r22
     73c:	0f 09       	sbc	r16, r15
     73e:	0f 06       	cpc	r0, r31
     740:	00 00       	nop
     742:	18 18       	sub	r1, r8
     744:	00 00       	nop
     746:	00 10       	cpse	r0, r0
     748:	10 00       	.word	0x0010	; ????
     74a:	30 40       	sbci	r19, 0x00	; 0
     74c:	ff 01       	movw	r30, r30
     74e:	01 00       	.word	0x0001	; ????
     750:	1f 01       	movw	r2, r30
     752:	01 1e       	adc	r0, r17
     754:	00 19       	sub	r16, r0
     756:	1d 17       	cp	r17, r29
     758:	12 00       	.word	0x0012	; ????
     75a:	3c 3c       	cpi	r19, 0xCC	; 204
     75c:	3c 3c       	cpi	r19, 0xCC	; 204
     75e:	00 00       	nop
     760:	00 00       	nop
	...

00000764 <__ctors_start>:
     764:	ed 39       	cpi	r30, 0x9D	; 157

00000766 <__ctors_end>:
     766:	11 24       	eor	r1, r1
     768:	1f be       	out	0x3f, r1	; 63
     76a:	cf ef       	ldi	r28, 0xFF	; 255
     76c:	cd bf       	out	0x3d, r28	; 61
     76e:	df e3       	ldi	r29, 0x3F	; 63
     770:	de bf       	out	0x3e, r29	; 62
     772:	00 e0       	ldi	r16, 0x00	; 0
     774:	0c bf       	out	0x3c, r16	; 60

00000776 <__do_copy_data>:
     776:	11 e2       	ldi	r17, 0x21	; 33
     778:	a0 e0       	ldi	r26, 0x00	; 0
     77a:	b0 e2       	ldi	r27, 0x20	; 32
     77c:	ee ec       	ldi	r30, 0xCE	; 206
     77e:	f1 e8       	ldi	r31, 0x81	; 129
     780:	00 e0       	ldi	r16, 0x00	; 0
     782:	0b bf       	out	0x3b, r16	; 59
     784:	02 c0       	rjmp	.+4      	; 0x78a <__do_copy_data+0x14>
     786:	07 90       	elpm	r0, Z+
     788:	0d 92       	st	X+, r0
     78a:	aa 35       	cpi	r26, 0x5A	; 90
     78c:	b1 07       	cpc	r27, r17
     78e:	d9 f7       	brne	.-10     	; 0x786 <__do_copy_data+0x10>

00000790 <__do_clear_bss>:
     790:	21 e2       	ldi	r18, 0x21	; 33
     792:	aa e5       	ldi	r26, 0x5A	; 90
     794:	b1 e2       	ldi	r27, 0x21	; 33
     796:	01 c0       	rjmp	.+2      	; 0x79a <.do_clear_bss_start>

00000798 <.do_clear_bss_loop>:
     798:	1d 92       	st	X+, r1

0000079a <.do_clear_bss_start>:
     79a:	a6 37       	cpi	r26, 0x76	; 118
     79c:	b2 07       	cpc	r27, r18
     79e:	e1 f7       	brne	.-8      	; 0x798 <.do_clear_bss_loop>

000007a0 <__do_global_ctors>:
     7a0:	17 e0       	ldi	r17, 0x07	; 7
     7a2:	c6 e6       	ldi	r28, 0x66	; 102
     7a4:	d7 e0       	ldi	r29, 0x07	; 7
     7a6:	00 e0       	ldi	r16, 0x00	; 0
     7a8:	06 c0       	rjmp	.+12     	; 0x7b6 <__do_global_ctors+0x16>
     7aa:	22 97       	sbiw	r28, 0x02	; 2
     7ac:	01 09       	sbc	r16, r1
     7ae:	fe 01       	movw	r30, r28
     7b0:	0b bf       	out	0x3b, r16	; 59
     7b2:	0e 94 d1 3c 	call	0x79a2	; 0x79a2 <__tablejump_elpm__>
     7b6:	c4 36       	cpi	r28, 0x64	; 100
     7b8:	d1 07       	cpc	r29, r17
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	08 07       	cpc	r16, r24
     7be:	a9 f7       	brne	.-22     	; 0x7aa <__do_global_ctors+0xa>
     7c0:	0e 94 01 33 	call	0x6602	; 0x6602 <main>
     7c4:	0c 94 e5 40 	jmp	0x81ca	; 0x81ca <_exit>

000007c8 <__bad_interrupt>:
     7c8:	0c 94 c1 31 	jmp	0x6382	; 0x6382 <__vector_default>

000007cc <_ZN12Adafruit_GFX9drawPixelEiij>:
  wrap = w;
}

uint8_t Adafruit_GFX::getRotation(void) const {
  return rotation;
}
     7cc:	08 95       	ret

000007ce <_ZN12Adafruit_GFX8drawLineEiiiij>:
     7ce:	2f 92       	push	r2
     7d0:	3f 92       	push	r3
     7d2:	4f 92       	push	r4
     7d4:	5f 92       	push	r5
     7d6:	6f 92       	push	r6
     7d8:	7f 92       	push	r7
     7da:	8f 92       	push	r8
     7dc:	9f 92       	push	r9
     7de:	af 92       	push	r10
     7e0:	bf 92       	push	r11
     7e2:	cf 92       	push	r12
     7e4:	df 92       	push	r13
     7e6:	ef 92       	push	r14
     7e8:	ff 92       	push	r15
     7ea:	0f 93       	push	r16
     7ec:	1f 93       	push	r17
     7ee:	cf 93       	push	r28
     7f0:	df 93       	push	r29
     7f2:	00 d0       	rcall	.+0      	; 0x7f4 <_ZN12Adafruit_GFX8drawLineEiiiij+0x26>
     7f4:	1f 92       	push	r1
     7f6:	cd b7       	in	r28, 0x3d	; 61
     7f8:	de b7       	in	r29, 0x3e	; 62
     7fa:	5c 01       	movw	r10, r24
     7fc:	6b 83       	std	Y+3, r22	; 0x03
     7fe:	7c 83       	std	Y+4, r23	; 0x04
     800:	6a 01       	movw	r12, r20
     802:	49 01       	movw	r8, r18
     804:	18 01       	movw	r2, r16
     806:	b8 01       	movw	r22, r16
     808:	64 1b       	sub	r22, r20
     80a:	75 0b       	sbc	r23, r21
     80c:	88 27       	eor	r24, r24
     80e:	77 fd       	sbrc	r23, 7
     810:	80 95       	com	r24
     812:	98 2f       	mov	r25, r24
     814:	0e 94 04 3c 	call	0x7808	; 0x7808 <__floatsisf>
     818:	2b 01       	movw	r4, r22
     81a:	3c 01       	movw	r6, r24
     81c:	e8 94       	clt
     81e:	77 f8       	bld	r7, 7
     820:	b4 01       	movw	r22, r8
     822:	2b 81       	ldd	r18, Y+3	; 0x03
     824:	3c 81       	ldd	r19, Y+4	; 0x04
     826:	62 1b       	sub	r22, r18
     828:	73 0b       	sbc	r23, r19
     82a:	88 27       	eor	r24, r24
     82c:	77 fd       	sbrc	r23, 7
     82e:	80 95       	com	r24
     830:	98 2f       	mov	r25, r24
     832:	0e 94 04 3c 	call	0x7808	; 0x7808 <__floatsisf>
     836:	9b 01       	movw	r18, r22
     838:	ac 01       	movw	r20, r24
     83a:	5f 77       	andi	r21, 0x7F	; 127
     83c:	11 e0       	ldi	r17, 0x01	; 1
     83e:	00 e0       	ldi	r16, 0x00	; 0
     840:	c3 01       	movw	r24, r6
     842:	b2 01       	movw	r22, r4
     844:	0e 94 68 3c 	call	0x78d0	; 0x78d0 <__gesf2>
     848:	18 16       	cp	r1, r24
     84a:	0c f0       	brlt	.+2      	; 0x84e <_ZN12Adafruit_GFX8drawLineEiiiij+0x80>
     84c:	10 e0       	ldi	r17, 0x00	; 0
     84e:	61 2e       	mov	r6, r17
     850:	70 2e       	mov	r7, r16
     852:	61 14       	cp	r6, r1
     854:	71 04       	cpc	r7, r1
     856:	59 f0       	breq	.+22     	; 0x86e <_ZN12Adafruit_GFX8drawLineEiiiij+0xa0>
     858:	98 2d       	mov	r25, r8
     85a:	89 2d       	mov	r24, r9
     85c:	41 01       	movw	r8, r2
     85e:	29 2e       	mov	r2, r25
     860:	38 2e       	mov	r3, r24
     862:	9b 81       	ldd	r25, Y+3	; 0x03
     864:	8c 81       	ldd	r24, Y+4	; 0x04
     866:	cb 82       	std	Y+3, r12	; 0x03
     868:	dc 82       	std	Y+4, r13	; 0x04
     86a:	c9 2e       	mov	r12, r25
     86c:	d8 2e       	mov	r13, r24
     86e:	8b 81       	ldd	r24, Y+3	; 0x03
     870:	9c 81       	ldd	r25, Y+4	; 0x04
     872:	88 16       	cp	r8, r24
     874:	99 06       	cpc	r9, r25
     876:	5c f4       	brge	.+22     	; 0x88e <_ZN12Adafruit_GFX8drawLineEiiiij+0xc0>
     878:	9c 2d       	mov	r25, r12
     87a:	8d 2d       	mov	r24, r13
     87c:	61 01       	movw	r12, r2
     87e:	29 2e       	mov	r2, r25
     880:	38 2e       	mov	r3, r24
     882:	9b 81       	ldd	r25, Y+3	; 0x03
     884:	8c 81       	ldd	r24, Y+4	; 0x04
     886:	8b 82       	std	Y+3, r8	; 0x03
     888:	9c 82       	std	Y+4, r9	; 0x04
     88a:	89 2e       	mov	r8, r25
     88c:	98 2e       	mov	r9, r24
     88e:	d4 01       	movw	r26, r8
     890:	eb 81       	ldd	r30, Y+3	; 0x03
     892:	fc 81       	ldd	r31, Y+4	; 0x04
     894:	ae 1b       	sub	r26, r30
     896:	bf 0b       	sbc	r27, r31
     898:	a9 83       	std	Y+1, r26	; 0x01
     89a:	ba 83       	std	Y+2, r27	; 0x02
     89c:	b1 01       	movw	r22, r2
     89e:	6c 19       	sub	r22, r12
     8a0:	7d 09       	sbc	r23, r13
     8a2:	88 27       	eor	r24, r24
     8a4:	77 fd       	sbrc	r23, 7
     8a6:	80 95       	com	r24
     8a8:	98 2f       	mov	r25, r24
     8aa:	0e 94 04 3c 	call	0x7808	; 0x7808 <__floatsisf>
     8ae:	9f 77       	andi	r25, 0x7F	; 127
     8b0:	0e 94 d1 3b 	call	0x77a2	; 0x77a2 <__fixsfsi>
     8b4:	2b 01       	movw	r4, r22
     8b6:	09 81       	ldd	r16, Y+1	; 0x01
     8b8:	1a 81       	ldd	r17, Y+2	; 0x02
     8ba:	11 23       	and	r17, r17
     8bc:	14 f4       	brge	.+4      	; 0x8c2 <_ZN12Adafruit_GFX8drawLineEiiiij+0xf4>
     8be:	0f 5f       	subi	r16, 0xFF	; 255
     8c0:	1f 4f       	sbci	r17, 0xFF	; 255
     8c2:	15 95       	asr	r17
     8c4:	07 95       	ror	r16
     8c6:	c2 14       	cp	r12, r2
     8c8:	d3 04       	cpc	r13, r3
     8ca:	24 f4       	brge	.+8      	; 0x8d4 <_ZN12Adafruit_GFX8drawLineEiiiij+0x106>
     8cc:	22 24       	eor	r2, r2
     8ce:	23 94       	inc	r2
     8d0:	31 2c       	mov	r3, r1
     8d2:	03 c0       	rjmp	.+6      	; 0x8da <_ZN12Adafruit_GFX8drawLineEiiiij+0x10c>
     8d4:	22 24       	eor	r2, r2
     8d6:	2a 94       	dec	r2
     8d8:	32 2c       	mov	r3, r2
     8da:	2b 81       	ldd	r18, Y+3	; 0x03
     8dc:	3c 81       	ldd	r19, Y+4	; 0x04
     8de:	82 16       	cp	r8, r18
     8e0:	93 06       	cpc	r9, r19
     8e2:	74 f1       	brlt	.+92     	; 0x940 <_ZN12Adafruit_GFX8drawLineEiiiij+0x172>
     8e4:	61 14       	cp	r6, r1
     8e6:	71 04       	cpc	r7, r1
     8e8:	69 f0       	breq	.+26     	; 0x904 <_ZN12Adafruit_GFX8drawLineEiiiij+0x136>
     8ea:	d5 01       	movw	r26, r10
     8ec:	ed 91       	ld	r30, X+
     8ee:	fc 91       	ld	r31, X
     8f0:	01 90       	ld	r0, Z+
     8f2:	f0 81       	ld	r31, Z
     8f4:	e0 2d       	mov	r30, r0
     8f6:	97 01       	movw	r18, r14
     8f8:	4b 81       	ldd	r20, Y+3	; 0x03
     8fa:	5c 81       	ldd	r21, Y+4	; 0x04
     8fc:	b6 01       	movw	r22, r12
     8fe:	c5 01       	movw	r24, r10
     900:	19 95       	eicall
     902:	0c c0       	rjmp	.+24     	; 0x91c <_ZN12Adafruit_GFX8drawLineEiiiij+0x14e>
     904:	d5 01       	movw	r26, r10
     906:	ed 91       	ld	r30, X+
     908:	fc 91       	ld	r31, X
     90a:	01 90       	ld	r0, Z+
     90c:	f0 81       	ld	r31, Z
     90e:	e0 2d       	mov	r30, r0
     910:	97 01       	movw	r18, r14
     912:	a6 01       	movw	r20, r12
     914:	6b 81       	ldd	r22, Y+3	; 0x03
     916:	7c 81       	ldd	r23, Y+4	; 0x04
     918:	c5 01       	movw	r24, r10
     91a:	19 95       	eicall
     91c:	04 19       	sub	r16, r4
     91e:	15 09       	sbc	r17, r5
     920:	32 f4       	brpl	.+12     	; 0x92e <_ZN12Adafruit_GFX8drawLineEiiiij+0x160>
     922:	c2 0c       	add	r12, r2
     924:	d3 1c       	adc	r13, r3
     926:	e9 81       	ldd	r30, Y+1	; 0x01
     928:	fa 81       	ldd	r31, Y+2	; 0x02
     92a:	0e 0f       	add	r16, r30
     92c:	1f 1f       	adc	r17, r31
     92e:	2b 81       	ldd	r18, Y+3	; 0x03
     930:	3c 81       	ldd	r19, Y+4	; 0x04
     932:	2f 5f       	subi	r18, 0xFF	; 255
     934:	3f 4f       	sbci	r19, 0xFF	; 255
     936:	2b 83       	std	Y+3, r18	; 0x03
     938:	3c 83       	std	Y+4, r19	; 0x04
     93a:	82 16       	cp	r8, r18
     93c:	93 06       	cpc	r9, r19
     93e:	94 f6       	brge	.-92     	; 0x8e4 <_ZN12Adafruit_GFX8drawLineEiiiij+0x116>
     940:	24 96       	adiw	r28, 0x04	; 4
     942:	cd bf       	out	0x3d, r28	; 61
     944:	de bf       	out	0x3e, r29	; 62
     946:	df 91       	pop	r29
     948:	cf 91       	pop	r28
     94a:	1f 91       	pop	r17
     94c:	0f 91       	pop	r16
     94e:	ff 90       	pop	r15
     950:	ef 90       	pop	r14
     952:	df 90       	pop	r13
     954:	cf 90       	pop	r12
     956:	bf 90       	pop	r11
     958:	af 90       	pop	r10
     95a:	9f 90       	pop	r9
     95c:	8f 90       	pop	r8
     95e:	7f 90       	pop	r7
     960:	6f 90       	pop	r6
     962:	5f 90       	pop	r5
     964:	4f 90       	pop	r4
     966:	3f 90       	pop	r3
     968:	2f 90       	pop	r2
     96a:	08 95       	ret

0000096c <_ZN12Adafruit_GFX8drawRectEiiiij>:
     96c:	6f 92       	push	r6
     96e:	7f 92       	push	r7
     970:	8f 92       	push	r8
     972:	9f 92       	push	r9
     974:	af 92       	push	r10
     976:	bf 92       	push	r11
     978:	cf 92       	push	r12
     97a:	df 92       	push	r13
     97c:	ef 92       	push	r14
     97e:	ff 92       	push	r15
     980:	0f 93       	push	r16
     982:	1f 93       	push	r17
     984:	cf 93       	push	r28
     986:	df 93       	push	r29
     988:	ec 01       	movw	r28, r24
     98a:	5b 01       	movw	r10, r22
     98c:	6a 01       	movw	r12, r20
     98e:	39 01       	movw	r6, r18
     990:	48 01       	movw	r8, r16
     992:	e8 81       	ld	r30, Y
     994:	f9 81       	ldd	r31, Y+1	; 0x01
     996:	06 80       	ldd	r0, Z+6	; 0x06
     998:	f7 81       	ldd	r31, Z+7	; 0x07
     99a:	e0 2d       	mov	r30, r0
     99c:	87 01       	movw	r16, r14
     99e:	19 95       	eicall
     9a0:	e8 81       	ld	r30, Y
     9a2:	f9 81       	ldd	r31, Y+1	; 0x01
     9a4:	a6 01       	movw	r20, r12
     9a6:	48 0d       	add	r20, r8
     9a8:	59 1d       	adc	r21, r9
     9aa:	41 50       	subi	r20, 0x01	; 1
     9ac:	51 09       	sbc	r21, r1
     9ae:	06 80       	ldd	r0, Z+6	; 0x06
     9b0:	f7 81       	ldd	r31, Z+7	; 0x07
     9b2:	e0 2d       	mov	r30, r0
     9b4:	93 01       	movw	r18, r6
     9b6:	b5 01       	movw	r22, r10
     9b8:	ce 01       	movw	r24, r28
     9ba:	19 95       	eicall
     9bc:	e8 81       	ld	r30, Y
     9be:	f9 81       	ldd	r31, Y+1	; 0x01
     9c0:	04 80       	ldd	r0, Z+4	; 0x04
     9c2:	f5 81       	ldd	r31, Z+5	; 0x05
     9c4:	e0 2d       	mov	r30, r0
     9c6:	94 01       	movw	r18, r8
     9c8:	a6 01       	movw	r20, r12
     9ca:	b5 01       	movw	r22, r10
     9cc:	ce 01       	movw	r24, r28
     9ce:	19 95       	eicall
     9d0:	e8 81       	ld	r30, Y
     9d2:	f9 81       	ldd	r31, Y+1	; 0x01
     9d4:	a6 0c       	add	r10, r6
     9d6:	b7 1c       	adc	r11, r7
     9d8:	b5 01       	movw	r22, r10
     9da:	61 50       	subi	r22, 0x01	; 1
     9dc:	71 09       	sbc	r23, r1
     9de:	04 80       	ldd	r0, Z+4	; 0x04
     9e0:	f5 81       	ldd	r31, Z+5	; 0x05
     9e2:	e0 2d       	mov	r30, r0
     9e4:	94 01       	movw	r18, r8
     9e6:	a6 01       	movw	r20, r12
     9e8:	ce 01       	movw	r24, r28
     9ea:	19 95       	eicall
     9ec:	df 91       	pop	r29
     9ee:	cf 91       	pop	r28
     9f0:	1f 91       	pop	r17
     9f2:	0f 91       	pop	r16
     9f4:	ff 90       	pop	r15
     9f6:	ef 90       	pop	r14
     9f8:	df 90       	pop	r13
     9fa:	cf 90       	pop	r12
     9fc:	bf 90       	pop	r11
     9fe:	af 90       	pop	r10
     a00:	9f 90       	pop	r9
     a02:	8f 90       	pop	r8
     a04:	7f 90       	pop	r7
     a06:	6f 90       	pop	r6
     a08:	08 95       	ret

00000a0a <_ZN12Adafruit_GFX13drawFastVLineEiiij>:
     a0a:	ef 92       	push	r14
     a0c:	ff 92       	push	r15
     a0e:	0f 93       	push	r16
     a10:	1f 93       	push	r17
     a12:	dc 01       	movw	r26, r24
     a14:	ed 91       	ld	r30, X+
     a16:	fc 91       	ld	r31, X
     a18:	24 0f       	add	r18, r20
     a1a:	35 1f       	adc	r19, r21
     a1c:	21 50       	subi	r18, 0x01	; 1
     a1e:	31 09       	sbc	r19, r1
     a20:	02 80       	ldd	r0, Z+2	; 0x02
     a22:	f3 81       	ldd	r31, Z+3	; 0x03
     a24:	e0 2d       	mov	r30, r0
     a26:	78 01       	movw	r14, r16
     a28:	89 01       	movw	r16, r18
     a2a:	9b 01       	movw	r18, r22
     a2c:	19 95       	eicall
     a2e:	1f 91       	pop	r17
     a30:	0f 91       	pop	r16
     a32:	ff 90       	pop	r15
     a34:	ef 90       	pop	r14
     a36:	08 95       	ret

00000a38 <_ZN12Adafruit_GFX13drawFastHLineEiiij>:
     a38:	ef 92       	push	r14
     a3a:	ff 92       	push	r15
     a3c:	0f 93       	push	r16
     a3e:	1f 93       	push	r17
     a40:	dc 01       	movw	r26, r24
     a42:	ed 91       	ld	r30, X+
     a44:	fc 91       	ld	r31, X
     a46:	26 0f       	add	r18, r22
     a48:	37 1f       	adc	r19, r23
     a4a:	21 50       	subi	r18, 0x01	; 1
     a4c:	31 09       	sbc	r19, r1
     a4e:	02 80       	ldd	r0, Z+2	; 0x02
     a50:	f3 81       	ldd	r31, Z+3	; 0x03
     a52:	e0 2d       	mov	r30, r0
     a54:	78 01       	movw	r14, r16
     a56:	8a 01       	movw	r16, r20
     a58:	19 95       	eicall
     a5a:	1f 91       	pop	r17
     a5c:	0f 91       	pop	r16
     a5e:	ff 90       	pop	r15
     a60:	ef 90       	pop	r14
     a62:	08 95       	ret

00000a64 <_ZN12Adafruit_GFX8fillRectEiiiij>:
     a64:	6f 92       	push	r6
     a66:	7f 92       	push	r7
     a68:	8f 92       	push	r8
     a6a:	9f 92       	push	r9
     a6c:	af 92       	push	r10
     a6e:	bf 92       	push	r11
     a70:	cf 92       	push	r12
     a72:	df 92       	push	r13
     a74:	ef 92       	push	r14
     a76:	ff 92       	push	r15
     a78:	0f 93       	push	r16
     a7a:	1f 93       	push	r17
     a7c:	cf 93       	push	r28
     a7e:	df 93       	push	r29
     a80:	6c 01       	movw	r12, r24
     a82:	eb 01       	movw	r28, r22
     a84:	4a 01       	movw	r8, r20
     a86:	58 01       	movw	r10, r16
     a88:	3b 01       	movw	r6, r22
     a8a:	62 0e       	add	r6, r18
     a8c:	73 1e       	adc	r7, r19
     a8e:	66 15       	cp	r22, r6
     a90:	77 05       	cpc	r23, r7
     a92:	84 f4       	brge	.+32     	; 0xab4 <_ZN12Adafruit_GFX8fillRectEiiiij+0x50>
     a94:	d6 01       	movw	r26, r12
     a96:	ed 91       	ld	r30, X+
     a98:	fc 91       	ld	r31, X
     a9a:	04 80       	ldd	r0, Z+4	; 0x04
     a9c:	f5 81       	ldd	r31, Z+5	; 0x05
     a9e:	e0 2d       	mov	r30, r0
     aa0:	87 01       	movw	r16, r14
     aa2:	95 01       	movw	r18, r10
     aa4:	a4 01       	movw	r20, r8
     aa6:	be 01       	movw	r22, r28
     aa8:	c6 01       	movw	r24, r12
     aaa:	19 95       	eicall
     aac:	21 96       	adiw	r28, 0x01	; 1
     aae:	c6 15       	cp	r28, r6
     ab0:	d7 05       	cpc	r29, r7
     ab2:	84 f3       	brlt	.-32     	; 0xa94 <_ZN12Adafruit_GFX8fillRectEiiiij+0x30>
     ab4:	df 91       	pop	r29
     ab6:	cf 91       	pop	r28
     ab8:	1f 91       	pop	r17
     aba:	0f 91       	pop	r16
     abc:	ff 90       	pop	r15
     abe:	ef 90       	pop	r14
     ac0:	df 90       	pop	r13
     ac2:	cf 90       	pop	r12
     ac4:	bf 90       	pop	r11
     ac6:	af 90       	pop	r10
     ac8:	9f 90       	pop	r9
     aca:	8f 90       	pop	r8
     acc:	7f 90       	pop	r7
     ace:	6f 90       	pop	r6
     ad0:	08 95       	ret

00000ad2 <_ZN12Adafruit_GFX10fillScreenEj>:
     ad2:	ef 92       	push	r14
     ad4:	ff 92       	push	r15
     ad6:	0f 93       	push	r16
     ad8:	1f 93       	push	r17
     ada:	dc 01       	movw	r26, r24
     adc:	ed 91       	ld	r30, X+
     ade:	fc 91       	ld	r31, X
     ae0:	11 97       	sbiw	r26, 0x01	; 1
     ae2:	18 96       	adiw	r26, 0x08	; 8
     ae4:	0d 91       	ld	r16, X+
     ae6:	1c 91       	ld	r17, X
     ae8:	19 97       	sbiw	r26, 0x09	; 9
     aea:	16 96       	adiw	r26, 0x06	; 6
     aec:	2d 91       	ld	r18, X+
     aee:	3c 91       	ld	r19, X
     af0:	17 97       	sbiw	r26, 0x07	; 7
     af2:	02 84       	ldd	r0, Z+10	; 0x0a
     af4:	f3 85       	ldd	r31, Z+11	; 0x0b
     af6:	e0 2d       	mov	r30, r0
     af8:	7b 01       	movw	r14, r22
     afa:	40 e0       	ldi	r20, 0x00	; 0
     afc:	50 e0       	ldi	r21, 0x00	; 0
     afe:	60 e0       	ldi	r22, 0x00	; 0
     b00:	70 e0       	ldi	r23, 0x00	; 0
     b02:	19 95       	eicall
     b04:	1f 91       	pop	r17
     b06:	0f 91       	pop	r16
     b08:	ff 90       	pop	r15
     b0a:	ef 90       	pop	r14
     b0c:	08 95       	ret

00000b0e <_ZN12Adafruit_GFX13invertDisplayEb>:
     b0e:	08 95       	ret

00000b10 <_ZN12Adafruit_GFXC1Eii>:
     b10:	fc 01       	movw	r30, r24
     b12:	89 e3       	ldi	r24, 0x39	; 57
     b14:	90 e2       	ldi	r25, 0x20	; 32
     b16:	80 83       	st	Z, r24
     b18:	91 83       	std	Z+1, r25	; 0x01
     b1a:	62 83       	std	Z+2, r22	; 0x02
     b1c:	73 83       	std	Z+3, r23	; 0x03
     b1e:	44 83       	std	Z+4, r20	; 0x04
     b20:	55 83       	std	Z+5, r21	; 0x05
     b22:	66 83       	std	Z+6, r22	; 0x06
     b24:	77 83       	std	Z+7, r23	; 0x07
     b26:	40 87       	std	Z+8, r20	; 0x08
     b28:	51 87       	std	Z+9, r21	; 0x09
     b2a:	15 8a       	std	Z+21, r1	; 0x15
     b2c:	12 86       	std	Z+10, r1	; 0x0a
     b2e:	13 86       	std	Z+11, r1	; 0x0b
     b30:	14 86       	std	Z+12, r1	; 0x0c
     b32:	15 86       	std	Z+13, r1	; 0x0d
     b34:	21 e0       	ldi	r18, 0x01	; 1
     b36:	24 8b       	std	Z+20, r18	; 0x14
     b38:	8f ef       	ldi	r24, 0xFF	; 255
     b3a:	9f ef       	ldi	r25, 0xFF	; 255
     b3c:	82 8b       	std	Z+18, r24	; 0x12
     b3e:	93 8b       	std	Z+19, r25	; 0x13
     b40:	80 8b       	std	Z+16, r24	; 0x10
     b42:	91 8b       	std	Z+17, r25	; 0x11
     b44:	26 8b       	std	Z+22, r18	; 0x16
     b46:	08 95       	ret

00000b48 <_ZN12Adafruit_GFX8drawCharEiihjjh>:
     b48:	2f 92       	push	r2
     b4a:	3f 92       	push	r3
     b4c:	4f 92       	push	r4
     b4e:	5f 92       	push	r5
     b50:	6f 92       	push	r6
     b52:	7f 92       	push	r7
     b54:	8f 92       	push	r8
     b56:	9f 92       	push	r9
     b58:	af 92       	push	r10
     b5a:	bf 92       	push	r11
     b5c:	cf 92       	push	r12
     b5e:	df 92       	push	r13
     b60:	ef 92       	push	r14
     b62:	ff 92       	push	r15
     b64:	0f 93       	push	r16
     b66:	1f 93       	push	r17
     b68:	cf 93       	push	r28
     b6a:	df 93       	push	r29
     b6c:	cd b7       	in	r28, 0x3d	; 61
     b6e:	de b7       	in	r29, 0x3e	; 62
     b70:	60 97       	sbiw	r28, 0x10	; 16
     b72:	cd bf       	out	0x3d, r28	; 61
     b74:	de bf       	out	0x3e, r29	; 62
     b76:	4c 01       	movw	r8, r24
     b78:	09 83       	std	Y+1, r16	; 0x01
     b7a:	1a 83       	std	Y+2, r17	; 0x02
     b7c:	ec 82       	std	Y+4, r14	; 0x04
     b7e:	fd 82       	std	Y+5, r15	; 0x05
     b80:	cb 82       	std	Y+3, r12	; 0x03
     b82:	dc 01       	movw	r26, r24
     b84:	16 96       	adiw	r26, 0x06	; 6
     b86:	8d 91       	ld	r24, X+
     b88:	9c 91       	ld	r25, X
     b8a:	17 97       	sbiw	r26, 0x07	; 7
     b8c:	68 17       	cp	r22, r24
     b8e:	79 07       	cpc	r23, r25
     b90:	0c f0       	brlt	.+2      	; 0xb94 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x4c>
     b92:	c6 c0       	rjmp	.+396    	; 0xd20 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     b94:	18 96       	adiw	r26, 0x08	; 8
     b96:	8d 91       	ld	r24, X+
     b98:	9c 91       	ld	r25, X
     b9a:	19 97       	sbiw	r26, 0x09	; 9
     b9c:	48 17       	cp	r20, r24
     b9e:	59 07       	cpc	r21, r25
     ba0:	0c f0       	brlt	.+2      	; 0xba4 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x5c>
     ba2:	be c0       	rjmp	.+380    	; 0xd20 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     ba4:	6c 2c       	mov	r6, r12
     ba6:	71 2c       	mov	r7, r1
     ba8:	c3 01       	movw	r24, r6
     baa:	88 0f       	add	r24, r24
     bac:	99 1f       	adc	r25, r25
     bae:	86 0d       	add	r24, r6
     bb0:	97 1d       	adc	r25, r7
     bb2:	88 0f       	add	r24, r24
     bb4:	99 1f       	adc	r25, r25
     bb6:	86 0f       	add	r24, r22
     bb8:	97 1f       	adc	r25, r23
     bba:	01 97       	sbiw	r24, 0x01	; 1
     bbc:	99 23       	and	r25, r25
     bbe:	0c f4       	brge	.+2      	; 0xbc2 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x7a>
     bc0:	af c0       	rjmp	.+350    	; 0xd20 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     bc2:	c3 01       	movw	r24, r6
     bc4:	88 0f       	add	r24, r24
     bc6:	99 1f       	adc	r25, r25
     bc8:	88 0f       	add	r24, r24
     bca:	99 1f       	adc	r25, r25
     bcc:	88 0f       	add	r24, r24
     bce:	99 1f       	adc	r25, r25
     bd0:	84 0f       	add	r24, r20
     bd2:	95 1f       	adc	r25, r21
     bd4:	01 97       	sbiw	r24, 0x01	; 1
     bd6:	99 23       	and	r25, r25
     bd8:	0c f4       	brge	.+2      	; 0xbdc <_ZN12Adafruit_GFX8drawCharEiihjjh+0x94>
     bda:	a2 c0       	rjmp	.+324    	; 0xd20 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	c9 01       	movw	r24, r18
     be0:	88 0f       	add	r24, r24
     be2:	99 1f       	adc	r25, r25
     be4:	88 0f       	add	r24, r24
     be6:	99 1f       	adc	r25, r25
     be8:	28 0f       	add	r18, r24
     bea:	39 1f       	adc	r19, r25
     bec:	13 01       	movw	r2, r6
     bee:	6e 83       	std	Y+6, r22	; 0x06
     bf0:	7f 83       	std	Y+7, r23	; 0x07
     bf2:	68 87       	std	Y+8, r22	; 0x08
     bf4:	79 87       	std	Y+9, r23	; 0x09
     bf6:	1a 86       	std	Y+10, r1	; 0x0a
     bf8:	28 59       	subi	r18, 0x98	; 152
     bfa:	3d 4f       	sbci	r19, 0xFD	; 253
     bfc:	f9 01       	movw	r30, r18
     bfe:	e6 1b       	sub	r30, r22
     c00:	f7 0b       	sbc	r31, r23
     c02:	ed 87       	std	Y+13, r30	; 0x0d
     c04:	fe 87       	std	Y+14, r31	; 0x0e
     c06:	4b 87       	std	Y+11, r20	; 0x0b
     c08:	5c 87       	std	Y+12, r21	; 0x0c
     c0a:	fa 85       	ldd	r31, Y+10	; 0x0a
     c0c:	f5 30       	cpi	r31, 0x05	; 5
     c0e:	09 f4       	brne	.+2      	; 0xc12 <_ZN12Adafruit_GFX8drawCharEiihjjh+0xca>
     c10:	77 c0       	rjmp	.+238    	; 0xd00 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1b8>
     c12:	ed 85       	ldd	r30, Y+13	; 0x0d
     c14:	fe 85       	ldd	r31, Y+14	; 0x0e
     c16:	2e 81       	ldd	r18, Y+6	; 0x06
     c18:	3f 81       	ldd	r19, Y+7	; 0x07
     c1a:	e2 0f       	add	r30, r18
     c1c:	f3 1f       	adc	r31, r19
     c1e:	04 91       	lpm	r16, Z
     c20:	70 c0       	rjmp	.+224    	; 0xd02 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1ba>
     c22:	90 fe       	sbrs	r9, 0
     c24:	25 c0       	rjmp	.+74     	; 0xc70 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x128>
     c26:	3b 81       	ldd	r19, Y+3	; 0x03
     c28:	31 30       	cpi	r19, 0x01	; 1
     c2a:	81 f4       	brne	.+32     	; 0xc4c <_ZN12Adafruit_GFX8drawCharEiihjjh+0x104>
     c2c:	af 85       	ldd	r26, Y+15	; 0x0f
     c2e:	b8 89       	ldd	r27, Y+16	; 0x10
     c30:	ed 91       	ld	r30, X+
     c32:	fc 91       	ld	r31, X
     c34:	11 97       	sbiw	r26, 0x01	; 1
     c36:	01 90       	ld	r0, Z+
     c38:	f0 81       	ld	r31, Z
     c3a:	e0 2d       	mov	r30, r0
     c3c:	29 81       	ldd	r18, Y+1	; 0x01
     c3e:	3a 81       	ldd	r19, Y+2	; 0x02
     c40:	a5 01       	movw	r20, r10
     c42:	6e 81       	ldd	r22, Y+6	; 0x06
     c44:	7f 81       	ldd	r23, Y+7	; 0x07
     c46:	cd 01       	movw	r24, r26
     c48:	19 95       	eicall
     c4a:	3d c0       	rjmp	.+122    	; 0xcc6 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     c4c:	af 85       	ldd	r26, Y+15	; 0x0f
     c4e:	b8 89       	ldd	r27, Y+16	; 0x10
     c50:	ed 91       	ld	r30, X+
     c52:	fc 91       	ld	r31, X
     c54:	11 97       	sbiw	r26, 0x01	; 1
     c56:	02 84       	ldd	r0, Z+10	; 0x0a
     c58:	f3 85       	ldd	r31, Z+11	; 0x0b
     c5a:	e0 2d       	mov	r30, r0
     c5c:	e9 80       	ldd	r14, Y+1	; 0x01
     c5e:	fa 80       	ldd	r15, Y+2	; 0x02
     c60:	83 01       	movw	r16, r6
     c62:	93 01       	movw	r18, r6
     c64:	a6 01       	movw	r20, r12
     c66:	68 2d       	mov	r22, r8
     c68:	74 2d       	mov	r23, r4
     c6a:	cd 01       	movw	r24, r26
     c6c:	19 95       	eicall
     c6e:	2b c0       	rjmp	.+86     	; 0xcc6 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     c70:	ec 81       	ldd	r30, Y+4	; 0x04
     c72:	fd 81       	ldd	r31, Y+5	; 0x05
     c74:	29 81       	ldd	r18, Y+1	; 0x01
     c76:	3a 81       	ldd	r19, Y+2	; 0x02
     c78:	e2 17       	cp	r30, r18
     c7a:	f3 07       	cpc	r31, r19
     c7c:	21 f1       	breq	.+72     	; 0xcc6 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     c7e:	3b 81       	ldd	r19, Y+3	; 0x03
     c80:	31 30       	cpi	r19, 0x01	; 1
     c82:	81 f4       	brne	.+32     	; 0xca4 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x15c>
     c84:	af 85       	ldd	r26, Y+15	; 0x0f
     c86:	b8 89       	ldd	r27, Y+16	; 0x10
     c88:	ed 91       	ld	r30, X+
     c8a:	fc 91       	ld	r31, X
     c8c:	11 97       	sbiw	r26, 0x01	; 1
     c8e:	01 90       	ld	r0, Z+
     c90:	f0 81       	ld	r31, Z
     c92:	e0 2d       	mov	r30, r0
     c94:	2c 81       	ldd	r18, Y+4	; 0x04
     c96:	3d 81       	ldd	r19, Y+5	; 0x05
     c98:	a5 01       	movw	r20, r10
     c9a:	6e 81       	ldd	r22, Y+6	; 0x06
     c9c:	7f 81       	ldd	r23, Y+7	; 0x07
     c9e:	cd 01       	movw	r24, r26
     ca0:	19 95       	eicall
     ca2:	11 c0       	rjmp	.+34     	; 0xcc6 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     ca4:	af 85       	ldd	r26, Y+15	; 0x0f
     ca6:	b8 89       	ldd	r27, Y+16	; 0x10
     ca8:	ed 91       	ld	r30, X+
     caa:	fc 91       	ld	r31, X
     cac:	11 97       	sbiw	r26, 0x01	; 1
     cae:	02 84       	ldd	r0, Z+10	; 0x0a
     cb0:	f3 85       	ldd	r31, Z+11	; 0x0b
     cb2:	e0 2d       	mov	r30, r0
     cb4:	ec 80       	ldd	r14, Y+4	; 0x04
     cb6:	fd 80       	ldd	r15, Y+5	; 0x05
     cb8:	83 01       	movw	r16, r6
     cba:	93 01       	movw	r18, r6
     cbc:	a6 01       	movw	r20, r12
     cbe:	68 2d       	mov	r22, r8
     cc0:	74 2d       	mov	r23, r4
     cc2:	cd 01       	movw	r24, r26
     cc4:	19 95       	eicall
     cc6:	96 94       	lsr	r9
     cc8:	5a 94       	dec	r5
     cca:	c2 0c       	add	r12, r2
     ccc:	d3 1c       	adc	r13, r3
     cce:	bf ef       	ldi	r27, 0xFF	; 255
     cd0:	ab 1a       	sub	r10, r27
     cd2:	bb 0a       	sbc	r11, r27
     cd4:	51 10       	cpse	r5, r1
     cd6:	a5 cf       	rjmp	.-182    	; 0xc22 <_ZN12Adafruit_GFX8drawCharEiihjjh+0xda>
     cd8:	8f 84       	ldd	r8, Y+15	; 0x0f
     cda:	98 88       	ldd	r9, Y+16	; 0x10
     cdc:	ea 85       	ldd	r30, Y+10	; 0x0a
     cde:	ef 5f       	subi	r30, 0xFF	; 255
     ce0:	ea 87       	std	Y+10, r30	; 0x0a
     ce2:	28 85       	ldd	r18, Y+8	; 0x08
     ce4:	39 85       	ldd	r19, Y+9	; 0x09
     ce6:	22 0d       	add	r18, r2
     ce8:	33 1d       	adc	r19, r3
     cea:	28 87       	std	Y+8, r18	; 0x08
     cec:	39 87       	std	Y+9, r19	; 0x09
     cee:	8e 81       	ldd	r24, Y+6	; 0x06
     cf0:	9f 81       	ldd	r25, Y+7	; 0x07
     cf2:	01 96       	adiw	r24, 0x01	; 1
     cf4:	8e 83       	std	Y+6, r24	; 0x06
     cf6:	9f 83       	std	Y+7, r25	; 0x07
     cf8:	e6 30       	cpi	r30, 0x06	; 6
     cfa:	09 f0       	breq	.+2      	; 0xcfe <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1b6>
     cfc:	86 cf       	rjmp	.-244    	; 0xc0a <_ZN12Adafruit_GFX8drawCharEiihjjh+0xc2>
     cfe:	10 c0       	rjmp	.+32     	; 0xd20 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     d00:	00 e0       	ldi	r16, 0x00	; 0
     d02:	18 85       	ldd	r17, Y+8	; 0x08
     d04:	49 84       	ldd	r4, Y+9	; 0x09
     d06:	cb 84       	ldd	r12, Y+11	; 0x0b
     d08:	dc 84       	ldd	r13, Y+12	; 0x0c
     d0a:	ac 2c       	mov	r10, r12
     d0c:	bd 2c       	mov	r11, r13
     d0e:	68 94       	set
     d10:	55 24       	eor	r5, r5
     d12:	53 f8       	bld	r5, 3
     d14:	c4 01       	movw	r24, r8
     d16:	90 2e       	mov	r9, r16
     d18:	81 2e       	mov	r8, r17
     d1a:	8f 87       	std	Y+15, r24	; 0x0f
     d1c:	98 8b       	std	Y+16, r25	; 0x10
     d1e:	81 cf       	rjmp	.-254    	; 0xc22 <_ZN12Adafruit_GFX8drawCharEiihjjh+0xda>
     d20:	60 96       	adiw	r28, 0x10	; 16
     d22:	cd bf       	out	0x3d, r28	; 61
     d24:	de bf       	out	0x3e, r29	; 62
     d26:	df 91       	pop	r29
     d28:	cf 91       	pop	r28
     d2a:	1f 91       	pop	r17
     d2c:	0f 91       	pop	r16
     d2e:	ff 90       	pop	r15
     d30:	ef 90       	pop	r14
     d32:	df 90       	pop	r13
     d34:	cf 90       	pop	r12
     d36:	bf 90       	pop	r11
     d38:	af 90       	pop	r10
     d3a:	9f 90       	pop	r9
     d3c:	8f 90       	pop	r8
     d3e:	7f 90       	pop	r7
     d40:	6f 90       	pop	r6
     d42:	5f 90       	pop	r5
     d44:	4f 90       	pop	r4
     d46:	3f 90       	pop	r3
     d48:	2f 90       	pop	r2
     d4a:	08 95       	ret

00000d4c <_ZN12Adafruit_GFX5writeEh>:
     d4c:	cf 92       	push	r12
     d4e:	ef 92       	push	r14
     d50:	ff 92       	push	r15
     d52:	0f 93       	push	r16
     d54:	1f 93       	push	r17
     d56:	cf 93       	push	r28
     d58:	df 93       	push	r29
     d5a:	ec 01       	movw	r28, r24
     d5c:	6a 30       	cpi	r22, 0x0A	; 10
     d5e:	79 f4       	brne	.+30     	; 0xd7e <_ZN12Adafruit_GFX5writeEh+0x32>
     d60:	2c 89       	ldd	r18, Y+20	; 0x14
     d62:	8c 85       	ldd	r24, Y+12	; 0x0c
     d64:	9d 85       	ldd	r25, Y+13	; 0x0d
     d66:	38 e0       	ldi	r19, 0x08	; 8
     d68:	23 9f       	mul	r18, r19
     d6a:	80 0d       	add	r24, r0
     d6c:	91 1d       	adc	r25, r1
     d6e:	11 24       	eor	r1, r1
     d70:	8c 87       	std	Y+12, r24	; 0x0c
     d72:	9d 87       	std	Y+13, r25	; 0x0d
     d74:	8e 85       	ldd	r24, Y+14	; 0x0e
     d76:	9f 85       	ldd	r25, Y+15	; 0x0f
     d78:	8a 87       	std	Y+10, r24	; 0x0a
     d7a:	9b 87       	std	Y+11, r25	; 0x0b
     d7c:	3c c0       	rjmp	.+120    	; 0xdf6 <_ZN12Adafruit_GFX5writeEh+0xaa>
     d7e:	6d 30       	cpi	r22, 0x0D	; 13
     d80:	d1 f1       	breq	.+116    	; 0xdf6 <_ZN12Adafruit_GFX5writeEh+0xaa>
     d82:	ea 88       	ldd	r14, Y+18	; 0x12
     d84:	fb 88       	ldd	r15, Y+19	; 0x13
     d86:	08 89       	ldd	r16, Y+16	; 0x10
     d88:	19 89       	ldd	r17, Y+17	; 0x11
     d8a:	4c 85       	ldd	r20, Y+12	; 0x0c
     d8c:	5d 85       	ldd	r21, Y+13	; 0x0d
     d8e:	8a 85       	ldd	r24, Y+10	; 0x0a
     d90:	9b 85       	ldd	r25, Y+11	; 0x0b
     d92:	cc 88       	ldd	r12, Y+20	; 0x14
     d94:	26 2f       	mov	r18, r22
     d96:	bc 01       	movw	r22, r24
     d98:	ce 01       	movw	r24, r28
     d9a:	d6 de       	rcall	.-596    	; 0xb48 <_ZN12Adafruit_GFX8drawCharEiihjjh>
     d9c:	2c 89       	ldd	r18, Y+20	; 0x14
     d9e:	30 e0       	ldi	r19, 0x00	; 0
     da0:	c9 01       	movw	r24, r18
     da2:	88 0f       	add	r24, r24
     da4:	99 1f       	adc	r25, r25
     da6:	82 0f       	add	r24, r18
     da8:	93 1f       	adc	r25, r19
     daa:	88 0f       	add	r24, r24
     dac:	99 1f       	adc	r25, r25
     dae:	4a 85       	ldd	r20, Y+10	; 0x0a
     db0:	5b 85       	ldd	r21, Y+11	; 0x0b
     db2:	84 0f       	add	r24, r20
     db4:	95 1f       	adc	r25, r21
     db6:	8a 87       	std	Y+10, r24	; 0x0a
     db8:	9b 87       	std	Y+11, r25	; 0x0b
     dba:	4e 89       	ldd	r20, Y+22	; 0x16
     dbc:	44 23       	and	r20, r20
     dbe:	d9 f0       	breq	.+54     	; 0xdf6 <_ZN12Adafruit_GFX5writeEh+0xaa>
     dc0:	4a ef       	ldi	r20, 0xFA	; 250
     dc2:	42 03       	mulsu	r20, r18
     dc4:	b0 01       	movw	r22, r0
     dc6:	43 9f       	mul	r20, r19
     dc8:	70 0d       	add	r23, r0
     dca:	11 24       	eor	r1, r1
     dcc:	4e 81       	ldd	r20, Y+6	; 0x06
     dce:	5f 81       	ldd	r21, Y+7	; 0x07
     dd0:	46 0f       	add	r20, r22
     dd2:	57 1f       	adc	r21, r23
     dd4:	48 17       	cp	r20, r24
     dd6:	59 07       	cpc	r21, r25
     dd8:	74 f4       	brge	.+28     	; 0xdf6 <_ZN12Adafruit_GFX5writeEh+0xaa>
     dda:	22 0f       	add	r18, r18
     ddc:	33 1f       	adc	r19, r19
     dde:	22 0f       	add	r18, r18
     de0:	33 1f       	adc	r19, r19
     de2:	22 0f       	add	r18, r18
     de4:	33 1f       	adc	r19, r19
     de6:	8c 85       	ldd	r24, Y+12	; 0x0c
     de8:	9d 85       	ldd	r25, Y+13	; 0x0d
     dea:	28 0f       	add	r18, r24
     dec:	39 1f       	adc	r19, r25
     dee:	2c 87       	std	Y+12, r18	; 0x0c
     df0:	3d 87       	std	Y+13, r19	; 0x0d
     df2:	1a 86       	std	Y+10, r1	; 0x0a
     df4:	1b 86       	std	Y+11, r1	; 0x0b
     df6:	df 91       	pop	r29
     df8:	cf 91       	pop	r28
     dfa:	1f 91       	pop	r17
     dfc:	0f 91       	pop	r16
     dfe:	ff 90       	pop	r15
     e00:	ef 90       	pop	r14
     e02:	cf 90       	pop	r12
     e04:	08 95       	ret

00000e06 <_ZN12Adafruit_GFX9setCursorEii>:
     e06:	fc 01       	movw	r30, r24
     e08:	62 87       	std	Z+10, r22	; 0x0a
     e0a:	73 87       	std	Z+11, r23	; 0x0b
     e0c:	44 87       	std	Z+12, r20	; 0x0c
     e0e:	55 87       	std	Z+13, r21	; 0x0d
     e10:	66 87       	std	Z+14, r22	; 0x0e
     e12:	77 87       	std	Z+15, r23	; 0x0f
     e14:	08 95       	ret

00000e16 <_ZN12Adafruit_GFX11setTextSizeEh>:
     e16:	61 11       	cpse	r22, r1
     e18:	01 c0       	rjmp	.+2      	; 0xe1c <_ZN12Adafruit_GFX11setTextSizeEh+0x6>
     e1a:	61 e0       	ldi	r22, 0x01	; 1
     e1c:	fc 01       	movw	r30, r24
     e1e:	64 8b       	std	Z+20, r22	; 0x14
     e20:	08 95       	ret

00000e22 <_ZN12Adafruit_GFX12setTextColorEjj>:
     e22:	fc 01       	movw	r30, r24
     e24:	60 8b       	std	Z+16, r22	; 0x10
     e26:	71 8b       	std	Z+17, r23	; 0x11
     e28:	42 8b       	std	Z+18, r20	; 0x12
     e2a:	53 8b       	std	Z+19, r21	; 0x13
     e2c:	08 95       	ret

00000e2e <_ZN12Adafruit_GFX11setTextWrapEb>:
     e2e:	fc 01       	movw	r30, r24
     e30:	66 8b       	std	Z+22, r22	; 0x16
     e32:	08 95       	ret

00000e34 <_ZN12Adafruit_GFX11setRotationEh>:

void Adafruit_GFX::setRotation(uint8_t x) {
     e34:	fc 01       	movw	r30, r24
  rotation = (x & 3);
     e36:	63 70       	andi	r22, 0x03	; 3
     e38:	65 8b       	std	Z+21, r22	; 0x15
  switch(rotation) {
     e3a:	61 30       	cpi	r22, 0x01	; 1
     e3c:	79 f0       	breq	.+30     	; 0xe5c <_ZN12Adafruit_GFX11setRotationEh+0x28>
     e3e:	28 f0       	brcs	.+10     	; 0xe4a <_ZN12Adafruit_GFX11setRotationEh+0x16>
     e40:	62 30       	cpi	r22, 0x02	; 2
     e42:	19 f0       	breq	.+6      	; 0xe4a <_ZN12Adafruit_GFX11setRotationEh+0x16>
     e44:	63 30       	cpi	r22, 0x03	; 3
     e46:	91 f4       	brne	.+36     	; 0xe6c <_ZN12Adafruit_GFX11setRotationEh+0x38>
     e48:	09 c0       	rjmp	.+18     	; 0xe5c <_ZN12Adafruit_GFX11setRotationEh+0x28>
   case 0:
   case 2:
    _width  = WIDTH;
     e4a:	82 81       	ldd	r24, Z+2	; 0x02
     e4c:	93 81       	ldd	r25, Z+3	; 0x03
     e4e:	86 83       	std	Z+6, r24	; 0x06
     e50:	97 83       	std	Z+7, r25	; 0x07
    _height = HEIGHT;
     e52:	84 81       	ldd	r24, Z+4	; 0x04
     e54:	95 81       	ldd	r25, Z+5	; 0x05
     e56:	80 87       	std	Z+8, r24	; 0x08
     e58:	91 87       	std	Z+9, r25	; 0x09
    break;
     e5a:	08 95       	ret
   case 1:
   case 3:
    _width  = HEIGHT;
     e5c:	84 81       	ldd	r24, Z+4	; 0x04
     e5e:	95 81       	ldd	r25, Z+5	; 0x05
     e60:	86 83       	std	Z+6, r24	; 0x06
     e62:	97 83       	std	Z+7, r25	; 0x07
    _height = WIDTH;
     e64:	82 81       	ldd	r24, Z+2	; 0x02
     e66:	93 81       	ldd	r25, Z+3	; 0x03
     e68:	80 87       	std	Z+8, r24	; 0x08
     e6a:	91 87       	std	Z+9, r25	; 0x09
     e6c:	08 95       	ret

00000e6e <_ZN5BTOBDC1Ev>:
	return driver.rxIsEmpty();
}

char BTOBD::rxDequeue() {
	return driver.rxDequeue();
}
     e6e:	cf 92       	push	r12
     e70:	ef 92       	push	r14
     e72:	0f 93       	push	r16
     e74:	cf 93       	push	r28
     e76:	df 93       	push	r29
     e78:	ec 01       	movw	r28, r24
     e7a:	40 e8       	ldi	r20, 0x80	; 128
     e7c:	50 e0       	ldi	r21, 0x00	; 0
     e7e:	60 e8       	ldi	r22, 0x80	; 128
     e80:	70 e0       	ldi	r23, 0x00	; 0
     e82:	0e 94 c0 3a 	call	0x7580	; 0x7580 <_ZN10UartDriverC1Eii>
     e86:	8d e0       	ldi	r24, 0x0D	; 13
     e88:	e6 e0       	ldi	r30, 0x06	; 6
     e8a:	f0 e2       	ldi	r31, 0x20	; 32
     e8c:	de 01       	movw	r26, r28
     e8e:	98 96       	adiw	r26, 0x28	; 40
     e90:	01 90       	ld	r0, Z+
     e92:	0d 92       	st	X+, r0
     e94:	8a 95       	dec	r24
     e96:	e1 f7       	brne	.-8      	; 0xe90 <_ZN5BTOBDC1Ev+0x22>
     e98:	8d e0       	ldi	r24, 0x0D	; 13
     e9a:	e3 e1       	ldi	r30, 0x13	; 19
     e9c:	f0 e2       	ldi	r31, 0x20	; 32
     e9e:	de 01       	movw	r26, r28
     ea0:	d5 96       	adiw	r26, 0x35	; 53
     ea2:	01 90       	ld	r0, Z+
     ea4:	0d 92       	st	X+, r0
     ea6:	8a 95       	dec	r24
     ea8:	e1 f7       	brne	.-8      	; 0xea2 <_ZN5BTOBDC1Ev+0x34>
     eaa:	fe 01       	movw	r30, r28
     eac:	ee 5b       	subi	r30, 0xBE	; 190
     eae:	ff 4f       	sbci	r31, 0xFF	; 255
     eb0:	10 82       	st	Z, r1
     eb2:	31 96       	adiw	r30, 0x01	; 1
     eb4:	81 e0       	ldi	r24, 0x01	; 1
     eb6:	80 83       	st	Z, r24
     eb8:	31 96       	adiw	r30, 0x01	; 1
     eba:	82 e0       	ldi	r24, 0x02	; 2
     ebc:	80 83       	st	Z, r24
     ebe:	31 96       	adiw	r30, 0x01	; 1
     ec0:	86 e0       	ldi	r24, 0x06	; 6
     ec2:	80 83       	st	Z, r24
     ec4:	0f 2e       	mov	r0, r31
     ec6:	f0 ef       	ldi	r31, 0xF0	; 240
     ec8:	cf 2e       	mov	r12, r31
     eca:	f0 2d       	mov	r31, r0
     ecc:	0f 2e       	mov	r0, r31
     ece:	f1 e2       	ldi	r31, 0x21	; 33
     ed0:	ef 2e       	mov	r14, r31
     ed2:	f0 2d       	mov	r31, r0
     ed4:	00 e0       	ldi	r16, 0x00	; 0
     ed6:	23 e0       	ldi	r18, 0x03	; 3
     ed8:	40 e0       	ldi	r20, 0x00	; 0
     eda:	60 ea       	ldi	r22, 0xA0	; 160
     edc:	79 e0       	ldi	r23, 0x09	; 9
     ede:	ce 01       	movw	r24, r28
     ee0:	0e 94 d3 3a 	call	0x75a6	; 0x75a6 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc>
     ee4:	fe 01       	movw	r30, r28
     ee6:	e6 59       	subi	r30, 0x96	; 150
     ee8:	ff 4f       	sbci	r31, 0xFF	; 255
     eea:	10 82       	st	Z, r1
     eec:	1e a2       	std	Y+38, r1	; 0x26
     eee:	1f a2       	std	Y+39, r1	; 0x27
     ef0:	31 96       	adiw	r30, 0x01	; 1
     ef2:	10 82       	st	Z, r1
     ef4:	35 97       	sbiw	r30, 0x05	; 5
     ef6:	8f ef       	ldi	r24, 0xFF	; 255
     ef8:	80 83       	st	Z, r24
     efa:	b0 97       	sbiw	r30, 0x20	; 32
     efc:	20 e0       	ldi	r18, 0x00	; 0
     efe:	30 e0       	ldi	r19, 0x00	; 0
     f00:	80 e3       	ldi	r24, 0x30	; 48
     f02:	81 93       	st	Z+, r24
     f04:	2f 5f       	subi	r18, 0xFF	; 255
     f06:	3f 4f       	sbci	r19, 0xFF	; 255
     f08:	24 32       	cpi	r18, 0x24	; 36
     f0a:	31 05       	cpc	r19, r1
     f0c:	d1 f7       	brne	.-12     	; 0xf02 <_ZN5BTOBDC1Ev+0x94>
     f0e:	e0 e4       	ldi	r30, 0x40	; 64
     f10:	f8 e0       	ldi	r31, 0x08	; 8
     f12:	10 82       	st	Z, r1
     f14:	80 e1       	ldi	r24, 0x10	; 16
     f16:	81 83       	std	Z+1, r24	; 0x01
     f18:	88 ee       	ldi	r24, 0xE8	; 232
     f1a:	93 e0       	ldi	r25, 0x03	; 3
     f1c:	80 a7       	std	Z+40, r24	; 0x28
     f1e:	91 a7       	std	Z+41, r25	; 0x29
     f20:	17 82       	std	Z+7, r1	; 0x07
     f22:	87 e0       	ldi	r24, 0x07	; 7
     f24:	80 83       	st	Z, r24
     f26:	df 91       	pop	r29
     f28:	cf 91       	pop	r28
     f2a:	0f 91       	pop	r16
     f2c:	ef 90       	pop	r14
     f2e:	cf 90       	pop	r12
     f30:	08 95       	ret

00000f32 <_ZN5BTOBD13interceptByteEv>:
     f32:	1f 93       	push	r17
     f34:	cf 93       	push	r28
     f36:	df 93       	push	r29
     f38:	ec 01       	movw	r28, r24
     f3a:	0e 94 66 3b 	call	0x76cc	; 0x76cc <_ZN10UartDriver11getUARTPortEv>
     f3e:	fc 01       	movw	r30, r24
     f40:	10 81       	ld	r17, Z
     f42:	61 2f       	mov	r22, r17
     f44:	ce 01       	movw	r24, r28
     f46:	0e 94 52 3b 	call	0x76a4	; 0x76a4 <_ZN10UartDriver7rcvByteEc>
     f4a:	1e 33       	cpi	r17, 0x3E	; 62
     f4c:	29 f4       	brne	.+10     	; 0xf58 <_ZN5BTOBD13interceptByteEv+0x26>
     f4e:	c6 59       	subi	r28, 0x96	; 150
     f50:	df 4f       	sbci	r29, 0xFF	; 255
     f52:	88 81       	ld	r24, Y
     f54:	8f 5f       	subi	r24, 0xFF	; 255
     f56:	88 83       	st	Y, r24
     f58:	81 2f       	mov	r24, r17
     f5a:	df 91       	pop	r29
     f5c:	cf 91       	pop	r28
     f5e:	1f 91       	pop	r17
     f60:	08 95       	ret

00000f62 <_ZN5BTOBD9handleDREEv>:
     f62:	0f 93       	push	r16
     f64:	1f 93       	push	r17
     f66:	cf 93       	push	r28
     f68:	df 93       	push	r29
     f6a:	ec 01       	movw	r28, r24
     f6c:	0e 94 5e 3b 	call	0x76bc	; 0x76bc <_ZN10UartDriver9txIsEmptyEv>
     f70:	81 11       	cpse	r24, r1
     f72:	0a c0       	rjmp	.+20     	; 0xf88 <_ZN5BTOBD9handleDREEv+0x26>
     f74:	ce 01       	movw	r24, r28
     f76:	0e 94 66 3b 	call	0x76cc	; 0x76cc <_ZN10UartDriver11getUARTPortEv>
     f7a:	8c 01       	movw	r16, r24
     f7c:	ce 01       	movw	r24, r28
     f7e:	0e 94 62 3b 	call	0x76c4	; 0x76c4 <_ZN10UartDriver9txDequeueEv>
     f82:	f8 01       	movw	r30, r16
     f84:	80 83       	st	Z, r24
     f86:	07 c0       	rjmp	.+14     	; 0xf96 <_ZN5BTOBD9handleDREEv+0x34>
     f88:	ce 01       	movw	r24, r28
     f8a:	0e 94 66 3b 	call	0x76cc	; 0x76cc <_ZN10UartDriver11getUARTPortEv>
     f8e:	fc 01       	movw	r30, r24
     f90:	23 81       	ldd	r18, Z+3	; 0x03
     f92:	2c 7f       	andi	r18, 0xFC	; 252
     f94:	23 83       	std	Z+3, r18	; 0x03
     f96:	df 91       	pop	r29
     f98:	cf 91       	pop	r28
     f9a:	1f 91       	pop	r17
     f9c:	0f 91       	pop	r16
     f9e:	08 95       	ret

00000fa0 <_ZN5BTOBD14waitForNewlineEP10LCD_Driver>:
     fa0:	ff 92       	push	r15
     fa2:	0f 93       	push	r16
     fa4:	1f 93       	push	r17
     fa6:	cf 93       	push	r28
     fa8:	df 93       	push	r29
     faa:	ec 01       	movw	r28, r24
     fac:	8b 01       	movw	r16, r22
     fae:	ce 01       	movw	r24, r28
     fb0:	0e 94 5a 3b 	call	0x76b4	; 0x76b4 <_ZN10UartDriver9rxIsEmptyEv>
     fb4:	81 11       	cpse	r24, r1
     fb6:	10 c0       	rjmp	.+32     	; 0xfd8 <_ZN5BTOBD14waitForNewlineEP10LCD_Driver+0x38>
     fb8:	ce 01       	movw	r24, r28
     fba:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
     fbe:	f8 2e       	mov	r15, r24
     fc0:	d8 01       	movw	r26, r16
     fc2:	ed 91       	ld	r30, X+
     fc4:	fc 91       	ld	r31, X
     fc6:	00 88       	ldd	r0, Z+16	; 0x10
     fc8:	f1 89       	ldd	r31, Z+17	; 0x11
     fca:	e0 2d       	mov	r30, r0
     fcc:	68 2f       	mov	r22, r24
     fce:	c8 01       	movw	r24, r16
     fd0:	19 95       	eicall
     fd2:	ba e0       	ldi	r27, 0x0A	; 10
     fd4:	fb 16       	cp	r15, r27
     fd6:	11 f0       	breq	.+4      	; 0xfdc <_ZN5BTOBD14waitForNewlineEP10LCD_Driver+0x3c>
     fd8:	00 00       	nop
     fda:	e9 cf       	rjmp	.-46     	; 0xfae <_ZN5BTOBD14waitForNewlineEP10LCD_Driver+0xe>
     fdc:	df 91       	pop	r29
     fde:	cf 91       	pop	r28
     fe0:	1f 91       	pop	r17
     fe2:	0f 91       	pop	r16
     fe4:	ff 90       	pop	r15
     fe6:	08 95       	ret

00000fe8 <_ZN5BTOBD13waitForPromptEP10LCD_Driver>:
     fe8:	ff 92       	push	r15
     fea:	0f 93       	push	r16
     fec:	1f 93       	push	r17
     fee:	cf 93       	push	r28
     ff0:	df 93       	push	r29
     ff2:	8b 01       	movw	r16, r22
     ff4:	ec 01       	movw	r28, r24
     ff6:	ce 01       	movw	r24, r28
     ff8:	0e 94 5a 3b 	call	0x76b4	; 0x76b4 <_ZN10UartDriver9rxIsEmptyEv>
     ffc:	81 11       	cpse	r24, r1
     ffe:	fb cf       	rjmp	.-10     	; 0xff6 <_ZN5BTOBD13waitForPromptEP10LCD_Driver+0xe>
    1000:	ce 01       	movw	r24, r28
    1002:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    1006:	f8 2e       	mov	r15, r24
    1008:	d8 01       	movw	r26, r16
    100a:	ed 91       	ld	r30, X+
    100c:	fc 91       	ld	r31, X
    100e:	00 88       	ldd	r0, Z+16	; 0x10
    1010:	f1 89       	ldd	r31, Z+17	; 0x11
    1012:	e0 2d       	mov	r30, r0
    1014:	68 2f       	mov	r22, r24
    1016:	c8 01       	movw	r24, r16
    1018:	19 95       	eicall
    101a:	be e3       	ldi	r27, 0x3E	; 62
    101c:	fb 12       	cpse	r15, r27
    101e:	eb cf       	rjmp	.-42     	; 0xff6 <_ZN5BTOBD13waitForPromptEP10LCD_Driver+0xe>
    1020:	df 91       	pop	r29
    1022:	cf 91       	pop	r28
    1024:	1f 91       	pop	r17
    1026:	0f 91       	pop	r16
    1028:	ff 90       	pop	r15
    102a:	08 95       	ret

0000102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>:
    102c:	cf 92       	push	r12
    102e:	df 92       	push	r13
    1030:	ef 92       	push	r14
    1032:	ff 92       	push	r15
    1034:	0f 93       	push	r16
    1036:	1f 93       	push	r17
    1038:	cf 93       	push	r28
    103a:	df 93       	push	r29
    103c:	ec 01       	movw	r28, r24
    103e:	fc 01       	movw	r30, r24
    1040:	e9 59       	subi	r30, 0x99	; 153
    1042:	ff 4f       	sbci	r31, 0xFF	; 255
    1044:	60 83       	st	Z, r22
    1046:	46 2f       	mov	r20, r22
    1048:	50 e0       	ldi	r21, 0x00	; 0
    104a:	40 32       	cpi	r20, 0x20	; 32
    104c:	51 05       	cpc	r21, r1
    104e:	08 f0       	brcs	.+2      	; 0x1052 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x26>
    1050:	6b c3       	rjmp	.+1750   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1052:	fa 01       	movw	r30, r20
    1054:	e2 50       	subi	r30, 0x02	; 2
    1056:	ff 4f       	sbci	r31, 0xFF	; 255
    1058:	0c 94 b2 3c 	jmp	0x7964	; 0x7964 <__tablejump2__>
    105c:	64 e2       	ldi	r22, 0x24	; 36
    105e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1062:	64 e2       	ldi	r22, 0x24	; 36
    1064:	ce 01       	movw	r24, r28
    1066:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    106a:	64 e2       	ldi	r22, 0x24	; 36
    106c:	ce 01       	movw	r24, r28
    106e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1072:	5a c3       	rjmp	.+1716   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1074:	6d e2       	ldi	r22, 0x2D	; 45
    1076:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    107a:	6d e2       	ldi	r22, 0x2D	; 45
    107c:	ce 01       	movw	r24, r28
    107e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1082:	6d e2       	ldi	r22, 0x2D	; 45
    1084:	ce 01       	movw	r24, r28
    1086:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    108a:	6a e0       	ldi	r22, 0x0A	; 10
    108c:	ce 01       	movw	r24, r28
    108e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1092:	4a c3       	rjmp	.+1684   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1094:	c8 2e       	mov	r12, r24
    1096:	dd 2e       	mov	r13, r29
    1098:	63 e4       	ldi	r22, 0x43	; 67
    109a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    109e:	6c e2       	ldi	r22, 0x2C	; 44
    10a0:	ce 01       	movw	r24, r28
    10a2:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    10a6:	7e 01       	movw	r14, r28
    10a8:	8a e1       	ldi	r24, 0x1A	; 26
    10aa:	e8 0e       	add	r14, r24
    10ac:	f1 1c       	adc	r15, r1
    10ae:	00 e0       	ldi	r16, 0x00	; 0
    10b0:	10 e0       	ldi	r17, 0x00	; 0
    10b2:	f7 01       	movw	r30, r14
    10b4:	61 91       	ld	r22, Z+
    10b6:	7f 01       	movw	r14, r30
    10b8:	8c 2d       	mov	r24, r12
    10ba:	9d 2d       	mov	r25, r13
    10bc:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    10c0:	0f 5f       	subi	r16, 0xFF	; 255
    10c2:	1f 4f       	sbci	r17, 0xFF	; 255
    10c4:	0c 30       	cpi	r16, 0x0C	; 12
    10c6:	11 05       	cpc	r17, r1
    10c8:	a1 f7       	brne	.-24     	; 0x10b2 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x86>
    10ca:	6a e0       	ldi	r22, 0x0A	; 10
    10cc:	ce 01       	movw	r24, r28
    10ce:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    10d2:	2a c3       	rjmp	.+1620   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    10d4:	69 e4       	ldi	r22, 0x49	; 73
    10d6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    10da:	6a e0       	ldi	r22, 0x0A	; 10
    10dc:	ce 01       	movw	r24, r28
    10de:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    10e2:	22 c3       	rjmp	.+1604   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    10e4:	67 e4       	ldi	r22, 0x47	; 71
    10e6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    10ea:	6b e4       	ldi	r22, 0x4B	; 75
    10ec:	ce 01       	movw	r24, r28
    10ee:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    10f2:	6a e0       	ldi	r22, 0x0A	; 10
    10f4:	ce 01       	movw	r24, r28
    10f6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    10fa:	16 c3       	rjmp	.+1580   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    10fc:	63 e5       	ldi	r22, 0x53	; 83
    10fe:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1102:	66 e4       	ldi	r22, 0x46	; 70
    1104:	ce 01       	movw	r24, r28
    1106:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    110a:	6c e2       	ldi	r22, 0x2C	; 44
    110c:	ce 01       	movw	r24, r28
    110e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1112:	61 e3       	ldi	r22, 0x31	; 49
    1114:	ce 01       	movw	r24, r28
    1116:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    111a:	6a e0       	ldi	r22, 0x0A	; 10
    111c:	ce 01       	movw	r24, r28
    111e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1122:	02 c3       	rjmp	.+1540   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1124:	62 e5       	ldi	r22, 0x52	; 82
    1126:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    112a:	6c e2       	ldi	r22, 0x2C	; 44
    112c:	ce 01       	movw	r24, r28
    112e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1132:	61 e3       	ldi	r22, 0x31	; 49
    1134:	ce 01       	movw	r24, r28
    1136:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    113a:	6a e0       	ldi	r22, 0x0A	; 10
    113c:	ce 01       	movw	r24, r28
    113e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1142:	61 e4       	ldi	r22, 0x41	; 65
    1144:	ce 01       	movw	r24, r28
    1146:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    114a:	64 e5       	ldi	r22, 0x54	; 84
    114c:	ce 01       	movw	r24, r28
    114e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1152:	69 e4       	ldi	r22, 0x49	; 73
    1154:	ce 01       	movw	r24, r28
    1156:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    115a:	6d e0       	ldi	r22, 0x0D	; 13
    115c:	ce 01       	movw	r24, r28
    115e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1162:	6a e0       	ldi	r22, 0x0A	; 10
    1164:	ce 01       	movw	r24, r28
    1166:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    116a:	de c2       	rjmp	.+1468   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    116c:	61 e4       	ldi	r22, 0x41	; 65
    116e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1172:	64 e5       	ldi	r22, 0x54	; 84
    1174:	ce 01       	movw	r24, r28
    1176:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    117a:	6a e5       	ldi	r22, 0x5A	; 90
    117c:	ce 01       	movw	r24, r28
    117e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1182:	6d e0       	ldi	r22, 0x0D	; 13
    1184:	ce 01       	movw	r24, r28
    1186:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    118a:	6a e0       	ldi	r22, 0x0A	; 10
    118c:	ce 01       	movw	r24, r28
    118e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1192:	ca c2       	rjmp	.+1428   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1194:	61 e4       	ldi	r22, 0x41	; 65
    1196:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    119a:	64 e5       	ldi	r22, 0x54	; 84
    119c:	ce 01       	movw	r24, r28
    119e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11a2:	65 e4       	ldi	r22, 0x45	; 69
    11a4:	ce 01       	movw	r24, r28
    11a6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11aa:	60 e3       	ldi	r22, 0x30	; 48
    11ac:	ce 01       	movw	r24, r28
    11ae:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11b2:	6d e0       	ldi	r22, 0x0D	; 13
    11b4:	ce 01       	movw	r24, r28
    11b6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11ba:	6a e0       	ldi	r22, 0x0A	; 10
    11bc:	ce 01       	movw	r24, r28
    11be:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11c2:	b2 c2       	rjmp	.+1380   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    11c4:	61 e4       	ldi	r22, 0x41	; 65
    11c6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11ca:	64 e5       	ldi	r22, 0x54	; 84
    11cc:	ce 01       	movw	r24, r28
    11ce:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11d2:	6c e4       	ldi	r22, 0x4C	; 76
    11d4:	ce 01       	movw	r24, r28
    11d6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11da:	61 e3       	ldi	r22, 0x31	; 49
    11dc:	ce 01       	movw	r24, r28
    11de:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11e2:	6d e0       	ldi	r22, 0x0D	; 13
    11e4:	ce 01       	movw	r24, r28
    11e6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11ea:	6a e0       	ldi	r22, 0x0A	; 10
    11ec:	ce 01       	movw	r24, r28
    11ee:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11f2:	9a c2       	rjmp	.+1332   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    11f4:	61 e4       	ldi	r22, 0x41	; 65
    11f6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    11fa:	64 e5       	ldi	r22, 0x54	; 84
    11fc:	ce 01       	movw	r24, r28
    11fe:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1202:	68 e4       	ldi	r22, 0x48	; 72
    1204:	ce 01       	movw	r24, r28
    1206:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    120a:	60 e3       	ldi	r22, 0x30	; 48
    120c:	ce 01       	movw	r24, r28
    120e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1212:	6d e0       	ldi	r22, 0x0D	; 13
    1214:	ce 01       	movw	r24, r28
    1216:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    121a:	6a e0       	ldi	r22, 0x0A	; 10
    121c:	ce 01       	movw	r24, r28
    121e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1222:	82 c2       	rjmp	.+1284   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1224:	61 e4       	ldi	r22, 0x41	; 65
    1226:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    122a:	64 e5       	ldi	r22, 0x54	; 84
    122c:	ce 01       	movw	r24, r28
    122e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1232:	63 e5       	ldi	r22, 0x53	; 83
    1234:	ce 01       	movw	r24, r28
    1236:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    123a:	61 e3       	ldi	r22, 0x31	; 49
    123c:	ce 01       	movw	r24, r28
    123e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1242:	6d e0       	ldi	r22, 0x0D	; 13
    1244:	ce 01       	movw	r24, r28
    1246:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    124a:	6a e0       	ldi	r22, 0x0A	; 10
    124c:	ce 01       	movw	r24, r28
    124e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1252:	6a c2       	rjmp	.+1236   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1254:	61 e4       	ldi	r22, 0x41	; 65
    1256:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    125a:	64 e5       	ldi	r22, 0x54	; 84
    125c:	ce 01       	movw	r24, r28
    125e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1262:	63 e5       	ldi	r22, 0x53	; 83
    1264:	ce 01       	movw	r24, r28
    1266:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    126a:	60 e5       	ldi	r22, 0x50	; 80
    126c:	ce 01       	movw	r24, r28
    126e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1272:	60 e3       	ldi	r22, 0x30	; 48
    1274:	ce 01       	movw	r24, r28
    1276:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    127a:	6d e0       	ldi	r22, 0x0D	; 13
    127c:	ce 01       	movw	r24, r28
    127e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1282:	6a e0       	ldi	r22, 0x0A	; 10
    1284:	ce 01       	movw	r24, r28
    1286:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    128a:	4e c2       	rjmp	.+1180   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    128c:	60 e3       	ldi	r22, 0x30	; 48
    128e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1292:	61 e3       	ldi	r22, 0x31	; 49
    1294:	ce 01       	movw	r24, r28
    1296:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    129a:	60 e3       	ldi	r22, 0x30	; 48
    129c:	ce 01       	movw	r24, r28
    129e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    12a2:	63 e4       	ldi	r22, 0x43	; 67
    12a4:	ce 01       	movw	r24, r28
    12a6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    12aa:	6d e0       	ldi	r22, 0x0D	; 13
    12ac:	ce 01       	movw	r24, r28
    12ae:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    12b2:	6a e0       	ldi	r22, 0x0A	; 10
    12b4:	ce 01       	movw	r24, r28
    12b6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    12ba:	fe 01       	movw	r30, r28
    12bc:	e8 59       	subi	r30, 0x98	; 152
    12be:	ff 4f       	sbci	r31, 0xFF	; 255
    12c0:	80 e3       	ldi	r24, 0x30	; 48
    12c2:	80 83       	st	Z, r24
    12c4:	c7 59       	subi	r28, 0x97	; 151
    12c6:	df 4f       	sbci	r29, 0xFF	; 255
    12c8:	83 e4       	ldi	r24, 0x43	; 67
    12ca:	88 83       	st	Y, r24
    12cc:	2d c2       	rjmp	.+1114   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    12ce:	60 e3       	ldi	r22, 0x30	; 48
    12d0:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    12d4:	61 e3       	ldi	r22, 0x31	; 49
    12d6:	ce 01       	movw	r24, r28
    12d8:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    12dc:	60 e3       	ldi	r22, 0x30	; 48
    12de:	ce 01       	movw	r24, r28
    12e0:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    12e4:	64 e4       	ldi	r22, 0x44	; 68
    12e6:	ce 01       	movw	r24, r28
    12e8:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    12ec:	6d e0       	ldi	r22, 0x0D	; 13
    12ee:	ce 01       	movw	r24, r28
    12f0:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    12f4:	6a e0       	ldi	r22, 0x0A	; 10
    12f6:	ce 01       	movw	r24, r28
    12f8:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    12fc:	fe 01       	movw	r30, r28
    12fe:	e8 59       	subi	r30, 0x98	; 152
    1300:	ff 4f       	sbci	r31, 0xFF	; 255
    1302:	80 e3       	ldi	r24, 0x30	; 48
    1304:	80 83       	st	Z, r24
    1306:	c7 59       	subi	r28, 0x97	; 151
    1308:	df 4f       	sbci	r29, 0xFF	; 255
    130a:	84 e4       	ldi	r24, 0x44	; 68
    130c:	88 83       	st	Y, r24
    130e:	0c c2       	rjmp	.+1048   	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1310:	60 e3       	ldi	r22, 0x30	; 48
    1312:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1316:	61 e3       	ldi	r22, 0x31	; 49
    1318:	ce 01       	movw	r24, r28
    131a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    131e:	61 e3       	ldi	r22, 0x31	; 49
    1320:	ce 01       	movw	r24, r28
    1322:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1326:	61 e3       	ldi	r22, 0x31	; 49
    1328:	ce 01       	movw	r24, r28
    132a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    132e:	6d e0       	ldi	r22, 0x0D	; 13
    1330:	ce 01       	movw	r24, r28
    1332:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1336:	6a e0       	ldi	r22, 0x0A	; 10
    1338:	ce 01       	movw	r24, r28
    133a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    133e:	fe 01       	movw	r30, r28
    1340:	e8 59       	subi	r30, 0x98	; 152
    1342:	ff 4f       	sbci	r31, 0xFF	; 255
    1344:	81 e3       	ldi	r24, 0x31	; 49
    1346:	80 83       	st	Z, r24
    1348:	c7 59       	subi	r28, 0x97	; 151
    134a:	df 4f       	sbci	r29, 0xFF	; 255
    134c:	88 83       	st	Y, r24
    134e:	ec c1       	rjmp	.+984    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1350:	60 e3       	ldi	r22, 0x30	; 48
    1352:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1356:	61 e3       	ldi	r22, 0x31	; 49
    1358:	ce 01       	movw	r24, r28
    135a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    135e:	65 e3       	ldi	r22, 0x35	; 53
    1360:	ce 01       	movw	r24, r28
    1362:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1366:	63 e4       	ldi	r22, 0x43	; 67
    1368:	ce 01       	movw	r24, r28
    136a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    136e:	6d e0       	ldi	r22, 0x0D	; 13
    1370:	ce 01       	movw	r24, r28
    1372:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1376:	6a e0       	ldi	r22, 0x0A	; 10
    1378:	ce 01       	movw	r24, r28
    137a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    137e:	fe 01       	movw	r30, r28
    1380:	e8 59       	subi	r30, 0x98	; 152
    1382:	ff 4f       	sbci	r31, 0xFF	; 255
    1384:	85 e3       	ldi	r24, 0x35	; 53
    1386:	80 83       	st	Z, r24
    1388:	c7 59       	subi	r28, 0x97	; 151
    138a:	df 4f       	sbci	r29, 0xFF	; 255
    138c:	83 e4       	ldi	r24, 0x43	; 67
    138e:	88 83       	st	Y, r24
    1390:	cb c1       	rjmp	.+918    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1392:	60 e3       	ldi	r22, 0x30	; 48
    1394:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1398:	61 e3       	ldi	r22, 0x31	; 49
    139a:	ce 01       	movw	r24, r28
    139c:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    13a0:	65 e3       	ldi	r22, 0x35	; 53
    13a2:	ce 01       	movw	r24, r28
    13a4:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    13a8:	65 e4       	ldi	r22, 0x45	; 69
    13aa:	ce 01       	movw	r24, r28
    13ac:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    13b0:	6d e0       	ldi	r22, 0x0D	; 13
    13b2:	ce 01       	movw	r24, r28
    13b4:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    13b8:	6a e0       	ldi	r22, 0x0A	; 10
    13ba:	ce 01       	movw	r24, r28
    13bc:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    13c0:	fe 01       	movw	r30, r28
    13c2:	e8 59       	subi	r30, 0x98	; 152
    13c4:	ff 4f       	sbci	r31, 0xFF	; 255
    13c6:	85 e3       	ldi	r24, 0x35	; 53
    13c8:	80 83       	st	Z, r24
    13ca:	c7 59       	subi	r28, 0x97	; 151
    13cc:	df 4f       	sbci	r29, 0xFF	; 255
    13ce:	85 e4       	ldi	r24, 0x45	; 69
    13d0:	88 83       	st	Y, r24
    13d2:	aa c1       	rjmp	.+852    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    13d4:	60 e3       	ldi	r22, 0x30	; 48
    13d6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    13da:	61 e3       	ldi	r22, 0x31	; 49
    13dc:	ce 01       	movw	r24, r28
    13de:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    13e2:	66 e3       	ldi	r22, 0x36	; 54
    13e4:	ce 01       	movw	r24, r28
    13e6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    13ea:	67 e3       	ldi	r22, 0x37	; 55
    13ec:	ce 01       	movw	r24, r28
    13ee:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    13f2:	6d e0       	ldi	r22, 0x0D	; 13
    13f4:	ce 01       	movw	r24, r28
    13f6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    13fa:	6a e0       	ldi	r22, 0x0A	; 10
    13fc:	ce 01       	movw	r24, r28
    13fe:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1402:	fe 01       	movw	r30, r28
    1404:	e8 59       	subi	r30, 0x98	; 152
    1406:	ff 4f       	sbci	r31, 0xFF	; 255
    1408:	86 e3       	ldi	r24, 0x36	; 54
    140a:	80 83       	st	Z, r24
    140c:	c7 59       	subi	r28, 0x97	; 151
    140e:	df 4f       	sbci	r29, 0xFF	; 255
    1410:	87 e3       	ldi	r24, 0x37	; 55
    1412:	88 83       	st	Y, r24
    1414:	89 c1       	rjmp	.+786    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1416:	60 e3       	ldi	r22, 0x30	; 48
    1418:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    141c:	61 e3       	ldi	r22, 0x31	; 49
    141e:	ce 01       	movw	r24, r28
    1420:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1424:	60 e3       	ldi	r22, 0x30	; 48
    1426:	ce 01       	movw	r24, r28
    1428:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    142c:	64 e3       	ldi	r22, 0x34	; 52
    142e:	ce 01       	movw	r24, r28
    1430:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1434:	6d e0       	ldi	r22, 0x0D	; 13
    1436:	ce 01       	movw	r24, r28
    1438:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    143c:	6a e0       	ldi	r22, 0x0A	; 10
    143e:	ce 01       	movw	r24, r28
    1440:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1444:	fe 01       	movw	r30, r28
    1446:	e8 59       	subi	r30, 0x98	; 152
    1448:	ff 4f       	sbci	r31, 0xFF	; 255
    144a:	80 e3       	ldi	r24, 0x30	; 48
    144c:	80 83       	st	Z, r24
    144e:	c7 59       	subi	r28, 0x97	; 151
    1450:	df 4f       	sbci	r29, 0xFF	; 255
    1452:	84 e3       	ldi	r24, 0x34	; 52
    1454:	88 83       	st	Y, r24
    1456:	68 c1       	rjmp	.+720    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1458:	60 e3       	ldi	r22, 0x30	; 48
    145a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    145e:	61 e3       	ldi	r22, 0x31	; 49
    1460:	ce 01       	movw	r24, r28
    1462:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1466:	62 e3       	ldi	r22, 0x32	; 50
    1468:	ce 01       	movw	r24, r28
    146a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    146e:	66 e4       	ldi	r22, 0x46	; 70
    1470:	ce 01       	movw	r24, r28
    1472:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1476:	6d e0       	ldi	r22, 0x0D	; 13
    1478:	ce 01       	movw	r24, r28
    147a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    147e:	6a e0       	ldi	r22, 0x0A	; 10
    1480:	ce 01       	movw	r24, r28
    1482:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1486:	fe 01       	movw	r30, r28
    1488:	e8 59       	subi	r30, 0x98	; 152
    148a:	ff 4f       	sbci	r31, 0xFF	; 255
    148c:	82 e3       	ldi	r24, 0x32	; 50
    148e:	80 83       	st	Z, r24
    1490:	c7 59       	subi	r28, 0x97	; 151
    1492:	df 4f       	sbci	r29, 0xFF	; 255
    1494:	86 e4       	ldi	r24, 0x46	; 70
    1496:	88 83       	st	Y, r24
    1498:	47 c1       	rjmp	.+654    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    149a:	60 e3       	ldi	r22, 0x30	; 48
    149c:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    14a0:	61 e3       	ldi	r22, 0x31	; 49
    14a2:	ce 01       	movw	r24, r28
    14a4:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    14a8:	68 e3       	ldi	r22, 0x38	; 56
    14aa:	ce 01       	movw	r24, r28
    14ac:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    14b0:	67 e3       	ldi	r22, 0x37	; 55
    14b2:	ce 01       	movw	r24, r28
    14b4:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    14b8:	6d e0       	ldi	r22, 0x0D	; 13
    14ba:	ce 01       	movw	r24, r28
    14bc:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    14c0:	6a e0       	ldi	r22, 0x0A	; 10
    14c2:	ce 01       	movw	r24, r28
    14c4:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    14c8:	fe 01       	movw	r30, r28
    14ca:	e8 59       	subi	r30, 0x98	; 152
    14cc:	ff 4f       	sbci	r31, 0xFF	; 255
    14ce:	88 e3       	ldi	r24, 0x38	; 56
    14d0:	80 83       	st	Z, r24
    14d2:	c7 59       	subi	r28, 0x97	; 151
    14d4:	df 4f       	sbci	r29, 0xFF	; 255
    14d6:	87 e3       	ldi	r24, 0x37	; 55
    14d8:	88 83       	st	Y, r24
    14da:	26 c1       	rjmp	.+588    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    14dc:	60 e3       	ldi	r22, 0x30	; 48
    14de:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    14e2:	61 e3       	ldi	r22, 0x31	; 49
    14e4:	ce 01       	movw	r24, r28
    14e6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    14ea:	64 e3       	ldi	r22, 0x34	; 52
    14ec:	ce 01       	movw	r24, r28
    14ee:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    14f2:	66 e3       	ldi	r22, 0x36	; 54
    14f4:	ce 01       	movw	r24, r28
    14f6:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    14fa:	6d e0       	ldi	r22, 0x0D	; 13
    14fc:	ce 01       	movw	r24, r28
    14fe:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1502:	6a e0       	ldi	r22, 0x0A	; 10
    1504:	ce 01       	movw	r24, r28
    1506:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    150a:	fe 01       	movw	r30, r28
    150c:	e8 59       	subi	r30, 0x98	; 152
    150e:	ff 4f       	sbci	r31, 0xFF	; 255
    1510:	84 e3       	ldi	r24, 0x34	; 52
    1512:	80 83       	st	Z, r24
    1514:	c7 59       	subi	r28, 0x97	; 151
    1516:	df 4f       	sbci	r29, 0xFF	; 255
    1518:	86 e3       	ldi	r24, 0x36	; 54
    151a:	88 83       	st	Y, r24
    151c:	05 c1       	rjmp	.+522    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    151e:	60 e3       	ldi	r22, 0x30	; 48
    1520:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1524:	61 e3       	ldi	r22, 0x31	; 49
    1526:	ce 01       	movw	r24, r28
    1528:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    152c:	63 e3       	ldi	r22, 0x33	; 51
    152e:	ce 01       	movw	r24, r28
    1530:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1534:	63 e3       	ldi	r22, 0x33	; 51
    1536:	ce 01       	movw	r24, r28
    1538:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    153c:	6d e0       	ldi	r22, 0x0D	; 13
    153e:	ce 01       	movw	r24, r28
    1540:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1544:	6a e0       	ldi	r22, 0x0A	; 10
    1546:	ce 01       	movw	r24, r28
    1548:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    154c:	fe 01       	movw	r30, r28
    154e:	e8 59       	subi	r30, 0x98	; 152
    1550:	ff 4f       	sbci	r31, 0xFF	; 255
    1552:	83 e3       	ldi	r24, 0x33	; 51
    1554:	80 83       	st	Z, r24
    1556:	c7 59       	subi	r28, 0x97	; 151
    1558:	df 4f       	sbci	r29, 0xFF	; 255
    155a:	88 83       	st	Y, r24
    155c:	e5 c0       	rjmp	.+458    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    155e:	60 e3       	ldi	r22, 0x30	; 48
    1560:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1564:	61 e3       	ldi	r22, 0x31	; 49
    1566:	ce 01       	movw	r24, r28
    1568:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    156c:	65 e3       	ldi	r22, 0x35	; 53
    156e:	ce 01       	movw	r24, r28
    1570:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1574:	69 e3       	ldi	r22, 0x39	; 57
    1576:	ce 01       	movw	r24, r28
    1578:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    157c:	6d e0       	ldi	r22, 0x0D	; 13
    157e:	ce 01       	movw	r24, r28
    1580:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1584:	6a e0       	ldi	r22, 0x0A	; 10
    1586:	ce 01       	movw	r24, r28
    1588:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    158c:	fe 01       	movw	r30, r28
    158e:	e8 59       	subi	r30, 0x98	; 152
    1590:	ff 4f       	sbci	r31, 0xFF	; 255
    1592:	85 e3       	ldi	r24, 0x35	; 53
    1594:	80 83       	st	Z, r24
    1596:	c7 59       	subi	r28, 0x97	; 151
    1598:	df 4f       	sbci	r29, 0xFF	; 255
    159a:	89 e3       	ldi	r24, 0x39	; 57
    159c:	88 83       	st	Y, r24
    159e:	c4 c0       	rjmp	.+392    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    15a0:	60 e3       	ldi	r22, 0x30	; 48
    15a2:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    15a6:	61 e3       	ldi	r22, 0x31	; 49
    15a8:	ce 01       	movw	r24, r28
    15aa:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    15ae:	66 e3       	ldi	r22, 0x36	; 54
    15b0:	ce 01       	movw	r24, r28
    15b2:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    15b6:	68 e3       	ldi	r22, 0x38	; 56
    15b8:	ce 01       	movw	r24, r28
    15ba:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    15be:	6d e0       	ldi	r22, 0x0D	; 13
    15c0:	ce 01       	movw	r24, r28
    15c2:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    15c6:	6a e0       	ldi	r22, 0x0A	; 10
    15c8:	ce 01       	movw	r24, r28
    15ca:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    15ce:	fe 01       	movw	r30, r28
    15d0:	e8 59       	subi	r30, 0x98	; 152
    15d2:	ff 4f       	sbci	r31, 0xFF	; 255
    15d4:	86 e3       	ldi	r24, 0x36	; 54
    15d6:	80 83       	st	Z, r24
    15d8:	c7 59       	subi	r28, 0x97	; 151
    15da:	df 4f       	sbci	r29, 0xFF	; 255
    15dc:	88 e3       	ldi	r24, 0x38	; 56
    15de:	88 83       	st	Y, r24
    15e0:	a3 c0       	rjmp	.+326    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    15e2:	60 e3       	ldi	r22, 0x30	; 48
    15e4:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    15e8:	61 e3       	ldi	r22, 0x31	; 49
    15ea:	ce 01       	movw	r24, r28
    15ec:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    15f0:	60 e3       	ldi	r22, 0x30	; 48
    15f2:	ce 01       	movw	r24, r28
    15f4:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    15f8:	60 e3       	ldi	r22, 0x30	; 48
    15fa:	ce 01       	movw	r24, r28
    15fc:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1600:	6d e0       	ldi	r22, 0x0D	; 13
    1602:	ce 01       	movw	r24, r28
    1604:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1608:	6a e0       	ldi	r22, 0x0A	; 10
    160a:	ce 01       	movw	r24, r28
    160c:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1610:	fe 01       	movw	r30, r28
    1612:	e8 59       	subi	r30, 0x98	; 152
    1614:	ff 4f       	sbci	r31, 0xFF	; 255
    1616:	80 e3       	ldi	r24, 0x30	; 48
    1618:	80 83       	st	Z, r24
    161a:	c7 59       	subi	r28, 0x97	; 151
    161c:	df 4f       	sbci	r29, 0xFF	; 255
    161e:	88 83       	st	Y, r24
    1620:	83 c0       	rjmp	.+262    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1622:	60 e3       	ldi	r22, 0x30	; 48
    1624:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1628:	61 e3       	ldi	r22, 0x31	; 49
    162a:	ce 01       	movw	r24, r28
    162c:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1630:	62 e3       	ldi	r22, 0x32	; 50
    1632:	ce 01       	movw	r24, r28
    1634:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1638:	60 e3       	ldi	r22, 0x30	; 48
    163a:	ce 01       	movw	r24, r28
    163c:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1640:	6d e0       	ldi	r22, 0x0D	; 13
    1642:	ce 01       	movw	r24, r28
    1644:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1648:	6a e0       	ldi	r22, 0x0A	; 10
    164a:	ce 01       	movw	r24, r28
    164c:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1650:	fe 01       	movw	r30, r28
    1652:	e8 59       	subi	r30, 0x98	; 152
    1654:	ff 4f       	sbci	r31, 0xFF	; 255
    1656:	82 e3       	ldi	r24, 0x32	; 50
    1658:	80 83       	st	Z, r24
    165a:	c7 59       	subi	r28, 0x97	; 151
    165c:	df 4f       	sbci	r29, 0xFF	; 255
    165e:	80 e3       	ldi	r24, 0x30	; 48
    1660:	88 83       	st	Y, r24
    1662:	62 c0       	rjmp	.+196    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    1664:	60 e3       	ldi	r22, 0x30	; 48
    1666:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    166a:	61 e3       	ldi	r22, 0x31	; 49
    166c:	ce 01       	movw	r24, r28
    166e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1672:	64 e3       	ldi	r22, 0x34	; 52
    1674:	ce 01       	movw	r24, r28
    1676:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    167a:	60 e3       	ldi	r22, 0x30	; 48
    167c:	ce 01       	movw	r24, r28
    167e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1682:	6d e0       	ldi	r22, 0x0D	; 13
    1684:	ce 01       	movw	r24, r28
    1686:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    168a:	6a e0       	ldi	r22, 0x0A	; 10
    168c:	ce 01       	movw	r24, r28
    168e:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1692:	fe 01       	movw	r30, r28
    1694:	e8 59       	subi	r30, 0x98	; 152
    1696:	ff 4f       	sbci	r31, 0xFF	; 255
    1698:	84 e3       	ldi	r24, 0x34	; 52
    169a:	80 83       	st	Z, r24
    169c:	c7 59       	subi	r28, 0x97	; 151
    169e:	df 4f       	sbci	r29, 0xFF	; 255
    16a0:	80 e3       	ldi	r24, 0x30	; 48
    16a2:	88 83       	st	Y, r24
    16a4:	41 c0       	rjmp	.+130    	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    16a6:	60 e3       	ldi	r22, 0x30	; 48
    16a8:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    16ac:	61 e3       	ldi	r22, 0x31	; 49
    16ae:	ce 01       	movw	r24, r28
    16b0:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    16b4:	66 e3       	ldi	r22, 0x36	; 54
    16b6:	ce 01       	movw	r24, r28
    16b8:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    16bc:	60 e3       	ldi	r22, 0x30	; 48
    16be:	ce 01       	movw	r24, r28
    16c0:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    16c4:	6d e0       	ldi	r22, 0x0D	; 13
    16c6:	ce 01       	movw	r24, r28
    16c8:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    16cc:	6a e0       	ldi	r22, 0x0A	; 10
    16ce:	ce 01       	movw	r24, r28
    16d0:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    16d4:	fe 01       	movw	r30, r28
    16d6:	e8 59       	subi	r30, 0x98	; 152
    16d8:	ff 4f       	sbci	r31, 0xFF	; 255
    16da:	86 e3       	ldi	r24, 0x36	; 54
    16dc:	80 83       	st	Z, r24
    16de:	c7 59       	subi	r28, 0x97	; 151
    16e0:	df 4f       	sbci	r29, 0xFF	; 255
    16e2:	80 e3       	ldi	r24, 0x30	; 48
    16e4:	88 83       	st	Y, r24
    16e6:	20 c0       	rjmp	.+64     	; 0x1728 <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE+0x6fc>
    16e8:	60 e3       	ldi	r22, 0x30	; 48
    16ea:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    16ee:	61 e3       	ldi	r22, 0x31	; 49
    16f0:	ce 01       	movw	r24, r28
    16f2:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    16f6:	68 e3       	ldi	r22, 0x38	; 56
    16f8:	ce 01       	movw	r24, r28
    16fa:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    16fe:	60 e3       	ldi	r22, 0x30	; 48
    1700:	ce 01       	movw	r24, r28
    1702:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1706:	6d e0       	ldi	r22, 0x0D	; 13
    1708:	ce 01       	movw	r24, r28
    170a:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    170e:	6a e0       	ldi	r22, 0x0A	; 10
    1710:	ce 01       	movw	r24, r28
    1712:	0e 94 3c 3b 	call	0x7678	; 0x7678 <_ZN10UartDriver8sendByteEc>
    1716:	fe 01       	movw	r30, r28
    1718:	e8 59       	subi	r30, 0x98	; 152
    171a:	ff 4f       	sbci	r31, 0xFF	; 255
    171c:	88 e3       	ldi	r24, 0x38	; 56
    171e:	80 83       	st	Z, r24
    1720:	c7 59       	subi	r28, 0x97	; 151
    1722:	df 4f       	sbci	r29, 0xFF	; 255
    1724:	80 e3       	ldi	r24, 0x30	; 48
    1726:	88 83       	st	Y, r24
    1728:	df 91       	pop	r29
    172a:	cf 91       	pop	r28
    172c:	1f 91       	pop	r17
    172e:	0f 91       	pop	r16
    1730:	ff 90       	pop	r15
    1732:	ef 90       	pop	r14
    1734:	df 90       	pop	r13
    1736:	cf 90       	pop	r12
    1738:	08 95       	ret

0000173a <_ZN5BTOBD10initializeEP10LCD_Driver>:
    173a:	5f 92       	push	r5
    173c:	6f 92       	push	r6
    173e:	7f 92       	push	r7
    1740:	8f 92       	push	r8
    1742:	9f 92       	push	r9
    1744:	af 92       	push	r10
    1746:	bf 92       	push	r11
    1748:	cf 92       	push	r12
    174a:	df 92       	push	r13
    174c:	ef 92       	push	r14
    174e:	ff 92       	push	r15
    1750:	0f 93       	push	r16
    1752:	1f 93       	push	r17
    1754:	cf 93       	push	r28
    1756:	df 93       	push	r29
    1758:	6c 01       	movw	r12, r24
    175a:	eb 01       	movw	r28, r22
    175c:	6d e0       	ldi	r22, 0x0D	; 13
    175e:	66 dc       	rcall	.-1844   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1760:	be 01       	movw	r22, r28
    1762:	c6 01       	movw	r24, r12
    1764:	1d dc       	rcall	.-1990   	; 0xfa0 <_ZN5BTOBD14waitForNewlineEP10LCD_Driver>
    1766:	61 e1       	ldi	r22, 0x11	; 17
    1768:	c6 01       	movw	r24, r12
    176a:	60 dc       	rcall	.-1856   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    176c:	be 01       	movw	r22, r28
    176e:	c6 01       	movw	r24, r12
    1770:	17 dc       	rcall	.-2002   	; 0xfa0 <_ZN5BTOBD14waitForNewlineEP10LCD_Driver>
    1772:	62 e1       	ldi	r22, 0x12	; 18
    1774:	c6 01       	movw	r24, r12
    1776:	5a dc       	rcall	.-1868   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1778:	2f ef       	ldi	r18, 0xFF	; 255
    177a:	33 e2       	ldi	r19, 0x23	; 35
    177c:	84 ef       	ldi	r24, 0xF4	; 244
    177e:	90 e0       	ldi	r25, 0x00	; 0
    1780:	21 50       	subi	r18, 0x01	; 1
    1782:	30 40       	sbci	r19, 0x00	; 0
    1784:	80 40       	sbci	r24, 0x00	; 0
    1786:	90 40       	sbci	r25, 0x00	; 0
    1788:	d9 f7       	brne	.-10     	; 0x1780 <_ZN5BTOBD10initializeEP10LCD_Driver+0x46>
    178a:	00 c0       	rjmp	.+0      	; 0x178c <_ZN5BTOBD10initializeEP10LCD_Driver+0x52>
    178c:	00 00       	nop
    178e:	0c 2d       	mov	r16, r12
    1790:	1d 2d       	mov	r17, r13
    1792:	0c c0       	rjmp	.+24     	; 0x17ac <_ZN5BTOBD10initializeEP10LCD_Driver+0x72>
    1794:	80 2f       	mov	r24, r16
    1796:	91 2f       	mov	r25, r17
    1798:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    179c:	e8 81       	ld	r30, Y
    179e:	f9 81       	ldd	r31, Y+1	; 0x01
    17a0:	00 88       	ldd	r0, Z+16	; 0x10
    17a2:	f1 89       	ldd	r31, Z+17	; 0x11
    17a4:	e0 2d       	mov	r30, r0
    17a6:	68 2f       	mov	r22, r24
    17a8:	ce 01       	movw	r24, r28
    17aa:	19 95       	eicall
    17ac:	a0 2e       	mov	r10, r16
    17ae:	91 2e       	mov	r9, r17
    17b0:	80 2f       	mov	r24, r16
    17b2:	91 2f       	mov	r25, r17
    17b4:	0e 94 5a 3b 	call	0x76b4	; 0x76b4 <_ZN10UartDriver9rxIsEmptyEv>
    17b8:	88 23       	and	r24, r24
    17ba:	61 f3       	breq	.-40     	; 0x1794 <_ZN5BTOBD10initializeEP10LCD_Driver+0x5a>
    17bc:	6d e0       	ldi	r22, 0x0D	; 13
    17be:	c6 01       	movw	r24, r12
    17c0:	35 dc       	rcall	.-1942   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    17c2:	be 01       	movw	r22, r28
    17c4:	c6 01       	movw	r24, r12
    17c6:	ec db       	rcall	.-2088   	; 0xfa0 <_ZN5BTOBD14waitForNewlineEP10LCD_Driver>
    17c8:	0f 2e       	mov	r0, r31
    17ca:	f4 e6       	ldi	r31, 0x64	; 100
    17cc:	5f 2e       	mov	r5, r31
    17ce:	f0 2d       	mov	r31, r0
    17d0:	61 2c       	mov	r6, r1
    17d2:	e8 81       	ld	r30, Y
    17d4:	f9 81       	ldd	r31, Y+1	; 0x01
    17d6:	04 84       	ldd	r0, Z+12	; 0x0c
    17d8:	f5 85       	ldd	r31, Z+13	; 0x0d
    17da:	e0 2d       	mov	r30, r0
    17dc:	60 e0       	ldi	r22, 0x00	; 0
    17de:	70 e0       	ldi	r23, 0x00	; 0
    17e0:	ce 01       	movw	r24, r28
    17e2:	19 95       	eicall
    17e4:	7c 2e       	mov	r7, r28
    17e6:	8d 2e       	mov	r8, r29
    17e8:	40 e0       	ldi	r20, 0x00	; 0
    17ea:	50 e0       	ldi	r21, 0x00	; 0
    17ec:	60 e0       	ldi	r22, 0x00	; 0
    17ee:	70 e0       	ldi	r23, 0x00	; 0
    17f0:	ce 01       	movw	r24, r28
    17f2:	09 db       	rcall	.-2542   	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
    17f4:	6e e0       	ldi	r22, 0x0E	; 14
    17f6:	c6 01       	movw	r24, r12
    17f8:	19 dc       	rcall	.-1998   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    17fa:	e5 2c       	mov	r14, r5
    17fc:	f6 2c       	mov	r15, r6
    17fe:	00 e0       	ldi	r16, 0x00	; 0
    1800:	10 e0       	ldi	r17, 0x00	; 0
    1802:	2f ef       	ldi	r18, 0xFF	; 255
    1804:	35 ea       	ldi	r19, 0xA5	; 165
    1806:	8e e0       	ldi	r24, 0x0E	; 14
    1808:	21 50       	subi	r18, 0x01	; 1
    180a:	30 40       	sbci	r19, 0x00	; 0
    180c:	80 40       	sbci	r24, 0x00	; 0
    180e:	e1 f7       	brne	.-8      	; 0x1808 <_ZN5BTOBD10initializeEP10LCD_Driver+0xce>
    1810:	00 c0       	rjmp	.+0      	; 0x1812 <_ZN5BTOBD10initializeEP10LCD_Driver+0xd8>
    1812:	00 00       	nop
    1814:	13 c0       	rjmp	.+38     	; 0x183c <_ZN5BTOBD10initializeEP10LCD_Driver+0x102>
    1816:	8a 2d       	mov	r24, r10
    1818:	99 2d       	mov	r25, r9
    181a:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    181e:	b8 2e       	mov	r11, r24
    1820:	e8 81       	ld	r30, Y
    1822:	f9 81       	ldd	r31, Y+1	; 0x01
    1824:	00 88       	ldd	r0, Z+16	; 0x10
    1826:	f1 89       	ldd	r31, Z+17	; 0x11
    1828:	e0 2d       	mov	r30, r0
    182a:	68 2f       	mov	r22, r24
    182c:	87 2d       	mov	r24, r7
    182e:	98 2d       	mov	r25, r8
    1830:	19 95       	eicall
    1832:	9a e0       	ldi	r25, 0x0A	; 10
    1834:	b9 12       	cpse	r11, r25
    1836:	02 c0       	rjmp	.+4      	; 0x183c <_ZN5BTOBD10initializeEP10LCD_Driver+0x102>
    1838:	0f 5f       	subi	r16, 0xFF	; 255
    183a:	1f 4f       	sbci	r17, 0xFF	; 255
    183c:	8a 2d       	mov	r24, r10
    183e:	99 2d       	mov	r25, r9
    1840:	0e 94 5a 3b 	call	0x76b4	; 0x76b4 <_ZN10UartDriver9rxIsEmptyEv>
    1844:	88 23       	and	r24, r24
    1846:	39 f3       	breq	.-50     	; 0x1816 <_ZN5BTOBD10initializeEP10LCD_Driver+0xdc>
    1848:	21 e0       	ldi	r18, 0x01	; 1
    184a:	e2 1a       	sub	r14, r18
    184c:	f1 08       	sbc	r15, r1
    184e:	e1 14       	cp	r14, r1
    1850:	f1 04       	cpc	r15, r1
    1852:	b9 f6       	brne	.-82     	; 0x1802 <_ZN5BTOBD10initializeEP10LCD_Driver+0xc8>
    1854:	01 30       	cpi	r16, 0x01	; 1
    1856:	11 05       	cpc	r17, r1
    1858:	09 f0       	breq	.+2      	; 0x185c <_ZN5BTOBD10initializeEP10LCD_Driver+0x122>
    185a:	bb cf       	rjmp	.-138    	; 0x17d2 <_ZN5BTOBD10initializeEP10LCD_Driver+0x98>
    185c:	6b e4       	ldi	r22, 0x4B	; 75
    185e:	70 e2       	ldi	r23, 0x20	; 32
    1860:	ce 01       	movw	r24, r28
    1862:	0e 94 c9 2c 	call	0x5992	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
    1866:	65 e1       	ldi	r22, 0x15	; 21
    1868:	c6 01       	movw	r24, r12
    186a:	e0 db       	rcall	.-2112   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    186c:	be 01       	movw	r22, r28
    186e:	c6 01       	movw	r24, r12
    1870:	bb db       	rcall	.-2186   	; 0xfe8 <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    1872:	66 e1       	ldi	r22, 0x16	; 22
    1874:	c6 01       	movw	r24, r12
    1876:	da db       	rcall	.-2124   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1878:	be 01       	movw	r22, r28
    187a:	c6 01       	movw	r24, r12
    187c:	b5 db       	rcall	.-2198   	; 0xfe8 <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    187e:	67 e1       	ldi	r22, 0x17	; 23
    1880:	c6 01       	movw	r24, r12
    1882:	d4 db       	rcall	.-2136   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1884:	be 01       	movw	r22, r28
    1886:	c6 01       	movw	r24, r12
    1888:	af db       	rcall	.-2210   	; 0xfe8 <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    188a:	68 e1       	ldi	r22, 0x18	; 24
    188c:	c6 01       	movw	r24, r12
    188e:	ce db       	rcall	.-2148   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1890:	be 01       	movw	r22, r28
    1892:	c6 01       	movw	r24, r12
    1894:	a9 db       	rcall	.-2222   	; 0xfe8 <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    1896:	6a e1       	ldi	r22, 0x1A	; 26
    1898:	c6 01       	movw	r24, r12
    189a:	c8 db       	rcall	.-2160   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    189c:	be 01       	movw	r22, r28
    189e:	c6 01       	movw	r24, r12
    18a0:	a3 db       	rcall	.-2234   	; 0xfe8 <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    18a2:	f6 01       	movw	r30, r12
    18a4:	e6 59       	subi	r30, 0x96	; 150
    18a6:	ff 4f       	sbci	r31, 0xFF	; 255
    18a8:	10 82       	st	Z, r1
    18aa:	61 e0       	ldi	r22, 0x01	; 1
    18ac:	c6 01       	movw	r24, r12
    18ae:	be db       	rcall	.-2180   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    18b0:	be 01       	movw	r22, r28
    18b2:	c6 01       	movw	r24, r12
    18b4:	99 db       	rcall	.-2254   	; 0xfe8 <_ZN5BTOBD13waitForPromptEP10LCD_Driver>
    18b6:	81 e0       	ldi	r24, 0x01	; 1
    18b8:	df 91       	pop	r29
    18ba:	cf 91       	pop	r28
    18bc:	1f 91       	pop	r17
    18be:	0f 91       	pop	r16
    18c0:	ff 90       	pop	r15
    18c2:	ef 90       	pop	r14
    18c4:	df 90       	pop	r13
    18c6:	cf 90       	pop	r12
    18c8:	bf 90       	pop	r11
    18ca:	af 90       	pop	r10
    18cc:	9f 90       	pop	r9
    18ce:	8f 90       	pop	r8
    18d0:	7f 90       	pop	r7
    18d2:	6f 90       	pop	r6
    18d4:	5f 90       	pop	r5
    18d6:	08 95       	ret

000018d8 <_ZN5BTOBD10initializeEPcP10LCD_Driver>:
    18d8:	e6 2f       	mov	r30, r22
    18da:	f7 2f       	mov	r31, r23
    18dc:	dc 01       	movw	r26, r24
    18de:	5a 96       	adiw	r26, 0x1a	; 26
    18e0:	20 e0       	ldi	r18, 0x00	; 0
    18e2:	30 e0       	ldi	r19, 0x00	; 0
    18e4:	61 91       	ld	r22, Z+
    18e6:	6d 93       	st	X+, r22
    18e8:	2f 5f       	subi	r18, 0xFF	; 255
    18ea:	3f 4f       	sbci	r19, 0xFF	; 255
    18ec:	2c 30       	cpi	r18, 0x0C	; 12
    18ee:	31 05       	cpc	r19, r1
    18f0:	c9 f7       	brne	.-14     	; 0x18e4 <_ZN5BTOBD10initializeEPcP10LCD_Driver+0xc>
    18f2:	ba 01       	movw	r22, r20
    18f4:	22 cf       	rjmp	.-444    	; 0x173a <_ZN5BTOBD10initializeEP10LCD_Driver>
    18f6:	08 95       	ret

000018f8 <_ZN5BTOBD7rcvRespEv>:
    18f8:	3f 92       	push	r3
    18fa:	4f 92       	push	r4
    18fc:	5f 92       	push	r5
    18fe:	6f 92       	push	r6
    1900:	7f 92       	push	r7
    1902:	8f 92       	push	r8
    1904:	9f 92       	push	r9
    1906:	af 92       	push	r10
    1908:	bf 92       	push	r11
    190a:	cf 92       	push	r12
    190c:	df 92       	push	r13
    190e:	ef 92       	push	r14
    1910:	ff 92       	push	r15
    1912:	0f 93       	push	r16
    1914:	1f 93       	push	r17
    1916:	cf 93       	push	r28
    1918:	df 93       	push	r29
    191a:	8c 01       	movw	r16, r24
    191c:	fc 01       	movw	r30, r24
    191e:	e6 59       	subi	r30, 0x96	; 150
    1920:	ff 4f       	sbci	r31, 0xFF	; 255
    1922:	80 81       	ld	r24, Z
    1924:	88 23       	and	r24, r24
    1926:	09 f4       	brne	.+2      	; 0x192a <_ZN5BTOBD7rcvRespEv+0x32>
    1928:	b7 c0       	rjmp	.+366    	; 0x1a98 <_ZN5BTOBD7rcvRespEv+0x1a0>
    192a:	40 2e       	mov	r4, r16
    192c:	51 2e       	mov	r5, r17
    192e:	78 01       	movw	r14, r16
    1930:	28 e6       	ldi	r18, 0x68	; 104
    1932:	e2 0e       	add	r14, r18
    1934:	f1 1c       	adc	r15, r1
    1936:	58 01       	movw	r10, r16
    1938:	39 e6       	ldi	r19, 0x69	; 105
    193a:	a3 0e       	add	r10, r19
    193c:	b1 1c       	adc	r11, r1
    193e:	48 01       	movw	r8, r16
    1940:	86 e6       	ldi	r24, 0x66	; 102
    1942:	88 0e       	add	r8, r24
    1944:	91 1c       	adc	r9, r1
    1946:	68 01       	movw	r12, r16
    1948:	e7 e6       	ldi	r30, 0x67	; 103
    194a:	ce 0e       	add	r12, r30
    194c:	d1 1c       	adc	r13, r1
    194e:	e8 01       	movw	r28, r16
    1950:	c6 59       	subi	r28, 0x96	; 150
    1952:	df 4f       	sbci	r29, 0xFF	; 255
    1954:	84 2d       	mov	r24, r4
    1956:	95 2d       	mov	r25, r5
    1958:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    195c:	84 2d       	mov	r24, r4
    195e:	95 2d       	mov	r25, r5
    1960:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    1964:	84 2d       	mov	r24, r4
    1966:	95 2d       	mov	r25, r5
    1968:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    196c:	84 2d       	mov	r24, r4
    196e:	95 2d       	mov	r25, r5
    1970:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    1974:	78 2e       	mov	r7, r24
    1976:	84 2d       	mov	r24, r4
    1978:	95 2d       	mov	r25, r5
    197a:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    197e:	68 2e       	mov	r6, r24
    1980:	84 2d       	mov	r24, r4
    1982:	95 2d       	mov	r25, r5
    1984:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    1988:	f7 01       	movw	r30, r14
    198a:	80 81       	ld	r24, Z
    198c:	87 11       	cpse	r24, r7
    198e:	04 c0       	rjmp	.+8      	; 0x1998 <_ZN5BTOBD7rcvRespEv+0xa0>
    1990:	f5 01       	movw	r30, r10
    1992:	80 81       	ld	r24, Z
    1994:	86 15       	cp	r24, r6
    1996:	71 f0       	breq	.+28     	; 0x19b4 <_ZN5BTOBD7rcvRespEv+0xbc>
    1998:	84 2d       	mov	r24, r4
    199a:	95 2d       	mov	r25, r5
    199c:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    19a0:	8e 33       	cpi	r24, 0x3E	; 62
    19a2:	09 f4       	brne	.+2      	; 0x19a6 <_ZN5BTOBD7rcvRespEv+0xae>
    19a4:	70 c0       	rjmp	.+224    	; 0x1a86 <_ZN5BTOBD7rcvRespEv+0x18e>
    19a6:	84 2d       	mov	r24, r4
    19a8:	95 2d       	mov	r25, r5
    19aa:	0e 94 5a 3b 	call	0x76b4	; 0x76b4 <_ZN10UartDriver9rxIsEmptyEv>
    19ae:	88 23       	and	r24, r24
    19b0:	99 f3       	breq	.-26     	; 0x1998 <_ZN5BTOBD7rcvRespEv+0xa0>
    19b2:	69 c0       	rjmp	.+210    	; 0x1a86 <_ZN5BTOBD7rcvRespEv+0x18e>
    19b4:	f4 01       	movw	r30, r8
    19b6:	20 81       	ld	r18, Z
    19b8:	f6 01       	movw	r30, r12
    19ba:	40 81       	ld	r20, Z
    19bc:	30 e0       	ldi	r19, 0x00	; 0
    19be:	84 2f       	mov	r24, r20
    19c0:	99 27       	eor	r25, r25
    19c2:	87 fd       	sbrc	r24, 7
    19c4:	90 95       	com	r25
    19c6:	28 17       	cp	r18, r24
    19c8:	39 07       	cpc	r19, r25
    19ca:	09 f4       	brne	.+2      	; 0x19ce <_ZN5BTOBD7rcvRespEv+0xd6>
    19cc:	5c c0       	rjmp	.+184    	; 0x1a86 <_ZN5BTOBD7rcvRespEv+0x18e>
    19ce:	f8 01       	movw	r30, r16
    19d0:	e4 0f       	add	r30, r20
    19d2:	f1 1d       	adc	r31, r1
    19d4:	65 a8       	ldd	r6, Z+53	; 0x35
    19d6:	71 2c       	mov	r7, r1
    19d8:	80 a5       	ldd	r24, Z+40	; 0x28
    19da:	93 01       	movw	r18, r6
    19dc:	28 0f       	add	r18, r24
    19de:	31 1d       	adc	r19, r1
    19e0:	62 16       	cp	r6, r18
    19e2:	73 06       	cpc	r7, r19
    19e4:	64 f5       	brge	.+88     	; 0x1a3e <_ZN5BTOBD7rcvRespEv+0x146>
    19e6:	31 2c       	mov	r3, r1
    19e8:	84 2d       	mov	r24, r4
    19ea:	95 2d       	mov	r25, r5
    19ec:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    19f0:	80 32       	cpi	r24, 0x20	; 32
    19f2:	21 f4       	brne	.+8      	; 0x19fc <_ZN5BTOBD7rcvRespEv+0x104>
    19f4:	31 e0       	ldi	r19, 0x01	; 1
    19f6:	63 1a       	sub	r6, r19
    19f8:	71 08       	sbc	r7, r1
    19fa:	10 c0       	rjmp	.+32     	; 0x1a1c <_ZN5BTOBD7rcvRespEv+0x124>
    19fc:	f8 01       	movw	r30, r16
    19fe:	e6 0d       	add	r30, r6
    1a00:	f7 1d       	adc	r31, r7
    1a02:	ea 5b       	subi	r30, 0xBA	; 186
    1a04:	ff 4f       	sbci	r31, 0xFF	; 255
    1a06:	90 81       	ld	r25, Z
    1a08:	98 13       	cpse	r25, r24
    1a0a:	02 c0       	rjmp	.+4      	; 0x1a10 <_ZN5BTOBD7rcvRespEv+0x118>
    1a0c:	33 94       	inc	r3
    1a0e:	06 c0       	rjmp	.+12     	; 0x1a1c <_ZN5BTOBD7rcvRespEv+0x124>
    1a10:	f8 01       	movw	r30, r16
    1a12:	e6 0d       	add	r30, r6
    1a14:	f7 1d       	adc	r31, r7
    1a16:	ea 5b       	subi	r30, 0xBA	; 186
    1a18:	ff 4f       	sbci	r31, 0xFF	; 255
    1a1a:	80 83       	st	Z, r24
    1a1c:	8f ef       	ldi	r24, 0xFF	; 255
    1a1e:	68 1a       	sub	r6, r24
    1a20:	78 0a       	sbc	r7, r24
    1a22:	f6 01       	movw	r30, r12
    1a24:	80 81       	ld	r24, Z
    1a26:	f8 01       	movw	r30, r16
    1a28:	e8 0f       	add	r30, r24
    1a2a:	f1 1d       	adc	r31, r1
    1a2c:	25 a9       	ldd	r18, Z+53	; 0x35
    1a2e:	80 a5       	ldd	r24, Z+40	; 0x28
    1a30:	90 e0       	ldi	r25, 0x00	; 0
    1a32:	82 0f       	add	r24, r18
    1a34:	91 1d       	adc	r25, r1
    1a36:	68 16       	cp	r6, r24
    1a38:	79 06       	cpc	r7, r25
    1a3a:	b4 f2       	brlt	.-84     	; 0x19e8 <_ZN5BTOBD7rcvRespEv+0xf0>
    1a3c:	01 c0       	rjmp	.+2      	; 0x1a40 <_ZN5BTOBD7rcvRespEv+0x148>
    1a3e:	31 2c       	mov	r3, r1
    1a40:	84 2d       	mov	r24, r4
    1a42:	95 2d       	mov	r25, r5
    1a44:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    1a48:	8e 33       	cpi	r24, 0x3E	; 62
    1a4a:	31 f0       	breq	.+12     	; 0x1a58 <_ZN5BTOBD7rcvRespEv+0x160>
    1a4c:	84 2d       	mov	r24, r4
    1a4e:	95 2d       	mov	r25, r5
    1a50:	0e 94 5a 3b 	call	0x76b4	; 0x76b4 <_ZN10UartDriver9rxIsEmptyEv>
    1a54:	88 23       	and	r24, r24
    1a56:	a1 f3       	breq	.-24     	; 0x1a40 <_ZN5BTOBD7rcvRespEv+0x148>
    1a58:	f6 01       	movw	r30, r12
    1a5a:	80 81       	ld	r24, Z
    1a5c:	f8 01       	movw	r30, r16
    1a5e:	e8 0f       	add	r30, r24
    1a60:	f1 1d       	adc	r31, r1
    1a62:	90 a5       	ldd	r25, Z+40	; 0x28
    1a64:	93 15       	cp	r25, r3
    1a66:	79 f0       	breq	.+30     	; 0x1a86 <_ZN5BTOBD7rcvRespEv+0x18e>
    1a68:	21 e0       	ldi	r18, 0x01	; 1
    1a6a:	30 e0       	ldi	r19, 0x00	; 0
    1a6c:	02 c0       	rjmp	.+4      	; 0x1a72 <_ZN5BTOBD7rcvRespEv+0x17a>
    1a6e:	22 0f       	add	r18, r18
    1a70:	33 1f       	adc	r19, r19
    1a72:	8a 95       	dec	r24
    1a74:	e2 f7       	brpl	.-8      	; 0x1a6e <_ZN5BTOBD7rcvRespEv+0x176>
    1a76:	c9 01       	movw	r24, r18
    1a78:	f8 01       	movw	r30, r16
    1a7a:	26 a1       	ldd	r18, Z+38	; 0x26
    1a7c:	37 a1       	ldd	r19, Z+39	; 0x27
    1a7e:	82 2b       	or	r24, r18
    1a80:	93 2b       	or	r25, r19
    1a82:	86 a3       	std	Z+38, r24	; 0x26
    1a84:	97 a3       	std	Z+39, r25	; 0x27
    1a86:	f8 94       	cli
    1a88:	88 81       	ld	r24, Y
    1a8a:	81 50       	subi	r24, 0x01	; 1
    1a8c:	88 83       	st	Y, r24
    1a8e:	78 94       	sei
    1a90:	88 81       	ld	r24, Y
    1a92:	81 11       	cpse	r24, r1
    1a94:	5f cf       	rjmp	.-322    	; 0x1954 <_ZN5BTOBD7rcvRespEv+0x5c>
    1a96:	02 c0       	rjmp	.+4      	; 0x1a9c <_ZN5BTOBD7rcvRespEv+0x1a4>
    1a98:	80 e0       	ldi	r24, 0x00	; 0
    1a9a:	01 c0       	rjmp	.+2      	; 0x1a9e <_ZN5BTOBD7rcvRespEv+0x1a6>
    1a9c:	81 e0       	ldi	r24, 0x01	; 1
    1a9e:	df 91       	pop	r29
    1aa0:	cf 91       	pop	r28
    1aa2:	1f 91       	pop	r17
    1aa4:	0f 91       	pop	r16
    1aa6:	ff 90       	pop	r15
    1aa8:	ef 90       	pop	r14
    1aaa:	df 90       	pop	r13
    1aac:	cf 90       	pop	r12
    1aae:	bf 90       	pop	r11
    1ab0:	af 90       	pop	r10
    1ab2:	9f 90       	pop	r9
    1ab4:	8f 90       	pop	r8
    1ab6:	7f 90       	pop	r7
    1ab8:	6f 90       	pop	r6
    1aba:	5f 90       	pop	r5
    1abc:	4f 90       	pop	r4
    1abe:	3f 90       	pop	r3
    1ac0:	08 95       	ret

00001ac2 <_ZN5BTOBD9getStatusEv>:
    1ac2:	fc 01       	movw	r30, r24
    1ac4:	86 a1       	ldd	r24, Z+38	; 0x26
    1ac6:	97 a1       	ldd	r25, Z+39	; 0x27
    1ac8:	08 95       	ret

00001aca <_ZN5BTOBD11clearStatusEv>:
    1aca:	fc 01       	movw	r30, r24
    1acc:	16 a2       	std	Z+38, r1	; 0x26
    1ace:	17 a2       	std	Z+39, r1	; 0x27
    1ad0:	08 95       	ret

00001ad2 <_ZN5BTOBD7sendCmdEv>:
    1ad2:	0f 93       	push	r16
    1ad4:	1f 93       	push	r17
    1ad6:	cf 93       	push	r28
    1ad8:	df 93       	push	r29
    1ada:	ec 01       	movw	r28, r24
    1adc:	8c 01       	movw	r16, r24
    1ade:	05 59       	subi	r16, 0x95	; 149
    1ae0:	1f 4f       	sbci	r17, 0xFF	; 255
    1ae2:	f8 01       	movw	r30, r16
    1ae4:	80 81       	ld	r24, Z
    1ae6:	fe 01       	movw	r30, r28
    1ae8:	e8 0f       	add	r30, r24
    1aea:	f1 1d       	adc	r31, r1
    1aec:	87 fd       	sbrc	r24, 7
    1aee:	fa 95       	dec	r31
    1af0:	ee 5b       	subi	r30, 0xBE	; 190
    1af2:	ff 4f       	sbci	r31, 0xFF	; 255
    1af4:	60 81       	ld	r22, Z
    1af6:	ce 01       	movw	r24, r28
    1af8:	99 da       	rcall	.-2766   	; 0x102c <_ZN5BTOBD7sendCmdEN7OBDCMDS3CMDE>
    1afa:	f8 01       	movw	r30, r16
    1afc:	80 81       	ld	r24, Z
    1afe:	8f 5f       	subi	r24, 0xFF	; 255
    1b00:	84 30       	cpi	r24, 0x04	; 4
    1b02:	11 f0       	breq	.+4      	; 0x1b08 <_ZN5BTOBD7sendCmdEv+0x36>
    1b04:	80 83       	st	Z, r24
    1b06:	03 c0       	rjmp	.+6      	; 0x1b0e <_ZN5BTOBD7sendCmdEv+0x3c>
    1b08:	c5 59       	subi	r28, 0x95	; 149
    1b0a:	df 4f       	sbci	r29, 0xFF	; 255
    1b0c:	18 82       	st	Y, r1
    1b0e:	df 91       	pop	r29
    1b10:	cf 91       	pop	r28
    1b12:	1f 91       	pop	r17
    1b14:	0f 91       	pop	r16
    1b16:	08 95       	ret

00001b18 <_ZN5BTOBD9getRecentEN7OBDCMDS3CMDE>:

CBUFFER BTOBD::getRecent(OBDCMDS::CMD cmd) {
	CBUFFER returnval;
	uint8_t cint = offsets[cmd];
    1b18:	fc 01       	movw	r30, r24
    1b1a:	e6 0f       	add	r30, r22
    1b1c:	f1 1d       	adc	r31, r1
    1b1e:	25 a9       	ldd	r18, Z+53	; 0x35
	cmdlock = (int8_t) cmd;
    1b20:	dc 01       	movw	r26, r24
    1b22:	aa 59       	subi	r26, 0x9A	; 154
    1b24:	bf 4f       	sbci	r27, 0xFF	; 255
    1b26:	6c 93       	st	X, r22
	returnval.au = buffer[cint++];
    1b28:	dc 01       	movw	r26, r24
    1b2a:	a2 0f       	add	r26, r18
    1b2c:	b1 1d       	adc	r27, r1
    1b2e:	aa 5b       	subi	r26, 0xBA	; 186
    1b30:	bf 4f       	sbci	r27, 0xFF	; 255
    1b32:	6c 91       	ld	r22, X
    1b34:	41 e0       	ldi	r20, 0x01	; 1
    1b36:	42 0f       	add	r20, r18
	returnval.al = buffer[cint++];
    1b38:	dc 01       	movw	r26, r24
    1b3a:	a4 0f       	add	r26, r20
    1b3c:	b1 1d       	adc	r27, r1
    1b3e:	aa 5b       	subi	r26, 0xBA	; 186
    1b40:	bf 4f       	sbci	r27, 0xFF	; 255
    1b42:	7c 91       	ld	r23, X
	if (sizes[cmd] == 4) {
    1b44:	40 a5       	ldd	r20, Z+40	; 0x28
    1b46:	44 30       	cpi	r20, 0x04	; 4
    1b48:	79 f4       	brne	.+30     	; 0x1b68 <_ZN5BTOBD9getRecentEN7OBDCMDS3CMDE+0x50>
CBUFFER BTOBD::getRecent(OBDCMDS::CMD cmd) {
	CBUFFER returnval;
	uint8_t cint = offsets[cmd];
	cmdlock = (int8_t) cmd;
	returnval.au = buffer[cint++];
	returnval.al = buffer[cint++];
    1b4a:	32 e0       	ldi	r19, 0x02	; 2
    1b4c:	32 0f       	add	r19, r18
	if (sizes[cmd] == 4) {
		returnval.bu = buffer[cint++];
    1b4e:	fc 01       	movw	r30, r24
    1b50:	e3 0f       	add	r30, r19
    1b52:	f1 1d       	adc	r31, r1
    1b54:	ea 5b       	subi	r30, 0xBA	; 186
    1b56:	ff 4f       	sbci	r31, 0xFF	; 255
    1b58:	30 81       	ld	r19, Z
    1b5a:	2d 5f       	subi	r18, 0xFD	; 253
		returnval.bl = buffer[cint++];
    1b5c:	fc 01       	movw	r30, r24
    1b5e:	e2 0f       	add	r30, r18
    1b60:	f1 1d       	adc	r31, r1
    1b62:	ea 5b       	subi	r30, 0xBA	; 186
    1b64:	ff 4f       	sbci	r31, 0xFF	; 255
    1b66:	50 81       	ld	r21, Z
	}
	cmdlock = -1;
    1b68:	fc 01       	movw	r30, r24
    1b6a:	ea 59       	subi	r30, 0x9A	; 154
    1b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b6e:	2f ef       	ldi	r18, 0xFF	; 255
    1b70:	20 83       	st	Z, r18
	return returnval;
    1b72:	83 2f       	mov	r24, r19
    1b74:	95 2f       	mov	r25, r21
    1b76:	08 95       	ret

00001b78 <_ZN9ByteArrayC1Ei>:
	this->_size = size;
	array = (char *) malloc(sizeof(char) * size);
 }

 ByteArray::~ByteArray() {
	free(array);
    1b78:	cf 93       	push	r28
    1b7a:	df 93       	push	r29
    1b7c:	ec 01       	movw	r28, r24
    1b7e:	cb 01       	movw	r24, r22
    1b80:	68 83       	st	Y, r22
    1b82:	79 83       	std	Y+1, r23	; 0x01
    1b84:	0e 94 d5 3c 	call	0x79aa	; 0x79aa <malloc>
    1b88:	8a 83       	std	Y+2, r24	; 0x02
    1b8a:	9b 83       	std	Y+3, r25	; 0x03
    1b8c:	df 91       	pop	r29
    1b8e:	cf 91       	pop	r28
    1b90:	08 95       	ret

00001b92 <_ZN9ByteArray2atEi>:
 }

char ByteArray::at(int i) {
	return array[i];
    1b92:	fc 01       	movw	r30, r24
    1b94:	82 81       	ldd	r24, Z+2	; 0x02
    1b96:	93 81       	ldd	r25, Z+3	; 0x03
    1b98:	fc 01       	movw	r30, r24
    1b9a:	e6 0f       	add	r30, r22
    1b9c:	f7 1f       	adc	r31, r23
 }
    1b9e:	80 81       	ld	r24, Z
    1ba0:	08 95       	ret

00001ba2 <_ZN9ByteArray3setEic>:
 void ByteArray::set(int i, char c) {
	array[i] = c;
    1ba2:	fc 01       	movw	r30, r24
    1ba4:	82 81       	ldd	r24, Z+2	; 0x02
    1ba6:	93 81       	ldd	r25, Z+3	; 0x03
    1ba8:	fc 01       	movw	r30, r24
    1baa:	e6 0f       	add	r30, r22
    1bac:	f7 1f       	adc	r31, r23
    1bae:	40 83       	st	Z, r20
    1bb0:	08 95       	ret

00001bb2 <_ZN9ByteQueueC1Ei>:
 *  Author: ee63pc3-user
 */ 

 #include "ByteQueue.h"

 ByteQueue::ByteQueue(int bufferSize) : queue(bufferSize){
    1bb2:	0f 93       	push	r16
    1bb4:	1f 93       	push	r17
    1bb6:	cf 93       	push	r28
    1bb8:	df 93       	push	r29
    1bba:	ec 01       	movw	r28, r24
    1bbc:	8b 01       	movw	r16, r22
    1bbe:	08 96       	adiw	r24, 0x08	; 8
    1bc0:	db df       	rcall	.-74     	; 0x1b78 <_ZN9ByteArrayC1Ei>
	max_size = bufferSize;
    1bc2:	08 83       	st	Y, r16
    1bc4:	19 83       	std	Y+1, r17	; 0x01
	wptr = 0;
    1bc6:	1c 82       	std	Y+4, r1	; 0x04
    1bc8:	1d 82       	std	Y+5, r1	; 0x05
	rptr = 0;
    1bca:	1e 82       	std	Y+6, r1	; 0x06
    1bcc:	1f 82       	std	Y+7, r1	; 0x07
	numitems = 0;
    1bce:	1a 82       	std	Y+2, r1	; 0x02
    1bd0:	1b 82       	std	Y+3, r1	; 0x03
 }
    1bd2:	df 91       	pop	r29
    1bd4:	cf 91       	pop	r28
    1bd6:	1f 91       	pop	r17
    1bd8:	0f 91       	pop	r16
    1bda:	08 95       	ret

00001bdc <_ZN9ByteQueue7enqueueEc>:



 void ByteQueue::enqueue(char element){
    1bdc:	cf 93       	push	r28
    1bde:	df 93       	push	r29
    1be0:	ec 01       	movw	r28, r24
	 	numitems--;
 	}
	return element;
 }

 bool ByteQueue::isFull() {return numitems == max_size;}
    1be2:	2a 81       	ldd	r18, Y+2	; 0x02
    1be4:	3b 81       	ldd	r19, Y+3	; 0x03
 }



 void ByteQueue::enqueue(char element){
	if (!isFull()) {
    1be6:	88 81       	ld	r24, Y
    1be8:	99 81       	ldd	r25, Y+1	; 0x01
    1bea:	28 17       	cp	r18, r24
    1bec:	39 07       	cpc	r19, r25
    1bee:	e1 f0       	breq	.+56     	; 0x1c28 <_ZN9ByteQueue7enqueueEc+0x4c>
		queue.set(wptr, element);
    1bf0:	8c 81       	ldd	r24, Y+4	; 0x04
    1bf2:	9d 81       	ldd	r25, Y+5	; 0x05
    1bf4:	46 2f       	mov	r20, r22
    1bf6:	bc 01       	movw	r22, r24
    1bf8:	ce 01       	movw	r24, r28
    1bfa:	08 96       	adiw	r24, 0x08	; 8
    1bfc:	d2 df       	rcall	.-92     	; 0x1ba2 <_ZN9ByteArray3setEic>
		//Took this out because modulus is very expensive on micro
		//(Since we're incrementing by one every time, we don't have to deal with any cases where our
		// pointer is over 2*max_size - 1, this should be more efficient)
		//wptr = (wptr + 1) % (max_size-1);
		if ((++wptr) >= max_size) wptr = wptr - max_size;
    1bfe:	8c 81       	ldd	r24, Y+4	; 0x04
    1c00:	9d 81       	ldd	r25, Y+5	; 0x05
    1c02:	01 96       	adiw	r24, 0x01	; 1
    1c04:	8c 83       	std	Y+4, r24	; 0x04
    1c06:	9d 83       	std	Y+5, r25	; 0x05
    1c08:	28 81       	ld	r18, Y
    1c0a:	39 81       	ldd	r19, Y+1	; 0x01
    1c0c:	82 17       	cp	r24, r18
    1c0e:	93 07       	cpc	r25, r19
    1c10:	34 f0       	brlt	.+12     	; 0x1c1e <_ZN9ByteQueue7enqueueEc+0x42>
    1c12:	8c 81       	ldd	r24, Y+4	; 0x04
    1c14:	9d 81       	ldd	r25, Y+5	; 0x05
    1c16:	82 1b       	sub	r24, r18
    1c18:	93 0b       	sbc	r25, r19
    1c1a:	8c 83       	std	Y+4, r24	; 0x04
    1c1c:	9d 83       	std	Y+5, r25	; 0x05
		numitems++;
    1c1e:	8a 81       	ldd	r24, Y+2	; 0x02
    1c20:	9b 81       	ldd	r25, Y+3	; 0x03
    1c22:	01 96       	adiw	r24, 0x01	; 1
    1c24:	8a 83       	std	Y+2, r24	; 0x02
    1c26:	9b 83       	std	Y+3, r25	; 0x03
	}
 }
    1c28:	df 91       	pop	r29
    1c2a:	cf 91       	pop	r28
    1c2c:	08 95       	ret

00001c2e <_ZN9ByteQueue7dequeueEv>:

 char ByteQueue::dequeue(){
    1c2e:	cf 93       	push	r28
    1c30:	df 93       	push	r29
    1c32:	ec 01       	movw	r28, r24
 	}
	return element;
 }

 bool ByteQueue::isFull() {return numitems == max_size;}
 bool ByteQueue::isEmpty(){return numitems == 0;}
    1c34:	8a 81       	ldd	r24, Y+2	; 0x02
    1c36:	9b 81       	ldd	r25, Y+3	; 0x03
	}
 }

 char ByteQueue::dequeue(){
 	char element = '\0';
	if (!isEmpty()) {
    1c38:	89 2b       	or	r24, r25
    1c3a:	e9 f0       	breq	.+58     	; 0x1c76 <_ZN9ByteQueue7dequeueEv+0x48>
	 	element = queue.at(rptr);
    1c3c:	6e 81       	ldd	r22, Y+6	; 0x06
    1c3e:	7f 81       	ldd	r23, Y+7	; 0x07
    1c40:	ce 01       	movw	r24, r28
    1c42:	08 96       	adiw	r24, 0x08	; 8
    1c44:	a6 df       	rcall	.-180    	; 0x1b92 <_ZN9ByteArray2atEi>
		//Read comment in enqueue()
	 	//rptr = (rptr + 1) % (max_size-1)
		if ((++rptr) >= max_size) rptr = rptr - max_size;
    1c46:	2e 81       	ldd	r18, Y+6	; 0x06
    1c48:	3f 81       	ldd	r19, Y+7	; 0x07
    1c4a:	2f 5f       	subi	r18, 0xFF	; 255
    1c4c:	3f 4f       	sbci	r19, 0xFF	; 255
    1c4e:	2e 83       	std	Y+6, r18	; 0x06
    1c50:	3f 83       	std	Y+7, r19	; 0x07
    1c52:	48 81       	ld	r20, Y
    1c54:	59 81       	ldd	r21, Y+1	; 0x01
    1c56:	24 17       	cp	r18, r20
    1c58:	35 07       	cpc	r19, r21
    1c5a:	34 f0       	brlt	.+12     	; 0x1c68 <_ZN9ByteQueue7dequeueEv+0x3a>
    1c5c:	2e 81       	ldd	r18, Y+6	; 0x06
    1c5e:	3f 81       	ldd	r19, Y+7	; 0x07
    1c60:	24 1b       	sub	r18, r20
    1c62:	35 0b       	sbc	r19, r21
    1c64:	2e 83       	std	Y+6, r18	; 0x06
    1c66:	3f 83       	std	Y+7, r19	; 0x07
	 	numitems--;
    1c68:	2a 81       	ldd	r18, Y+2	; 0x02
    1c6a:	3b 81       	ldd	r19, Y+3	; 0x03
    1c6c:	21 50       	subi	r18, 0x01	; 1
    1c6e:	31 09       	sbc	r19, r1
    1c70:	2a 83       	std	Y+2, r18	; 0x02
    1c72:	3b 83       	std	Y+3, r19	; 0x03
    1c74:	01 c0       	rjmp	.+2      	; 0x1c78 <_ZN9ByteQueue7dequeueEv+0x4a>
		numitems++;
	}
 }

 char ByteQueue::dequeue(){
 	char element = '\0';
    1c76:	80 e0       	ldi	r24, 0x00	; 0
	 	//rptr = (rptr + 1) % (max_size-1)
		if ((++rptr) >= max_size) rptr = rptr - max_size;
	 	numitems--;
 	}
	return element;
 }
    1c78:	df 91       	pop	r29
    1c7a:	cf 91       	pop	r28
    1c7c:	08 95       	ret

00001c7e <_ZN9ByteQueue6isFullEv>:

 bool ByteQueue::isFull() {return numitems == max_size;}
    1c7e:	fc 01       	movw	r30, r24
    1c80:	42 81       	ldd	r20, Z+2	; 0x02
    1c82:	53 81       	ldd	r21, Z+3	; 0x03
    1c84:	81 e0       	ldi	r24, 0x01	; 1
    1c86:	20 81       	ld	r18, Z
    1c88:	31 81       	ldd	r19, Z+1	; 0x01
    1c8a:	42 17       	cp	r20, r18
    1c8c:	53 07       	cpc	r21, r19
    1c8e:	09 f0       	breq	.+2      	; 0x1c92 <_ZN9ByteQueue6isFullEv+0x14>
    1c90:	80 e0       	ldi	r24, 0x00	; 0
    1c92:	08 95       	ret

00001c94 <_ZN9ByteQueue7isEmptyEv>:
 bool ByteQueue::isEmpty(){return numitems == 0;}
    1c94:	fc 01       	movw	r30, r24
    1c96:	22 81       	ldd	r18, Z+2	; 0x02
    1c98:	33 81       	ldd	r19, Z+3	; 0x03
    1c9a:	81 e0       	ldi	r24, 0x01	; 1
    1c9c:	23 2b       	or	r18, r19
    1c9e:	09 f0       	breq	.+2      	; 0x1ca2 <_ZN9ByteQueue7isEmptyEv+0xe>
    1ca0:	80 e0       	ldi	r24, 0x00	; 0
    1ca2:	08 95       	ret

00001ca4 <mem_cpy>:
		n++;
		if (c == '\n') break;		/* Break on EOL */
	}
	*p = 0;
	return n ? buff : 0;			/* When no data read (eof or error), return with error. */
}
    1ca4:	cf 93       	push	r28
    1ca6:	df 93       	push	r29
    1ca8:	1f 92       	push	r1
    1caa:	1f 92       	push	r1
    1cac:	cd b7       	in	r28, 0x3d	; 61
    1cae:	de b7       	in	r29, 0x3e	; 62
    1cb0:	fc 01       	movw	r30, r24
    1cb2:	db 01       	movw	r26, r22
    1cb4:	49 83       	std	Y+1, r20	; 0x01
    1cb6:	5a 83       	std	Y+2, r21	; 0x02
    1cb8:	89 81       	ldd	r24, Y+1	; 0x01
    1cba:	9a 81       	ldd	r25, Y+2	; 0x02
    1cbc:	9c 01       	movw	r18, r24
    1cbe:	21 50       	subi	r18, 0x01	; 1
    1cc0:	31 09       	sbc	r19, r1
    1cc2:	29 83       	std	Y+1, r18	; 0x01
    1cc4:	3a 83       	std	Y+2, r19	; 0x02
    1cc6:	89 2b       	or	r24, r25
    1cc8:	a1 f0       	breq	.+40     	; 0x1cf2 <mem_cpy+0x4e>
    1cca:	af 01       	movw	r20, r30
    1ccc:	4f 5f       	subi	r20, 0xFF	; 255
    1cce:	5f 4f       	sbci	r21, 0xFF	; 255
    1cd0:	bd 01       	movw	r22, r26
    1cd2:	6f 5f       	subi	r22, 0xFF	; 255
    1cd4:	7f 4f       	sbci	r23, 0xFF	; 255
    1cd6:	8c 91       	ld	r24, X
    1cd8:	80 83       	st	Z, r24
    1cda:	89 81       	ldd	r24, Y+1	; 0x01
    1cdc:	9a 81       	ldd	r25, Y+2	; 0x02
    1cde:	9c 01       	movw	r18, r24
    1ce0:	21 50       	subi	r18, 0x01	; 1
    1ce2:	31 09       	sbc	r19, r1
    1ce4:	29 83       	std	Y+1, r18	; 0x01
    1ce6:	3a 83       	std	Y+2, r19	; 0x02
    1ce8:	89 2b       	or	r24, r25
    1cea:	19 f0       	breq	.+6      	; 0x1cf2 <mem_cpy+0x4e>
    1cec:	db 01       	movw	r26, r22
    1cee:	fa 01       	movw	r30, r20
    1cf0:	ec cf       	rjmp	.-40     	; 0x1cca <mem_cpy+0x26>
    1cf2:	0f 90       	pop	r0
    1cf4:	0f 90       	pop	r0
    1cf6:	df 91       	pop	r29
    1cf8:	cf 91       	pop	r28
    1cfa:	08 95       	ret

00001cfc <mem_set>:
    1cfc:	cf 93       	push	r28
    1cfe:	df 93       	push	r29
    1d00:	1f 92       	push	r1
    1d02:	1f 92       	push	r1
    1d04:	cd b7       	in	r28, 0x3d	; 61
    1d06:	de b7       	in	r29, 0x3e	; 62
    1d08:	fc 01       	movw	r30, r24
    1d0a:	49 83       	std	Y+1, r20	; 0x01
    1d0c:	5a 83       	std	Y+2, r21	; 0x02
    1d0e:	89 81       	ldd	r24, Y+1	; 0x01
    1d10:	9a 81       	ldd	r25, Y+2	; 0x02
    1d12:	9c 01       	movw	r18, r24
    1d14:	21 50       	subi	r18, 0x01	; 1
    1d16:	31 09       	sbc	r19, r1
    1d18:	29 83       	std	Y+1, r18	; 0x01
    1d1a:	3a 83       	std	Y+2, r19	; 0x02
    1d1c:	89 2b       	or	r24, r25
    1d1e:	79 f0       	breq	.+30     	; 0x1d3e <mem_set+0x42>
    1d20:	af 01       	movw	r20, r30
    1d22:	4f 5f       	subi	r20, 0xFF	; 255
    1d24:	5f 4f       	sbci	r21, 0xFF	; 255
    1d26:	60 83       	st	Z, r22
    1d28:	89 81       	ldd	r24, Y+1	; 0x01
    1d2a:	9a 81       	ldd	r25, Y+2	; 0x02
    1d2c:	9c 01       	movw	r18, r24
    1d2e:	21 50       	subi	r18, 0x01	; 1
    1d30:	31 09       	sbc	r19, r1
    1d32:	29 83       	std	Y+1, r18	; 0x01
    1d34:	3a 83       	std	Y+2, r19	; 0x02
    1d36:	89 2b       	or	r24, r25
    1d38:	11 f0       	breq	.+4      	; 0x1d3e <mem_set+0x42>
    1d3a:	fa 01       	movw	r30, r20
    1d3c:	f1 cf       	rjmp	.-30     	; 0x1d20 <mem_set+0x24>
    1d3e:	0f 90       	pop	r0
    1d40:	0f 90       	pop	r0
    1d42:	df 91       	pop	r29
    1d44:	cf 91       	pop	r28
    1d46:	08 95       	ret

00001d48 <ld_clust>:
    1d48:	cf 93       	push	r28
    1d4a:	df 93       	push	r29
    1d4c:	00 d0       	rcall	.+0      	; 0x1d4e <ld_clust+0x6>
    1d4e:	1f 92       	push	r1
    1d50:	cd b7       	in	r28, 0x3d	; 61
    1d52:	de b7       	in	r29, 0x3e	; 62
    1d54:	fb 01       	movw	r30, r22
    1d56:	23 8d       	ldd	r18, Z+27	; 0x1b
    1d58:	42 8d       	ldd	r20, Z+26	; 0x1a
    1d5a:	50 e0       	ldi	r21, 0x00	; 0
    1d5c:	52 2b       	or	r21, r18
    1d5e:	60 e0       	ldi	r22, 0x00	; 0
    1d60:	70 e0       	ldi	r23, 0x00	; 0
    1d62:	49 83       	std	Y+1, r20	; 0x01
    1d64:	5a 83       	std	Y+2, r21	; 0x02
    1d66:	6b 83       	std	Y+3, r22	; 0x03
    1d68:	7c 83       	std	Y+4, r23	; 0x04
    1d6a:	dc 01       	movw	r26, r24
    1d6c:	8c 91       	ld	r24, X
    1d6e:	83 30       	cpi	r24, 0x03	; 3
    1d70:	a9 f4       	brne	.+42     	; 0x1d9c <ld_clust+0x54>
    1d72:	25 89       	ldd	r18, Z+21	; 0x15
    1d74:	84 89       	ldd	r24, Z+20	; 0x14
    1d76:	49 81       	ldd	r20, Y+1	; 0x01
    1d78:	5a 81       	ldd	r21, Y+2	; 0x02
    1d7a:	6b 81       	ldd	r22, Y+3	; 0x03
    1d7c:	7c 81       	ldd	r23, Y+4	; 0x04
    1d7e:	90 e0       	ldi	r25, 0x00	; 0
    1d80:	92 2b       	or	r25, r18
    1d82:	a0 e0       	ldi	r26, 0x00	; 0
    1d84:	b0 e0       	ldi	r27, 0x00	; 0
    1d86:	dc 01       	movw	r26, r24
    1d88:	99 27       	eor	r25, r25
    1d8a:	88 27       	eor	r24, r24
    1d8c:	84 2b       	or	r24, r20
    1d8e:	95 2b       	or	r25, r21
    1d90:	a6 2b       	or	r26, r22
    1d92:	b7 2b       	or	r27, r23
    1d94:	89 83       	std	Y+1, r24	; 0x01
    1d96:	9a 83       	std	Y+2, r25	; 0x02
    1d98:	ab 83       	std	Y+3, r26	; 0x03
    1d9a:	bc 83       	std	Y+4, r27	; 0x04
    1d9c:	69 81       	ldd	r22, Y+1	; 0x01
    1d9e:	7a 81       	ldd	r23, Y+2	; 0x02
    1da0:	8b 81       	ldd	r24, Y+3	; 0x03
    1da2:	9c 81       	ldd	r25, Y+4	; 0x04
    1da4:	24 96       	adiw	r28, 0x04	; 4
    1da6:	cd bf       	out	0x3d, r28	; 61
    1da8:	de bf       	out	0x3e, r29	; 62
    1daa:	df 91       	pop	r29
    1dac:	cf 91       	pop	r28
    1dae:	08 95       	ret

00001db0 <st_clust>:
    1db0:	cf 93       	push	r28
    1db2:	df 93       	push	r29
    1db4:	00 d0       	rcall	.+0      	; 0x1db6 <st_clust+0x6>
    1db6:	1f 92       	push	r1
    1db8:	cd b7       	in	r28, 0x3d	; 61
    1dba:	de b7       	in	r29, 0x3e	; 62
    1dbc:	fc 01       	movw	r30, r24
    1dbe:	49 83       	std	Y+1, r20	; 0x01
    1dc0:	5a 83       	std	Y+2, r21	; 0x02
    1dc2:	6b 83       	std	Y+3, r22	; 0x03
    1dc4:	7c 83       	std	Y+4, r23	; 0x04
    1dc6:	49 81       	ldd	r20, Y+1	; 0x01
    1dc8:	5a 81       	ldd	r21, Y+2	; 0x02
    1dca:	6b 81       	ldd	r22, Y+3	; 0x03
    1dcc:	7c 81       	ldd	r23, Y+4	; 0x04
    1dce:	42 8f       	std	Z+26, r20	; 0x1a
    1dd0:	49 81       	ldd	r20, Y+1	; 0x01
    1dd2:	5a 81       	ldd	r21, Y+2	; 0x02
    1dd4:	6b 81       	ldd	r22, Y+3	; 0x03
    1dd6:	7c 81       	ldd	r23, Y+4	; 0x04
    1dd8:	45 2f       	mov	r20, r21
    1dda:	55 27       	eor	r21, r21
    1ddc:	43 8f       	std	Z+27, r20	; 0x1b
    1dde:	49 81       	ldd	r20, Y+1	; 0x01
    1de0:	5a 81       	ldd	r21, Y+2	; 0x02
    1de2:	6b 81       	ldd	r22, Y+3	; 0x03
    1de4:	7c 81       	ldd	r23, Y+4	; 0x04
    1de6:	ab 01       	movw	r20, r22
    1de8:	66 27       	eor	r22, r22
    1dea:	77 27       	eor	r23, r23
    1dec:	44 8b       	std	Z+20, r20	; 0x14
    1dee:	49 81       	ldd	r20, Y+1	; 0x01
    1df0:	5a 81       	ldd	r21, Y+2	; 0x02
    1df2:	6b 81       	ldd	r22, Y+3	; 0x03
    1df4:	7c 81       	ldd	r23, Y+4	; 0x04
    1df6:	87 2f       	mov	r24, r23
    1df8:	99 27       	eor	r25, r25
    1dfa:	85 8b       	std	Z+21, r24	; 0x15
    1dfc:	24 96       	adiw	r28, 0x04	; 4
    1dfe:	cd bf       	out	0x3d, r28	; 61
    1e00:	de bf       	out	0x3e, r29	; 62
    1e02:	df 91       	pop	r29
    1e04:	cf 91       	pop	r28
    1e06:	08 95       	ret

00001e08 <get_ldnumber>:
    1e08:	cf 93       	push	r28
    1e0a:	df 93       	push	r29
    1e0c:	1f 92       	push	r1
    1e0e:	1f 92       	push	r1
    1e10:	cd b7       	in	r28, 0x3d	; 61
    1e12:	de b7       	in	r29, 0x3e	; 62
    1e14:	ac 01       	movw	r20, r24
    1e16:	fc 01       	movw	r30, r24
    1e18:	a0 81       	ld	r26, Z
    1e1a:	b1 81       	ldd	r27, Z+1	; 0x01
    1e1c:	10 97       	sbiw	r26, 0x00	; 0
    1e1e:	51 f1       	breq	.+84     	; 0x1e74 <get_ldnumber+0x6c>
    1e20:	8c 91       	ld	r24, X
    1e22:	81 32       	cpi	r24, 0x21	; 33
    1e24:	58 f0       	brcs	.+22     	; 0x1e3c <get_ldnumber+0x34>
    1e26:	8a 33       	cpi	r24, 0x3A	; 58
    1e28:	a1 f1       	breq	.+104    	; 0x1e92 <get_ldnumber+0x8a>
    1e2a:	fd 01       	movw	r30, r26
    1e2c:	31 96       	adiw	r30, 0x01	; 1
    1e2e:	9f 01       	movw	r18, r30
    1e30:	91 91       	ld	r25, Z+
    1e32:	91 32       	cpi	r25, 0x21	; 33
    1e34:	28 f0       	brcs	.+10     	; 0x1e40 <get_ldnumber+0x38>
    1e36:	9a 33       	cpi	r25, 0x3A	; 58
    1e38:	d1 f7       	brne	.-12     	; 0x1e2e <get_ldnumber+0x26>
    1e3a:	04 c0       	rjmp	.+8      	; 0x1e44 <get_ldnumber+0x3c>
    1e3c:	98 2f       	mov	r25, r24
    1e3e:	9d 01       	movw	r18, r26
    1e40:	9a 33       	cpi	r25, 0x3A	; 58
    1e42:	d9 f4       	brne	.+54     	; 0x1e7a <get_ldnumber+0x72>
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	c0 97       	sbiw	r24, 0x30	; 48
    1e48:	89 83       	std	Y+1, r24	; 0x01
    1e4a:	9a 83       	std	Y+2, r25	; 0x02
    1e4c:	89 81       	ldd	r24, Y+1	; 0x01
    1e4e:	9a 81       	ldd	r25, Y+2	; 0x02
    1e50:	0a 97       	sbiw	r24, 0x0a	; 10
    1e52:	b0 f4       	brcc	.+44     	; 0x1e80 <get_ldnumber+0x78>
    1e54:	cd 01       	movw	r24, r26
    1e56:	01 96       	adiw	r24, 0x01	; 1
    1e58:	28 17       	cp	r18, r24
    1e5a:	39 07       	cpc	r19, r25
    1e5c:	a1 f4       	brne	.+40     	; 0x1e86 <get_ldnumber+0x7e>
    1e5e:	89 81       	ldd	r24, Y+1	; 0x01
    1e60:	9a 81       	ldd	r25, Y+2	; 0x02
    1e62:	89 2b       	or	r24, r25
    1e64:	99 f4       	brne	.+38     	; 0x1e8c <get_ldnumber+0x84>
    1e66:	89 81       	ldd	r24, Y+1	; 0x01
    1e68:	9a 81       	ldd	r25, Y+2	; 0x02
    1e6a:	12 96       	adiw	r26, 0x02	; 2
    1e6c:	fa 01       	movw	r30, r20
    1e6e:	a0 83       	st	Z, r26
    1e70:	b1 83       	std	Z+1, r27	; 0x01
    1e72:	11 c0       	rjmp	.+34     	; 0x1e96 <get_ldnumber+0x8e>
    1e74:	8f ef       	ldi	r24, 0xFF	; 255
    1e76:	9f ef       	ldi	r25, 0xFF	; 255
    1e78:	0e c0       	rjmp	.+28     	; 0x1e96 <get_ldnumber+0x8e>
    1e7a:	80 e0       	ldi	r24, 0x00	; 0
    1e7c:	90 e0       	ldi	r25, 0x00	; 0
    1e7e:	0b c0       	rjmp	.+22     	; 0x1e96 <get_ldnumber+0x8e>
    1e80:	8f ef       	ldi	r24, 0xFF	; 255
    1e82:	9f ef       	ldi	r25, 0xFF	; 255
    1e84:	08 c0       	rjmp	.+16     	; 0x1e96 <get_ldnumber+0x8e>
    1e86:	8f ef       	ldi	r24, 0xFF	; 255
    1e88:	9f ef       	ldi	r25, 0xFF	; 255
    1e8a:	05 c0       	rjmp	.+10     	; 0x1e96 <get_ldnumber+0x8e>
    1e8c:	8f ef       	ldi	r24, 0xFF	; 255
    1e8e:	9f ef       	ldi	r25, 0xFF	; 255
    1e90:	02 c0       	rjmp	.+4      	; 0x1e96 <get_ldnumber+0x8e>
    1e92:	9d 01       	movw	r18, r26
    1e94:	d7 cf       	rjmp	.-82     	; 0x1e44 <get_ldnumber+0x3c>
    1e96:	0f 90       	pop	r0
    1e98:	0f 90       	pop	r0
    1e9a:	df 91       	pop	r29
    1e9c:	cf 91       	pop	r28
    1e9e:	08 95       	ret

00001ea0 <sync_window>:
    1ea0:	cf 92       	push	r12
    1ea2:	df 92       	push	r13
    1ea4:	ef 92       	push	r14
    1ea6:	ff 92       	push	r15
    1ea8:	0f 93       	push	r16
    1eaa:	1f 93       	push	r17
    1eac:	cf 93       	push	r28
    1eae:	df 93       	push	r29
    1eb0:	00 d0       	rcall	.+0      	; 0x1eb2 <sync_window+0x12>
    1eb2:	00 d0       	rcall	.+0      	; 0x1eb4 <sync_window+0x14>
    1eb4:	cd b7       	in	r28, 0x3d	; 61
    1eb6:	de b7       	in	r29, 0x3e	; 62
    1eb8:	7c 01       	movw	r14, r24
    1eba:	fc 01       	movw	r30, r24
    1ebc:	84 81       	ldd	r24, Z+4	; 0x04
    1ebe:	88 23       	and	r24, r24
    1ec0:	09 f4       	brne	.+2      	; 0x1ec4 <sync_window+0x24>
    1ec2:	5d c0       	rjmp	.+186    	; 0x1f7e <sync_window+0xde>
    1ec4:	82 a5       	ldd	r24, Z+42	; 0x2a
    1ec6:	93 a5       	ldd	r25, Z+43	; 0x2b
    1ec8:	a4 a5       	ldd	r26, Z+44	; 0x2c
    1eca:	b5 a5       	ldd	r27, Z+45	; 0x2d
    1ecc:	89 83       	std	Y+1, r24	; 0x01
    1ece:	9a 83       	std	Y+2, r25	; 0x02
    1ed0:	ab 83       	std	Y+3, r26	; 0x03
    1ed2:	bc 83       	std	Y+4, r27	; 0x04
    1ed4:	29 81       	ldd	r18, Y+1	; 0x01
    1ed6:	3a 81       	ldd	r19, Y+2	; 0x02
    1ed8:	4b 81       	ldd	r20, Y+3	; 0x03
    1eda:	5c 81       	ldd	r21, Y+4	; 0x04
    1edc:	67 01       	movw	r12, r14
    1ede:	fe e2       	ldi	r31, 0x2E	; 46
    1ee0:	cf 0e       	add	r12, r31
    1ee2:	d1 1c       	adc	r13, r1
    1ee4:	f7 01       	movw	r30, r14
    1ee6:	81 81       	ldd	r24, Z+1	; 0x01
    1ee8:	01 e0       	ldi	r16, 0x01	; 1
    1eea:	10 e0       	ldi	r17, 0x00	; 0
    1eec:	b6 01       	movw	r22, r12
    1eee:	0e 94 b3 37 	call	0x6f66	; 0x6f66 <disk_write>
    1ef2:	81 11       	cpse	r24, r1
    1ef4:	46 c0       	rjmp	.+140    	; 0x1f82 <sync_window+0xe2>
    1ef6:	f7 01       	movw	r30, r14
    1ef8:	14 82       	std	Z+4, r1	; 0x04
    1efa:	49 81       	ldd	r20, Y+1	; 0x01
    1efc:	5a 81       	ldd	r21, Y+2	; 0x02
    1efe:	6b 81       	ldd	r22, Y+3	; 0x03
    1f00:	7c 81       	ldd	r23, Y+4	; 0x04
    1f02:	06 8d       	ldd	r16, Z+30	; 0x1e
    1f04:	17 8d       	ldd	r17, Z+31	; 0x1f
    1f06:	20 a1       	ldd	r18, Z+32	; 0x20
    1f08:	31 a1       	ldd	r19, Z+33	; 0x21
    1f0a:	86 89       	ldd	r24, Z+22	; 0x16
    1f0c:	97 89       	ldd	r25, Z+23	; 0x17
    1f0e:	a0 8d       	ldd	r26, Z+24	; 0x18
    1f10:	b1 8d       	ldd	r27, Z+25	; 0x19
    1f12:	40 1b       	sub	r20, r16
    1f14:	51 0b       	sbc	r21, r17
    1f16:	62 0b       	sbc	r22, r18
    1f18:	73 0b       	sbc	r23, r19
    1f1a:	48 17       	cp	r20, r24
    1f1c:	59 07       	cpc	r21, r25
    1f1e:	6a 07       	cpc	r22, r26
    1f20:	7b 07       	cpc	r23, r27
    1f22:	88 f5       	brcc	.+98     	; 0x1f86 <sync_window+0xe6>
    1f24:	83 81       	ldd	r24, Z+3	; 0x03
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	8d 83       	std	Y+5, r24	; 0x05
    1f2a:	9e 83       	std	Y+6, r25	; 0x06
    1f2c:	8d 81       	ldd	r24, Y+5	; 0x05
    1f2e:	9e 81       	ldd	r25, Y+6	; 0x06
    1f30:	02 97       	sbiw	r24, 0x02	; 2
    1f32:	58 f1       	brcs	.+86     	; 0x1f8a <sync_window+0xea>
    1f34:	f7 01       	movw	r30, r14
    1f36:	86 89       	ldd	r24, Z+22	; 0x16
    1f38:	97 89       	ldd	r25, Z+23	; 0x17
    1f3a:	a0 8d       	ldd	r26, Z+24	; 0x18
    1f3c:	b1 8d       	ldd	r27, Z+25	; 0x19
    1f3e:	49 81       	ldd	r20, Y+1	; 0x01
    1f40:	5a 81       	ldd	r21, Y+2	; 0x02
    1f42:	6b 81       	ldd	r22, Y+3	; 0x03
    1f44:	7c 81       	ldd	r23, Y+4	; 0x04
    1f46:	84 0f       	add	r24, r20
    1f48:	95 1f       	adc	r25, r21
    1f4a:	a6 1f       	adc	r26, r22
    1f4c:	b7 1f       	adc	r27, r23
    1f4e:	89 83       	std	Y+1, r24	; 0x01
    1f50:	9a 83       	std	Y+2, r25	; 0x02
    1f52:	ab 83       	std	Y+3, r26	; 0x03
    1f54:	bc 83       	std	Y+4, r27	; 0x04
    1f56:	29 81       	ldd	r18, Y+1	; 0x01
    1f58:	3a 81       	ldd	r19, Y+2	; 0x02
    1f5a:	4b 81       	ldd	r20, Y+3	; 0x03
    1f5c:	5c 81       	ldd	r21, Y+4	; 0x04
    1f5e:	81 81       	ldd	r24, Z+1	; 0x01
    1f60:	01 e0       	ldi	r16, 0x01	; 1
    1f62:	10 e0       	ldi	r17, 0x00	; 0
    1f64:	b6 01       	movw	r22, r12
    1f66:	0e 94 b3 37 	call	0x6f66	; 0x6f66 <disk_write>
    1f6a:	8d 81       	ldd	r24, Y+5	; 0x05
    1f6c:	9e 81       	ldd	r25, Y+6	; 0x06
    1f6e:	01 97       	sbiw	r24, 0x01	; 1
    1f70:	8d 83       	std	Y+5, r24	; 0x05
    1f72:	9e 83       	std	Y+6, r25	; 0x06
    1f74:	8d 81       	ldd	r24, Y+5	; 0x05
    1f76:	9e 81       	ldd	r25, Y+6	; 0x06
    1f78:	02 97       	sbiw	r24, 0x02	; 2
    1f7a:	e0 f6       	brcc	.-72     	; 0x1f34 <sync_window+0x94>
    1f7c:	08 c0       	rjmp	.+16     	; 0x1f8e <sync_window+0xee>
    1f7e:	80 e0       	ldi	r24, 0x00	; 0
    1f80:	07 c0       	rjmp	.+14     	; 0x1f90 <sync_window+0xf0>
    1f82:	81 e0       	ldi	r24, 0x01	; 1
    1f84:	05 c0       	rjmp	.+10     	; 0x1f90 <sync_window+0xf0>
    1f86:	80 e0       	ldi	r24, 0x00	; 0
    1f88:	03 c0       	rjmp	.+6      	; 0x1f90 <sync_window+0xf0>
    1f8a:	80 e0       	ldi	r24, 0x00	; 0
    1f8c:	01 c0       	rjmp	.+2      	; 0x1f90 <sync_window+0xf0>
    1f8e:	80 e0       	ldi	r24, 0x00	; 0
    1f90:	26 96       	adiw	r28, 0x06	; 6
    1f92:	cd bf       	out	0x3d, r28	; 61
    1f94:	de bf       	out	0x3e, r29	; 62
    1f96:	df 91       	pop	r29
    1f98:	cf 91       	pop	r28
    1f9a:	1f 91       	pop	r17
    1f9c:	0f 91       	pop	r16
    1f9e:	ff 90       	pop	r15
    1fa0:	ef 90       	pop	r14
    1fa2:	df 90       	pop	r13
    1fa4:	cf 90       	pop	r12
    1fa6:	08 95       	ret

00001fa8 <move_window>:
    1fa8:	ef 92       	push	r14
    1faa:	ff 92       	push	r15
    1fac:	0f 93       	push	r16
    1fae:	1f 93       	push	r17
    1fb0:	cf 93       	push	r28
    1fb2:	df 93       	push	r29
    1fb4:	00 d0       	rcall	.+0      	; 0x1fb6 <move_window+0xe>
    1fb6:	1f 92       	push	r1
    1fb8:	cd b7       	in	r28, 0x3d	; 61
    1fba:	de b7       	in	r29, 0x3e	; 62
    1fbc:	7c 01       	movw	r14, r24
    1fbe:	49 83       	std	Y+1, r20	; 0x01
    1fc0:	5a 83       	std	Y+2, r21	; 0x02
    1fc2:	6b 83       	std	Y+3, r22	; 0x03
    1fc4:	7c 83       	std	Y+4, r23	; 0x04
    1fc6:	fc 01       	movw	r30, r24
    1fc8:	82 a5       	ldd	r24, Z+42	; 0x2a
    1fca:	93 a5       	ldd	r25, Z+43	; 0x2b
    1fcc:	a4 a5       	ldd	r26, Z+44	; 0x2c
    1fce:	b5 a5       	ldd	r27, Z+45	; 0x2d
    1fd0:	49 81       	ldd	r20, Y+1	; 0x01
    1fd2:	5a 81       	ldd	r21, Y+2	; 0x02
    1fd4:	6b 81       	ldd	r22, Y+3	; 0x03
    1fd6:	7c 81       	ldd	r23, Y+4	; 0x04
    1fd8:	84 17       	cp	r24, r20
    1fda:	95 07       	cpc	r25, r21
    1fdc:	a6 07       	cpc	r26, r22
    1fde:	b7 07       	cpc	r27, r23
    1fe0:	f1 f0       	breq	.+60     	; 0x201e <move_window+0x76>
    1fe2:	c7 01       	movw	r24, r14
    1fe4:	5d df       	rcall	.-326    	; 0x1ea0 <sync_window>
    1fe6:	81 11       	cpse	r24, r1
    1fe8:	1c c0       	rjmp	.+56     	; 0x2022 <move_window+0x7a>
    1fea:	29 81       	ldd	r18, Y+1	; 0x01
    1fec:	3a 81       	ldd	r19, Y+2	; 0x02
    1fee:	4b 81       	ldd	r20, Y+3	; 0x03
    1ff0:	5c 81       	ldd	r21, Y+4	; 0x04
    1ff2:	f7 01       	movw	r30, r14
    1ff4:	81 81       	ldd	r24, Z+1	; 0x01
    1ff6:	01 e0       	ldi	r16, 0x01	; 1
    1ff8:	10 e0       	ldi	r17, 0x00	; 0
    1ffa:	b7 01       	movw	r22, r14
    1ffc:	62 5d       	subi	r22, 0xD2	; 210
    1ffe:	7f 4f       	sbci	r23, 0xFF	; 255
    2000:	0e 94 f6 36 	call	0x6dec	; 0x6dec <disk_read>
    2004:	81 11       	cpse	r24, r1
    2006:	0f c0       	rjmp	.+30     	; 0x2026 <move_window+0x7e>
    2008:	89 81       	ldd	r24, Y+1	; 0x01
    200a:	9a 81       	ldd	r25, Y+2	; 0x02
    200c:	ab 81       	ldd	r26, Y+3	; 0x03
    200e:	bc 81       	ldd	r27, Y+4	; 0x04
    2010:	f7 01       	movw	r30, r14
    2012:	82 a7       	std	Z+42, r24	; 0x2a
    2014:	93 a7       	std	Z+43, r25	; 0x2b
    2016:	a4 a7       	std	Z+44, r26	; 0x2c
    2018:	b5 a7       	std	Z+45, r27	; 0x2d
    201a:	80 e0       	ldi	r24, 0x00	; 0
    201c:	05 c0       	rjmp	.+10     	; 0x2028 <move_window+0x80>
    201e:	80 e0       	ldi	r24, 0x00	; 0
    2020:	03 c0       	rjmp	.+6      	; 0x2028 <move_window+0x80>
    2022:	81 e0       	ldi	r24, 0x01	; 1
    2024:	01 c0       	rjmp	.+2      	; 0x2028 <move_window+0x80>
    2026:	81 e0       	ldi	r24, 0x01	; 1
    2028:	24 96       	adiw	r28, 0x04	; 4
    202a:	cd bf       	out	0x3d, r28	; 61
    202c:	de bf       	out	0x3e, r29	; 62
    202e:	df 91       	pop	r29
    2030:	cf 91       	pop	r28
    2032:	1f 91       	pop	r17
    2034:	0f 91       	pop	r16
    2036:	ff 90       	pop	r15
    2038:	ef 90       	pop	r14
    203a:	08 95       	ret

0000203c <check_fs>:
    203c:	0f 93       	push	r16
    203e:	1f 93       	push	r17
    2040:	cf 93       	push	r28
    2042:	df 93       	push	r29
    2044:	00 d0       	rcall	.+0      	; 0x2046 <check_fs+0xa>
    2046:	1f 92       	push	r1
    2048:	cd b7       	in	r28, 0x3d	; 61
    204a:	de b7       	in	r29, 0x3e	; 62
    204c:	8c 01       	movw	r16, r24
    204e:	49 83       	std	Y+1, r20	; 0x01
    2050:	5a 83       	std	Y+2, r21	; 0x02
    2052:	6b 83       	std	Y+3, r22	; 0x03
    2054:	7c 83       	std	Y+4, r23	; 0x04
    2056:	fc 01       	movw	r30, r24
    2058:	14 82       	std	Z+4, r1	; 0x04
    205a:	8f ef       	ldi	r24, 0xFF	; 255
    205c:	9f ef       	ldi	r25, 0xFF	; 255
    205e:	dc 01       	movw	r26, r24
    2060:	82 a7       	std	Z+42, r24	; 0x2a
    2062:	93 a7       	std	Z+43, r25	; 0x2b
    2064:	a4 a7       	std	Z+44, r26	; 0x2c
    2066:	b5 a7       	std	Z+45, r27	; 0x2d
    2068:	49 81       	ldd	r20, Y+1	; 0x01
    206a:	5a 81       	ldd	r21, Y+2	; 0x02
    206c:	6b 81       	ldd	r22, Y+3	; 0x03
    206e:	7c 81       	ldd	r23, Y+4	; 0x04
    2070:	c8 01       	movw	r24, r16
    2072:	9a df       	rcall	.-204    	; 0x1fa8 <move_window>
    2074:	81 11       	cpse	r24, r1
    2076:	4f c0       	rjmp	.+158    	; 0x2116 <check_fs+0xda>
    2078:	f8 01       	movw	r30, r16
    207a:	e3 5d       	subi	r30, 0xD3	; 211
    207c:	fd 4f       	sbci	r31, 0xFD	; 253
    207e:	20 81       	ld	r18, Z
    2080:	31 97       	sbiw	r30, 0x01	; 1
    2082:	80 81       	ld	r24, Z
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	92 2b       	or	r25, r18
    2088:	85 35       	cpi	r24, 0x55	; 85
    208a:	9a 4a       	sbci	r25, 0xAA	; 170
    208c:	09 f0       	breq	.+2      	; 0x2090 <check_fs+0x54>
    208e:	45 c0       	rjmp	.+138    	; 0x211a <check_fs+0xde>
    2090:	f8 01       	movw	r30, r16
    2092:	e9 59       	subi	r30, 0x99	; 153
    2094:	ff 4f       	sbci	r31, 0xFF	; 255
    2096:	30 81       	ld	r19, Z
    2098:	31 97       	sbiw	r30, 0x01	; 1
    209a:	80 81       	ld	r24, Z
    209c:	31 97       	sbiw	r30, 0x01	; 1
    209e:	40 81       	ld	r20, Z
    20a0:	31 97       	sbiw	r30, 0x01	; 1
    20a2:	20 81       	ld	r18, Z
    20a4:	90 e0       	ldi	r25, 0x00	; 0
    20a6:	a0 e0       	ldi	r26, 0x00	; 0
    20a8:	b0 e0       	ldi	r27, 0x00	; 0
    20aa:	dc 01       	movw	r26, r24
    20ac:	99 27       	eor	r25, r25
    20ae:	88 27       	eor	r24, r24
    20b0:	b3 2b       	or	r27, r19
    20b2:	82 2b       	or	r24, r18
    20b4:	50 e0       	ldi	r21, 0x00	; 0
    20b6:	54 2f       	mov	r21, r20
    20b8:	44 27       	eor	r20, r20
    20ba:	60 e0       	ldi	r22, 0x00	; 0
    20bc:	70 e0       	ldi	r23, 0x00	; 0
    20be:	84 2b       	or	r24, r20
    20c0:	95 2b       	or	r25, r21
    20c2:	a6 2b       	or	r26, r22
    20c4:	b7 2b       	or	r27, r23
    20c6:	bb 27       	eor	r27, r27
    20c8:	86 34       	cpi	r24, 0x46	; 70
    20ca:	91 44       	sbci	r25, 0x41	; 65
    20cc:	a4 45       	sbci	r26, 0x54	; 84
    20ce:	b1 05       	cpc	r27, r1
    20d0:	31 f1       	breq	.+76     	; 0x211e <check_fs+0xe2>
    20d2:	7f 96       	adiw	r30, 0x1f	; 31
    20d4:	20 81       	ld	r18, Z
    20d6:	31 97       	sbiw	r30, 0x01	; 1
    20d8:	40 81       	ld	r20, Z
    20da:	31 97       	sbiw	r30, 0x01	; 1
    20dc:	80 81       	ld	r24, Z
    20de:	31 97       	sbiw	r30, 0x01	; 1
    20e0:	90 81       	ld	r25, Z
    20e2:	50 e0       	ldi	r21, 0x00	; 0
    20e4:	60 e0       	ldi	r22, 0x00	; 0
    20e6:	70 e0       	ldi	r23, 0x00	; 0
    20e8:	ba 01       	movw	r22, r20
    20ea:	55 27       	eor	r21, r21
    20ec:	44 27       	eor	r20, r20
    20ee:	72 2b       	or	r23, r18
    20f0:	49 2b       	or	r20, r25
    20f2:	90 e0       	ldi	r25, 0x00	; 0
    20f4:	98 2f       	mov	r25, r24
    20f6:	88 27       	eor	r24, r24
    20f8:	a0 e0       	ldi	r26, 0x00	; 0
    20fa:	b0 e0       	ldi	r27, 0x00	; 0
    20fc:	48 2b       	or	r20, r24
    20fe:	59 2b       	or	r21, r25
    2100:	6a 2b       	or	r22, r26
    2102:	7b 2b       	or	r23, r27
    2104:	77 27       	eor	r23, r23
    2106:	81 e0       	ldi	r24, 0x01	; 1
    2108:	46 34       	cpi	r20, 0x46	; 70
    210a:	51 44       	sbci	r21, 0x41	; 65
    210c:	64 45       	sbci	r22, 0x54	; 84
    210e:	71 05       	cpc	r23, r1
    2110:	39 f4       	brne	.+14     	; 0x2120 <check_fs+0xe4>
    2112:	80 e0       	ldi	r24, 0x00	; 0
    2114:	05 c0       	rjmp	.+10     	; 0x2120 <check_fs+0xe4>
    2116:	83 e0       	ldi	r24, 0x03	; 3
    2118:	03 c0       	rjmp	.+6      	; 0x2120 <check_fs+0xe4>
    211a:	82 e0       	ldi	r24, 0x02	; 2
    211c:	01 c0       	rjmp	.+2      	; 0x2120 <check_fs+0xe4>
    211e:	80 e0       	ldi	r24, 0x00	; 0
    2120:	24 96       	adiw	r28, 0x04	; 4
    2122:	cd bf       	out	0x3d, r28	; 61
    2124:	de bf       	out	0x3e, r29	; 62
    2126:	df 91       	pop	r29
    2128:	cf 91       	pop	r28
    212a:	1f 91       	pop	r17
    212c:	0f 91       	pop	r16
    212e:	08 95       	ret

00002130 <validate>:
    2130:	00 97       	sbiw	r24, 0x00	; 0
    2132:	c9 f0       	breq	.+50     	; 0x2166 <validate+0x36>
    2134:	dc 01       	movw	r26, r24
    2136:	ed 91       	ld	r30, X+
    2138:	fc 91       	ld	r31, X
    213a:	11 97       	sbiw	r26, 0x01	; 1
    213c:	30 97       	sbiw	r30, 0x00	; 0
    213e:	a9 f0       	breq	.+42     	; 0x216a <validate+0x3a>
    2140:	20 81       	ld	r18, Z
    2142:	22 23       	and	r18, r18
    2144:	a1 f0       	breq	.+40     	; 0x216e <validate+0x3e>
    2146:	26 81       	ldd	r18, Z+6	; 0x06
    2148:	37 81       	ldd	r19, Z+7	; 0x07
    214a:	12 96       	adiw	r26, 0x02	; 2
    214c:	8d 91       	ld	r24, X+
    214e:	9c 91       	ld	r25, X
    2150:	13 97       	sbiw	r26, 0x03	; 3
    2152:	28 17       	cp	r18, r24
    2154:	39 07       	cpc	r19, r25
    2156:	69 f4       	brne	.+26     	; 0x2172 <validate+0x42>
    2158:	81 81       	ldd	r24, Z+1	; 0x01
    215a:	0e 94 d9 33 	call	0x67b2	; 0x67b2 <disk_status>
    215e:	80 ff       	sbrs	r24, 0
    2160:	0a c0       	rjmp	.+20     	; 0x2176 <validate+0x46>
    2162:	83 e0       	ldi	r24, 0x03	; 3
    2164:	08 95       	ret
    2166:	89 e0       	ldi	r24, 0x09	; 9
    2168:	08 95       	ret
    216a:	89 e0       	ldi	r24, 0x09	; 9
    216c:	08 95       	ret
    216e:	89 e0       	ldi	r24, 0x09	; 9
    2170:	08 95       	ret
    2172:	89 e0       	ldi	r24, 0x09	; 9
    2174:	08 95       	ret
    2176:	80 e0       	ldi	r24, 0x00	; 0
    2178:	08 95       	ret

0000217a <find_volume>:
    217a:	cf 92       	push	r12
    217c:	df 92       	push	r13
    217e:	ef 92       	push	r14
    2180:	ff 92       	push	r15
    2182:	0f 93       	push	r16
    2184:	1f 93       	push	r17
    2186:	cf 93       	push	r28
    2188:	df 93       	push	r29
    218a:	cd b7       	in	r28, 0x3d	; 61
    218c:	de b7       	in	r29, 0x3e	; 62
    218e:	af 97       	sbiw	r28, 0x2f	; 47
    2190:	cd bf       	out	0x3d, r28	; 61
    2192:	de bf       	out	0x3e, r29	; 62
    2194:	6c 01       	movw	r12, r24
    2196:	cb 01       	movw	r24, r22
    2198:	4f a7       	std	Y+47, r20	; 0x2f
    219a:	f6 01       	movw	r30, r12
    219c:	10 82       	st	Z, r1
    219e:	11 82       	std	Z+1, r1	; 0x01
    21a0:	33 de       	rcall	.-922    	; 0x1e08 <get_ldnumber>
    21a2:	7c 01       	movw	r14, r24
    21a4:	99 23       	and	r25, r25
    21a6:	0c f4       	brge	.+2      	; 0x21aa <find_volume+0x30>
    21a8:	71 c3       	rjmp	.+1762   	; 0x288c <find_volume+0x712>
    21aa:	fc 01       	movw	r30, r24
    21ac:	ee 0f       	add	r30, r30
    21ae:	ff 1f       	adc	r31, r31
    21b0:	e4 5a       	subi	r30, 0xA4	; 164
    21b2:	fe 4d       	sbci	r31, 0xDE	; 222
    21b4:	00 81       	ld	r16, Z
    21b6:	11 81       	ldd	r17, Z+1	; 0x01
    21b8:	01 15       	cp	r16, r1
    21ba:	11 05       	cpc	r17, r1
    21bc:	09 f4       	brne	.+2      	; 0x21c0 <find_volume+0x46>
    21be:	68 c3       	rjmp	.+1744   	; 0x2890 <find_volume+0x716>
    21c0:	f6 01       	movw	r30, r12
    21c2:	00 83       	st	Z, r16
    21c4:	11 83       	std	Z+1, r17	; 0x01
    21c6:	f8 01       	movw	r30, r16
    21c8:	80 81       	ld	r24, Z
    21ca:	88 23       	and	r24, r24
    21cc:	81 f0       	breq	.+32     	; 0x21ee <find_volume+0x74>
    21ce:	81 81       	ldd	r24, Z+1	; 0x01
    21d0:	0e 94 d9 33 	call	0x67b2	; 0x67b2 <disk_status>
    21d4:	8a 83       	std	Y+2, r24	; 0x02
    21d6:	8a 81       	ldd	r24, Y+2	; 0x02
    21d8:	80 fd       	sbrc	r24, 0
    21da:	09 c0       	rjmp	.+18     	; 0x21ee <find_volume+0x74>
    21dc:	8f a5       	ldd	r24, Y+47	; 0x2f
    21de:	88 23       	and	r24, r24
    21e0:	09 f4       	brne	.+2      	; 0x21e4 <find_volume+0x6a>
    21e2:	58 c3       	rjmp	.+1712   	; 0x2894 <find_volume+0x71a>
    21e4:	8a 81       	ldd	r24, Y+2	; 0x02
    21e6:	82 fd       	sbrc	r24, 2
    21e8:	57 c3       	rjmp	.+1710   	; 0x2898 <find_volume+0x71e>
    21ea:	80 e0       	ldi	r24, 0x00	; 0
    21ec:	74 c3       	rjmp	.+1768   	; 0x28d6 <find_volume+0x75c>
    21ee:	f8 01       	movw	r30, r16
    21f0:	10 82       	st	Z, r1
    21f2:	e1 82       	std	Z+1, r14	; 0x01
    21f4:	81 81       	ldd	r24, Z+1	; 0x01
    21f6:	0e 94 6c 36 	call	0x6cd8	; 0x6cd8 <disk_initialize>
    21fa:	8a 83       	std	Y+2, r24	; 0x02
    21fc:	8a 81       	ldd	r24, Y+2	; 0x02
    21fe:	80 fd       	sbrc	r24, 0
    2200:	4d c3       	rjmp	.+1690   	; 0x289c <find_volume+0x722>
    2202:	8f a5       	ldd	r24, Y+47	; 0x2f
    2204:	88 23       	and	r24, r24
    2206:	19 f0       	breq	.+6      	; 0x220e <find_volume+0x94>
    2208:	8a 81       	ldd	r24, Y+2	; 0x02
    220a:	82 fd       	sbrc	r24, 2
    220c:	49 c3       	rjmp	.+1682   	; 0x28a0 <find_volume+0x726>
    220e:	1b 82       	std	Y+3, r1	; 0x03
    2210:	1c 82       	std	Y+4, r1	; 0x04
    2212:	1d 82       	std	Y+5, r1	; 0x05
    2214:	1e 82       	std	Y+6, r1	; 0x06
    2216:	4b 81       	ldd	r20, Y+3	; 0x03
    2218:	5c 81       	ldd	r21, Y+4	; 0x04
    221a:	6d 81       	ldd	r22, Y+5	; 0x05
    221c:	7e 81       	ldd	r23, Y+6	; 0x06
    221e:	c8 01       	movw	r24, r16
    2220:	0d df       	rcall	.-486    	; 0x203c <check_fs>
    2222:	89 83       	std	Y+1, r24	; 0x01
    2224:	89 81       	ldd	r24, Y+1	; 0x01
    2226:	81 30       	cpi	r24, 0x01	; 1
    2228:	11 f0       	breq	.+4      	; 0x222e <find_volume+0xb4>
    222a:	89 81       	ldd	r24, Y+1	; 0x01
    222c:	86 c0       	rjmp	.+268    	; 0x233a <find_volume+0x1c0>
    222e:	1d a6       	std	Y+45, r1	; 0x2d
    2230:	1e a6       	std	Y+46, r1	; 0x2e
    2232:	8d a5       	ldd	r24, Y+45	; 0x2d
    2234:	9e a5       	ldd	r25, Y+46	; 0x2e
    2236:	04 97       	sbiw	r24, 0x04	; 4
    2238:	08 f0       	brcs	.+2      	; 0x223c <find_volume+0xc2>
    223a:	44 c0       	rjmp	.+136    	; 0x22c4 <find_volume+0x14a>
    223c:	ed a5       	ldd	r30, Y+45	; 0x2d
    223e:	fe a5       	ldd	r31, Y+46	; 0x2e
    2240:	e2 95       	swap	r30
    2242:	f2 95       	swap	r31
    2244:	f0 7f       	andi	r31, 0xF0	; 240
    2246:	fe 27       	eor	r31, r30
    2248:	e0 7f       	andi	r30, 0xF0	; 240
    224a:	fe 27       	eor	r31, r30
    224c:	e4 51       	subi	r30, 0x14	; 20
    224e:	fe 4f       	sbci	r31, 0xFE	; 254
    2250:	e0 0f       	add	r30, r16
    2252:	f1 1f       	adc	r31, r17
    2254:	2d a5       	ldd	r18, Y+45	; 0x2d
    2256:	3e a5       	ldd	r19, Y+46	; 0x2e
    2258:	84 81       	ldd	r24, Z+4	; 0x04
    225a:	88 23       	and	r24, r24
    225c:	b1 f0       	breq	.+44     	; 0x228a <find_volume+0x110>
    225e:	63 85       	ldd	r22, Z+11	; 0x0b
    2260:	82 85       	ldd	r24, Z+10	; 0x0a
    2262:	41 85       	ldd	r20, Z+9	; 0x09
    2264:	50 85       	ldd	r21, Z+8	; 0x08
    2266:	90 e0       	ldi	r25, 0x00	; 0
    2268:	a0 e0       	ldi	r26, 0x00	; 0
    226a:	b0 e0       	ldi	r27, 0x00	; 0
    226c:	dc 01       	movw	r26, r24
    226e:	99 27       	eor	r25, r25
    2270:	88 27       	eor	r24, r24
    2272:	b6 2b       	or	r27, r22
    2274:	85 2b       	or	r24, r21
    2276:	50 e0       	ldi	r21, 0x00	; 0
    2278:	54 2f       	mov	r21, r20
    227a:	44 27       	eor	r20, r20
    227c:	60 e0       	ldi	r22, 0x00	; 0
    227e:	70 e0       	ldi	r23, 0x00	; 0
    2280:	84 2b       	or	r24, r20
    2282:	95 2b       	or	r25, r21
    2284:	a6 2b       	or	r26, r22
    2286:	b7 2b       	or	r27, r23
    2288:	03 c0       	rjmp	.+6      	; 0x2290 <find_volume+0x116>
    228a:	80 e0       	ldi	r24, 0x00	; 0
    228c:	90 e0       	ldi	r25, 0x00	; 0
    228e:	dc 01       	movw	r26, r24
    2290:	f9 01       	movw	r30, r18
    2292:	ee 0f       	add	r30, r30
    2294:	ff 1f       	adc	r31, r31
    2296:	ee 0f       	add	r30, r30
    2298:	ff 1f       	adc	r31, r31
    229a:	cc 24       	eor	r12, r12
    229c:	c3 94       	inc	r12
    229e:	d1 2c       	mov	r13, r1
    22a0:	cc 0e       	add	r12, r28
    22a2:	dd 1e       	adc	r13, r29
    22a4:	ec 0d       	add	r30, r12
    22a6:	fd 1d       	adc	r31, r13
    22a8:	84 8f       	std	Z+28, r24	; 0x1c
    22aa:	95 8f       	std	Z+29, r25	; 0x1d
    22ac:	a6 8f       	std	Z+30, r26	; 0x1e
    22ae:	b7 8f       	std	Z+31, r27	; 0x1f
    22b0:	8d a5       	ldd	r24, Y+45	; 0x2d
    22b2:	9e a5       	ldd	r25, Y+46	; 0x2e
    22b4:	01 96       	adiw	r24, 0x01	; 1
    22b6:	8d a7       	std	Y+45, r24	; 0x2d
    22b8:	9e a7       	std	Y+46, r25	; 0x2e
    22ba:	8d a5       	ldd	r24, Y+45	; 0x2d
    22bc:	9e a5       	ldd	r25, Y+46	; 0x2e
    22be:	04 97       	sbiw	r24, 0x04	; 4
    22c0:	08 f4       	brcc	.+2      	; 0x22c4 <find_volume+0x14a>
    22c2:	bc cf       	rjmp	.-136    	; 0x223c <find_volume+0xc2>
    22c4:	1d a6       	std	Y+45, r1	; 0x2d
    22c6:	1e a6       	std	Y+46, r1	; 0x2e
    22c8:	8d a5       	ldd	r24, Y+45	; 0x2d
    22ca:	9e a5       	ldd	r25, Y+46	; 0x2e
    22cc:	89 2b       	or	r24, r25
    22ce:	29 f0       	breq	.+10     	; 0x22da <find_volume+0x160>
    22d0:	8d a5       	ldd	r24, Y+45	; 0x2d
    22d2:	9e a5       	ldd	r25, Y+46	; 0x2e
    22d4:	01 97       	sbiw	r24, 0x01	; 1
    22d6:	8d a7       	std	Y+45, r24	; 0x2d
    22d8:	9e a7       	std	Y+46, r25	; 0x2e
    22da:	ed a5       	ldd	r30, Y+45	; 0x2d
    22dc:	fe a5       	ldd	r31, Y+46	; 0x2e
    22de:	ee 0f       	add	r30, r30
    22e0:	ff 1f       	adc	r31, r31
    22e2:	ee 0f       	add	r30, r30
    22e4:	ff 1f       	adc	r31, r31
    22e6:	ee 24       	eor	r14, r14
    22e8:	e3 94       	inc	r14
    22ea:	f1 2c       	mov	r15, r1
    22ec:	ec 0e       	add	r14, r28
    22ee:	fd 1e       	adc	r15, r29
    22f0:	ee 0d       	add	r30, r14
    22f2:	ff 1d       	adc	r31, r15
    22f4:	84 8d       	ldd	r24, Z+28	; 0x1c
    22f6:	95 8d       	ldd	r25, Z+29	; 0x1d
    22f8:	a6 8d       	ldd	r26, Z+30	; 0x1e
    22fa:	b7 8d       	ldd	r27, Z+31	; 0x1f
    22fc:	8b 83       	std	Y+3, r24	; 0x03
    22fe:	9c 83       	std	Y+4, r25	; 0x04
    2300:	ad 83       	std	Y+5, r26	; 0x05
    2302:	be 83       	std	Y+6, r27	; 0x06
    2304:	4b 81       	ldd	r20, Y+3	; 0x03
    2306:	5c 81       	ldd	r21, Y+4	; 0x04
    2308:	6d 81       	ldd	r22, Y+5	; 0x05
    230a:	7e 81       	ldd	r23, Y+6	; 0x06
    230c:	45 2b       	or	r20, r21
    230e:	46 2b       	or	r20, r22
    2310:	47 2b       	or	r20, r23
    2312:	39 f0       	breq	.+14     	; 0x2322 <find_volume+0x1a8>
    2314:	4b 81       	ldd	r20, Y+3	; 0x03
    2316:	5c 81       	ldd	r21, Y+4	; 0x04
    2318:	6d 81       	ldd	r22, Y+5	; 0x05
    231a:	7e 81       	ldd	r23, Y+6	; 0x06
    231c:	c8 01       	movw	r24, r16
    231e:	8e de       	rcall	.-740    	; 0x203c <check_fs>
    2320:	01 c0       	rjmp	.+2      	; 0x2324 <find_volume+0x1aa>
    2322:	82 e0       	ldi	r24, 0x02	; 2
    2324:	89 83       	std	Y+1, r24	; 0x01
    2326:	89 81       	ldd	r24, Y+1	; 0x01
    2328:	88 23       	and	r24, r24
    232a:	39 f0       	breq	.+14     	; 0x233a <find_volume+0x1c0>
    232c:	8d a5       	ldd	r24, Y+45	; 0x2d
    232e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2330:	01 96       	adiw	r24, 0x01	; 1
    2332:	8d a7       	std	Y+45, r24	; 0x2d
    2334:	9e a7       	std	Y+46, r25	; 0x2e
    2336:	04 97       	sbiw	r24, 0x04	; 4
    2338:	80 f2       	brcs	.-96     	; 0x22da <find_volume+0x160>
    233a:	89 81       	ldd	r24, Y+1	; 0x01
    233c:	83 30       	cpi	r24, 0x03	; 3
    233e:	09 f4       	brne	.+2      	; 0x2342 <find_volume+0x1c8>
    2340:	b1 c2       	rjmp	.+1378   	; 0x28a4 <find_volume+0x72a>
    2342:	89 81       	ldd	r24, Y+1	; 0x01
    2344:	81 11       	cpse	r24, r1
    2346:	b0 c2       	rjmp	.+1376   	; 0x28a8 <find_volume+0x72e>
    2348:	f8 01       	movw	r30, r16
    234a:	22 ad       	ldd	r18, Z+58	; 0x3a
    234c:	81 ad       	ldd	r24, Z+57	; 0x39
    234e:	90 e0       	ldi	r25, 0x00	; 0
    2350:	92 2b       	or	r25, r18
    2352:	81 15       	cp	r24, r1
    2354:	92 40       	sbci	r25, 0x02	; 2
    2356:	09 f0       	breq	.+2      	; 0x235a <find_volume+0x1e0>
    2358:	a9 c2       	rjmp	.+1362   	; 0x28ac <find_volume+0x732>
    235a:	f8 01       	movw	r30, r16
    235c:	eb 5b       	subi	r30, 0xBB	; 187
    235e:	ff 4f       	sbci	r31, 0xFF	; 255
    2360:	20 81       	ld	r18, Z
    2362:	31 97       	sbiw	r30, 0x01	; 1
    2364:	80 81       	ld	r24, Z
    2366:	90 e0       	ldi	r25, 0x00	; 0
    2368:	92 2b       	or	r25, r18
    236a:	a0 e0       	ldi	r26, 0x00	; 0
    236c:	b0 e0       	ldi	r27, 0x00	; 0
    236e:	8f 83       	std	Y+7, r24	; 0x07
    2370:	98 87       	std	Y+8, r25	; 0x08
    2372:	a9 87       	std	Y+9, r26	; 0x09
    2374:	ba 87       	std	Y+10, r27	; 0x0a
    2376:	8f 81       	ldd	r24, Y+7	; 0x07
    2378:	98 85       	ldd	r25, Y+8	; 0x08
    237a:	a9 85       	ldd	r26, Y+9	; 0x09
    237c:	ba 85       	ldd	r27, Y+10	; 0x0a
    237e:	89 2b       	or	r24, r25
    2380:	8a 2b       	or	r24, r26
    2382:	8b 2b       	or	r24, r27
    2384:	e9 f4       	brne	.+58     	; 0x23c0 <find_volume+0x246>
    2386:	71 96       	adiw	r30, 0x11	; 17
    2388:	30 81       	ld	r19, Z
    238a:	31 97       	sbiw	r30, 0x01	; 1
    238c:	80 81       	ld	r24, Z
    238e:	31 97       	sbiw	r30, 0x01	; 1
    2390:	40 81       	ld	r20, Z
    2392:	31 97       	sbiw	r30, 0x01	; 1
    2394:	20 81       	ld	r18, Z
    2396:	90 e0       	ldi	r25, 0x00	; 0
    2398:	a0 e0       	ldi	r26, 0x00	; 0
    239a:	b0 e0       	ldi	r27, 0x00	; 0
    239c:	dc 01       	movw	r26, r24
    239e:	99 27       	eor	r25, r25
    23a0:	88 27       	eor	r24, r24
    23a2:	b3 2b       	or	r27, r19
    23a4:	82 2b       	or	r24, r18
    23a6:	50 e0       	ldi	r21, 0x00	; 0
    23a8:	54 2f       	mov	r21, r20
    23aa:	44 27       	eor	r20, r20
    23ac:	60 e0       	ldi	r22, 0x00	; 0
    23ae:	70 e0       	ldi	r23, 0x00	; 0
    23b0:	84 2b       	or	r24, r20
    23b2:	95 2b       	or	r25, r21
    23b4:	a6 2b       	or	r26, r22
    23b6:	b7 2b       	or	r27, r23
    23b8:	8f 83       	std	Y+7, r24	; 0x07
    23ba:	98 87       	std	Y+8, r25	; 0x08
    23bc:	a9 87       	std	Y+9, r26	; 0x09
    23be:	ba 87       	std	Y+10, r27	; 0x0a
    23c0:	8f 81       	ldd	r24, Y+7	; 0x07
    23c2:	98 85       	ldd	r25, Y+8	; 0x08
    23c4:	a9 85       	ldd	r26, Y+9	; 0x09
    23c6:	ba 85       	ldd	r27, Y+10	; 0x0a
    23c8:	f8 01       	movw	r30, r16
    23ca:	86 8b       	std	Z+22, r24	; 0x16
    23cc:	97 8b       	std	Z+23, r25	; 0x17
    23ce:	a0 8f       	std	Z+24, r26	; 0x18
    23d0:	b1 8f       	std	Z+25, r27	; 0x19
    23d2:	86 ad       	ldd	r24, Z+62	; 0x3e
    23d4:	83 83       	std	Z+3, r24	; 0x03
    23d6:	83 81       	ldd	r24, Z+3	; 0x03
    23d8:	81 30       	cpi	r24, 0x01	; 1
    23da:	21 f0       	breq	.+8      	; 0x23e4 <find_volume+0x26a>
    23dc:	83 81       	ldd	r24, Z+3	; 0x03
    23de:	82 30       	cpi	r24, 0x02	; 2
    23e0:	09 f0       	breq	.+2      	; 0x23e4 <find_volume+0x26a>
    23e2:	66 c2       	rjmp	.+1228   	; 0x28b0 <find_volume+0x736>
    23e4:	f8 01       	movw	r30, r16
    23e6:	a3 81       	ldd	r26, Z+3	; 0x03
    23e8:	2f 81       	ldd	r18, Y+7	; 0x07
    23ea:	38 85       	ldd	r19, Y+8	; 0x08
    23ec:	49 85       	ldd	r20, Y+9	; 0x09
    23ee:	5a 85       	ldd	r21, Y+10	; 0x0a
    23f0:	b0 e0       	ldi	r27, 0x00	; 0
    23f2:	0e 94 c7 3c 	call	0x798e	; 0x798e <__muluhisi3>
    23f6:	6f 83       	std	Y+7, r22	; 0x07
    23f8:	78 87       	std	Y+8, r23	; 0x08
    23fa:	89 87       	std	Y+9, r24	; 0x09
    23fc:	9a 87       	std	Y+10, r25	; 0x0a
    23fe:	83 ad       	ldd	r24, Z+59	; 0x3b
    2400:	82 83       	std	Z+2, r24	; 0x02
    2402:	82 81       	ldd	r24, Z+2	; 0x02
    2404:	88 23       	and	r24, r24
    2406:	09 f4       	brne	.+2      	; 0x240a <find_volume+0x290>
    2408:	55 c2       	rjmp	.+1194   	; 0x28b4 <find_volume+0x73a>
    240a:	82 81       	ldd	r24, Z+2	; 0x02
    240c:	22 81       	ldd	r18, Z+2	; 0x02
    240e:	30 e0       	ldi	r19, 0x00	; 0
    2410:	21 50       	subi	r18, 0x01	; 1
    2412:	31 09       	sbc	r19, r1
    2414:	90 e0       	ldi	r25, 0x00	; 0
    2416:	82 23       	and	r24, r18
    2418:	93 23       	and	r25, r19
    241a:	89 2b       	or	r24, r25
    241c:	09 f0       	breq	.+2      	; 0x2420 <find_volume+0x2a6>
    241e:	4c c2       	rjmp	.+1176   	; 0x28b8 <find_volume+0x73e>
    2420:	e0 5c       	subi	r30, 0xC0	; 192
    2422:	ff 4f       	sbci	r31, 0xFF	; 255
    2424:	20 81       	ld	r18, Z
    2426:	f8 01       	movw	r30, r16
    2428:	87 ad       	ldd	r24, Z+63	; 0x3f
    242a:	90 e0       	ldi	r25, 0x00	; 0
    242c:	92 2b       	or	r25, r18
    242e:	80 87       	std	Z+8, r24	; 0x08
    2430:	91 87       	std	Z+9, r25	; 0x09
    2432:	80 85       	ldd	r24, Z+8	; 0x08
    2434:	91 85       	ldd	r25, Z+9	; 0x09
    2436:	8f 70       	andi	r24, 0x0F	; 15
    2438:	99 27       	eor	r25, r25
    243a:	89 2b       	or	r24, r25
    243c:	09 f0       	breq	.+2      	; 0x2440 <find_volume+0x2c6>
    243e:	3e c2       	rjmp	.+1148   	; 0x28bc <find_volume+0x742>
    2440:	ee 5b       	subi	r30, 0xBE	; 190
    2442:	ff 4f       	sbci	r31, 0xFF	; 255
    2444:	20 81       	ld	r18, Z
    2446:	31 97       	sbiw	r30, 0x01	; 1
    2448:	80 81       	ld	r24, Z
    244a:	90 e0       	ldi	r25, 0x00	; 0
    244c:	92 2b       	or	r25, r18
    244e:	a0 e0       	ldi	r26, 0x00	; 0
    2450:	b0 e0       	ldi	r27, 0x00	; 0
    2452:	8b 87       	std	Y+11, r24	; 0x0b
    2454:	9c 87       	std	Y+12, r25	; 0x0c
    2456:	ad 87       	std	Y+13, r26	; 0x0d
    2458:	be 87       	std	Y+14, r27	; 0x0e
    245a:	8b 85       	ldd	r24, Y+11	; 0x0b
    245c:	9c 85       	ldd	r25, Y+12	; 0x0c
    245e:	ad 85       	ldd	r26, Y+13	; 0x0d
    2460:	be 85       	ldd	r27, Y+14	; 0x0e
    2462:	89 2b       	or	r24, r25
    2464:	8a 2b       	or	r24, r26
    2466:	8b 2b       	or	r24, r27
    2468:	e9 f4       	brne	.+58     	; 0x24a4 <find_volume+0x32a>
    246a:	70 96       	adiw	r30, 0x10	; 16
    246c:	30 81       	ld	r19, Z
    246e:	31 97       	sbiw	r30, 0x01	; 1
    2470:	80 81       	ld	r24, Z
    2472:	31 97       	sbiw	r30, 0x01	; 1
    2474:	40 81       	ld	r20, Z
    2476:	31 97       	sbiw	r30, 0x01	; 1
    2478:	20 81       	ld	r18, Z
    247a:	90 e0       	ldi	r25, 0x00	; 0
    247c:	a0 e0       	ldi	r26, 0x00	; 0
    247e:	b0 e0       	ldi	r27, 0x00	; 0
    2480:	dc 01       	movw	r26, r24
    2482:	99 27       	eor	r25, r25
    2484:	88 27       	eor	r24, r24
    2486:	b3 2b       	or	r27, r19
    2488:	82 2b       	or	r24, r18
    248a:	50 e0       	ldi	r21, 0x00	; 0
    248c:	54 2f       	mov	r21, r20
    248e:	44 27       	eor	r20, r20
    2490:	60 e0       	ldi	r22, 0x00	; 0
    2492:	70 e0       	ldi	r23, 0x00	; 0
    2494:	84 2b       	or	r24, r20
    2496:	95 2b       	or	r25, r21
    2498:	a6 2b       	or	r26, r22
    249a:	b7 2b       	or	r27, r23
    249c:	8b 87       	std	Y+11, r24	; 0x0b
    249e:	9c 87       	std	Y+12, r25	; 0x0c
    24a0:	ad 87       	std	Y+13, r26	; 0x0d
    24a2:	be 87       	std	Y+14, r27	; 0x0e
    24a4:	f8 01       	movw	r30, r16
    24a6:	25 ad       	ldd	r18, Z+61	; 0x3d
    24a8:	84 ad       	ldd	r24, Z+60	; 0x3c
    24aa:	90 e0       	ldi	r25, 0x00	; 0
    24ac:	92 2b       	or	r25, r18
    24ae:	8b 8f       	std	Y+27, r24	; 0x1b
    24b0:	9c 8f       	std	Y+28, r25	; 0x1c
    24b2:	8b 8d       	ldd	r24, Y+27	; 0x1b
    24b4:	9c 8d       	ldd	r25, Y+28	; 0x1c
    24b6:	89 2b       	or	r24, r25
    24b8:	09 f4       	brne	.+2      	; 0x24bc <find_volume+0x342>
    24ba:	02 c2       	rjmp	.+1028   	; 0x28c0 <find_volume+0x746>
    24bc:	4b 8d       	ldd	r20, Y+27	; 0x1b
    24be:	5c 8d       	ldd	r21, Y+28	; 0x1c
    24c0:	8f 81       	ldd	r24, Y+7	; 0x07
    24c2:	98 85       	ldd	r25, Y+8	; 0x08
    24c4:	a9 85       	ldd	r26, Y+9	; 0x09
    24c6:	ba 85       	ldd	r27, Y+10	; 0x0a
    24c8:	20 85       	ldd	r18, Z+8	; 0x08
    24ca:	31 85       	ldd	r19, Z+9	; 0x09
    24cc:	84 0f       	add	r24, r20
    24ce:	95 1f       	adc	r25, r21
    24d0:	a1 1d       	adc	r26, r1
    24d2:	b1 1d       	adc	r27, r1
    24d4:	32 95       	swap	r19
    24d6:	22 95       	swap	r18
    24d8:	2f 70       	andi	r18, 0x0F	; 15
    24da:	23 27       	eor	r18, r19
    24dc:	3f 70       	andi	r19, 0x0F	; 15
    24de:	23 27       	eor	r18, r19
    24e0:	82 0f       	add	r24, r18
    24e2:	93 1f       	adc	r25, r19
    24e4:	a1 1d       	adc	r26, r1
    24e6:	b1 1d       	adc	r27, r1
    24e8:	8f 87       	std	Y+15, r24	; 0x0f
    24ea:	98 8b       	std	Y+16, r25	; 0x10
    24ec:	a9 8b       	std	Y+17, r26	; 0x11
    24ee:	ba 8b       	std	Y+18, r27	; 0x12
    24f0:	4b 85       	ldd	r20, Y+11	; 0x0b
    24f2:	5c 85       	ldd	r21, Y+12	; 0x0c
    24f4:	6d 85       	ldd	r22, Y+13	; 0x0d
    24f6:	7e 85       	ldd	r23, Y+14	; 0x0e
    24f8:	8f 85       	ldd	r24, Y+15	; 0x0f
    24fa:	98 89       	ldd	r25, Y+16	; 0x10
    24fc:	a9 89       	ldd	r26, Y+17	; 0x11
    24fe:	ba 89       	ldd	r27, Y+18	; 0x12
    2500:	48 17       	cp	r20, r24
    2502:	59 07       	cpc	r21, r25
    2504:	6a 07       	cpc	r22, r26
    2506:	7b 07       	cpc	r23, r27
    2508:	08 f4       	brcc	.+2      	; 0x250c <find_volume+0x392>
    250a:	dc c1       	rjmp	.+952    	; 0x28c4 <find_volume+0x74a>
    250c:	4b 85       	ldd	r20, Y+11	; 0x0b
    250e:	5c 85       	ldd	r21, Y+12	; 0x0c
    2510:	6d 85       	ldd	r22, Y+13	; 0x0d
    2512:	7e 85       	ldd	r23, Y+14	; 0x0e
    2514:	8f 85       	ldd	r24, Y+15	; 0x0f
    2516:	98 89       	ldd	r25, Y+16	; 0x10
    2518:	a9 89       	ldd	r26, Y+17	; 0x11
    251a:	ba 89       	ldd	r27, Y+18	; 0x12
    251c:	22 81       	ldd	r18, Z+2	; 0x02
    251e:	6a 01       	movw	r12, r20
    2520:	7b 01       	movw	r14, r22
    2522:	c8 1a       	sub	r12, r24
    2524:	d9 0a       	sbc	r13, r25
    2526:	ea 0a       	sbc	r14, r26
    2528:	fb 0a       	sbc	r15, r27
    252a:	c7 01       	movw	r24, r14
    252c:	b6 01       	movw	r22, r12
    252e:	30 e0       	ldi	r19, 0x00	; 0
    2530:	40 e0       	ldi	r20, 0x00	; 0
    2532:	50 e0       	ldi	r21, 0x00	; 0
    2534:	0e 94 90 3c 	call	0x7920	; 0x7920 <__udivmodsi4>
    2538:	2b 8b       	std	Y+19, r18	; 0x13
    253a:	3c 8b       	std	Y+20, r19	; 0x14
    253c:	4d 8b       	std	Y+21, r20	; 0x15
    253e:	5e 8b       	std	Y+22, r21	; 0x16
    2540:	8b 89       	ldd	r24, Y+19	; 0x13
    2542:	9c 89       	ldd	r25, Y+20	; 0x14
    2544:	ad 89       	ldd	r26, Y+21	; 0x15
    2546:	be 89       	ldd	r27, Y+22	; 0x16
    2548:	89 2b       	or	r24, r25
    254a:	8a 2b       	or	r24, r26
    254c:	8b 2b       	or	r24, r27
    254e:	09 f4       	brne	.+2      	; 0x2552 <find_volume+0x3d8>
    2550:	bb c1       	rjmp	.+886    	; 0x28c8 <find_volume+0x74e>
    2552:	81 e0       	ldi	r24, 0x01	; 1
    2554:	89 83       	std	Y+1, r24	; 0x01
    2556:	8b 89       	ldd	r24, Y+19	; 0x13
    2558:	9c 89       	ldd	r25, Y+20	; 0x14
    255a:	ad 89       	ldd	r26, Y+21	; 0x15
    255c:	be 89       	ldd	r27, Y+22	; 0x16
    255e:	86 3f       	cpi	r24, 0xF6	; 246
    2560:	9f 40       	sbci	r25, 0x0F	; 15
    2562:	a1 05       	cpc	r26, r1
    2564:	b1 05       	cpc	r27, r1
    2566:	10 f0       	brcs	.+4      	; 0x256c <find_volume+0x3f2>
    2568:	82 e0       	ldi	r24, 0x02	; 2
    256a:	89 83       	std	Y+1, r24	; 0x01
    256c:	8b 89       	ldd	r24, Y+19	; 0x13
    256e:	9c 89       	ldd	r25, Y+20	; 0x14
    2570:	ad 89       	ldd	r26, Y+21	; 0x15
    2572:	be 89       	ldd	r27, Y+22	; 0x16
    2574:	86 3f       	cpi	r24, 0xF6	; 246
    2576:	9f 4f       	sbci	r25, 0xFF	; 255
    2578:	a1 05       	cpc	r26, r1
    257a:	b1 05       	cpc	r27, r1
    257c:	10 f0       	brcs	.+4      	; 0x2582 <find_volume+0x408>
    257e:	83 e0       	ldi	r24, 0x03	; 3
    2580:	89 83       	std	Y+1, r24	; 0x01
    2582:	8b 89       	ldd	r24, Y+19	; 0x13
    2584:	9c 89       	ldd	r25, Y+20	; 0x14
    2586:	ad 89       	ldd	r26, Y+21	; 0x15
    2588:	be 89       	ldd	r27, Y+22	; 0x16
    258a:	02 96       	adiw	r24, 0x02	; 2
    258c:	a1 1d       	adc	r26, r1
    258e:	b1 1d       	adc	r27, r1
    2590:	f8 01       	movw	r30, r16
    2592:	82 8b       	std	Z+18, r24	; 0x12
    2594:	93 8b       	std	Z+19, r25	; 0x13
    2596:	a4 8b       	std	Z+20, r26	; 0x14
    2598:	b5 8b       	std	Z+21, r27	; 0x15
    259a:	8b 81       	ldd	r24, Y+3	; 0x03
    259c:	9c 81       	ldd	r25, Y+4	; 0x04
    259e:	ad 81       	ldd	r26, Y+5	; 0x05
    25a0:	be 81       	ldd	r27, Y+6	; 0x06
    25a2:	82 8f       	std	Z+26, r24	; 0x1a
    25a4:	93 8f       	std	Z+27, r25	; 0x1b
    25a6:	a4 8f       	std	Z+28, r26	; 0x1c
    25a8:	b5 8f       	std	Z+29, r27	; 0x1d
    25aa:	2b 8d       	ldd	r18, Y+27	; 0x1b
    25ac:	3c 8d       	ldd	r19, Y+28	; 0x1c
    25ae:	8b 81       	ldd	r24, Y+3	; 0x03
    25b0:	9c 81       	ldd	r25, Y+4	; 0x04
    25b2:	ad 81       	ldd	r26, Y+5	; 0x05
    25b4:	be 81       	ldd	r27, Y+6	; 0x06
    25b6:	82 0f       	add	r24, r18
    25b8:	93 1f       	adc	r25, r19
    25ba:	a1 1d       	adc	r26, r1
    25bc:	b1 1d       	adc	r27, r1
    25be:	86 8f       	std	Z+30, r24	; 0x1e
    25c0:	97 8f       	std	Z+31, r25	; 0x1f
    25c2:	a0 a3       	std	Z+32, r26	; 0x20
    25c4:	b1 a3       	std	Z+33, r27	; 0x21
    25c6:	8b 81       	ldd	r24, Y+3	; 0x03
    25c8:	9c 81       	ldd	r25, Y+4	; 0x04
    25ca:	ad 81       	ldd	r26, Y+5	; 0x05
    25cc:	be 81       	ldd	r27, Y+6	; 0x06
    25ce:	4f 85       	ldd	r20, Y+15	; 0x0f
    25d0:	58 89       	ldd	r21, Y+16	; 0x10
    25d2:	69 89       	ldd	r22, Y+17	; 0x11
    25d4:	7a 89       	ldd	r23, Y+18	; 0x12
    25d6:	84 0f       	add	r24, r20
    25d8:	95 1f       	adc	r25, r21
    25da:	a6 1f       	adc	r26, r22
    25dc:	b7 1f       	adc	r27, r23
    25de:	86 a3       	std	Z+38, r24	; 0x26
    25e0:	97 a3       	std	Z+39, r25	; 0x27
    25e2:	a0 a7       	std	Z+40, r26	; 0x28
    25e4:	b1 a7       	std	Z+41, r27	; 0x29
    25e6:	89 81       	ldd	r24, Y+1	; 0x01
    25e8:	83 30       	cpi	r24, 0x03	; 3
    25ea:	a9 f5       	brne	.+106    	; 0x2656 <find_volume+0x4dc>
    25ec:	80 85       	ldd	r24, Z+8	; 0x08
    25ee:	91 85       	ldd	r25, Z+9	; 0x09
    25f0:	89 2b       	or	r24, r25
    25f2:	09 f0       	breq	.+2      	; 0x25f6 <find_volume+0x47c>
    25f4:	6b c1       	rjmp	.+726    	; 0x28cc <find_volume+0x752>
    25f6:	e3 5a       	subi	r30, 0xA3	; 163
    25f8:	ff 4f       	sbci	r31, 0xFF	; 255
    25fa:	30 81       	ld	r19, Z
    25fc:	31 97       	sbiw	r30, 0x01	; 1
    25fe:	80 81       	ld	r24, Z
    2600:	31 97       	sbiw	r30, 0x01	; 1
    2602:	40 81       	ld	r20, Z
    2604:	31 97       	sbiw	r30, 0x01	; 1
    2606:	20 81       	ld	r18, Z
    2608:	90 e0       	ldi	r25, 0x00	; 0
    260a:	a0 e0       	ldi	r26, 0x00	; 0
    260c:	b0 e0       	ldi	r27, 0x00	; 0
    260e:	dc 01       	movw	r26, r24
    2610:	99 27       	eor	r25, r25
    2612:	88 27       	eor	r24, r24
    2614:	b3 2b       	or	r27, r19
    2616:	82 2b       	or	r24, r18
    2618:	50 e0       	ldi	r21, 0x00	; 0
    261a:	54 2f       	mov	r21, r20
    261c:	44 27       	eor	r20, r20
    261e:	60 e0       	ldi	r22, 0x00	; 0
    2620:	70 e0       	ldi	r23, 0x00	; 0
    2622:	84 2b       	or	r24, r20
    2624:	95 2b       	or	r25, r21
    2626:	a6 2b       	or	r26, r22
    2628:	b7 2b       	or	r27, r23
    262a:	f8 01       	movw	r30, r16
    262c:	82 a3       	std	Z+34, r24	; 0x22
    262e:	93 a3       	std	Z+35, r25	; 0x23
    2630:	a4 a3       	std	Z+36, r26	; 0x24
    2632:	b5 a3       	std	Z+37, r27	; 0x25
    2634:	82 89       	ldd	r24, Z+18	; 0x12
    2636:	93 89       	ldd	r25, Z+19	; 0x13
    2638:	a4 89       	ldd	r26, Z+20	; 0x14
    263a:	b5 89       	ldd	r27, Z+21	; 0x15
    263c:	88 0f       	add	r24, r24
    263e:	99 1f       	adc	r25, r25
    2640:	aa 1f       	adc	r26, r26
    2642:	bb 1f       	adc	r27, r27
    2644:	88 0f       	add	r24, r24
    2646:	99 1f       	adc	r25, r25
    2648:	aa 1f       	adc	r26, r26
    264a:	bb 1f       	adc	r27, r27
    264c:	8f 8b       	std	Y+23, r24	; 0x17
    264e:	98 8f       	std	Y+24, r25	; 0x18
    2650:	a9 8f       	std	Y+25, r26	; 0x19
    2652:	ba 8f       	std	Y+26, r27	; 0x1a
    2654:	42 c0       	rjmp	.+132    	; 0x26da <find_volume+0x560>
    2656:	f8 01       	movw	r30, r16
    2658:	80 85       	ldd	r24, Z+8	; 0x08
    265a:	91 85       	ldd	r25, Z+9	; 0x09
    265c:	89 2b       	or	r24, r25
    265e:	09 f4       	brne	.+2      	; 0x2662 <find_volume+0x4e8>
    2660:	37 c1       	rjmp	.+622    	; 0x28d0 <find_volume+0x756>
    2662:	86 8d       	ldd	r24, Z+30	; 0x1e
    2664:	97 8d       	ldd	r25, Z+31	; 0x1f
    2666:	a0 a1       	ldd	r26, Z+32	; 0x20
    2668:	b1 a1       	ldd	r27, Z+33	; 0x21
    266a:	4f 81       	ldd	r20, Y+7	; 0x07
    266c:	58 85       	ldd	r21, Y+8	; 0x08
    266e:	69 85       	ldd	r22, Y+9	; 0x09
    2670:	7a 85       	ldd	r23, Y+10	; 0x0a
    2672:	84 0f       	add	r24, r20
    2674:	95 1f       	adc	r25, r21
    2676:	a6 1f       	adc	r26, r22
    2678:	b7 1f       	adc	r27, r23
    267a:	82 a3       	std	Z+34, r24	; 0x22
    267c:	93 a3       	std	Z+35, r25	; 0x23
    267e:	a4 a3       	std	Z+36, r26	; 0x24
    2680:	b5 a3       	std	Z+37, r27	; 0x25
    2682:	89 81       	ldd	r24, Y+1	; 0x01
    2684:	82 30       	cpi	r24, 0x02	; 2
    2686:	49 f4       	brne	.+18     	; 0x269a <find_volume+0x520>
    2688:	82 89       	ldd	r24, Z+18	; 0x12
    268a:	93 89       	ldd	r25, Z+19	; 0x13
    268c:	a4 89       	ldd	r26, Z+20	; 0x14
    268e:	b5 89       	ldd	r27, Z+21	; 0x15
    2690:	88 0f       	add	r24, r24
    2692:	99 1f       	adc	r25, r25
    2694:	aa 1f       	adc	r26, r26
    2696:	bb 1f       	adc	r27, r27
    2698:	1c c0       	rjmp	.+56     	; 0x26d2 <find_volume+0x558>
    269a:	f8 01       	movw	r30, r16
    269c:	22 89       	ldd	r18, Z+18	; 0x12
    269e:	33 89       	ldd	r19, Z+19	; 0x13
    26a0:	44 89       	ldd	r20, Z+20	; 0x14
    26a2:	55 89       	ldd	r21, Z+21	; 0x15
    26a4:	c2 88       	ldd	r12, Z+18	; 0x12
    26a6:	d3 88       	ldd	r13, Z+19	; 0x13
    26a8:	e4 88       	ldd	r14, Z+20	; 0x14
    26aa:	f5 88       	ldd	r15, Z+21	; 0x15
    26ac:	a3 e0       	ldi	r26, 0x03	; 3
    26ae:	b0 e0       	ldi	r27, 0x00	; 0
    26b0:	0e 94 c7 3c 	call	0x798e	; 0x798e <__muluhisi3>
    26b4:	dc 01       	movw	r26, r24
    26b6:	cb 01       	movw	r24, r22
    26b8:	b6 95       	lsr	r27
    26ba:	a7 95       	ror	r26
    26bc:	97 95       	ror	r25
    26be:	87 95       	ror	r24
    26c0:	f1 e0       	ldi	r31, 0x01	; 1
    26c2:	cf 22       	and	r12, r31
    26c4:	dd 24       	eor	r13, r13
    26c6:	ee 24       	eor	r14, r14
    26c8:	ff 24       	eor	r15, r15
    26ca:	8c 0d       	add	r24, r12
    26cc:	9d 1d       	adc	r25, r13
    26ce:	ae 1d       	adc	r26, r14
    26d0:	bf 1d       	adc	r27, r15
    26d2:	8f 8b       	std	Y+23, r24	; 0x17
    26d4:	98 8f       	std	Y+24, r25	; 0x18
    26d6:	a9 8f       	std	Y+25, r26	; 0x19
    26d8:	ba 8f       	std	Y+26, r27	; 0x1a
    26da:	f8 01       	movw	r30, r16
    26dc:	46 89       	ldd	r20, Z+22	; 0x16
    26de:	57 89       	ldd	r21, Z+23	; 0x17
    26e0:	60 8d       	ldd	r22, Z+24	; 0x18
    26e2:	71 8d       	ldd	r23, Z+25	; 0x19
    26e4:	8f 89       	ldd	r24, Y+23	; 0x17
    26e6:	98 8d       	ldd	r25, Y+24	; 0x18
    26e8:	a9 8d       	ldd	r26, Y+25	; 0x19
    26ea:	ba 8d       	ldd	r27, Y+26	; 0x1a
    26ec:	81 50       	subi	r24, 0x01	; 1
    26ee:	9e 4f       	sbci	r25, 0xFE	; 254
    26f0:	af 4f       	sbci	r26, 0xFF	; 255
    26f2:	bf 4f       	sbci	r27, 0xFF	; 255
    26f4:	07 2e       	mov	r0, r23
    26f6:	79 e0       	ldi	r23, 0x09	; 9
    26f8:	b6 95       	lsr	r27
    26fa:	a7 95       	ror	r26
    26fc:	97 95       	ror	r25
    26fe:	87 95       	ror	r24
    2700:	7a 95       	dec	r23
    2702:	d1 f7       	brne	.-12     	; 0x26f8 <find_volume+0x57e>
    2704:	70 2d       	mov	r23, r0
    2706:	48 17       	cp	r20, r24
    2708:	59 07       	cpc	r21, r25
    270a:	6a 07       	cpc	r22, r26
    270c:	7b 07       	cpc	r23, r27
    270e:	08 f4       	brcc	.+2      	; 0x2712 <find_volume+0x598>
    2710:	e1 c0       	rjmp	.+450    	; 0x28d4 <find_volume+0x75a>
    2712:	8f ef       	ldi	r24, 0xFF	; 255
    2714:	9f ef       	ldi	r25, 0xFF	; 255
    2716:	dc 01       	movw	r26, r24
    2718:	86 87       	std	Z+14, r24	; 0x0e
    271a:	97 87       	std	Z+15, r25	; 0x0f
    271c:	a0 8b       	std	Z+16, r26	; 0x10
    271e:	b1 8b       	std	Z+17, r27	; 0x11
    2720:	82 87       	std	Z+10, r24	; 0x0a
    2722:	93 87       	std	Z+11, r25	; 0x0b
    2724:	a4 87       	std	Z+12, r26	; 0x0c
    2726:	b5 87       	std	Z+13, r27	; 0x0d
    2728:	80 e8       	ldi	r24, 0x80	; 128
    272a:	85 83       	std	Z+5, r24	; 0x05
    272c:	89 81       	ldd	r24, Y+1	; 0x01
    272e:	83 30       	cpi	r24, 0x03	; 3
    2730:	09 f0       	breq	.+2      	; 0x2734 <find_volume+0x5ba>
    2732:	9c c0       	rjmp	.+312    	; 0x286c <find_volume+0x6f2>
    2734:	e1 5a       	subi	r30, 0xA1	; 161
    2736:	ff 4f       	sbci	r31, 0xFF	; 255
    2738:	20 81       	ld	r18, Z
    273a:	31 97       	sbiw	r30, 0x01	; 1
    273c:	80 81       	ld	r24, Z
    273e:	90 e0       	ldi	r25, 0x00	; 0
    2740:	92 2b       	or	r25, r18
    2742:	01 97       	sbiw	r24, 0x01	; 1
    2744:	09 f0       	breq	.+2      	; 0x2748 <find_volume+0x5ce>
    2746:	92 c0       	rjmp	.+292    	; 0x286c <find_volume+0x6f2>
    2748:	4b 81       	ldd	r20, Y+3	; 0x03
    274a:	5c 81       	ldd	r21, Y+4	; 0x04
    274c:	6d 81       	ldd	r22, Y+5	; 0x05
    274e:	7e 81       	ldd	r23, Y+6	; 0x06
    2750:	4f 5f       	subi	r20, 0xFF	; 255
    2752:	5f 4f       	sbci	r21, 0xFF	; 255
    2754:	6f 4f       	sbci	r22, 0xFF	; 255
    2756:	7f 4f       	sbci	r23, 0xFF	; 255
    2758:	c8 01       	movw	r24, r16
    275a:	26 dc       	rcall	.-1972   	; 0x1fa8 <move_window>
    275c:	81 11       	cpse	r24, r1
    275e:	86 c0       	rjmp	.+268    	; 0x286c <find_volume+0x6f2>
    2760:	f8 01       	movw	r30, r16
    2762:	15 82       	std	Z+5, r1	; 0x05
    2764:	e3 5d       	subi	r30, 0xD3	; 211
    2766:	fd 4f       	sbci	r31, 0xFD	; 253
    2768:	20 81       	ld	r18, Z
    276a:	31 97       	sbiw	r30, 0x01	; 1
    276c:	80 81       	ld	r24, Z
    276e:	90 e0       	ldi	r25, 0x00	; 0
    2770:	92 2b       	or	r25, r18
    2772:	85 35       	cpi	r24, 0x55	; 85
    2774:	9a 4a       	sbci	r25, 0xAA	; 170
    2776:	09 f0       	breq	.+2      	; 0x277a <find_volume+0x600>
    2778:	79 c0       	rjmp	.+242    	; 0x286c <find_volume+0x6f2>
    277a:	f8 01       	movw	r30, r16
    277c:	31 a9       	ldd	r19, Z+49	; 0x31
    277e:	80 a9       	ldd	r24, Z+48	; 0x30
    2780:	47 a5       	ldd	r20, Z+47	; 0x2f
    2782:	26 a5       	ldd	r18, Z+46	; 0x2e
    2784:	90 e0       	ldi	r25, 0x00	; 0
    2786:	a0 e0       	ldi	r26, 0x00	; 0
    2788:	b0 e0       	ldi	r27, 0x00	; 0
    278a:	dc 01       	movw	r26, r24
    278c:	99 27       	eor	r25, r25
    278e:	88 27       	eor	r24, r24
    2790:	b3 2b       	or	r27, r19
    2792:	82 2b       	or	r24, r18
    2794:	50 e0       	ldi	r21, 0x00	; 0
    2796:	54 2f       	mov	r21, r20
    2798:	44 27       	eor	r20, r20
    279a:	60 e0       	ldi	r22, 0x00	; 0
    279c:	70 e0       	ldi	r23, 0x00	; 0
    279e:	84 2b       	or	r24, r20
    27a0:	95 2b       	or	r25, r21
    27a2:	a6 2b       	or	r26, r22
    27a4:	b7 2b       	or	r27, r23
    27a6:	82 35       	cpi	r24, 0x52	; 82
    27a8:	92 45       	sbci	r25, 0x52	; 82
    27aa:	a1 46       	sbci	r26, 0x61	; 97
    27ac:	b1 44       	sbci	r27, 0x41	; 65
    27ae:	09 f0       	breq	.+2      	; 0x27b2 <find_volume+0x638>
    27b0:	5d c0       	rjmp	.+186    	; 0x286c <find_volume+0x6f2>
    27b2:	f8 01       	movw	r30, r16
    27b4:	eb 5e       	subi	r30, 0xEB	; 235
    27b6:	fd 4f       	sbci	r31, 0xFD	; 253
    27b8:	30 81       	ld	r19, Z
    27ba:	31 97       	sbiw	r30, 0x01	; 1
    27bc:	80 81       	ld	r24, Z
    27be:	31 97       	sbiw	r30, 0x01	; 1
    27c0:	40 81       	ld	r20, Z
    27c2:	31 97       	sbiw	r30, 0x01	; 1
    27c4:	20 81       	ld	r18, Z
    27c6:	90 e0       	ldi	r25, 0x00	; 0
    27c8:	a0 e0       	ldi	r26, 0x00	; 0
    27ca:	b0 e0       	ldi	r27, 0x00	; 0
    27cc:	dc 01       	movw	r26, r24
    27ce:	99 27       	eor	r25, r25
    27d0:	88 27       	eor	r24, r24
    27d2:	b3 2b       	or	r27, r19
    27d4:	82 2b       	or	r24, r18
    27d6:	50 e0       	ldi	r21, 0x00	; 0
    27d8:	54 2f       	mov	r21, r20
    27da:	44 27       	eor	r20, r20
    27dc:	60 e0       	ldi	r22, 0x00	; 0
    27de:	70 e0       	ldi	r23, 0x00	; 0
    27e0:	84 2b       	or	r24, r20
    27e2:	95 2b       	or	r25, r21
    27e4:	a6 2b       	or	r26, r22
    27e6:	b7 2b       	or	r27, r23
    27e8:	82 37       	cpi	r24, 0x72	; 114
    27ea:	92 47       	sbci	r25, 0x72	; 114
    27ec:	a1 44       	sbci	r26, 0x41	; 65
    27ee:	b1 46       	sbci	r27, 0x61	; 97
    27f0:	e9 f5       	brne	.+122    	; 0x286c <find_volume+0x6f2>
    27f2:	37 96       	adiw	r30, 0x07	; 7
    27f4:	30 81       	ld	r19, Z
    27f6:	31 97       	sbiw	r30, 0x01	; 1
    27f8:	80 81       	ld	r24, Z
    27fa:	31 97       	sbiw	r30, 0x01	; 1
    27fc:	40 81       	ld	r20, Z
    27fe:	31 97       	sbiw	r30, 0x01	; 1
    2800:	20 81       	ld	r18, Z
    2802:	90 e0       	ldi	r25, 0x00	; 0
    2804:	a0 e0       	ldi	r26, 0x00	; 0
    2806:	b0 e0       	ldi	r27, 0x00	; 0
    2808:	dc 01       	movw	r26, r24
    280a:	99 27       	eor	r25, r25
    280c:	88 27       	eor	r24, r24
    280e:	b3 2b       	or	r27, r19
    2810:	82 2b       	or	r24, r18
    2812:	50 e0       	ldi	r21, 0x00	; 0
    2814:	54 2f       	mov	r21, r20
    2816:	44 27       	eor	r20, r20
    2818:	60 e0       	ldi	r22, 0x00	; 0
    281a:	70 e0       	ldi	r23, 0x00	; 0
    281c:	84 2b       	or	r24, r20
    281e:	95 2b       	or	r25, r21
    2820:	a6 2b       	or	r26, r22
    2822:	b7 2b       	or	r27, r23
    2824:	f8 01       	movw	r30, r16
    2826:	86 87       	std	Z+14, r24	; 0x0e
    2828:	97 87       	std	Z+15, r25	; 0x0f
    282a:	a0 8b       	std	Z+16, r26	; 0x10
    282c:	b1 8b       	std	Z+17, r27	; 0x11
    282e:	e3 5e       	subi	r30, 0xE3	; 227
    2830:	fd 4f       	sbci	r31, 0xFD	; 253
    2832:	30 81       	ld	r19, Z
    2834:	31 97       	sbiw	r30, 0x01	; 1
    2836:	80 81       	ld	r24, Z
    2838:	31 97       	sbiw	r30, 0x01	; 1
    283a:	40 81       	ld	r20, Z
    283c:	31 97       	sbiw	r30, 0x01	; 1
    283e:	20 81       	ld	r18, Z
    2840:	90 e0       	ldi	r25, 0x00	; 0
    2842:	a0 e0       	ldi	r26, 0x00	; 0
    2844:	b0 e0       	ldi	r27, 0x00	; 0
    2846:	dc 01       	movw	r26, r24
    2848:	99 27       	eor	r25, r25
    284a:	88 27       	eor	r24, r24
    284c:	b3 2b       	or	r27, r19
    284e:	82 2b       	or	r24, r18
    2850:	50 e0       	ldi	r21, 0x00	; 0
    2852:	54 2f       	mov	r21, r20
    2854:	44 27       	eor	r20, r20
    2856:	60 e0       	ldi	r22, 0x00	; 0
    2858:	70 e0       	ldi	r23, 0x00	; 0
    285a:	84 2b       	or	r24, r20
    285c:	95 2b       	or	r25, r21
    285e:	a6 2b       	or	r26, r22
    2860:	b7 2b       	or	r27, r23
    2862:	f8 01       	movw	r30, r16
    2864:	82 87       	std	Z+10, r24	; 0x0a
    2866:	93 87       	std	Z+11, r25	; 0x0b
    2868:	a4 87       	std	Z+12, r26	; 0x0c
    286a:	b5 87       	std	Z+13, r27	; 0x0d
    286c:	89 81       	ldd	r24, Y+1	; 0x01
    286e:	f8 01       	movw	r30, r16
    2870:	80 83       	st	Z, r24
    2872:	80 91 5a 21 	lds	r24, 0x215A
    2876:	90 91 5b 21 	lds	r25, 0x215B
    287a:	01 96       	adiw	r24, 0x01	; 1
    287c:	80 93 5a 21 	sts	0x215A, r24
    2880:	90 93 5b 21 	sts	0x215B, r25
    2884:	86 83       	std	Z+6, r24	; 0x06
    2886:	97 83       	std	Z+7, r25	; 0x07
    2888:	80 e0       	ldi	r24, 0x00	; 0
    288a:	25 c0       	rjmp	.+74     	; 0x28d6 <find_volume+0x75c>
    288c:	8b e0       	ldi	r24, 0x0B	; 11
    288e:	23 c0       	rjmp	.+70     	; 0x28d6 <find_volume+0x75c>
    2890:	8c e0       	ldi	r24, 0x0C	; 12
    2892:	21 c0       	rjmp	.+66     	; 0x28d6 <find_volume+0x75c>
    2894:	80 e0       	ldi	r24, 0x00	; 0
    2896:	1f c0       	rjmp	.+62     	; 0x28d6 <find_volume+0x75c>
    2898:	8a e0       	ldi	r24, 0x0A	; 10
    289a:	1d c0       	rjmp	.+58     	; 0x28d6 <find_volume+0x75c>
    289c:	83 e0       	ldi	r24, 0x03	; 3
    289e:	1b c0       	rjmp	.+54     	; 0x28d6 <find_volume+0x75c>
    28a0:	8a e0       	ldi	r24, 0x0A	; 10
    28a2:	19 c0       	rjmp	.+50     	; 0x28d6 <find_volume+0x75c>
    28a4:	81 e0       	ldi	r24, 0x01	; 1
    28a6:	17 c0       	rjmp	.+46     	; 0x28d6 <find_volume+0x75c>
    28a8:	8d e0       	ldi	r24, 0x0D	; 13
    28aa:	15 c0       	rjmp	.+42     	; 0x28d6 <find_volume+0x75c>
    28ac:	8d e0       	ldi	r24, 0x0D	; 13
    28ae:	13 c0       	rjmp	.+38     	; 0x28d6 <find_volume+0x75c>
    28b0:	8d e0       	ldi	r24, 0x0D	; 13
    28b2:	11 c0       	rjmp	.+34     	; 0x28d6 <find_volume+0x75c>
    28b4:	8d e0       	ldi	r24, 0x0D	; 13
    28b6:	0f c0       	rjmp	.+30     	; 0x28d6 <find_volume+0x75c>
    28b8:	8d e0       	ldi	r24, 0x0D	; 13
    28ba:	0d c0       	rjmp	.+26     	; 0x28d6 <find_volume+0x75c>
    28bc:	8d e0       	ldi	r24, 0x0D	; 13
    28be:	0b c0       	rjmp	.+22     	; 0x28d6 <find_volume+0x75c>
    28c0:	8d e0       	ldi	r24, 0x0D	; 13
    28c2:	09 c0       	rjmp	.+18     	; 0x28d6 <find_volume+0x75c>
    28c4:	8d e0       	ldi	r24, 0x0D	; 13
    28c6:	07 c0       	rjmp	.+14     	; 0x28d6 <find_volume+0x75c>
    28c8:	8d e0       	ldi	r24, 0x0D	; 13
    28ca:	05 c0       	rjmp	.+10     	; 0x28d6 <find_volume+0x75c>
    28cc:	8d e0       	ldi	r24, 0x0D	; 13
    28ce:	03 c0       	rjmp	.+6      	; 0x28d6 <find_volume+0x75c>
    28d0:	8d e0       	ldi	r24, 0x0D	; 13
    28d2:	01 c0       	rjmp	.+2      	; 0x28d6 <find_volume+0x75c>
    28d4:	8d e0       	ldi	r24, 0x0D	; 13
    28d6:	af 96       	adiw	r28, 0x2f	; 47
    28d8:	cd bf       	out	0x3d, r28	; 61
    28da:	de bf       	out	0x3e, r29	; 62
    28dc:	df 91       	pop	r29
    28de:	cf 91       	pop	r28
    28e0:	1f 91       	pop	r17
    28e2:	0f 91       	pop	r16
    28e4:	ff 90       	pop	r15
    28e6:	ef 90       	pop	r14
    28e8:	df 90       	pop	r13
    28ea:	cf 90       	pop	r12
    28ec:	08 95       	ret

000028ee <sync_fs>:
    28ee:	ef 92       	push	r14
    28f0:	ff 92       	push	r15
    28f2:	0f 93       	push	r16
    28f4:	1f 93       	push	r17
    28f6:	cf 93       	push	r28
    28f8:	df 93       	push	r29
    28fa:	ec 01       	movw	r28, r24
    28fc:	d1 da       	rcall	.-2654   	; 0x1ea0 <sync_window>
    28fe:	98 2f       	mov	r25, r24
    2900:	81 11       	cpse	r24, r1
    2902:	8c c0       	rjmp	.+280    	; 0x2a1c <sync_fs+0x12e>
    2904:	88 81       	ld	r24, Y
    2906:	83 30       	cpi	r24, 0x03	; 3
    2908:	09 f0       	breq	.+2      	; 0x290c <sync_fs+0x1e>
    290a:	7e c0       	rjmp	.+252    	; 0x2a08 <sync_fs+0x11a>
    290c:	8d 81       	ldd	r24, Y+5	; 0x05
    290e:	81 30       	cpi	r24, 0x01	; 1
    2910:	09 f0       	breq	.+2      	; 0x2914 <sync_fs+0x26>
    2912:	7a c0       	rjmp	.+244    	; 0x2a08 <sync_fs+0x11a>
    2914:	40 e0       	ldi	r20, 0x00	; 0
    2916:	52 e0       	ldi	r21, 0x02	; 2
    2918:	60 e0       	ldi	r22, 0x00	; 0
    291a:	70 e0       	ldi	r23, 0x00	; 0
    291c:	7e 01       	movw	r14, r28
    291e:	8e e2       	ldi	r24, 0x2E	; 46
    2920:	e8 0e       	add	r14, r24
    2922:	f1 1c       	adc	r15, r1
    2924:	c7 01       	movw	r24, r14
    2926:	ea d9       	rcall	.-3116   	; 0x1cfc <mem_set>
    2928:	85 e5       	ldi	r24, 0x55	; 85
    292a:	fe 01       	movw	r30, r28
    292c:	e4 5d       	subi	r30, 0xD4	; 212
    292e:	fd 4f       	sbci	r31, 0xFD	; 253
    2930:	80 83       	st	Z, r24
    2932:	8a ea       	ldi	r24, 0xAA	; 170
    2934:	31 96       	adiw	r30, 0x01	; 1
    2936:	80 83       	st	Z, r24
    2938:	82 e5       	ldi	r24, 0x52	; 82
    293a:	8e a7       	std	Y+46, r24	; 0x2e
    293c:	8f a7       	std	Y+47, r24	; 0x2f
    293e:	81 e6       	ldi	r24, 0x61	; 97
    2940:	88 ab       	std	Y+48, r24	; 0x30
    2942:	91 e4       	ldi	r25, 0x41	; 65
    2944:	99 ab       	std	Y+49, r25	; 0x31
    2946:	22 e7       	ldi	r18, 0x72	; 114
    2948:	7b 97       	sbiw	r30, 0x1b	; 27
    294a:	20 83       	st	Z, r18
    294c:	31 96       	adiw	r30, 0x01	; 1
    294e:	20 83       	st	Z, r18
    2950:	31 96       	adiw	r30, 0x01	; 1
    2952:	90 83       	st	Z, r25
    2954:	31 96       	adiw	r30, 0x01	; 1
    2956:	80 83       	st	Z, r24
    2958:	8e 85       	ldd	r24, Y+14	; 0x0e
    295a:	9f 85       	ldd	r25, Y+15	; 0x0f
    295c:	a8 89       	ldd	r26, Y+16	; 0x10
    295e:	b9 89       	ldd	r27, Y+17	; 0x11
    2960:	31 96       	adiw	r30, 0x01	; 1
    2962:	80 83       	st	Z, r24
    2964:	8e 85       	ldd	r24, Y+14	; 0x0e
    2966:	9f 85       	ldd	r25, Y+15	; 0x0f
    2968:	a8 89       	ldd	r26, Y+16	; 0x10
    296a:	b9 89       	ldd	r27, Y+17	; 0x11
    296c:	89 2f       	mov	r24, r25
    296e:	99 27       	eor	r25, r25
    2970:	31 96       	adiw	r30, 0x01	; 1
    2972:	80 83       	st	Z, r24
    2974:	8e 85       	ldd	r24, Y+14	; 0x0e
    2976:	9f 85       	ldd	r25, Y+15	; 0x0f
    2978:	a8 89       	ldd	r26, Y+16	; 0x10
    297a:	b9 89       	ldd	r27, Y+17	; 0x11
    297c:	cd 01       	movw	r24, r26
    297e:	aa 27       	eor	r26, r26
    2980:	bb 27       	eor	r27, r27
    2982:	31 96       	adiw	r30, 0x01	; 1
    2984:	80 83       	st	Z, r24
    2986:	8e 85       	ldd	r24, Y+14	; 0x0e
    2988:	9f 85       	ldd	r25, Y+15	; 0x0f
    298a:	a8 89       	ldd	r26, Y+16	; 0x10
    298c:	b9 89       	ldd	r27, Y+17	; 0x11
    298e:	8b 2f       	mov	r24, r27
    2990:	99 27       	eor	r25, r25
    2992:	aa 27       	eor	r26, r26
    2994:	bb 27       	eor	r27, r27
    2996:	31 96       	adiw	r30, 0x01	; 1
    2998:	80 83       	st	Z, r24
    299a:	8a 85       	ldd	r24, Y+10	; 0x0a
    299c:	9b 85       	ldd	r25, Y+11	; 0x0b
    299e:	ac 85       	ldd	r26, Y+12	; 0x0c
    29a0:	bd 85       	ldd	r27, Y+13	; 0x0d
    29a2:	31 96       	adiw	r30, 0x01	; 1
    29a4:	80 83       	st	Z, r24
    29a6:	8a 85       	ldd	r24, Y+10	; 0x0a
    29a8:	9b 85       	ldd	r25, Y+11	; 0x0b
    29aa:	ac 85       	ldd	r26, Y+12	; 0x0c
    29ac:	bd 85       	ldd	r27, Y+13	; 0x0d
    29ae:	89 2f       	mov	r24, r25
    29b0:	99 27       	eor	r25, r25
    29b2:	31 96       	adiw	r30, 0x01	; 1
    29b4:	80 83       	st	Z, r24
    29b6:	8a 85       	ldd	r24, Y+10	; 0x0a
    29b8:	9b 85       	ldd	r25, Y+11	; 0x0b
    29ba:	ac 85       	ldd	r26, Y+12	; 0x0c
    29bc:	bd 85       	ldd	r27, Y+13	; 0x0d
    29be:	cd 01       	movw	r24, r26
    29c0:	aa 27       	eor	r26, r26
    29c2:	bb 27       	eor	r27, r27
    29c4:	31 96       	adiw	r30, 0x01	; 1
    29c6:	80 83       	st	Z, r24
    29c8:	8a 85       	ldd	r24, Y+10	; 0x0a
    29ca:	9b 85       	ldd	r25, Y+11	; 0x0b
    29cc:	ac 85       	ldd	r26, Y+12	; 0x0c
    29ce:	bd 85       	ldd	r27, Y+13	; 0x0d
    29d0:	8b 2f       	mov	r24, r27
    29d2:	99 27       	eor	r25, r25
    29d4:	aa 27       	eor	r26, r26
    29d6:	bb 27       	eor	r27, r27
    29d8:	31 96       	adiw	r30, 0x01	; 1
    29da:	80 83       	st	Z, r24
    29dc:	8a 8d       	ldd	r24, Y+26	; 0x1a
    29de:	9b 8d       	ldd	r25, Y+27	; 0x1b
    29e0:	ac 8d       	ldd	r26, Y+28	; 0x1c
    29e2:	bd 8d       	ldd	r27, Y+29	; 0x1d
    29e4:	01 96       	adiw	r24, 0x01	; 1
    29e6:	a1 1d       	adc	r26, r1
    29e8:	b1 1d       	adc	r27, r1
    29ea:	8a a7       	std	Y+42, r24	; 0x2a
    29ec:	9b a7       	std	Y+43, r25	; 0x2b
    29ee:	ac a7       	std	Y+44, r26	; 0x2c
    29f0:	bd a7       	std	Y+45, r27	; 0x2d
    29f2:	2a a5       	ldd	r18, Y+42	; 0x2a
    29f4:	3b a5       	ldd	r19, Y+43	; 0x2b
    29f6:	4c a5       	ldd	r20, Y+44	; 0x2c
    29f8:	5d a5       	ldd	r21, Y+45	; 0x2d
    29fa:	89 81       	ldd	r24, Y+1	; 0x01
    29fc:	01 e0       	ldi	r16, 0x01	; 1
    29fe:	10 e0       	ldi	r17, 0x00	; 0
    2a00:	b7 01       	movw	r22, r14
    2a02:	0e 94 b3 37 	call	0x6f66	; 0x6f66 <disk_write>
    2a06:	1d 82       	std	Y+5, r1	; 0x05
    2a08:	89 81       	ldd	r24, Y+1	; 0x01
    2a0a:	40 e0       	ldi	r20, 0x00	; 0
    2a0c:	50 e0       	ldi	r21, 0x00	; 0
    2a0e:	60 e0       	ldi	r22, 0x00	; 0
    2a10:	0e 94 d5 39 	call	0x73aa	; 0x73aa <disk_ioctl>
    2a14:	91 e0       	ldi	r25, 0x01	; 1
    2a16:	81 11       	cpse	r24, r1
    2a18:	01 c0       	rjmp	.+2      	; 0x2a1c <sync_fs+0x12e>
    2a1a:	90 e0       	ldi	r25, 0x00	; 0
    2a1c:	89 2f       	mov	r24, r25
    2a1e:	df 91       	pop	r29
    2a20:	cf 91       	pop	r28
    2a22:	1f 91       	pop	r17
    2a24:	0f 91       	pop	r16
    2a26:	ff 90       	pop	r15
    2a28:	ef 90       	pop	r14
    2a2a:	08 95       	ret

00002a2c <clust2sect>:
    2a2c:	cf 92       	push	r12
    2a2e:	df 92       	push	r13
    2a30:	ef 92       	push	r14
    2a32:	ff 92       	push	r15
    2a34:	0f 93       	push	r16
    2a36:	1f 93       	push	r17
    2a38:	cf 93       	push	r28
    2a3a:	df 93       	push	r29
    2a3c:	00 d0       	rcall	.+0      	; 0x2a3e <clust2sect+0x12>
    2a3e:	1f 92       	push	r1
    2a40:	cd b7       	in	r28, 0x3d	; 61
    2a42:	de b7       	in	r29, 0x3e	; 62
    2a44:	fc 01       	movw	r30, r24
    2a46:	49 83       	std	Y+1, r20	; 0x01
    2a48:	5a 83       	std	Y+2, r21	; 0x02
    2a4a:	6b 83       	std	Y+3, r22	; 0x03
    2a4c:	7c 83       	std	Y+4, r23	; 0x04
    2a4e:	49 81       	ldd	r20, Y+1	; 0x01
    2a50:	5a 81       	ldd	r21, Y+2	; 0x02
    2a52:	6b 81       	ldd	r22, Y+3	; 0x03
    2a54:	7c 81       	ldd	r23, Y+4	; 0x04
    2a56:	42 50       	subi	r20, 0x02	; 2
    2a58:	51 09       	sbc	r21, r1
    2a5a:	61 09       	sbc	r22, r1
    2a5c:	71 09       	sbc	r23, r1
    2a5e:	49 83       	std	Y+1, r20	; 0x01
    2a60:	5a 83       	std	Y+2, r21	; 0x02
    2a62:	6b 83       	std	Y+3, r22	; 0x03
    2a64:	7c 83       	std	Y+4, r23	; 0x04
    2a66:	02 89       	ldd	r16, Z+18	; 0x12
    2a68:	13 89       	ldd	r17, Z+19	; 0x13
    2a6a:	24 89       	ldd	r18, Z+20	; 0x14
    2a6c:	35 89       	ldd	r19, Z+21	; 0x15
    2a6e:	49 81       	ldd	r20, Y+1	; 0x01
    2a70:	5a 81       	ldd	r21, Y+2	; 0x02
    2a72:	6b 81       	ldd	r22, Y+3	; 0x03
    2a74:	7c 81       	ldd	r23, Y+4	; 0x04
    2a76:	02 50       	subi	r16, 0x02	; 2
    2a78:	11 09       	sbc	r17, r1
    2a7a:	21 09       	sbc	r18, r1
    2a7c:	31 09       	sbc	r19, r1
    2a7e:	40 17       	cp	r20, r16
    2a80:	51 07       	cpc	r21, r17
    2a82:	62 07       	cpc	r22, r18
    2a84:	73 07       	cpc	r23, r19
    2a86:	88 f4       	brcc	.+34     	; 0x2aaa <clust2sect+0x7e>
    2a88:	a2 81       	ldd	r26, Z+2	; 0x02
    2a8a:	29 81       	ldd	r18, Y+1	; 0x01
    2a8c:	3a 81       	ldd	r19, Y+2	; 0x02
    2a8e:	4b 81       	ldd	r20, Y+3	; 0x03
    2a90:	5c 81       	ldd	r21, Y+4	; 0x04
    2a92:	c6 a0       	ldd	r12, Z+38	; 0x26
    2a94:	d7 a0       	ldd	r13, Z+39	; 0x27
    2a96:	e0 a4       	ldd	r14, Z+40	; 0x28
    2a98:	f1 a4       	ldd	r15, Z+41	; 0x29
    2a9a:	b0 e0       	ldi	r27, 0x00	; 0
    2a9c:	0e 94 c7 3c 	call	0x798e	; 0x798e <__muluhisi3>
    2aa0:	6c 0d       	add	r22, r12
    2aa2:	7d 1d       	adc	r23, r13
    2aa4:	8e 1d       	adc	r24, r14
    2aa6:	9f 1d       	adc	r25, r15
    2aa8:	03 c0       	rjmp	.+6      	; 0x2ab0 <clust2sect+0x84>
    2aaa:	60 e0       	ldi	r22, 0x00	; 0
    2aac:	70 e0       	ldi	r23, 0x00	; 0
    2aae:	cb 01       	movw	r24, r22
    2ab0:	24 96       	adiw	r28, 0x04	; 4
    2ab2:	cd bf       	out	0x3d, r28	; 61
    2ab4:	de bf       	out	0x3e, r29	; 62
    2ab6:	df 91       	pop	r29
    2ab8:	cf 91       	pop	r28
    2aba:	1f 91       	pop	r17
    2abc:	0f 91       	pop	r16
    2abe:	ff 90       	pop	r15
    2ac0:	ef 90       	pop	r14
    2ac2:	df 90       	pop	r13
    2ac4:	cf 90       	pop	r12
    2ac6:	08 95       	ret

00002ac8 <get_fat>:
    2ac8:	ff 92       	push	r15
    2aca:	0f 93       	push	r16
    2acc:	1f 93       	push	r17
    2ace:	cf 93       	push	r28
    2ad0:	df 93       	push	r29
    2ad2:	cd b7       	in	r28, 0x3d	; 61
    2ad4:	de b7       	in	r29, 0x3e	; 62
    2ad6:	28 97       	sbiw	r28, 0x08	; 8
    2ad8:	cd bf       	out	0x3d, r28	; 61
    2ada:	de bf       	out	0x3e, r29	; 62
    2adc:	8c 01       	movw	r16, r24
    2ade:	4d 83       	std	Y+5, r20	; 0x05
    2ae0:	5e 83       	std	Y+6, r21	; 0x06
    2ae2:	6f 83       	std	Y+7, r22	; 0x07
    2ae4:	78 87       	std	Y+8, r23	; 0x08
    2ae6:	4d 81       	ldd	r20, Y+5	; 0x05
    2ae8:	5e 81       	ldd	r21, Y+6	; 0x06
    2aea:	6f 81       	ldd	r22, Y+7	; 0x07
    2aec:	78 85       	ldd	r23, Y+8	; 0x08
    2aee:	42 30       	cpi	r20, 0x02	; 2
    2af0:	51 05       	cpc	r21, r1
    2af2:	61 05       	cpc	r22, r1
    2af4:	71 05       	cpc	r23, r1
    2af6:	08 f4       	brcc	.+2      	; 0x2afa <get_fat+0x32>
    2af8:	f6 c0       	rjmp	.+492    	; 0x2ce6 <get_fat+0x21e>
    2afa:	fc 01       	movw	r30, r24
    2afc:	42 89       	ldd	r20, Z+18	; 0x12
    2afe:	53 89       	ldd	r21, Z+19	; 0x13
    2b00:	64 89       	ldd	r22, Z+20	; 0x14
    2b02:	75 89       	ldd	r23, Z+21	; 0x15
    2b04:	8d 81       	ldd	r24, Y+5	; 0x05
    2b06:	9e 81       	ldd	r25, Y+6	; 0x06
    2b08:	af 81       	ldd	r26, Y+7	; 0x07
    2b0a:	b8 85       	ldd	r27, Y+8	; 0x08
    2b0c:	84 17       	cp	r24, r20
    2b0e:	95 07       	cpc	r25, r21
    2b10:	a6 07       	cpc	r26, r22
    2b12:	b7 07       	cpc	r27, r23
    2b14:	08 f0       	brcs	.+2      	; 0x2b18 <get_fat+0x50>
    2b16:	ec c0       	rjmp	.+472    	; 0x2cf0 <get_fat+0x228>
    2b18:	80 81       	ld	r24, Z
    2b1a:	82 30       	cpi	r24, 0x02	; 2
    2b1c:	09 f4       	brne	.+2      	; 0x2b20 <get_fat+0x58>
    2b1e:	69 c0       	rjmp	.+210    	; 0x2bf2 <get_fat+0x12a>
    2b20:	83 30       	cpi	r24, 0x03	; 3
    2b22:	09 f4       	brne	.+2      	; 0x2b26 <get_fat+0x5e>
    2b24:	95 c0       	rjmp	.+298    	; 0x2c50 <get_fat+0x188>
    2b26:	81 30       	cpi	r24, 0x01	; 1
    2b28:	09 f0       	breq	.+2      	; 0x2b2c <get_fat+0x64>
    2b2a:	e7 c0       	rjmp	.+462    	; 0x2cfa <get_fat+0x232>
    2b2c:	8d 81       	ldd	r24, Y+5	; 0x05
    2b2e:	9e 81       	ldd	r25, Y+6	; 0x06
    2b30:	af 81       	ldd	r26, Y+7	; 0x07
    2b32:	b8 85       	ldd	r27, Y+8	; 0x08
    2b34:	8b 83       	std	Y+3, r24	; 0x03
    2b36:	9c 83       	std	Y+4, r25	; 0x04
    2b38:	8b 81       	ldd	r24, Y+3	; 0x03
    2b3a:	9c 81       	ldd	r25, Y+4	; 0x04
    2b3c:	2b 81       	ldd	r18, Y+3	; 0x03
    2b3e:	3c 81       	ldd	r19, Y+4	; 0x04
    2b40:	96 95       	lsr	r25
    2b42:	87 95       	ror	r24
    2b44:	82 0f       	add	r24, r18
    2b46:	93 1f       	adc	r25, r19
    2b48:	8b 83       	std	Y+3, r24	; 0x03
    2b4a:	9c 83       	std	Y+4, r25	; 0x04
    2b4c:	46 8d       	ldd	r20, Z+30	; 0x1e
    2b4e:	57 8d       	ldd	r21, Z+31	; 0x1f
    2b50:	60 a1       	ldd	r22, Z+32	; 0x20
    2b52:	71 a1       	ldd	r23, Z+33	; 0x21
    2b54:	8b 81       	ldd	r24, Y+3	; 0x03
    2b56:	9c 81       	ldd	r25, Y+4	; 0x04
    2b58:	89 2f       	mov	r24, r25
    2b5a:	99 27       	eor	r25, r25
    2b5c:	86 95       	lsr	r24
    2b5e:	48 0f       	add	r20, r24
    2b60:	59 1f       	adc	r21, r25
    2b62:	61 1d       	adc	r22, r1
    2b64:	71 1d       	adc	r23, r1
    2b66:	c8 01       	movw	r24, r16
    2b68:	1f da       	rcall	.-3010   	; 0x1fa8 <move_window>
    2b6a:	81 11       	cpse	r24, r1
    2b6c:	cb c0       	rjmp	.+406    	; 0x2d04 <get_fat+0x23c>
    2b6e:	eb 81       	ldd	r30, Y+3	; 0x03
    2b70:	fc 81       	ldd	r31, Y+4	; 0x04
    2b72:	f1 70       	andi	r31, 0x01	; 1
    2b74:	e0 0f       	add	r30, r16
    2b76:	f1 1f       	adc	r31, r17
    2b78:	86 a5       	ldd	r24, Z+46	; 0x2e
    2b7a:	90 e0       	ldi	r25, 0x00	; 0
    2b7c:	89 83       	std	Y+1, r24	; 0x01
    2b7e:	9a 83       	std	Y+2, r25	; 0x02
    2b80:	8b 81       	ldd	r24, Y+3	; 0x03
    2b82:	9c 81       	ldd	r25, Y+4	; 0x04
    2b84:	01 96       	adiw	r24, 0x01	; 1
    2b86:	8b 83       	std	Y+3, r24	; 0x03
    2b88:	9c 83       	std	Y+4, r25	; 0x04
    2b8a:	f8 01       	movw	r30, r16
    2b8c:	46 8d       	ldd	r20, Z+30	; 0x1e
    2b8e:	57 8d       	ldd	r21, Z+31	; 0x1f
    2b90:	60 a1       	ldd	r22, Z+32	; 0x20
    2b92:	71 a1       	ldd	r23, Z+33	; 0x21
    2b94:	8b 81       	ldd	r24, Y+3	; 0x03
    2b96:	9c 81       	ldd	r25, Y+4	; 0x04
    2b98:	89 2f       	mov	r24, r25
    2b9a:	99 27       	eor	r25, r25
    2b9c:	86 95       	lsr	r24
    2b9e:	48 0f       	add	r20, r24
    2ba0:	59 1f       	adc	r21, r25
    2ba2:	61 1d       	adc	r22, r1
    2ba4:	71 1d       	adc	r23, r1
    2ba6:	c8 01       	movw	r24, r16
    2ba8:	ff d9       	rcall	.-3074   	; 0x1fa8 <move_window>
    2baa:	81 11       	cpse	r24, r1
    2bac:	af c0       	rjmp	.+350    	; 0x2d0c <get_fat+0x244>
    2bae:	eb 81       	ldd	r30, Y+3	; 0x03
    2bb0:	fc 81       	ldd	r31, Y+4	; 0x04
    2bb2:	f1 70       	andi	r31, 0x01	; 1
    2bb4:	e0 0f       	add	r30, r16
    2bb6:	f1 1f       	adc	r31, r17
    2bb8:	26 a5       	ldd	r18, Z+46	; 0x2e
    2bba:	89 81       	ldd	r24, Y+1	; 0x01
    2bbc:	9a 81       	ldd	r25, Y+2	; 0x02
    2bbe:	92 2b       	or	r25, r18
    2bc0:	89 83       	std	Y+1, r24	; 0x01
    2bc2:	9a 83       	std	Y+2, r25	; 0x02
    2bc4:	8d 81       	ldd	r24, Y+5	; 0x05
    2bc6:	9e 81       	ldd	r25, Y+6	; 0x06
    2bc8:	af 81       	ldd	r26, Y+7	; 0x07
    2bca:	b8 85       	ldd	r27, Y+8	; 0x08
    2bcc:	80 ff       	sbrs	r24, 0
    2bce:	0b c0       	rjmp	.+22     	; 0x2be6 <get_fat+0x11e>
    2bd0:	69 81       	ldd	r22, Y+1	; 0x01
    2bd2:	7a 81       	ldd	r23, Y+2	; 0x02
    2bd4:	72 95       	swap	r23
    2bd6:	62 95       	swap	r22
    2bd8:	6f 70       	andi	r22, 0x0F	; 15
    2bda:	67 27       	eor	r22, r23
    2bdc:	7f 70       	andi	r23, 0x0F	; 15
    2bde:	67 27       	eor	r22, r23
    2be0:	80 e0       	ldi	r24, 0x00	; 0
    2be2:	90 e0       	ldi	r25, 0x00	; 0
    2be4:	9e c0       	rjmp	.+316    	; 0x2d22 <get_fat+0x25a>
    2be6:	69 81       	ldd	r22, Y+1	; 0x01
    2be8:	7a 81       	ldd	r23, Y+2	; 0x02
    2bea:	7f 70       	andi	r23, 0x0F	; 15
    2bec:	80 e0       	ldi	r24, 0x00	; 0
    2bee:	90 e0       	ldi	r25, 0x00	; 0
    2bf0:	98 c0       	rjmp	.+304    	; 0x2d22 <get_fat+0x25a>
    2bf2:	f8 01       	movw	r30, r16
    2bf4:	86 8d       	ldd	r24, Z+30	; 0x1e
    2bf6:	97 8d       	ldd	r25, Z+31	; 0x1f
    2bf8:	a0 a1       	ldd	r26, Z+32	; 0x20
    2bfa:	b1 a1       	ldd	r27, Z+33	; 0x21
    2bfc:	4d 81       	ldd	r20, Y+5	; 0x05
    2bfe:	5e 81       	ldd	r21, Y+6	; 0x06
    2c00:	6f 81       	ldd	r22, Y+7	; 0x07
    2c02:	78 85       	ldd	r23, Y+8	; 0x08
    2c04:	45 2f       	mov	r20, r21
    2c06:	56 2f       	mov	r21, r22
    2c08:	67 2f       	mov	r22, r23
    2c0a:	77 27       	eor	r23, r23
    2c0c:	48 0f       	add	r20, r24
    2c0e:	59 1f       	adc	r21, r25
    2c10:	6a 1f       	adc	r22, r26
    2c12:	7b 1f       	adc	r23, r27
    2c14:	c8 01       	movw	r24, r16
    2c16:	c8 d9       	rcall	.-3184   	; 0x1fa8 <move_window>
    2c18:	81 11       	cpse	r24, r1
    2c1a:	7c c0       	rjmp	.+248    	; 0x2d14 <get_fat+0x24c>
    2c1c:	8d 81       	ldd	r24, Y+5	; 0x05
    2c1e:	9e 81       	ldd	r25, Y+6	; 0x06
    2c20:	af 81       	ldd	r26, Y+7	; 0x07
    2c22:	b8 85       	ldd	r27, Y+8	; 0x08
    2c24:	88 0f       	add	r24, r24
    2c26:	99 1f       	adc	r25, r25
    2c28:	aa 1f       	adc	r26, r26
    2c2a:	bb 1f       	adc	r27, r27
    2c2c:	8e 7f       	andi	r24, 0xFE	; 254
    2c2e:	91 70       	andi	r25, 0x01	; 1
    2c30:	aa 27       	eor	r26, r26
    2c32:	bb 27       	eor	r27, r27
    2c34:	fc 01       	movw	r30, r24
    2c36:	be 96       	adiw	r30, 0x2e	; 46
    2c38:	e0 0f       	add	r30, r16
    2c3a:	f1 1f       	adc	r31, r17
    2c3c:	21 81       	ldd	r18, Z+1	; 0x01
    2c3e:	f8 01       	movw	r30, r16
    2c40:	e8 0f       	add	r30, r24
    2c42:	f9 1f       	adc	r31, r25
    2c44:	66 a5       	ldd	r22, Z+46	; 0x2e
    2c46:	70 e0       	ldi	r23, 0x00	; 0
    2c48:	72 2b       	or	r23, r18
    2c4a:	80 e0       	ldi	r24, 0x00	; 0
    2c4c:	90 e0       	ldi	r25, 0x00	; 0
    2c4e:	69 c0       	rjmp	.+210    	; 0x2d22 <get_fat+0x25a>
    2c50:	f8 01       	movw	r30, r16
    2c52:	86 8d       	ldd	r24, Z+30	; 0x1e
    2c54:	97 8d       	ldd	r25, Z+31	; 0x1f
    2c56:	a0 a1       	ldd	r26, Z+32	; 0x20
    2c58:	b1 a1       	ldd	r27, Z+33	; 0x21
    2c5a:	4d 81       	ldd	r20, Y+5	; 0x05
    2c5c:	5e 81       	ldd	r21, Y+6	; 0x06
    2c5e:	6f 81       	ldd	r22, Y+7	; 0x07
    2c60:	78 85       	ldd	r23, Y+8	; 0x08
    2c62:	68 94       	set
    2c64:	16 f8       	bld	r1, 6
    2c66:	76 95       	lsr	r23
    2c68:	67 95       	ror	r22
    2c6a:	57 95       	ror	r21
    2c6c:	47 95       	ror	r20
    2c6e:	16 94       	lsr	r1
    2c70:	d1 f7       	brne	.-12     	; 0x2c66 <get_fat+0x19e>
    2c72:	48 0f       	add	r20, r24
    2c74:	59 1f       	adc	r21, r25
    2c76:	6a 1f       	adc	r22, r26
    2c78:	7b 1f       	adc	r23, r27
    2c7a:	c8 01       	movw	r24, r16
    2c7c:	95 d9       	rcall	.-3286   	; 0x1fa8 <move_window>
    2c7e:	81 11       	cpse	r24, r1
    2c80:	4d c0       	rjmp	.+154    	; 0x2d1c <get_fat+0x254>
    2c82:	8d 81       	ldd	r24, Y+5	; 0x05
    2c84:	9e 81       	ldd	r25, Y+6	; 0x06
    2c86:	af 81       	ldd	r26, Y+7	; 0x07
    2c88:	b8 85       	ldd	r27, Y+8	; 0x08
    2c8a:	88 0f       	add	r24, r24
    2c8c:	99 1f       	adc	r25, r25
    2c8e:	aa 1f       	adc	r26, r26
    2c90:	bb 1f       	adc	r27, r27
    2c92:	88 0f       	add	r24, r24
    2c94:	99 1f       	adc	r25, r25
    2c96:	aa 1f       	adc	r26, r26
    2c98:	bb 1f       	adc	r27, r27
    2c9a:	8c 7f       	andi	r24, 0xFC	; 252
    2c9c:	91 70       	andi	r25, 0x01	; 1
    2c9e:	aa 27       	eor	r26, r26
    2ca0:	bb 27       	eor	r27, r27
    2ca2:	fc 01       	movw	r30, r24
    2ca4:	be 96       	adiw	r30, 0x2e	; 46
    2ca6:	e0 0f       	add	r30, r16
    2ca8:	f1 1f       	adc	r31, r17
    2caa:	43 81       	ldd	r20, Z+3	; 0x03
    2cac:	f2 80       	ldd	r15, Z+2	; 0x02
    2cae:	31 81       	ldd	r19, Z+1	; 0x01
    2cb0:	f8 01       	movw	r30, r16
    2cb2:	e8 0f       	add	r30, r24
    2cb4:	f9 1f       	adc	r31, r25
    2cb6:	26 a5       	ldd	r18, Z+46	; 0x2e
    2cb8:	50 e0       	ldi	r21, 0x00	; 0
    2cba:	60 e0       	ldi	r22, 0x00	; 0
    2cbc:	70 e0       	ldi	r23, 0x00	; 0
    2cbe:	74 2f       	mov	r23, r20
    2cc0:	66 27       	eor	r22, r22
    2cc2:	55 27       	eor	r21, r21
    2cc4:	44 27       	eor	r20, r20
    2cc6:	6f 29       	or	r22, r15
    2cc8:	83 2f       	mov	r24, r19
    2cca:	90 e0       	ldi	r25, 0x00	; 0
    2ccc:	98 2f       	mov	r25, r24
    2cce:	88 27       	eor	r24, r24
    2cd0:	a0 e0       	ldi	r26, 0x00	; 0
    2cd2:	b0 e0       	ldi	r27, 0x00	; 0
    2cd4:	84 2b       	or	r24, r20
    2cd6:	95 2b       	or	r25, r21
    2cd8:	a6 2b       	or	r26, r22
    2cda:	b7 2b       	or	r27, r23
    2cdc:	82 2b       	or	r24, r18
    2cde:	bc 01       	movw	r22, r24
    2ce0:	cd 01       	movw	r24, r26
    2ce2:	9f 70       	andi	r25, 0x0F	; 15
    2ce4:	1e c0       	rjmp	.+60     	; 0x2d22 <get_fat+0x25a>
    2ce6:	61 e0       	ldi	r22, 0x01	; 1
    2ce8:	70 e0       	ldi	r23, 0x00	; 0
    2cea:	80 e0       	ldi	r24, 0x00	; 0
    2cec:	90 e0       	ldi	r25, 0x00	; 0
    2cee:	19 c0       	rjmp	.+50     	; 0x2d22 <get_fat+0x25a>
    2cf0:	61 e0       	ldi	r22, 0x01	; 1
    2cf2:	70 e0       	ldi	r23, 0x00	; 0
    2cf4:	80 e0       	ldi	r24, 0x00	; 0
    2cf6:	90 e0       	ldi	r25, 0x00	; 0
    2cf8:	14 c0       	rjmp	.+40     	; 0x2d22 <get_fat+0x25a>
    2cfa:	61 e0       	ldi	r22, 0x01	; 1
    2cfc:	70 e0       	ldi	r23, 0x00	; 0
    2cfe:	80 e0       	ldi	r24, 0x00	; 0
    2d00:	90 e0       	ldi	r25, 0x00	; 0
    2d02:	0f c0       	rjmp	.+30     	; 0x2d22 <get_fat+0x25a>
    2d04:	6f ef       	ldi	r22, 0xFF	; 255
    2d06:	7f ef       	ldi	r23, 0xFF	; 255
    2d08:	cb 01       	movw	r24, r22
    2d0a:	0b c0       	rjmp	.+22     	; 0x2d22 <get_fat+0x25a>
    2d0c:	6f ef       	ldi	r22, 0xFF	; 255
    2d0e:	7f ef       	ldi	r23, 0xFF	; 255
    2d10:	cb 01       	movw	r24, r22
    2d12:	07 c0       	rjmp	.+14     	; 0x2d22 <get_fat+0x25a>
    2d14:	6f ef       	ldi	r22, 0xFF	; 255
    2d16:	7f ef       	ldi	r23, 0xFF	; 255
    2d18:	cb 01       	movw	r24, r22
    2d1a:	03 c0       	rjmp	.+6      	; 0x2d22 <get_fat+0x25a>
    2d1c:	6f ef       	ldi	r22, 0xFF	; 255
    2d1e:	7f ef       	ldi	r23, 0xFF	; 255
    2d20:	cb 01       	movw	r24, r22
    2d22:	28 96       	adiw	r28, 0x08	; 8
    2d24:	cd bf       	out	0x3d, r28	; 61
    2d26:	de bf       	out	0x3e, r29	; 62
    2d28:	df 91       	pop	r29
    2d2a:	cf 91       	pop	r28
    2d2c:	1f 91       	pop	r17
    2d2e:	0f 91       	pop	r16
    2d30:	ff 90       	pop	r15
    2d32:	08 95       	ret

00002d34 <dir_sdi>:
    2d34:	0f 93       	push	r16
    2d36:	1f 93       	push	r17
    2d38:	cf 93       	push	r28
    2d3a:	df 93       	push	r29
    2d3c:	cd b7       	in	r28, 0x3d	; 61
    2d3e:	de b7       	in	r29, 0x3e	; 62
    2d40:	2c 97       	sbiw	r28, 0x0c	; 12
    2d42:	cd bf       	out	0x3d, r28	; 61
    2d44:	de bf       	out	0x3e, r29	; 62
    2d46:	8c 01       	movw	r16, r24
    2d48:	6b 87       	std	Y+11, r22	; 0x0b
    2d4a:	7c 87       	std	Y+12, r23	; 0x0c
    2d4c:	8b 85       	ldd	r24, Y+11	; 0x0b
    2d4e:	9c 85       	ldd	r25, Y+12	; 0x0c
    2d50:	d8 01       	movw	r26, r16
    2d52:	14 96       	adiw	r26, 0x04	; 4
    2d54:	8d 93       	st	X+, r24
    2d56:	9c 93       	st	X, r25
    2d58:	15 97       	sbiw	r26, 0x05	; 5
    2d5a:	16 96       	adiw	r26, 0x06	; 6
    2d5c:	8d 91       	ld	r24, X+
    2d5e:	9d 91       	ld	r25, X+
    2d60:	0d 90       	ld	r0, X+
    2d62:	bc 91       	ld	r27, X
    2d64:	a0 2d       	mov	r26, r0
    2d66:	89 83       	std	Y+1, r24	; 0x01
    2d68:	9a 83       	std	Y+2, r25	; 0x02
    2d6a:	ab 83       	std	Y+3, r26	; 0x03
    2d6c:	bc 83       	std	Y+4, r27	; 0x04
    2d6e:	89 81       	ldd	r24, Y+1	; 0x01
    2d70:	9a 81       	ldd	r25, Y+2	; 0x02
    2d72:	ab 81       	ldd	r26, Y+3	; 0x03
    2d74:	bc 81       	ldd	r27, Y+4	; 0x04
    2d76:	01 97       	sbiw	r24, 0x01	; 1
    2d78:	a1 05       	cpc	r26, r1
    2d7a:	b1 05       	cpc	r27, r1
    2d7c:	09 f4       	brne	.+2      	; 0x2d80 <dir_sdi+0x4c>
    2d7e:	d2 c0       	rjmp	.+420    	; 0x2f24 <dir_sdi+0x1f0>
    2d80:	d8 01       	movw	r26, r16
    2d82:	ed 91       	ld	r30, X+
    2d84:	fc 91       	ld	r31, X
    2d86:	42 89       	ldd	r20, Z+18	; 0x12
    2d88:	53 89       	ldd	r21, Z+19	; 0x13
    2d8a:	64 89       	ldd	r22, Z+20	; 0x14
    2d8c:	75 89       	ldd	r23, Z+21	; 0x15
    2d8e:	89 81       	ldd	r24, Y+1	; 0x01
    2d90:	9a 81       	ldd	r25, Y+2	; 0x02
    2d92:	ab 81       	ldd	r26, Y+3	; 0x03
    2d94:	bc 81       	ldd	r27, Y+4	; 0x04
    2d96:	84 17       	cp	r24, r20
    2d98:	95 07       	cpc	r25, r21
    2d9a:	a6 07       	cpc	r26, r22
    2d9c:	b7 07       	cpc	r27, r23
    2d9e:	08 f0       	brcs	.+2      	; 0x2da2 <dir_sdi+0x6e>
    2da0:	c3 c0       	rjmp	.+390    	; 0x2f28 <dir_sdi+0x1f4>
    2da2:	89 81       	ldd	r24, Y+1	; 0x01
    2da4:	9a 81       	ldd	r25, Y+2	; 0x02
    2da6:	ab 81       	ldd	r26, Y+3	; 0x03
    2da8:	bc 81       	ldd	r27, Y+4	; 0x04
    2daa:	89 2b       	or	r24, r25
    2dac:	8a 2b       	or	r24, r26
    2dae:	8b 2b       	or	r24, r27
    2db0:	59 f4       	brne	.+22     	; 0x2dc8 <dir_sdi+0x94>
    2db2:	80 81       	ld	r24, Z
    2db4:	83 30       	cpi	r24, 0x03	; 3
    2db6:	41 f4       	brne	.+16     	; 0x2dc8 <dir_sdi+0x94>
    2db8:	82 a1       	ldd	r24, Z+34	; 0x22
    2dba:	93 a1       	ldd	r25, Z+35	; 0x23
    2dbc:	a4 a1       	ldd	r26, Z+36	; 0x24
    2dbe:	b5 a1       	ldd	r27, Z+37	; 0x25
    2dc0:	89 83       	std	Y+1, r24	; 0x01
    2dc2:	9a 83       	std	Y+2, r25	; 0x02
    2dc4:	ab 83       	std	Y+3, r26	; 0x03
    2dc6:	bc 83       	std	Y+4, r27	; 0x04
    2dc8:	89 81       	ldd	r24, Y+1	; 0x01
    2dca:	9a 81       	ldd	r25, Y+2	; 0x02
    2dcc:	ab 81       	ldd	r26, Y+3	; 0x03
    2dce:	bc 81       	ldd	r27, Y+4	; 0x04
    2dd0:	89 2b       	or	r24, r25
    2dd2:	8a 2b       	or	r24, r26
    2dd4:	8b 2b       	or	r24, r27
    2dd6:	89 f4       	brne	.+34     	; 0x2dfa <dir_sdi+0xc6>
    2dd8:	20 85       	ldd	r18, Z+8	; 0x08
    2dda:	31 85       	ldd	r19, Z+9	; 0x09
    2ddc:	8b 85       	ldd	r24, Y+11	; 0x0b
    2dde:	9c 85       	ldd	r25, Y+12	; 0x0c
    2de0:	82 17       	cp	r24, r18
    2de2:	93 07       	cpc	r25, r19
    2de4:	08 f0       	brcs	.+2      	; 0x2de8 <dir_sdi+0xb4>
    2de6:	a2 c0       	rjmp	.+324    	; 0x2f2c <dir_sdi+0x1f8>
    2de8:	82 a1       	ldd	r24, Z+34	; 0x22
    2dea:	93 a1       	ldd	r25, Z+35	; 0x23
    2dec:	a4 a1       	ldd	r26, Z+36	; 0x24
    2dee:	b5 a1       	ldd	r27, Z+37	; 0x25
    2df0:	8d 83       	std	Y+5, r24	; 0x05
    2df2:	9e 83       	std	Y+6, r25	; 0x06
    2df4:	af 83       	std	Y+7, r26	; 0x07
    2df6:	b8 87       	std	Y+8, r27	; 0x08
    2df8:	5b c0       	rjmp	.+182    	; 0x2eb0 <dir_sdi+0x17c>
    2dfa:	82 81       	ldd	r24, Z+2	; 0x02
    2dfc:	b0 e1       	ldi	r27, 0x10	; 16
    2dfe:	8b 9f       	mul	r24, r27
    2e00:	c0 01       	movw	r24, r0
    2e02:	11 24       	eor	r1, r1
    2e04:	89 87       	std	Y+9, r24	; 0x09
    2e06:	9a 87       	std	Y+10, r25	; 0x0a
    2e08:	2b 85       	ldd	r18, Y+11	; 0x0b
    2e0a:	3c 85       	ldd	r19, Y+12	; 0x0c
    2e0c:	89 85       	ldd	r24, Y+9	; 0x09
    2e0e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e10:	28 17       	cp	r18, r24
    2e12:	39 07       	cpc	r19, r25
    2e14:	08 f4       	brcc	.+2      	; 0x2e18 <dir_sdi+0xe4>
    2e16:	40 c0       	rjmp	.+128    	; 0x2e98 <dir_sdi+0x164>
    2e18:	49 81       	ldd	r20, Y+1	; 0x01
    2e1a:	5a 81       	ldd	r21, Y+2	; 0x02
    2e1c:	6b 81       	ldd	r22, Y+3	; 0x03
    2e1e:	7c 81       	ldd	r23, Y+4	; 0x04
    2e20:	f8 01       	movw	r30, r16
    2e22:	80 81       	ld	r24, Z
    2e24:	91 81       	ldd	r25, Z+1	; 0x01
    2e26:	50 de       	rcall	.-864    	; 0x2ac8 <get_fat>
    2e28:	69 83       	std	Y+1, r22	; 0x01
    2e2a:	7a 83       	std	Y+2, r23	; 0x02
    2e2c:	8b 83       	std	Y+3, r24	; 0x03
    2e2e:	9c 83       	std	Y+4, r25	; 0x04
    2e30:	49 81       	ldd	r20, Y+1	; 0x01
    2e32:	5a 81       	ldd	r21, Y+2	; 0x02
    2e34:	6b 81       	ldd	r22, Y+3	; 0x03
    2e36:	7c 81       	ldd	r23, Y+4	; 0x04
    2e38:	4f 3f       	cpi	r20, 0xFF	; 255
    2e3a:	5f 4f       	sbci	r21, 0xFF	; 255
    2e3c:	6f 4f       	sbci	r22, 0xFF	; 255
    2e3e:	7f 4f       	sbci	r23, 0xFF	; 255
    2e40:	09 f4       	brne	.+2      	; 0x2e44 <dir_sdi+0x110>
    2e42:	76 c0       	rjmp	.+236    	; 0x2f30 <dir_sdi+0x1fc>
    2e44:	89 81       	ldd	r24, Y+1	; 0x01
    2e46:	9a 81       	ldd	r25, Y+2	; 0x02
    2e48:	ab 81       	ldd	r26, Y+3	; 0x03
    2e4a:	bc 81       	ldd	r27, Y+4	; 0x04
    2e4c:	02 97       	sbiw	r24, 0x02	; 2
    2e4e:	a1 05       	cpc	r26, r1
    2e50:	b1 05       	cpc	r27, r1
    2e52:	08 f4       	brcc	.+2      	; 0x2e56 <dir_sdi+0x122>
    2e54:	6f c0       	rjmp	.+222    	; 0x2f34 <dir_sdi+0x200>
    2e56:	d8 01       	movw	r26, r16
    2e58:	ed 91       	ld	r30, X+
    2e5a:	fc 91       	ld	r31, X
    2e5c:	42 89       	ldd	r20, Z+18	; 0x12
    2e5e:	53 89       	ldd	r21, Z+19	; 0x13
    2e60:	64 89       	ldd	r22, Z+20	; 0x14
    2e62:	75 89       	ldd	r23, Z+21	; 0x15
    2e64:	89 81       	ldd	r24, Y+1	; 0x01
    2e66:	9a 81       	ldd	r25, Y+2	; 0x02
    2e68:	ab 81       	ldd	r26, Y+3	; 0x03
    2e6a:	bc 81       	ldd	r27, Y+4	; 0x04
    2e6c:	84 17       	cp	r24, r20
    2e6e:	95 07       	cpc	r25, r21
    2e70:	a6 07       	cpc	r26, r22
    2e72:	b7 07       	cpc	r27, r23
    2e74:	08 f0       	brcs	.+2      	; 0x2e78 <dir_sdi+0x144>
    2e76:	60 c0       	rjmp	.+192    	; 0x2f38 <dir_sdi+0x204>
    2e78:	8b 85       	ldd	r24, Y+11	; 0x0b
    2e7a:	9c 85       	ldd	r25, Y+12	; 0x0c
    2e7c:	29 85       	ldd	r18, Y+9	; 0x09
    2e7e:	3a 85       	ldd	r19, Y+10	; 0x0a
    2e80:	82 1b       	sub	r24, r18
    2e82:	93 0b       	sbc	r25, r19
    2e84:	8b 87       	std	Y+11, r24	; 0x0b
    2e86:	9c 87       	std	Y+12, r25	; 0x0c
    2e88:	2b 85       	ldd	r18, Y+11	; 0x0b
    2e8a:	3c 85       	ldd	r19, Y+12	; 0x0c
    2e8c:	89 85       	ldd	r24, Y+9	; 0x09
    2e8e:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e90:	28 17       	cp	r18, r24
    2e92:	39 07       	cpc	r19, r25
    2e94:	08 f0       	brcs	.+2      	; 0x2e98 <dir_sdi+0x164>
    2e96:	c0 cf       	rjmp	.-128    	; 0x2e18 <dir_sdi+0xe4>
    2e98:	49 81       	ldd	r20, Y+1	; 0x01
    2e9a:	5a 81       	ldd	r21, Y+2	; 0x02
    2e9c:	6b 81       	ldd	r22, Y+3	; 0x03
    2e9e:	7c 81       	ldd	r23, Y+4	; 0x04
    2ea0:	f8 01       	movw	r30, r16
    2ea2:	80 81       	ld	r24, Z
    2ea4:	91 81       	ldd	r25, Z+1	; 0x01
    2ea6:	c2 dd       	rcall	.-1148   	; 0x2a2c <clust2sect>
    2ea8:	6d 83       	std	Y+5, r22	; 0x05
    2eaa:	7e 83       	std	Y+6, r23	; 0x06
    2eac:	8f 83       	std	Y+7, r24	; 0x07
    2eae:	98 87       	std	Y+8, r25	; 0x08
    2eb0:	89 81       	ldd	r24, Y+1	; 0x01
    2eb2:	9a 81       	ldd	r25, Y+2	; 0x02
    2eb4:	ab 81       	ldd	r26, Y+3	; 0x03
    2eb6:	bc 81       	ldd	r27, Y+4	; 0x04
    2eb8:	f8 01       	movw	r30, r16
    2eba:	82 87       	std	Z+10, r24	; 0x0a
    2ebc:	93 87       	std	Z+11, r25	; 0x0b
    2ebe:	a4 87       	std	Z+12, r26	; 0x0c
    2ec0:	b5 87       	std	Z+13, r27	; 0x0d
    2ec2:	8d 81       	ldd	r24, Y+5	; 0x05
    2ec4:	9e 81       	ldd	r25, Y+6	; 0x06
    2ec6:	af 81       	ldd	r26, Y+7	; 0x07
    2ec8:	b8 85       	ldd	r27, Y+8	; 0x08
    2eca:	89 2b       	or	r24, r25
    2ecc:	8a 2b       	or	r24, r26
    2ece:	8b 2b       	or	r24, r27
    2ed0:	a9 f1       	breq	.+106    	; 0x2f3c <dir_sdi+0x208>
    2ed2:	2b 85       	ldd	r18, Y+11	; 0x0b
    2ed4:	3c 85       	ldd	r19, Y+12	; 0x0c
    2ed6:	8d 81       	ldd	r24, Y+5	; 0x05
    2ed8:	9e 81       	ldd	r25, Y+6	; 0x06
    2eda:	af 81       	ldd	r26, Y+7	; 0x07
    2edc:	b8 85       	ldd	r27, Y+8	; 0x08
    2ede:	32 95       	swap	r19
    2ee0:	22 95       	swap	r18
    2ee2:	2f 70       	andi	r18, 0x0F	; 15
    2ee4:	23 27       	eor	r18, r19
    2ee6:	3f 70       	andi	r19, 0x0F	; 15
    2ee8:	23 27       	eor	r18, r19
    2eea:	82 0f       	add	r24, r18
    2eec:	93 1f       	adc	r25, r19
    2eee:	a1 1d       	adc	r26, r1
    2ef0:	b1 1d       	adc	r27, r1
    2ef2:	86 87       	std	Z+14, r24	; 0x0e
    2ef4:	97 87       	std	Z+15, r25	; 0x0f
    2ef6:	a0 8b       	std	Z+16, r26	; 0x10
    2ef8:	b1 8b       	std	Z+17, r27	; 0x11
    2efa:	8b 85       	ldd	r24, Y+11	; 0x0b
    2efc:	9c 85       	ldd	r25, Y+12	; 0x0c
    2efe:	8f 70       	andi	r24, 0x0F	; 15
    2f00:	99 27       	eor	r25, r25
    2f02:	88 0f       	add	r24, r24
    2f04:	99 1f       	adc	r25, r25
    2f06:	82 95       	swap	r24
    2f08:	92 95       	swap	r25
    2f0a:	90 7f       	andi	r25, 0xF0	; 240
    2f0c:	98 27       	eor	r25, r24
    2f0e:	80 7f       	andi	r24, 0xF0	; 240
    2f10:	98 27       	eor	r25, r24
    2f12:	8e 96       	adiw	r24, 0x2e	; 46
    2f14:	20 81       	ld	r18, Z
    2f16:	31 81       	ldd	r19, Z+1	; 0x01
    2f18:	82 0f       	add	r24, r18
    2f1a:	93 1f       	adc	r25, r19
    2f1c:	82 8b       	std	Z+18, r24	; 0x12
    2f1e:	93 8b       	std	Z+19, r25	; 0x13
    2f20:	80 e0       	ldi	r24, 0x00	; 0
    2f22:	0d c0       	rjmp	.+26     	; 0x2f3e <dir_sdi+0x20a>
    2f24:	82 e0       	ldi	r24, 0x02	; 2
    2f26:	0b c0       	rjmp	.+22     	; 0x2f3e <dir_sdi+0x20a>
    2f28:	82 e0       	ldi	r24, 0x02	; 2
    2f2a:	09 c0       	rjmp	.+18     	; 0x2f3e <dir_sdi+0x20a>
    2f2c:	82 e0       	ldi	r24, 0x02	; 2
    2f2e:	07 c0       	rjmp	.+14     	; 0x2f3e <dir_sdi+0x20a>
    2f30:	81 e0       	ldi	r24, 0x01	; 1
    2f32:	05 c0       	rjmp	.+10     	; 0x2f3e <dir_sdi+0x20a>
    2f34:	82 e0       	ldi	r24, 0x02	; 2
    2f36:	03 c0       	rjmp	.+6      	; 0x2f3e <dir_sdi+0x20a>
    2f38:	82 e0       	ldi	r24, 0x02	; 2
    2f3a:	01 c0       	rjmp	.+2      	; 0x2f3e <dir_sdi+0x20a>
    2f3c:	82 e0       	ldi	r24, 0x02	; 2
    2f3e:	2c 96       	adiw	r28, 0x0c	; 12
    2f40:	cd bf       	out	0x3d, r28	; 61
    2f42:	de bf       	out	0x3e, r29	; 62
    2f44:	df 91       	pop	r29
    2f46:	cf 91       	pop	r28
    2f48:	1f 91       	pop	r17
    2f4a:	0f 91       	pop	r16
    2f4c:	08 95       	ret

00002f4e <put_fat>:
    2f4e:	8f 92       	push	r8
    2f50:	9f 92       	push	r9
    2f52:	af 92       	push	r10
    2f54:	bf 92       	push	r11
    2f56:	ef 92       	push	r14
    2f58:	ff 92       	push	r15
    2f5a:	0f 93       	push	r16
    2f5c:	1f 93       	push	r17
    2f5e:	cf 93       	push	r28
    2f60:	df 93       	push	r29
    2f62:	cd b7       	in	r28, 0x3d	; 61
    2f64:	de b7       	in	r29, 0x3e	; 62
    2f66:	2a 97       	sbiw	r28, 0x0a	; 10
    2f68:	cd bf       	out	0x3d, r28	; 61
    2f6a:	de bf       	out	0x3e, r29	; 62
    2f6c:	7c 01       	movw	r14, r24
    2f6e:	4b 83       	std	Y+3, r20	; 0x03
    2f70:	5c 83       	std	Y+4, r21	; 0x04
    2f72:	6d 83       	std	Y+5, r22	; 0x05
    2f74:	7e 83       	std	Y+6, r23	; 0x06
    2f76:	0f 83       	std	Y+7, r16	; 0x07
    2f78:	18 87       	std	Y+8, r17	; 0x08
    2f7a:	29 87       	std	Y+9, r18	; 0x09
    2f7c:	3a 87       	std	Y+10, r19	; 0x0a
    2f7e:	4b 81       	ldd	r20, Y+3	; 0x03
    2f80:	5c 81       	ldd	r21, Y+4	; 0x04
    2f82:	6d 81       	ldd	r22, Y+5	; 0x05
    2f84:	7e 81       	ldd	r23, Y+6	; 0x06
    2f86:	42 30       	cpi	r20, 0x02	; 2
    2f88:	51 05       	cpc	r21, r1
    2f8a:	61 05       	cpc	r22, r1
    2f8c:	71 05       	cpc	r23, r1
    2f8e:	08 f4       	brcc	.+2      	; 0x2f92 <put_fat+0x44>
    2f90:	46 c1       	rjmp	.+652    	; 0x321e <put_fat+0x2d0>
    2f92:	fc 01       	movw	r30, r24
    2f94:	42 89       	ldd	r20, Z+18	; 0x12
    2f96:	53 89       	ldd	r21, Z+19	; 0x13
    2f98:	64 89       	ldd	r22, Z+20	; 0x14
    2f9a:	75 89       	ldd	r23, Z+21	; 0x15
    2f9c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f9e:	9c 81       	ldd	r25, Y+4	; 0x04
    2fa0:	ad 81       	ldd	r26, Y+5	; 0x05
    2fa2:	be 81       	ldd	r27, Y+6	; 0x06
    2fa4:	84 17       	cp	r24, r20
    2fa6:	95 07       	cpc	r25, r21
    2fa8:	a6 07       	cpc	r26, r22
    2faa:	b7 07       	cpc	r27, r23
    2fac:	08 f0       	brcs	.+2      	; 0x2fb0 <put_fat+0x62>
    2fae:	39 c1       	rjmp	.+626    	; 0x3222 <put_fat+0x2d4>
    2fb0:	80 81       	ld	r24, Z
    2fb2:	82 30       	cpi	r24, 0x02	; 2
    2fb4:	09 f4       	brne	.+2      	; 0x2fb8 <put_fat+0x6a>
    2fb6:	8a c0       	rjmp	.+276    	; 0x30cc <put_fat+0x17e>
    2fb8:	83 30       	cpi	r24, 0x03	; 3
    2fba:	09 f4       	brne	.+2      	; 0x2fbe <put_fat+0x70>
    2fbc:	be c0       	rjmp	.+380    	; 0x313a <put_fat+0x1ec>
    2fbe:	81 30       	cpi	r24, 0x01	; 1
    2fc0:	09 f0       	breq	.+2      	; 0x2fc4 <put_fat+0x76>
    2fc2:	28 c1       	rjmp	.+592    	; 0x3214 <put_fat+0x2c6>
    2fc4:	8b 81       	ldd	r24, Y+3	; 0x03
    2fc6:	9c 81       	ldd	r25, Y+4	; 0x04
    2fc8:	ad 81       	ldd	r26, Y+5	; 0x05
    2fca:	be 81       	ldd	r27, Y+6	; 0x06
    2fcc:	89 83       	std	Y+1, r24	; 0x01
    2fce:	9a 83       	std	Y+2, r25	; 0x02
    2fd0:	89 81       	ldd	r24, Y+1	; 0x01
    2fd2:	9a 81       	ldd	r25, Y+2	; 0x02
    2fd4:	29 81       	ldd	r18, Y+1	; 0x01
    2fd6:	3a 81       	ldd	r19, Y+2	; 0x02
    2fd8:	96 95       	lsr	r25
    2fda:	87 95       	ror	r24
    2fdc:	82 0f       	add	r24, r18
    2fde:	93 1f       	adc	r25, r19
    2fe0:	89 83       	std	Y+1, r24	; 0x01
    2fe2:	9a 83       	std	Y+2, r25	; 0x02
    2fe4:	46 8d       	ldd	r20, Z+30	; 0x1e
    2fe6:	57 8d       	ldd	r21, Z+31	; 0x1f
    2fe8:	60 a1       	ldd	r22, Z+32	; 0x20
    2fea:	71 a1       	ldd	r23, Z+33	; 0x21
    2fec:	89 81       	ldd	r24, Y+1	; 0x01
    2fee:	9a 81       	ldd	r25, Y+2	; 0x02
    2ff0:	89 2f       	mov	r24, r25
    2ff2:	99 27       	eor	r25, r25
    2ff4:	86 95       	lsr	r24
    2ff6:	48 0f       	add	r20, r24
    2ff8:	59 1f       	adc	r21, r25
    2ffa:	61 1d       	adc	r22, r1
    2ffc:	71 1d       	adc	r23, r1
    2ffe:	c7 01       	movw	r24, r14
    3000:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <move_window>
    3004:	81 11       	cpse	r24, r1
    3006:	07 c1       	rjmp	.+526    	; 0x3216 <put_fat+0x2c8>
    3008:	29 81       	ldd	r18, Y+1	; 0x01
    300a:	3a 81       	ldd	r19, Y+2	; 0x02
    300c:	31 70       	andi	r19, 0x01	; 1
    300e:	8b 81       	ldd	r24, Y+3	; 0x03
    3010:	9c 81       	ldd	r25, Y+4	; 0x04
    3012:	ad 81       	ldd	r26, Y+5	; 0x05
    3014:	be 81       	ldd	r27, Y+6	; 0x06
    3016:	80 ff       	sbrs	r24, 0
    3018:	0f c0       	rjmp	.+30     	; 0x3038 <put_fat+0xea>
    301a:	f7 01       	movw	r30, r14
    301c:	e2 0f       	add	r30, r18
    301e:	f3 1f       	adc	r31, r19
    3020:	86 a5       	ldd	r24, Z+46	; 0x2e
    3022:	4f 81       	ldd	r20, Y+7	; 0x07
    3024:	58 85       	ldd	r21, Y+8	; 0x08
    3026:	69 85       	ldd	r22, Y+9	; 0x09
    3028:	7a 85       	ldd	r23, Y+10	; 0x0a
    302a:	f0 e1       	ldi	r31, 0x10	; 16
    302c:	4f 9f       	mul	r20, r31
    302e:	a0 01       	movw	r20, r0
    3030:	11 24       	eor	r1, r1
    3032:	8f 70       	andi	r24, 0x0F	; 15
    3034:	84 2b       	or	r24, r20
    3036:	04 c0       	rjmp	.+8      	; 0x3040 <put_fat+0xf2>
    3038:	8f 81       	ldd	r24, Y+7	; 0x07
    303a:	98 85       	ldd	r25, Y+8	; 0x08
    303c:	a9 85       	ldd	r26, Y+9	; 0x09
    303e:	ba 85       	ldd	r27, Y+10	; 0x0a
    3040:	f7 01       	movw	r30, r14
    3042:	e2 0f       	add	r30, r18
    3044:	f3 1f       	adc	r31, r19
    3046:	86 a7       	std	Z+46, r24	; 0x2e
    3048:	89 81       	ldd	r24, Y+1	; 0x01
    304a:	9a 81       	ldd	r25, Y+2	; 0x02
    304c:	01 96       	adiw	r24, 0x01	; 1
    304e:	89 83       	std	Y+1, r24	; 0x01
    3050:	9a 83       	std	Y+2, r25	; 0x02
    3052:	81 e0       	ldi	r24, 0x01	; 1
    3054:	f7 01       	movw	r30, r14
    3056:	84 83       	std	Z+4, r24	; 0x04
    3058:	46 8d       	ldd	r20, Z+30	; 0x1e
    305a:	57 8d       	ldd	r21, Z+31	; 0x1f
    305c:	60 a1       	ldd	r22, Z+32	; 0x20
    305e:	71 a1       	ldd	r23, Z+33	; 0x21
    3060:	89 81       	ldd	r24, Y+1	; 0x01
    3062:	9a 81       	ldd	r25, Y+2	; 0x02
    3064:	89 2f       	mov	r24, r25
    3066:	99 27       	eor	r25, r25
    3068:	86 95       	lsr	r24
    306a:	48 0f       	add	r20, r24
    306c:	59 1f       	adc	r21, r25
    306e:	61 1d       	adc	r22, r1
    3070:	71 1d       	adc	r23, r1
    3072:	c7 01       	movw	r24, r14
    3074:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <move_window>
    3078:	81 11       	cpse	r24, r1
    307a:	cd c0       	rjmp	.+410    	; 0x3216 <put_fat+0x2c8>
    307c:	29 81       	ldd	r18, Y+1	; 0x01
    307e:	3a 81       	ldd	r19, Y+2	; 0x02
    3080:	31 70       	andi	r19, 0x01	; 1
    3082:	4b 81       	ldd	r20, Y+3	; 0x03
    3084:	5c 81       	ldd	r21, Y+4	; 0x04
    3086:	6d 81       	ldd	r22, Y+5	; 0x05
    3088:	7e 81       	ldd	r23, Y+6	; 0x06
    308a:	40 ff       	sbrs	r20, 0
    308c:	0d c0       	rjmp	.+26     	; 0x30a8 <put_fat+0x15a>
    308e:	4f 81       	ldd	r20, Y+7	; 0x07
    3090:	58 85       	ldd	r21, Y+8	; 0x08
    3092:	69 85       	ldd	r22, Y+9	; 0x09
    3094:	7a 85       	ldd	r23, Y+10	; 0x0a
    3096:	68 94       	set
    3098:	13 f8       	bld	r1, 3
    309a:	76 95       	lsr	r23
    309c:	67 95       	ror	r22
    309e:	57 95       	ror	r21
    30a0:	47 95       	ror	r20
    30a2:	16 94       	lsr	r1
    30a4:	d1 f7       	brne	.-12     	; 0x309a <put_fat+0x14c>
    30a6:	0d c0       	rjmp	.+26     	; 0x30c2 <put_fat+0x174>
    30a8:	f7 01       	movw	r30, r14
    30aa:	e2 0f       	add	r30, r18
    30ac:	f3 1f       	adc	r31, r19
    30ae:	e6 a5       	ldd	r30, Z+46	; 0x2e
    30b0:	4f 81       	ldd	r20, Y+7	; 0x07
    30b2:	58 85       	ldd	r21, Y+8	; 0x08
    30b4:	69 85       	ldd	r22, Y+9	; 0x09
    30b6:	7a 85       	ldd	r23, Y+10	; 0x0a
    30b8:	e0 7f       	andi	r30, 0xF0	; 240
    30ba:	95 2f       	mov	r25, r21
    30bc:	9f 70       	andi	r25, 0x0F	; 15
    30be:	4e 2f       	mov	r20, r30
    30c0:	49 2b       	or	r20, r25
    30c2:	f7 01       	movw	r30, r14
    30c4:	e2 0f       	add	r30, r18
    30c6:	f3 1f       	adc	r31, r19
    30c8:	46 a7       	std	Z+46, r20	; 0x2e
    30ca:	a5 c0       	rjmp	.+330    	; 0x3216 <put_fat+0x2c8>
    30cc:	f7 01       	movw	r30, r14
    30ce:	86 8d       	ldd	r24, Z+30	; 0x1e
    30d0:	97 8d       	ldd	r25, Z+31	; 0x1f
    30d2:	a0 a1       	ldd	r26, Z+32	; 0x20
    30d4:	b1 a1       	ldd	r27, Z+33	; 0x21
    30d6:	4b 81       	ldd	r20, Y+3	; 0x03
    30d8:	5c 81       	ldd	r21, Y+4	; 0x04
    30da:	6d 81       	ldd	r22, Y+5	; 0x05
    30dc:	7e 81       	ldd	r23, Y+6	; 0x06
    30de:	45 2f       	mov	r20, r21
    30e0:	56 2f       	mov	r21, r22
    30e2:	67 2f       	mov	r22, r23
    30e4:	77 27       	eor	r23, r23
    30e6:	48 0f       	add	r20, r24
    30e8:	59 1f       	adc	r21, r25
    30ea:	6a 1f       	adc	r22, r26
    30ec:	7b 1f       	adc	r23, r27
    30ee:	c7 01       	movw	r24, r14
    30f0:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <move_window>
    30f4:	81 11       	cpse	r24, r1
    30f6:	8f c0       	rjmp	.+286    	; 0x3216 <put_fat+0x2c8>
    30f8:	4b 81       	ldd	r20, Y+3	; 0x03
    30fa:	5c 81       	ldd	r21, Y+4	; 0x04
    30fc:	6d 81       	ldd	r22, Y+5	; 0x05
    30fe:	7e 81       	ldd	r23, Y+6	; 0x06
    3100:	44 0f       	add	r20, r20
    3102:	55 1f       	adc	r21, r21
    3104:	66 1f       	adc	r22, r22
    3106:	77 1f       	adc	r23, r23
    3108:	4e 7f       	andi	r20, 0xFE	; 254
    310a:	51 70       	andi	r21, 0x01	; 1
    310c:	66 27       	eor	r22, r22
    310e:	77 27       	eor	r23, r23
    3110:	fa 01       	movw	r30, r20
    3112:	be 96       	adiw	r30, 0x2e	; 46
    3114:	ee 0d       	add	r30, r14
    3116:	ff 1d       	adc	r31, r15
    3118:	0f 81       	ldd	r16, Y+7	; 0x07
    311a:	18 85       	ldd	r17, Y+8	; 0x08
    311c:	29 85       	ldd	r18, Y+9	; 0x09
    311e:	3a 85       	ldd	r19, Y+10	; 0x0a
    3120:	d7 01       	movw	r26, r14
    3122:	a4 0f       	add	r26, r20
    3124:	b5 1f       	adc	r27, r21
    3126:	9e 96       	adiw	r26, 0x2e	; 46
    3128:	0c 93       	st	X, r16
    312a:	4f 81       	ldd	r20, Y+7	; 0x07
    312c:	58 85       	ldd	r21, Y+8	; 0x08
    312e:	69 85       	ldd	r22, Y+9	; 0x09
    3130:	7a 85       	ldd	r23, Y+10	; 0x0a
    3132:	45 2f       	mov	r20, r21
    3134:	55 27       	eor	r21, r21
    3136:	41 83       	std	Z+1, r20	; 0x01
    3138:	6e c0       	rjmp	.+220    	; 0x3216 <put_fat+0x2c8>
    313a:	f7 01       	movw	r30, r14
    313c:	86 8d       	ldd	r24, Z+30	; 0x1e
    313e:	97 8d       	ldd	r25, Z+31	; 0x1f
    3140:	a0 a1       	ldd	r26, Z+32	; 0x20
    3142:	b1 a1       	ldd	r27, Z+33	; 0x21
    3144:	4b 81       	ldd	r20, Y+3	; 0x03
    3146:	5c 81       	ldd	r21, Y+4	; 0x04
    3148:	6d 81       	ldd	r22, Y+5	; 0x05
    314a:	7e 81       	ldd	r23, Y+6	; 0x06
    314c:	68 94       	set
    314e:	16 f8       	bld	r1, 6
    3150:	76 95       	lsr	r23
    3152:	67 95       	ror	r22
    3154:	57 95       	ror	r21
    3156:	47 95       	ror	r20
    3158:	16 94       	lsr	r1
    315a:	d1 f7       	brne	.-12     	; 0x3150 <put_fat+0x202>
    315c:	48 0f       	add	r20, r24
    315e:	59 1f       	adc	r21, r25
    3160:	6a 1f       	adc	r22, r26
    3162:	7b 1f       	adc	r23, r27
    3164:	c7 01       	movw	r24, r14
    3166:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <move_window>
    316a:	81 11       	cpse	r24, r1
    316c:	54 c0       	rjmp	.+168    	; 0x3216 <put_fat+0x2c8>
    316e:	4b 81       	ldd	r20, Y+3	; 0x03
    3170:	5c 81       	ldd	r21, Y+4	; 0x04
    3172:	6d 81       	ldd	r22, Y+5	; 0x05
    3174:	7e 81       	ldd	r23, Y+6	; 0x06
    3176:	44 0f       	add	r20, r20
    3178:	55 1f       	adc	r21, r21
    317a:	66 1f       	adc	r22, r22
    317c:	77 1f       	adc	r23, r23
    317e:	44 0f       	add	r20, r20
    3180:	55 1f       	adc	r21, r21
    3182:	66 1f       	adc	r22, r22
    3184:	77 1f       	adc	r23, r23
    3186:	4c 7f       	andi	r20, 0xFC	; 252
    3188:	51 70       	andi	r21, 0x01	; 1
    318a:	66 27       	eor	r22, r22
    318c:	77 27       	eor	r23, r23
    318e:	fa 01       	movw	r30, r20
    3190:	be 96       	adiw	r30, 0x2e	; 46
    3192:	ee 0d       	add	r30, r14
    3194:	ff 1d       	adc	r31, r15
    3196:	03 81       	ldd	r16, Z+3	; 0x03
    3198:	92 81       	ldd	r25, Z+2	; 0x02
    319a:	91 81       	ldd	r25, Z+1	; 0x01
    319c:	d7 01       	movw	r26, r14
    319e:	a4 0f       	add	r26, r20
    31a0:	b5 1f       	adc	r27, r21
    31a2:	9e 96       	adiw	r26, 0x2e	; 46
    31a4:	9c 91       	ld	r25, X
    31a6:	9e 97       	sbiw	r26, 0x2e	; 46
    31a8:	8f 80       	ldd	r8, Y+7	; 0x07
    31aa:	98 84       	ldd	r9, Y+8	; 0x08
    31ac:	a9 84       	ldd	r10, Y+9	; 0x09
    31ae:	ba 84       	ldd	r11, Y+10	; 0x0a
    31b0:	10 e0       	ldi	r17, 0x00	; 0
    31b2:	20 e0       	ldi	r18, 0x00	; 0
    31b4:	30 e0       	ldi	r19, 0x00	; 0
    31b6:	30 2f       	mov	r19, r16
    31b8:	22 27       	eor	r18, r18
    31ba:	11 27       	eor	r17, r17
    31bc:	00 27       	eor	r16, r16
    31be:	00 27       	eor	r16, r16
    31c0:	11 27       	eor	r17, r17
    31c2:	22 27       	eor	r18, r18
    31c4:	30 7f       	andi	r19, 0xF0	; 240
    31c6:	08 29       	or	r16, r8
    31c8:	19 29       	or	r17, r9
    31ca:	2a 29       	or	r18, r10
    31cc:	3b 29       	or	r19, r11
    31ce:	0f 83       	std	Y+7, r16	; 0x07
    31d0:	18 87       	std	Y+8, r17	; 0x08
    31d2:	29 87       	std	Y+9, r18	; 0x09
    31d4:	3a 87       	std	Y+10, r19	; 0x0a
    31d6:	0f 81       	ldd	r16, Y+7	; 0x07
    31d8:	18 85       	ldd	r17, Y+8	; 0x08
    31da:	29 85       	ldd	r18, Y+9	; 0x09
    31dc:	3a 85       	ldd	r19, Y+10	; 0x0a
    31de:	9e 96       	adiw	r26, 0x2e	; 46
    31e0:	0c 93       	st	X, r16
    31e2:	4f 81       	ldd	r20, Y+7	; 0x07
    31e4:	58 85       	ldd	r21, Y+8	; 0x08
    31e6:	69 85       	ldd	r22, Y+9	; 0x09
    31e8:	7a 85       	ldd	r23, Y+10	; 0x0a
    31ea:	45 2f       	mov	r20, r21
    31ec:	55 27       	eor	r21, r21
    31ee:	41 83       	std	Z+1, r20	; 0x01
    31f0:	4f 81       	ldd	r20, Y+7	; 0x07
    31f2:	58 85       	ldd	r21, Y+8	; 0x08
    31f4:	69 85       	ldd	r22, Y+9	; 0x09
    31f6:	7a 85       	ldd	r23, Y+10	; 0x0a
    31f8:	ab 01       	movw	r20, r22
    31fa:	66 27       	eor	r22, r22
    31fc:	77 27       	eor	r23, r23
    31fe:	42 83       	std	Z+2, r20	; 0x02
    3200:	4f 81       	ldd	r20, Y+7	; 0x07
    3202:	58 85       	ldd	r21, Y+8	; 0x08
    3204:	69 85       	ldd	r22, Y+9	; 0x09
    3206:	7a 85       	ldd	r23, Y+10	; 0x0a
    3208:	47 2f       	mov	r20, r23
    320a:	55 27       	eor	r21, r21
    320c:	66 27       	eor	r22, r22
    320e:	77 27       	eor	r23, r23
    3210:	43 83       	std	Z+3, r20	; 0x03
    3212:	01 c0       	rjmp	.+2      	; 0x3216 <put_fat+0x2c8>
    3214:	82 e0       	ldi	r24, 0x02	; 2
    3216:	91 e0       	ldi	r25, 0x01	; 1
    3218:	f7 01       	movw	r30, r14
    321a:	94 83       	std	Z+4, r25	; 0x04
    321c:	03 c0       	rjmp	.+6      	; 0x3224 <put_fat+0x2d6>
    321e:	82 e0       	ldi	r24, 0x02	; 2
    3220:	01 c0       	rjmp	.+2      	; 0x3224 <put_fat+0x2d6>
    3222:	82 e0       	ldi	r24, 0x02	; 2
    3224:	2a 96       	adiw	r28, 0x0a	; 10
    3226:	cd bf       	out	0x3d, r28	; 61
    3228:	de bf       	out	0x3e, r29	; 62
    322a:	df 91       	pop	r29
    322c:	cf 91       	pop	r28
    322e:	1f 91       	pop	r17
    3230:	0f 91       	pop	r16
    3232:	ff 90       	pop	r15
    3234:	ef 90       	pop	r14
    3236:	bf 90       	pop	r11
    3238:	af 90       	pop	r10
    323a:	9f 90       	pop	r9
    323c:	8f 90       	pop	r8
    323e:	08 95       	ret

00003240 <create_chain>:
    3240:	8f 92       	push	r8
    3242:	9f 92       	push	r9
    3244:	af 92       	push	r10
    3246:	bf 92       	push	r11
    3248:	ef 92       	push	r14
    324a:	ff 92       	push	r15
    324c:	0f 93       	push	r16
    324e:	1f 93       	push	r17
    3250:	cf 93       	push	r28
    3252:	df 93       	push	r29
    3254:	cd b7       	in	r28, 0x3d	; 61
    3256:	de b7       	in	r29, 0x3e	; 62
    3258:	60 97       	sbiw	r28, 0x10	; 16
    325a:	cd bf       	out	0x3d, r28	; 61
    325c:	de bf       	out	0x3e, r29	; 62
    325e:	7c 01       	movw	r14, r24
    3260:	4d 87       	std	Y+13, r20	; 0x0d
    3262:	5e 87       	std	Y+14, r21	; 0x0e
    3264:	6f 87       	std	Y+15, r22	; 0x0f
    3266:	78 8b       	std	Y+16, r23	; 0x10
    3268:	8d 85       	ldd	r24, Y+13	; 0x0d
    326a:	9e 85       	ldd	r25, Y+14	; 0x0e
    326c:	af 85       	ldd	r26, Y+15	; 0x0f
    326e:	b8 89       	ldd	r27, Y+16	; 0x10
    3270:	89 2b       	or	r24, r25
    3272:	8a 2b       	or	r24, r26
    3274:	8b 2b       	or	r24, r27
    3276:	41 f5       	brne	.+80     	; 0x32c8 <create_chain+0x88>
    3278:	f7 01       	movw	r30, r14
    327a:	82 85       	ldd	r24, Z+10	; 0x0a
    327c:	93 85       	ldd	r25, Z+11	; 0x0b
    327e:	a4 85       	ldd	r26, Z+12	; 0x0c
    3280:	b5 85       	ldd	r27, Z+13	; 0x0d
    3282:	89 87       	std	Y+9, r24	; 0x09
    3284:	9a 87       	std	Y+10, r25	; 0x0a
    3286:	ab 87       	std	Y+11, r26	; 0x0b
    3288:	bc 87       	std	Y+12, r27	; 0x0c
    328a:	89 85       	ldd	r24, Y+9	; 0x09
    328c:	9a 85       	ldd	r25, Y+10	; 0x0a
    328e:	ab 85       	ldd	r26, Y+11	; 0x0b
    3290:	bc 85       	ldd	r27, Y+12	; 0x0c
    3292:	89 2b       	or	r24, r25
    3294:	8a 2b       	or	r24, r26
    3296:	8b 2b       	or	r24, r27
    3298:	71 f0       	breq	.+28     	; 0x32b6 <create_chain+0x76>
    329a:	42 89       	ldd	r20, Z+18	; 0x12
    329c:	53 89       	ldd	r21, Z+19	; 0x13
    329e:	64 89       	ldd	r22, Z+20	; 0x14
    32a0:	75 89       	ldd	r23, Z+21	; 0x15
    32a2:	89 85       	ldd	r24, Y+9	; 0x09
    32a4:	9a 85       	ldd	r25, Y+10	; 0x0a
    32a6:	ab 85       	ldd	r26, Y+11	; 0x0b
    32a8:	bc 85       	ldd	r27, Y+12	; 0x0c
    32aa:	84 17       	cp	r24, r20
    32ac:	95 07       	cpc	r25, r21
    32ae:	a6 07       	cpc	r26, r22
    32b0:	b7 07       	cpc	r27, r23
    32b2:	08 f4       	brcc	.+2      	; 0x32b6 <create_chain+0x76>
    32b4:	45 c0       	rjmp	.+138    	; 0x3340 <create_chain+0x100>
    32b6:	81 e0       	ldi	r24, 0x01	; 1
    32b8:	90 e0       	ldi	r25, 0x00	; 0
    32ba:	a0 e0       	ldi	r26, 0x00	; 0
    32bc:	b0 e0       	ldi	r27, 0x00	; 0
    32be:	89 87       	std	Y+9, r24	; 0x09
    32c0:	9a 87       	std	Y+10, r25	; 0x0a
    32c2:	ab 87       	std	Y+11, r26	; 0x0b
    32c4:	bc 87       	std	Y+12, r27	; 0x0c
    32c6:	3c c0       	rjmp	.+120    	; 0x3340 <create_chain+0x100>
    32c8:	4d 85       	ldd	r20, Y+13	; 0x0d
    32ca:	5e 85       	ldd	r21, Y+14	; 0x0e
    32cc:	6f 85       	ldd	r22, Y+15	; 0x0f
    32ce:	78 89       	ldd	r23, Y+16	; 0x10
    32d0:	c7 01       	movw	r24, r14
    32d2:	fa db       	rcall	.-2060   	; 0x2ac8 <get_fat>
    32d4:	69 83       	std	Y+1, r22	; 0x01
    32d6:	7a 83       	std	Y+2, r23	; 0x02
    32d8:	8b 83       	std	Y+3, r24	; 0x03
    32da:	9c 83       	std	Y+4, r25	; 0x04
    32dc:	89 81       	ldd	r24, Y+1	; 0x01
    32de:	9a 81       	ldd	r25, Y+2	; 0x02
    32e0:	ab 81       	ldd	r26, Y+3	; 0x03
    32e2:	bc 81       	ldd	r27, Y+4	; 0x04
    32e4:	02 97       	sbiw	r24, 0x02	; 2
    32e6:	a1 05       	cpc	r26, r1
    32e8:	b1 05       	cpc	r27, r1
    32ea:	08 f4       	brcc	.+2      	; 0x32ee <create_chain+0xae>
    32ec:	ed c0       	rjmp	.+474    	; 0x34c8 <create_chain+0x288>
    32ee:	89 81       	ldd	r24, Y+1	; 0x01
    32f0:	9a 81       	ldd	r25, Y+2	; 0x02
    32f2:	ab 81       	ldd	r26, Y+3	; 0x03
    32f4:	bc 81       	ldd	r27, Y+4	; 0x04
    32f6:	8f 3f       	cpi	r24, 0xFF	; 255
    32f8:	9f 4f       	sbci	r25, 0xFF	; 255
    32fa:	af 4f       	sbci	r26, 0xFF	; 255
    32fc:	bf 4f       	sbci	r27, 0xFF	; 255
    32fe:	29 f4       	brne	.+10     	; 0x330a <create_chain+0xca>
    3300:	69 81       	ldd	r22, Y+1	; 0x01
    3302:	7a 81       	ldd	r23, Y+2	; 0x02
    3304:	8b 81       	ldd	r24, Y+3	; 0x03
    3306:	9c 81       	ldd	r25, Y+4	; 0x04
    3308:	eb c0       	rjmp	.+470    	; 0x34e0 <create_chain+0x2a0>
    330a:	f7 01       	movw	r30, r14
    330c:	42 89       	ldd	r20, Z+18	; 0x12
    330e:	53 89       	ldd	r21, Z+19	; 0x13
    3310:	64 89       	ldd	r22, Z+20	; 0x14
    3312:	75 89       	ldd	r23, Z+21	; 0x15
    3314:	89 81       	ldd	r24, Y+1	; 0x01
    3316:	9a 81       	ldd	r25, Y+2	; 0x02
    3318:	ab 81       	ldd	r26, Y+3	; 0x03
    331a:	bc 81       	ldd	r27, Y+4	; 0x04
    331c:	84 17       	cp	r24, r20
    331e:	95 07       	cpc	r25, r21
    3320:	a6 07       	cpc	r26, r22
    3322:	b7 07       	cpc	r27, r23
    3324:	28 f4       	brcc	.+10     	; 0x3330 <create_chain+0xf0>
    3326:	69 81       	ldd	r22, Y+1	; 0x01
    3328:	7a 81       	ldd	r23, Y+2	; 0x02
    332a:	8b 81       	ldd	r24, Y+3	; 0x03
    332c:	9c 81       	ldd	r25, Y+4	; 0x04
    332e:	d8 c0       	rjmp	.+432    	; 0x34e0 <create_chain+0x2a0>
    3330:	8d 85       	ldd	r24, Y+13	; 0x0d
    3332:	9e 85       	ldd	r25, Y+14	; 0x0e
    3334:	af 85       	ldd	r26, Y+15	; 0x0f
    3336:	b8 89       	ldd	r27, Y+16	; 0x10
    3338:	89 87       	std	Y+9, r24	; 0x09
    333a:	9a 87       	std	Y+10, r25	; 0x0a
    333c:	ab 87       	std	Y+11, r26	; 0x0b
    333e:	bc 87       	std	Y+12, r27	; 0x0c
    3340:	89 85       	ldd	r24, Y+9	; 0x09
    3342:	9a 85       	ldd	r25, Y+10	; 0x0a
    3344:	ab 85       	ldd	r26, Y+11	; 0x0b
    3346:	bc 85       	ldd	r27, Y+12	; 0x0c
    3348:	8d 83       	std	Y+5, r24	; 0x05
    334a:	9e 83       	std	Y+6, r25	; 0x06
    334c:	af 83       	std	Y+7, r26	; 0x07
    334e:	b8 87       	std	Y+8, r27	; 0x08
    3350:	81 2c       	mov	r8, r1
    3352:	91 2c       	mov	r9, r1
    3354:	54 01       	movw	r10, r8
    3356:	68 94       	set
    3358:	81 f8       	bld	r8, 1
    335a:	8d 81       	ldd	r24, Y+5	; 0x05
    335c:	9e 81       	ldd	r25, Y+6	; 0x06
    335e:	af 81       	ldd	r26, Y+7	; 0x07
    3360:	b8 85       	ldd	r27, Y+8	; 0x08
    3362:	01 96       	adiw	r24, 0x01	; 1
    3364:	a1 1d       	adc	r26, r1
    3366:	b1 1d       	adc	r27, r1
    3368:	8d 83       	std	Y+5, r24	; 0x05
    336a:	9e 83       	std	Y+6, r25	; 0x06
    336c:	af 83       	std	Y+7, r26	; 0x07
    336e:	b8 87       	std	Y+8, r27	; 0x08
    3370:	f7 01       	movw	r30, r14
    3372:	82 89       	ldd	r24, Z+18	; 0x12
    3374:	93 89       	ldd	r25, Z+19	; 0x13
    3376:	a4 89       	ldd	r26, Z+20	; 0x14
    3378:	b5 89       	ldd	r27, Z+21	; 0x15
    337a:	4d 81       	ldd	r20, Y+5	; 0x05
    337c:	5e 81       	ldd	r21, Y+6	; 0x06
    337e:	6f 81       	ldd	r22, Y+7	; 0x07
    3380:	78 85       	ldd	r23, Y+8	; 0x08
    3382:	48 17       	cp	r20, r24
    3384:	59 07       	cpc	r21, r25
    3386:	6a 07       	cpc	r22, r26
    3388:	7b 07       	cpc	r23, r27
    338a:	90 f0       	brcs	.+36     	; 0x33b0 <create_chain+0x170>
    338c:	8d 82       	std	Y+5, r8	; 0x05
    338e:	9e 82       	std	Y+6, r9	; 0x06
    3390:	af 82       	std	Y+7, r10	; 0x07
    3392:	b8 86       	std	Y+8, r11	; 0x08
    3394:	4d 81       	ldd	r20, Y+5	; 0x05
    3396:	5e 81       	ldd	r21, Y+6	; 0x06
    3398:	6f 81       	ldd	r22, Y+7	; 0x07
    339a:	78 85       	ldd	r23, Y+8	; 0x08
    339c:	89 85       	ldd	r24, Y+9	; 0x09
    339e:	9a 85       	ldd	r25, Y+10	; 0x0a
    33a0:	ab 85       	ldd	r26, Y+11	; 0x0b
    33a2:	bc 85       	ldd	r27, Y+12	; 0x0c
    33a4:	84 17       	cp	r24, r20
    33a6:	95 07       	cpc	r25, r21
    33a8:	a6 07       	cpc	r26, r22
    33aa:	b7 07       	cpc	r27, r23
    33ac:	08 f4       	brcc	.+2      	; 0x33b0 <create_chain+0x170>
    33ae:	91 c0       	rjmp	.+290    	; 0x34d2 <create_chain+0x292>
    33b0:	4d 81       	ldd	r20, Y+5	; 0x05
    33b2:	5e 81       	ldd	r21, Y+6	; 0x06
    33b4:	6f 81       	ldd	r22, Y+7	; 0x07
    33b6:	78 85       	ldd	r23, Y+8	; 0x08
    33b8:	c7 01       	movw	r24, r14
    33ba:	86 db       	rcall	.-2292   	; 0x2ac8 <get_fat>
    33bc:	69 83       	std	Y+1, r22	; 0x01
    33be:	7a 83       	std	Y+2, r23	; 0x02
    33c0:	8b 83       	std	Y+3, r24	; 0x03
    33c2:	9c 83       	std	Y+4, r25	; 0x04
    33c4:	89 81       	ldd	r24, Y+1	; 0x01
    33c6:	9a 81       	ldd	r25, Y+2	; 0x02
    33c8:	ab 81       	ldd	r26, Y+3	; 0x03
    33ca:	bc 81       	ldd	r27, Y+4	; 0x04
    33cc:	89 2b       	or	r24, r25
    33ce:	8a 2b       	or	r24, r26
    33d0:	8b 2b       	or	r24, r27
    33d2:	29 f1       	breq	.+74     	; 0x341e <create_chain+0x1de>
    33d4:	89 81       	ldd	r24, Y+1	; 0x01
    33d6:	9a 81       	ldd	r25, Y+2	; 0x02
    33d8:	ab 81       	ldd	r26, Y+3	; 0x03
    33da:	bc 81       	ldd	r27, Y+4	; 0x04
    33dc:	8f 3f       	cpi	r24, 0xFF	; 255
    33de:	9f 4f       	sbci	r25, 0xFF	; 255
    33e0:	af 4f       	sbci	r26, 0xFF	; 255
    33e2:	bf 4f       	sbci	r27, 0xFF	; 255
    33e4:	41 f0       	breq	.+16     	; 0x33f6 <create_chain+0x1b6>
    33e6:	89 81       	ldd	r24, Y+1	; 0x01
    33e8:	9a 81       	ldd	r25, Y+2	; 0x02
    33ea:	ab 81       	ldd	r26, Y+3	; 0x03
    33ec:	bc 81       	ldd	r27, Y+4	; 0x04
    33ee:	01 97       	sbiw	r24, 0x01	; 1
    33f0:	a1 05       	cpc	r26, r1
    33f2:	b1 05       	cpc	r27, r1
    33f4:	29 f4       	brne	.+10     	; 0x3400 <create_chain+0x1c0>
    33f6:	69 81       	ldd	r22, Y+1	; 0x01
    33f8:	7a 81       	ldd	r23, Y+2	; 0x02
    33fa:	8b 81       	ldd	r24, Y+3	; 0x03
    33fc:	9c 81       	ldd	r25, Y+4	; 0x04
    33fe:	70 c0       	rjmp	.+224    	; 0x34e0 <create_chain+0x2a0>
    3400:	4d 81       	ldd	r20, Y+5	; 0x05
    3402:	5e 81       	ldd	r21, Y+6	; 0x06
    3404:	6f 81       	ldd	r22, Y+7	; 0x07
    3406:	78 85       	ldd	r23, Y+8	; 0x08
    3408:	89 85       	ldd	r24, Y+9	; 0x09
    340a:	9a 85       	ldd	r25, Y+10	; 0x0a
    340c:	ab 85       	ldd	r26, Y+11	; 0x0b
    340e:	bc 85       	ldd	r27, Y+12	; 0x0c
    3410:	48 17       	cp	r20, r24
    3412:	59 07       	cpc	r21, r25
    3414:	6a 07       	cpc	r22, r26
    3416:	7b 07       	cpc	r23, r27
    3418:	09 f0       	breq	.+2      	; 0x341c <create_chain+0x1dc>
    341a:	9f cf       	rjmp	.-194    	; 0x335a <create_chain+0x11a>
    341c:	5e c0       	rjmp	.+188    	; 0x34da <create_chain+0x29a>
    341e:	4d 81       	ldd	r20, Y+5	; 0x05
    3420:	5e 81       	ldd	r21, Y+6	; 0x06
    3422:	6f 81       	ldd	r22, Y+7	; 0x07
    3424:	78 85       	ldd	r23, Y+8	; 0x08
    3426:	0f ef       	ldi	r16, 0xFF	; 255
    3428:	1f ef       	ldi	r17, 0xFF	; 255
    342a:	2f ef       	ldi	r18, 0xFF	; 255
    342c:	3f e0       	ldi	r19, 0x0F	; 15
    342e:	c7 01       	movw	r24, r14
    3430:	8e dd       	rcall	.-1252   	; 0x2f4e <put_fat>
    3432:	81 11       	cpse	r24, r1
    3434:	36 c0       	rjmp	.+108    	; 0x34a2 <create_chain+0x262>
    3436:	8d 85       	ldd	r24, Y+13	; 0x0d
    3438:	9e 85       	ldd	r25, Y+14	; 0x0e
    343a:	af 85       	ldd	r26, Y+15	; 0x0f
    343c:	b8 89       	ldd	r27, Y+16	; 0x10
    343e:	89 2b       	or	r24, r25
    3440:	8a 2b       	or	r24, r26
    3442:	8b 2b       	or	r24, r27
    3444:	61 f0       	breq	.+24     	; 0x345e <create_chain+0x21e>
    3446:	0d 81       	ldd	r16, Y+5	; 0x05
    3448:	1e 81       	ldd	r17, Y+6	; 0x06
    344a:	2f 81       	ldd	r18, Y+7	; 0x07
    344c:	38 85       	ldd	r19, Y+8	; 0x08
    344e:	4d 85       	ldd	r20, Y+13	; 0x0d
    3450:	5e 85       	ldd	r21, Y+14	; 0x0e
    3452:	6f 85       	ldd	r22, Y+15	; 0x0f
    3454:	78 89       	ldd	r23, Y+16	; 0x10
    3456:	c7 01       	movw	r24, r14
    3458:	7a dd       	rcall	.-1292   	; 0x2f4e <put_fat>
    345a:	81 11       	cpse	r24, r1
    345c:	22 c0       	rjmp	.+68     	; 0x34a2 <create_chain+0x262>
    345e:	8d 81       	ldd	r24, Y+5	; 0x05
    3460:	9e 81       	ldd	r25, Y+6	; 0x06
    3462:	af 81       	ldd	r26, Y+7	; 0x07
    3464:	b8 85       	ldd	r27, Y+8	; 0x08
    3466:	f7 01       	movw	r30, r14
    3468:	82 87       	std	Z+10, r24	; 0x0a
    346a:	93 87       	std	Z+11, r25	; 0x0b
    346c:	a4 87       	std	Z+12, r26	; 0x0c
    346e:	b5 87       	std	Z+13, r27	; 0x0d
    3470:	86 85       	ldd	r24, Z+14	; 0x0e
    3472:	97 85       	ldd	r25, Z+15	; 0x0f
    3474:	a0 89       	ldd	r26, Z+16	; 0x10
    3476:	b1 89       	ldd	r27, Z+17	; 0x11
    3478:	8f 3f       	cpi	r24, 0xFF	; 255
    347a:	9f 4f       	sbci	r25, 0xFF	; 255
    347c:	af 4f       	sbci	r26, 0xFF	; 255
    347e:	bf 4f       	sbci	r27, 0xFF	; 255
    3480:	f1 f0       	breq	.+60     	; 0x34be <create_chain+0x27e>
    3482:	f7 01       	movw	r30, r14
    3484:	86 85       	ldd	r24, Z+14	; 0x0e
    3486:	97 85       	ldd	r25, Z+15	; 0x0f
    3488:	a0 89       	ldd	r26, Z+16	; 0x10
    348a:	b1 89       	ldd	r27, Z+17	; 0x11
    348c:	01 97       	sbiw	r24, 0x01	; 1
    348e:	a1 09       	sbc	r26, r1
    3490:	b1 09       	sbc	r27, r1
    3492:	86 87       	std	Z+14, r24	; 0x0e
    3494:	97 87       	std	Z+15, r25	; 0x0f
    3496:	a0 8b       	std	Z+16, r26	; 0x10
    3498:	b1 8b       	std	Z+17, r27	; 0x11
    349a:	85 81       	ldd	r24, Z+5	; 0x05
    349c:	81 60       	ori	r24, 0x01	; 1
    349e:	85 83       	std	Z+5, r24	; 0x05
    34a0:	0e c0       	rjmp	.+28     	; 0x34be <create_chain+0x27e>
    34a2:	81 30       	cpi	r24, 0x01	; 1
    34a4:	21 f4       	brne	.+8      	; 0x34ae <create_chain+0x26e>
    34a6:	8f ef       	ldi	r24, 0xFF	; 255
    34a8:	9f ef       	ldi	r25, 0xFF	; 255
    34aa:	dc 01       	movw	r26, r24
    34ac:	04 c0       	rjmp	.+8      	; 0x34b6 <create_chain+0x276>
    34ae:	81 e0       	ldi	r24, 0x01	; 1
    34b0:	90 e0       	ldi	r25, 0x00	; 0
    34b2:	a0 e0       	ldi	r26, 0x00	; 0
    34b4:	b0 e0       	ldi	r27, 0x00	; 0
    34b6:	8d 83       	std	Y+5, r24	; 0x05
    34b8:	9e 83       	std	Y+6, r25	; 0x06
    34ba:	af 83       	std	Y+7, r26	; 0x07
    34bc:	b8 87       	std	Y+8, r27	; 0x08
    34be:	6d 81       	ldd	r22, Y+5	; 0x05
    34c0:	7e 81       	ldd	r23, Y+6	; 0x06
    34c2:	8f 81       	ldd	r24, Y+7	; 0x07
    34c4:	98 85       	ldd	r25, Y+8	; 0x08
    34c6:	0c c0       	rjmp	.+24     	; 0x34e0 <create_chain+0x2a0>
    34c8:	61 e0       	ldi	r22, 0x01	; 1
    34ca:	70 e0       	ldi	r23, 0x00	; 0
    34cc:	80 e0       	ldi	r24, 0x00	; 0
    34ce:	90 e0       	ldi	r25, 0x00	; 0
    34d0:	07 c0       	rjmp	.+14     	; 0x34e0 <create_chain+0x2a0>
    34d2:	60 e0       	ldi	r22, 0x00	; 0
    34d4:	70 e0       	ldi	r23, 0x00	; 0
    34d6:	cb 01       	movw	r24, r22
    34d8:	03 c0       	rjmp	.+6      	; 0x34e0 <create_chain+0x2a0>
    34da:	60 e0       	ldi	r22, 0x00	; 0
    34dc:	70 e0       	ldi	r23, 0x00	; 0
    34de:	cb 01       	movw	r24, r22
    34e0:	60 96       	adiw	r28, 0x10	; 16
    34e2:	cd bf       	out	0x3d, r28	; 61
    34e4:	de bf       	out	0x3e, r29	; 62
    34e6:	df 91       	pop	r29
    34e8:	cf 91       	pop	r28
    34ea:	1f 91       	pop	r17
    34ec:	0f 91       	pop	r16
    34ee:	ff 90       	pop	r15
    34f0:	ef 90       	pop	r14
    34f2:	bf 90       	pop	r11
    34f4:	af 90       	pop	r10
    34f6:	9f 90       	pop	r9
    34f8:	8f 90       	pop	r8
    34fa:	08 95       	ret

000034fc <dir_next>:
    34fc:	ef 92       	push	r14
    34fe:	ff 92       	push	r15
    3500:	0f 93       	push	r16
    3502:	1f 93       	push	r17
    3504:	cf 93       	push	r28
    3506:	df 93       	push	r29
    3508:	cd b7       	in	r28, 0x3d	; 61
    350a:	de b7       	in	r29, 0x3e	; 62
    350c:	28 97       	sbiw	r28, 0x08	; 8
    350e:	cd bf       	out	0x3d, r28	; 61
    3510:	de bf       	out	0x3e, r29	; 62
    3512:	8c 01       	movw	r16, r24
    3514:	7b 01       	movw	r14, r22
    3516:	dc 01       	movw	r26, r24
    3518:	14 96       	adiw	r26, 0x04	; 4
    351a:	8d 91       	ld	r24, X+
    351c:	9c 91       	ld	r25, X
    351e:	15 97       	sbiw	r26, 0x05	; 5
    3520:	01 96       	adiw	r24, 0x01	; 1
    3522:	8d 83       	std	Y+5, r24	; 0x05
    3524:	9e 83       	std	Y+6, r25	; 0x06
    3526:	8d 81       	ldd	r24, Y+5	; 0x05
    3528:	9e 81       	ldd	r25, Y+6	; 0x06
    352a:	89 2b       	or	r24, r25
    352c:	09 f4       	brne	.+2      	; 0x3530 <dir_next+0x34>
    352e:	2c c1       	rjmp	.+600    	; 0x3788 <dir_next+0x28c>
    3530:	1e 96       	adiw	r26, 0x0e	; 14
    3532:	4d 91       	ld	r20, X+
    3534:	5d 91       	ld	r21, X+
    3536:	6d 91       	ld	r22, X+
    3538:	7c 91       	ld	r23, X
    353a:	51 97       	sbiw	r26, 0x11	; 17
    353c:	45 2b       	or	r20, r21
    353e:	46 2b       	or	r20, r22
    3540:	47 2b       	or	r20, r23
    3542:	09 f4       	brne	.+2      	; 0x3546 <dir_next+0x4a>
    3544:	23 c1       	rjmp	.+582    	; 0x378c <dir_next+0x290>
    3546:	8d 81       	ldd	r24, Y+5	; 0x05
    3548:	9e 81       	ldd	r25, Y+6	; 0x06
    354a:	8f 70       	andi	r24, 0x0F	; 15
    354c:	99 27       	eor	r25, r25
    354e:	89 2b       	or	r24, r25
    3550:	09 f0       	breq	.+2      	; 0x3554 <dir_next+0x58>
    3552:	00 c1       	rjmp	.+512    	; 0x3754 <dir_next+0x258>
    3554:	1e 96       	adiw	r26, 0x0e	; 14
    3556:	8d 91       	ld	r24, X+
    3558:	9d 91       	ld	r25, X+
    355a:	0d 90       	ld	r0, X+
    355c:	bc 91       	ld	r27, X
    355e:	a0 2d       	mov	r26, r0
    3560:	01 96       	adiw	r24, 0x01	; 1
    3562:	a1 1d       	adc	r26, r1
    3564:	b1 1d       	adc	r27, r1
    3566:	f8 01       	movw	r30, r16
    3568:	86 87       	std	Z+14, r24	; 0x0e
    356a:	97 87       	std	Z+15, r25	; 0x0f
    356c:	a0 8b       	std	Z+16, r26	; 0x10
    356e:	b1 8b       	std	Z+17, r27	; 0x11
    3570:	82 85       	ldd	r24, Z+10	; 0x0a
    3572:	93 85       	ldd	r25, Z+11	; 0x0b
    3574:	a4 85       	ldd	r26, Z+12	; 0x0c
    3576:	b5 85       	ldd	r27, Z+13	; 0x0d
    3578:	89 2b       	or	r24, r25
    357a:	8a 2b       	or	r24, r26
    357c:	8b 2b       	or	r24, r27
    357e:	61 f4       	brne	.+24     	; 0x3598 <dir_next+0x9c>
    3580:	01 90       	ld	r0, Z+
    3582:	f0 81       	ld	r31, Z
    3584:	e0 2d       	mov	r30, r0
    3586:	20 85       	ldd	r18, Z+8	; 0x08
    3588:	31 85       	ldd	r19, Z+9	; 0x09
    358a:	8d 81       	ldd	r24, Y+5	; 0x05
    358c:	9e 81       	ldd	r25, Y+6	; 0x06
    358e:	82 17       	cp	r24, r18
    3590:	93 07       	cpc	r25, r19
    3592:	08 f0       	brcs	.+2      	; 0x3596 <dir_next+0x9a>
    3594:	fd c0       	rjmp	.+506    	; 0x3790 <dir_next+0x294>
    3596:	de c0       	rjmp	.+444    	; 0x3754 <dir_next+0x258>
    3598:	2d 81       	ldd	r18, Y+5	; 0x05
    359a:	3e 81       	ldd	r19, Y+6	; 0x06
    359c:	d8 01       	movw	r26, r16
    359e:	01 90       	ld	r0, Z+
    35a0:	f0 81       	ld	r31, Z
    35a2:	e0 2d       	mov	r30, r0
    35a4:	82 81       	ldd	r24, Z+2	; 0x02
    35a6:	90 e0       	ldi	r25, 0x00	; 0
    35a8:	01 97       	sbiw	r24, 0x01	; 1
    35aa:	32 95       	swap	r19
    35ac:	22 95       	swap	r18
    35ae:	2f 70       	andi	r18, 0x0F	; 15
    35b0:	23 27       	eor	r18, r19
    35b2:	3f 70       	andi	r19, 0x0F	; 15
    35b4:	23 27       	eor	r18, r19
    35b6:	82 23       	and	r24, r18
    35b8:	93 23       	and	r25, r19
    35ba:	89 2b       	or	r24, r25
    35bc:	09 f0       	breq	.+2      	; 0x35c0 <dir_next+0xc4>
    35be:	ca c0       	rjmp	.+404    	; 0x3754 <dir_next+0x258>
    35c0:	1a 96       	adiw	r26, 0x0a	; 10
    35c2:	4d 91       	ld	r20, X+
    35c4:	5d 91       	ld	r21, X+
    35c6:	6d 91       	ld	r22, X+
    35c8:	7c 91       	ld	r23, X
    35ca:	1d 97       	sbiw	r26, 0x0d	; 13
    35cc:	cf 01       	movw	r24, r30
    35ce:	7c da       	rcall	.-2824   	; 0x2ac8 <get_fat>
    35d0:	69 83       	std	Y+1, r22	; 0x01
    35d2:	7a 83       	std	Y+2, r23	; 0x02
    35d4:	8b 83       	std	Y+3, r24	; 0x03
    35d6:	9c 83       	std	Y+4, r25	; 0x04
    35d8:	89 81       	ldd	r24, Y+1	; 0x01
    35da:	9a 81       	ldd	r25, Y+2	; 0x02
    35dc:	ab 81       	ldd	r26, Y+3	; 0x03
    35de:	bc 81       	ldd	r27, Y+4	; 0x04
    35e0:	02 97       	sbiw	r24, 0x02	; 2
    35e2:	a1 05       	cpc	r26, r1
    35e4:	b1 05       	cpc	r27, r1
    35e6:	08 f4       	brcc	.+2      	; 0x35ea <dir_next+0xee>
    35e8:	d5 c0       	rjmp	.+426    	; 0x3794 <dir_next+0x298>
    35ea:	89 81       	ldd	r24, Y+1	; 0x01
    35ec:	9a 81       	ldd	r25, Y+2	; 0x02
    35ee:	ab 81       	ldd	r26, Y+3	; 0x03
    35f0:	bc 81       	ldd	r27, Y+4	; 0x04
    35f2:	8f 3f       	cpi	r24, 0xFF	; 255
    35f4:	9f 4f       	sbci	r25, 0xFF	; 255
    35f6:	af 4f       	sbci	r26, 0xFF	; 255
    35f8:	bf 4f       	sbci	r27, 0xFF	; 255
    35fa:	09 f4       	brne	.+2      	; 0x35fe <dir_next+0x102>
    35fc:	cd c0       	rjmp	.+410    	; 0x3798 <dir_next+0x29c>
    35fe:	d8 01       	movw	r26, r16
    3600:	ed 91       	ld	r30, X+
    3602:	fc 91       	ld	r31, X
    3604:	82 89       	ldd	r24, Z+18	; 0x12
    3606:	93 89       	ldd	r25, Z+19	; 0x13
    3608:	a4 89       	ldd	r26, Z+20	; 0x14
    360a:	b5 89       	ldd	r27, Z+21	; 0x15
    360c:	49 81       	ldd	r20, Y+1	; 0x01
    360e:	5a 81       	ldd	r21, Y+2	; 0x02
    3610:	6b 81       	ldd	r22, Y+3	; 0x03
    3612:	7c 81       	ldd	r23, Y+4	; 0x04
    3614:	48 17       	cp	r20, r24
    3616:	59 07       	cpc	r21, r25
    3618:	6a 07       	cpc	r22, r26
    361a:	7b 07       	cpc	r23, r27
    361c:	08 f4       	brcc	.+2      	; 0x3620 <dir_next+0x124>
    361e:	83 c0       	rjmp	.+262    	; 0x3726 <dir_next+0x22a>
    3620:	ef 28       	or	r14, r15
    3622:	09 f4       	brne	.+2      	; 0x3626 <dir_next+0x12a>
    3624:	bb c0       	rjmp	.+374    	; 0x379c <dir_next+0x2a0>
    3626:	d8 01       	movw	r26, r16
    3628:	1a 96       	adiw	r26, 0x0a	; 10
    362a:	4d 91       	ld	r20, X+
    362c:	5d 91       	ld	r21, X+
    362e:	6d 91       	ld	r22, X+
    3630:	7c 91       	ld	r23, X
    3632:	1d 97       	sbiw	r26, 0x0d	; 13
    3634:	cf 01       	movw	r24, r30
    3636:	04 de       	rcall	.-1016   	; 0x3240 <create_chain>
    3638:	69 83       	std	Y+1, r22	; 0x01
    363a:	7a 83       	std	Y+2, r23	; 0x02
    363c:	8b 83       	std	Y+3, r24	; 0x03
    363e:	9c 83       	std	Y+4, r25	; 0x04
    3640:	89 81       	ldd	r24, Y+1	; 0x01
    3642:	9a 81       	ldd	r25, Y+2	; 0x02
    3644:	ab 81       	ldd	r26, Y+3	; 0x03
    3646:	bc 81       	ldd	r27, Y+4	; 0x04
    3648:	89 2b       	or	r24, r25
    364a:	8a 2b       	or	r24, r26
    364c:	8b 2b       	or	r24, r27
    364e:	09 f4       	brne	.+2      	; 0x3652 <dir_next+0x156>
    3650:	a7 c0       	rjmp	.+334    	; 0x37a0 <dir_next+0x2a4>
    3652:	89 81       	ldd	r24, Y+1	; 0x01
    3654:	9a 81       	ldd	r25, Y+2	; 0x02
    3656:	ab 81       	ldd	r26, Y+3	; 0x03
    3658:	bc 81       	ldd	r27, Y+4	; 0x04
    365a:	01 97       	sbiw	r24, 0x01	; 1
    365c:	a1 05       	cpc	r26, r1
    365e:	b1 05       	cpc	r27, r1
    3660:	09 f4       	brne	.+2      	; 0x3664 <dir_next+0x168>
    3662:	a0 c0       	rjmp	.+320    	; 0x37a4 <dir_next+0x2a8>
    3664:	89 81       	ldd	r24, Y+1	; 0x01
    3666:	9a 81       	ldd	r25, Y+2	; 0x02
    3668:	ab 81       	ldd	r26, Y+3	; 0x03
    366a:	bc 81       	ldd	r27, Y+4	; 0x04
    366c:	8f 3f       	cpi	r24, 0xFF	; 255
    366e:	9f 4f       	sbci	r25, 0xFF	; 255
    3670:	af 4f       	sbci	r26, 0xFF	; 255
    3672:	bf 4f       	sbci	r27, 0xFF	; 255
    3674:	09 f4       	brne	.+2      	; 0x3678 <dir_next+0x17c>
    3676:	98 c0       	rjmp	.+304    	; 0x37a8 <dir_next+0x2ac>
    3678:	d8 01       	movw	r26, r16
    367a:	8d 91       	ld	r24, X+
    367c:	9c 91       	ld	r25, X
    367e:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <sync_window>
    3682:	81 11       	cpse	r24, r1
    3684:	93 c0       	rjmp	.+294    	; 0x37ac <dir_next+0x2b0>
    3686:	f8 01       	movw	r30, r16
    3688:	80 81       	ld	r24, Z
    368a:	91 81       	ldd	r25, Z+1	; 0x01
    368c:	40 e0       	ldi	r20, 0x00	; 0
    368e:	52 e0       	ldi	r21, 0x02	; 2
    3690:	60 e0       	ldi	r22, 0x00	; 0
    3692:	70 e0       	ldi	r23, 0x00	; 0
    3694:	8e 96       	adiw	r24, 0x2e	; 46
    3696:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <mem_set>
    369a:	49 81       	ldd	r20, Y+1	; 0x01
    369c:	5a 81       	ldd	r21, Y+2	; 0x02
    369e:	6b 81       	ldd	r22, Y+3	; 0x03
    36a0:	7c 81       	ldd	r23, Y+4	; 0x04
    36a2:	d8 01       	movw	r26, r16
    36a4:	ed 90       	ld	r14, X+
    36a6:	fc 90       	ld	r15, X
    36a8:	c7 01       	movw	r24, r14
    36aa:	c0 d9       	rcall	.-3200   	; 0x2a2c <clust2sect>
    36ac:	f7 01       	movw	r30, r14
    36ae:	62 a7       	std	Z+42, r22	; 0x2a
    36b0:	73 a7       	std	Z+43, r23	; 0x2b
    36b2:	84 a7       	std	Z+44, r24	; 0x2c
    36b4:	95 a7       	std	Z+45, r25	; 0x2d
    36b6:	1f 82       	std	Y+7, r1	; 0x07
    36b8:	18 86       	std	Y+8, r1	; 0x08
    36ba:	ff 24       	eor	r15, r15
    36bc:	f3 94       	inc	r15
    36be:	1b c0       	rjmp	.+54     	; 0x36f6 <dir_next+0x1fa>
    36c0:	f4 82       	std	Z+4, r15	; 0x04
    36c2:	d8 01       	movw	r26, r16
    36c4:	8d 91       	ld	r24, X+
    36c6:	9c 91       	ld	r25, X
    36c8:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <sync_window>
    36cc:	81 11       	cpse	r24, r1
    36ce:	70 c0       	rjmp	.+224    	; 0x37b0 <dir_next+0x2b4>
    36d0:	d8 01       	movw	r26, r16
    36d2:	ed 91       	ld	r30, X+
    36d4:	fc 91       	ld	r31, X
    36d6:	82 a5       	ldd	r24, Z+42	; 0x2a
    36d8:	93 a5       	ldd	r25, Z+43	; 0x2b
    36da:	a4 a5       	ldd	r26, Z+44	; 0x2c
    36dc:	b5 a5       	ldd	r27, Z+45	; 0x2d
    36de:	01 96       	adiw	r24, 0x01	; 1
    36e0:	a1 1d       	adc	r26, r1
    36e2:	b1 1d       	adc	r27, r1
    36e4:	82 a7       	std	Z+42, r24	; 0x2a
    36e6:	93 a7       	std	Z+43, r25	; 0x2b
    36e8:	a4 a7       	std	Z+44, r26	; 0x2c
    36ea:	b5 a7       	std	Z+45, r27	; 0x2d
    36ec:	8f 81       	ldd	r24, Y+7	; 0x07
    36ee:	98 85       	ldd	r25, Y+8	; 0x08
    36f0:	01 96       	adiw	r24, 0x01	; 1
    36f2:	8f 83       	std	Y+7, r24	; 0x07
    36f4:	98 87       	std	Y+8, r25	; 0x08
    36f6:	d8 01       	movw	r26, r16
    36f8:	ed 91       	ld	r30, X+
    36fa:	fc 91       	ld	r31, X
    36fc:	22 81       	ldd	r18, Z+2	; 0x02
    36fe:	8f 81       	ldd	r24, Y+7	; 0x07
    3700:	98 85       	ldd	r25, Y+8	; 0x08
    3702:	30 e0       	ldi	r19, 0x00	; 0
    3704:	82 17       	cp	r24, r18
    3706:	93 07       	cpc	r25, r19
    3708:	d8 f2       	brcs	.-74     	; 0x36c0 <dir_next+0x1c4>
    370a:	82 a5       	ldd	r24, Z+42	; 0x2a
    370c:	93 a5       	ldd	r25, Z+43	; 0x2b
    370e:	a4 a5       	ldd	r26, Z+44	; 0x2c
    3710:	b5 a5       	ldd	r27, Z+45	; 0x2d
    3712:	2f 81       	ldd	r18, Y+7	; 0x07
    3714:	38 85       	ldd	r19, Y+8	; 0x08
    3716:	82 1b       	sub	r24, r18
    3718:	93 0b       	sbc	r25, r19
    371a:	a1 09       	sbc	r26, r1
    371c:	b1 09       	sbc	r27, r1
    371e:	82 a7       	std	Z+42, r24	; 0x2a
    3720:	93 a7       	std	Z+43, r25	; 0x2b
    3722:	a4 a7       	std	Z+44, r26	; 0x2c
    3724:	b5 a7       	std	Z+45, r27	; 0x2d
    3726:	89 81       	ldd	r24, Y+1	; 0x01
    3728:	9a 81       	ldd	r25, Y+2	; 0x02
    372a:	ab 81       	ldd	r26, Y+3	; 0x03
    372c:	bc 81       	ldd	r27, Y+4	; 0x04
    372e:	f8 01       	movw	r30, r16
    3730:	82 87       	std	Z+10, r24	; 0x0a
    3732:	93 87       	std	Z+11, r25	; 0x0b
    3734:	a4 87       	std	Z+12, r26	; 0x0c
    3736:	b5 87       	std	Z+13, r27	; 0x0d
    3738:	49 81       	ldd	r20, Y+1	; 0x01
    373a:	5a 81       	ldd	r21, Y+2	; 0x02
    373c:	6b 81       	ldd	r22, Y+3	; 0x03
    373e:	7c 81       	ldd	r23, Y+4	; 0x04
    3740:	80 81       	ld	r24, Z
    3742:	91 81       	ldd	r25, Z+1	; 0x01
    3744:	73 d9       	rcall	.-3354   	; 0x2a2c <clust2sect>
    3746:	d8 01       	movw	r26, r16
    3748:	1e 96       	adiw	r26, 0x0e	; 14
    374a:	6d 93       	st	X+, r22
    374c:	7d 93       	st	X+, r23
    374e:	8d 93       	st	X+, r24
    3750:	9c 93       	st	X, r25
    3752:	51 97       	sbiw	r26, 0x11	; 17
    3754:	8d 81       	ldd	r24, Y+5	; 0x05
    3756:	9e 81       	ldd	r25, Y+6	; 0x06
    3758:	f8 01       	movw	r30, r16
    375a:	84 83       	std	Z+4, r24	; 0x04
    375c:	95 83       	std	Z+5, r25	; 0x05
    375e:	8d 81       	ldd	r24, Y+5	; 0x05
    3760:	9e 81       	ldd	r25, Y+6	; 0x06
    3762:	8f 70       	andi	r24, 0x0F	; 15
    3764:	99 27       	eor	r25, r25
    3766:	88 0f       	add	r24, r24
    3768:	99 1f       	adc	r25, r25
    376a:	82 95       	swap	r24
    376c:	92 95       	swap	r25
    376e:	90 7f       	andi	r25, 0xF0	; 240
    3770:	98 27       	eor	r25, r24
    3772:	80 7f       	andi	r24, 0xF0	; 240
    3774:	98 27       	eor	r25, r24
    3776:	8e 96       	adiw	r24, 0x2e	; 46
    3778:	20 81       	ld	r18, Z
    377a:	31 81       	ldd	r19, Z+1	; 0x01
    377c:	82 0f       	add	r24, r18
    377e:	93 1f       	adc	r25, r19
    3780:	82 8b       	std	Z+18, r24	; 0x12
    3782:	93 8b       	std	Z+19, r25	; 0x13
    3784:	80 e0       	ldi	r24, 0x00	; 0
    3786:	15 c0       	rjmp	.+42     	; 0x37b2 <dir_next+0x2b6>
    3788:	84 e0       	ldi	r24, 0x04	; 4
    378a:	13 c0       	rjmp	.+38     	; 0x37b2 <dir_next+0x2b6>
    378c:	84 e0       	ldi	r24, 0x04	; 4
    378e:	11 c0       	rjmp	.+34     	; 0x37b2 <dir_next+0x2b6>
    3790:	84 e0       	ldi	r24, 0x04	; 4
    3792:	0f c0       	rjmp	.+30     	; 0x37b2 <dir_next+0x2b6>
    3794:	82 e0       	ldi	r24, 0x02	; 2
    3796:	0d c0       	rjmp	.+26     	; 0x37b2 <dir_next+0x2b6>
    3798:	81 e0       	ldi	r24, 0x01	; 1
    379a:	0b c0       	rjmp	.+22     	; 0x37b2 <dir_next+0x2b6>
    379c:	84 e0       	ldi	r24, 0x04	; 4
    379e:	09 c0       	rjmp	.+18     	; 0x37b2 <dir_next+0x2b6>
    37a0:	87 e0       	ldi	r24, 0x07	; 7
    37a2:	07 c0       	rjmp	.+14     	; 0x37b2 <dir_next+0x2b6>
    37a4:	82 e0       	ldi	r24, 0x02	; 2
    37a6:	05 c0       	rjmp	.+10     	; 0x37b2 <dir_next+0x2b6>
    37a8:	81 e0       	ldi	r24, 0x01	; 1
    37aa:	03 c0       	rjmp	.+6      	; 0x37b2 <dir_next+0x2b6>
    37ac:	81 e0       	ldi	r24, 0x01	; 1
    37ae:	01 c0       	rjmp	.+2      	; 0x37b2 <dir_next+0x2b6>
    37b0:	81 e0       	ldi	r24, 0x01	; 1
    37b2:	28 96       	adiw	r28, 0x08	; 8
    37b4:	cd bf       	out	0x3d, r28	; 61
    37b6:	de bf       	out	0x3e, r29	; 62
    37b8:	df 91       	pop	r29
    37ba:	cf 91       	pop	r28
    37bc:	1f 91       	pop	r17
    37be:	0f 91       	pop	r16
    37c0:	ff 90       	pop	r15
    37c2:	ef 90       	pop	r14
    37c4:	08 95       	ret

000037c6 <follow_path>:
    37c6:	3f 92       	push	r3
    37c8:	4f 92       	push	r4
    37ca:	5f 92       	push	r5
    37cc:	6f 92       	push	r6
    37ce:	7f 92       	push	r7
    37d0:	8f 92       	push	r8
    37d2:	9f 92       	push	r9
    37d4:	af 92       	push	r10
    37d6:	bf 92       	push	r11
    37d8:	cf 92       	push	r12
    37da:	df 92       	push	r13
    37dc:	ef 92       	push	r14
    37de:	ff 92       	push	r15
    37e0:	0f 93       	push	r16
    37e2:	1f 93       	push	r17
    37e4:	cf 93       	push	r28
    37e6:	df 93       	push	r29
    37e8:	cd b7       	in	r28, 0x3d	; 61
    37ea:	de b7       	in	r29, 0x3e	; 62
    37ec:	2b 97       	sbiw	r28, 0x0b	; 11
    37ee:	cd bf       	out	0x3d, r28	; 61
    37f0:	de bf       	out	0x3e, r29	; 62
    37f2:	8c 01       	movw	r16, r24
    37f4:	7b 01       	movw	r14, r22
    37f6:	db 01       	movw	r26, r22
    37f8:	8c 91       	ld	r24, X
    37fa:	8f 32       	cpi	r24, 0x2F	; 47
    37fc:	11 f0       	breq	.+4      	; 0x3802 <follow_path+0x3c>
    37fe:	8c 35       	cpi	r24, 0x5C	; 92
    3800:	19 f4       	brne	.+6      	; 0x3808 <follow_path+0x42>
    3802:	bf ef       	ldi	r27, 0xFF	; 255
    3804:	eb 1a       	sub	r14, r27
    3806:	fb 0a       	sbc	r15, r27
    3808:	f8 01       	movw	r30, r16
    380a:	16 82       	std	Z+6, r1	; 0x06
    380c:	17 82       	std	Z+7, r1	; 0x07
    380e:	10 86       	std	Z+8, r1	; 0x08
    3810:	11 86       	std	Z+9, r1	; 0x09
    3812:	d7 01       	movw	r26, r14
    3814:	8c 91       	ld	r24, X
    3816:	80 32       	cpi	r24, 0x20	; 32
    3818:	40 f4       	brcc	.+16     	; 0x382a <follow_path+0x64>
    381a:	60 e0       	ldi	r22, 0x00	; 0
    381c:	70 e0       	ldi	r23, 0x00	; 0
    381e:	c8 01       	movw	r24, r16
    3820:	89 da       	rcall	.-2798   	; 0x2d34 <dir_sdi>
    3822:	f8 01       	movw	r30, r16
    3824:	12 8a       	std	Z+18, r1	; 0x12
    3826:	13 8a       	std	Z+19, r1	; 0x13
    3828:	92 c1       	rjmp	.+804    	; 0x3b4e <follow_path+0x388>
    382a:	0f 2e       	mov	r0, r31
    382c:	fb e0       	ldi	r31, 0x0B	; 11
    382e:	4f 2e       	mov	r4, r31
    3830:	f0 2d       	mov	r31, r0
    3832:	51 2c       	mov	r5, r1
    3834:	68 94       	set
    3836:	aa 24       	eor	r10, r10
    3838:	a3 f8       	bld	r10, 3
    383a:	b1 2c       	mov	r11, r1
    383c:	64 2c       	mov	r6, r4
    383e:	75 2c       	mov	r7, r5
    3840:	0f 2e       	mov	r0, r31
    3842:	f7 e5       	ldi	r31, 0x57	; 87
    3844:	8f 2e       	mov	r8, r31
    3846:	f0 e2       	ldi	r31, 0x20	; 32
    3848:	9f 2e       	mov	r9, r31
    384a:	f0 2d       	mov	r31, r0
    384c:	0f 2e       	mov	r0, r31
    384e:	f5 e0       	ldi	r31, 0x05	; 5
    3850:	3f 2e       	mov	r3, r31
    3852:	f0 2d       	mov	r31, r0
    3854:	f7 01       	movw	r30, r14
    3856:	7f 01       	movw	r14, r30
    3858:	81 91       	ld	r24, Z+
    385a:	8f 32       	cpi	r24, 0x2F	; 47
    385c:	e1 f3       	breq	.-8      	; 0x3856 <follow_path+0x90>
    385e:	8c 35       	cpi	r24, 0x5C	; 92
    3860:	d1 f3       	breq	.-12     	; 0x3856 <follow_path+0x90>
    3862:	d8 01       	movw	r26, r16
    3864:	54 96       	adiw	r26, 0x14	; 20
    3866:	cd 90       	ld	r12, X+
    3868:	dc 90       	ld	r13, X
    386a:	55 97       	sbiw	r26, 0x15	; 21
    386c:	44 2d       	mov	r20, r4
    386e:	55 2d       	mov	r21, r5
    3870:	60 e2       	ldi	r22, 0x20	; 32
    3872:	70 e0       	ldi	r23, 0x00	; 0
    3874:	c6 01       	movw	r24, r12
    3876:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <mem_set>
    387a:	1b 86       	std	Y+11, r1	; 0x0b
    387c:	1a 82       	std	Y+2, r1	; 0x02
    387e:	1b 82       	std	Y+3, r1	; 0x03
    3880:	1c 82       	std	Y+4, r1	; 0x04
    3882:	1d 82       	std	Y+5, r1	; 0x05
    3884:	ae 82       	std	Y+6, r10	; 0x06
    3886:	bf 82       	std	Y+7, r11	; 0x07
    3888:	8c 81       	ldd	r24, Y+4	; 0x04
    388a:	9d 81       	ldd	r25, Y+5	; 0x05
    388c:	9c 01       	movw	r18, r24
    388e:	2f 5f       	subi	r18, 0xFF	; 255
    3890:	3f 4f       	sbci	r19, 0xFF	; 255
    3892:	2c 83       	std	Y+4, r18	; 0x04
    3894:	3d 83       	std	Y+5, r19	; 0x05
    3896:	f7 01       	movw	r30, r14
    3898:	e8 0f       	add	r30, r24
    389a:	f9 1f       	adc	r31, r25
    389c:	80 81       	ld	r24, Z
    389e:	8a 87       	std	Y+10, r24	; 0x0a
    38a0:	8a 85       	ldd	r24, Y+10	; 0x0a
    38a2:	81 32       	cpi	r24, 0x21	; 33
    38a4:	08 f4       	brcc	.+2      	; 0x38a8 <follow_path+0xe2>
    38a6:	9e c0       	rjmp	.+316    	; 0x39e4 <follow_path+0x21e>
    38a8:	8a 85       	ldd	r24, Y+10	; 0x0a
    38aa:	8f 32       	cpi	r24, 0x2F	; 47
    38ac:	09 f4       	brne	.+2      	; 0x38b0 <follow_path+0xea>
    38ae:	9a c0       	rjmp	.+308    	; 0x39e4 <follow_path+0x21e>
    38b0:	8a 85       	ldd	r24, Y+10	; 0x0a
    38b2:	8c 35       	cpi	r24, 0x5C	; 92
    38b4:	09 f4       	brne	.+2      	; 0x38b8 <follow_path+0xf2>
    38b6:	96 c0       	rjmp	.+300    	; 0x39e4 <follow_path+0x21e>
    38b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    38ba:	8e 32       	cpi	r24, 0x2E	; 46
    38bc:	39 f0       	breq	.+14     	; 0x38cc <follow_path+0x106>
    38be:	2a 81       	ldd	r18, Y+2	; 0x02
    38c0:	3b 81       	ldd	r19, Y+3	; 0x03
    38c2:	8e 81       	ldd	r24, Y+6	; 0x06
    38c4:	9f 81       	ldd	r25, Y+7	; 0x07
    38c6:	28 17       	cp	r18, r24
    38c8:	39 07       	cpc	r19, r25
    38ca:	90 f0       	brcs	.+36     	; 0x38f0 <follow_path+0x12a>
    38cc:	8e 81       	ldd	r24, Y+6	; 0x06
    38ce:	9f 81       	ldd	r25, Y+7	; 0x07
    38d0:	08 97       	sbiw	r24, 0x08	; 8
    38d2:	09 f0       	breq	.+2      	; 0x38d6 <follow_path+0x110>
    38d4:	1e c1       	rjmp	.+572    	; 0x3b12 <follow_path+0x34c>
    38d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    38d8:	8e 32       	cpi	r24, 0x2E	; 46
    38da:	09 f0       	breq	.+2      	; 0x38de <follow_path+0x118>
    38dc:	1a c1       	rjmp	.+564    	; 0x3b12 <follow_path+0x34c>
    38de:	aa 82       	std	Y+2, r10	; 0x02
    38e0:	bb 82       	std	Y+3, r11	; 0x03
    38e2:	6e 82       	std	Y+6, r6	; 0x06
    38e4:	7f 82       	std	Y+7, r7	; 0x07
    38e6:	8b 85       	ldd	r24, Y+11	; 0x0b
    38e8:	88 0f       	add	r24, r24
    38ea:	88 0f       	add	r24, r24
    38ec:	8b 87       	std	Y+11, r24	; 0x0b
    38ee:	cc cf       	rjmp	.-104    	; 0x3888 <follow_path+0xc2>
    38f0:	8a 85       	ldd	r24, Y+10	; 0x0a
    38f2:	88 23       	and	r24, r24
    38f4:	1c f4       	brge	.+6      	; 0x38fc <follow_path+0x136>
    38f6:	8b 85       	ldd	r24, Y+11	; 0x0b
    38f8:	83 60       	ori	r24, 0x03	; 3
    38fa:	8b 87       	std	Y+11, r24	; 0x0b
    38fc:	8a 85       	ldd	r24, Y+10	; 0x0a
    38fe:	81 38       	cpi	r24, 0x81	; 129
    3900:	18 f0       	brcs	.+6      	; 0x3908 <follow_path+0x142>
    3902:	8a 85       	ldd	r24, Y+10	; 0x0a
    3904:	80 3a       	cpi	r24, 0xA0	; 160
    3906:	40 f0       	brcs	.+16     	; 0x3918 <follow_path+0x152>
    3908:	8a 85       	ldd	r24, Y+10	; 0x0a
    390a:	80 3e       	cpi	r24, 0xE0	; 224
    390c:	08 f4       	brcc	.+2      	; 0x3910 <follow_path+0x14a>
    390e:	f5 c0       	rjmp	.+490    	; 0x3afa <follow_path+0x334>
    3910:	8a 85       	ldd	r24, Y+10	; 0x0a
    3912:	8d 3f       	cpi	r24, 0xFD	; 253
    3914:	08 f0       	brcs	.+2      	; 0x3918 <follow_path+0x152>
    3916:	f1 c0       	rjmp	.+482    	; 0x3afa <follow_path+0x334>
    3918:	8c 81       	ldd	r24, Y+4	; 0x04
    391a:	9d 81       	ldd	r25, Y+5	; 0x05
    391c:	9c 01       	movw	r18, r24
    391e:	2f 5f       	subi	r18, 0xFF	; 255
    3920:	3f 4f       	sbci	r19, 0xFF	; 255
    3922:	2c 83       	std	Y+4, r18	; 0x04
    3924:	3d 83       	std	Y+5, r19	; 0x05
    3926:	f7 01       	movw	r30, r14
    3928:	e8 0f       	add	r30, r24
    392a:	f9 1f       	adc	r31, r25
    392c:	80 81       	ld	r24, Z
    392e:	89 87       	std	Y+9, r24	; 0x09
    3930:	89 85       	ldd	r24, Y+9	; 0x09
    3932:	80 34       	cpi	r24, 0x40	; 64
    3934:	18 f0       	brcs	.+6      	; 0x393c <follow_path+0x176>
    3936:	89 85       	ldd	r24, Y+9	; 0x09
    3938:	8f 37       	cpi	r24, 0x7F	; 127
    393a:	40 f0       	brcs	.+16     	; 0x394c <follow_path+0x186>
    393c:	89 85       	ldd	r24, Y+9	; 0x09
    393e:	88 23       	and	r24, r24
    3940:	0c f0       	brlt	.+2      	; 0x3944 <follow_path+0x17e>
    3942:	e7 c0       	rjmp	.+462    	; 0x3b12 <follow_path+0x34c>
    3944:	89 85       	ldd	r24, Y+9	; 0x09
    3946:	8d 3f       	cpi	r24, 0xFD	; 253
    3948:	08 f0       	brcs	.+2      	; 0x394c <follow_path+0x186>
    394a:	e3 c0       	rjmp	.+454    	; 0x3b12 <follow_path+0x34c>
    394c:	2e 81       	ldd	r18, Y+6	; 0x06
    394e:	3f 81       	ldd	r19, Y+7	; 0x07
    3950:	8a 81       	ldd	r24, Y+2	; 0x02
    3952:	9b 81       	ldd	r25, Y+3	; 0x03
    3954:	21 50       	subi	r18, 0x01	; 1
    3956:	31 09       	sbc	r19, r1
    3958:	82 17       	cp	r24, r18
    395a:	93 07       	cpc	r25, r19
    395c:	08 f0       	brcs	.+2      	; 0x3960 <follow_path+0x19a>
    395e:	d9 c0       	rjmp	.+434    	; 0x3b12 <follow_path+0x34c>
    3960:	8a 81       	ldd	r24, Y+2	; 0x02
    3962:	9b 81       	ldd	r25, Y+3	; 0x03
    3964:	9c 01       	movw	r18, r24
    3966:	2f 5f       	subi	r18, 0xFF	; 255
    3968:	3f 4f       	sbci	r19, 0xFF	; 255
    396a:	2a 83       	std	Y+2, r18	; 0x02
    396c:	3b 83       	std	Y+3, r19	; 0x03
    396e:	f6 01       	movw	r30, r12
    3970:	e8 0f       	add	r30, r24
    3972:	f9 1f       	adc	r31, r25
    3974:	2a 85       	ldd	r18, Y+10	; 0x0a
    3976:	20 83       	st	Z, r18
    3978:	8a 81       	ldd	r24, Y+2	; 0x02
    397a:	9b 81       	ldd	r25, Y+3	; 0x03
    397c:	9c 01       	movw	r18, r24
    397e:	2f 5f       	subi	r18, 0xFF	; 255
    3980:	3f 4f       	sbci	r19, 0xFF	; 255
    3982:	2a 83       	std	Y+2, r18	; 0x02
    3984:	3b 83       	std	Y+3, r19	; 0x03
    3986:	f6 01       	movw	r30, r12
    3988:	e8 0f       	add	r30, r24
    398a:	f9 1f       	adc	r31, r25
    398c:	29 85       	ldd	r18, Y+9	; 0x09
    398e:	20 83       	st	Z, r18
    3990:	7b cf       	rjmp	.-266    	; 0x3888 <follow_path+0xc2>
    3992:	81 91       	ld	r24, Z+
    3994:	88 23       	and	r24, r24
    3996:	09 f4       	brne	.+2      	; 0x399a <follow_path+0x1d4>
    3998:	b7 c0       	rjmp	.+366    	; 0x3b08 <follow_path+0x342>
    399a:	90 e0       	ldi	r25, 0x00	; 0
    399c:	28 17       	cp	r18, r24
    399e:	39 07       	cpc	r19, r25
    39a0:	c1 f7       	brne	.-16     	; 0x3992 <follow_path+0x1cc>
    39a2:	b7 c0       	rjmp	.+366    	; 0x3b12 <follow_path+0x34c>
    39a4:	8a 85       	ldd	r24, Y+10	; 0x0a
    39a6:	8b 35       	cpi	r24, 0x5B	; 91
    39a8:	20 f4       	brcc	.+8      	; 0x39b2 <follow_path+0x1ec>
    39aa:	8b 85       	ldd	r24, Y+11	; 0x0b
    39ac:	82 60       	ori	r24, 0x02	; 2
    39ae:	8b 87       	std	Y+11, r24	; 0x0b
    39b0:	0c c0       	rjmp	.+24     	; 0x39ca <follow_path+0x204>
    39b2:	8a 85       	ldd	r24, Y+10	; 0x0a
    39b4:	81 36       	cpi	r24, 0x61	; 97
    39b6:	48 f0       	brcs	.+18     	; 0x39ca <follow_path+0x204>
    39b8:	8a 85       	ldd	r24, Y+10	; 0x0a
    39ba:	8b 37       	cpi	r24, 0x7B	; 123
    39bc:	30 f4       	brcc	.+12     	; 0x39ca <follow_path+0x204>
    39be:	8b 85       	ldd	r24, Y+11	; 0x0b
    39c0:	81 60       	ori	r24, 0x01	; 1
    39c2:	8b 87       	std	Y+11, r24	; 0x0b
    39c4:	8a 85       	ldd	r24, Y+10	; 0x0a
    39c6:	80 52       	subi	r24, 0x20	; 32
    39c8:	8a 87       	std	Y+10, r24	; 0x0a
    39ca:	8a 81       	ldd	r24, Y+2	; 0x02
    39cc:	9b 81       	ldd	r25, Y+3	; 0x03
    39ce:	9c 01       	movw	r18, r24
    39d0:	2f 5f       	subi	r18, 0xFF	; 255
    39d2:	3f 4f       	sbci	r19, 0xFF	; 255
    39d4:	2a 83       	std	Y+2, r18	; 0x02
    39d6:	3b 83       	std	Y+3, r19	; 0x03
    39d8:	f6 01       	movw	r30, r12
    39da:	e8 0f       	add	r30, r24
    39dc:	f9 1f       	adc	r31, r25
    39de:	2a 85       	ldd	r18, Y+10	; 0x0a
    39e0:	20 83       	st	Z, r18
    39e2:	52 cf       	rjmp	.-348    	; 0x3888 <follow_path+0xc2>
    39e4:	8c 81       	ldd	r24, Y+4	; 0x04
    39e6:	9d 81       	ldd	r25, Y+5	; 0x05
    39e8:	e8 0e       	add	r14, r24
    39ea:	f9 1e       	adc	r15, r25
    39ec:	8a 85       	ldd	r24, Y+10	; 0x0a
    39ee:	81 32       	cpi	r24, 0x21	; 33
    39f0:	10 f4       	brcc	.+4      	; 0x39f6 <follow_path+0x230>
    39f2:	84 e0       	ldi	r24, 0x04	; 4
    39f4:	01 c0       	rjmp	.+2      	; 0x39f8 <follow_path+0x232>
    39f6:	80 e0       	ldi	r24, 0x00	; 0
    39f8:	8a 87       	std	Y+10, r24	; 0x0a
    39fa:	8a 81       	ldd	r24, Y+2	; 0x02
    39fc:	9b 81       	ldd	r25, Y+3	; 0x03
    39fe:	89 2b       	or	r24, r25
    3a00:	09 f4       	brne	.+2      	; 0x3a04 <follow_path+0x23e>
    3a02:	87 c0       	rjmp	.+270    	; 0x3b12 <follow_path+0x34c>
    3a04:	f6 01       	movw	r30, r12
    3a06:	80 81       	ld	r24, Z
    3a08:	85 3e       	cpi	r24, 0xE5	; 229
    3a0a:	09 f4       	brne	.+2      	; 0x3a0e <follow_path+0x248>
    3a0c:	30 82       	st	Z, r3
    3a0e:	8e 81       	ldd	r24, Y+6	; 0x06
    3a10:	9f 81       	ldd	r25, Y+7	; 0x07
    3a12:	08 97       	sbiw	r24, 0x08	; 8
    3a14:	21 f4       	brne	.+8      	; 0x3a1e <follow_path+0x258>
    3a16:	8b 85       	ldd	r24, Y+11	; 0x0b
    3a18:	88 0f       	add	r24, r24
    3a1a:	88 0f       	add	r24, r24
    3a1c:	8b 87       	std	Y+11, r24	; 0x0b
    3a1e:	8b 85       	ldd	r24, Y+11	; 0x0b
    3a20:	83 70       	andi	r24, 0x03	; 3
    3a22:	81 30       	cpi	r24, 0x01	; 1
    3a24:	19 f4       	brne	.+6      	; 0x3a2c <follow_path+0x266>
    3a26:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a28:	80 61       	ori	r24, 0x10	; 16
    3a2a:	8a 87       	std	Y+10, r24	; 0x0a
    3a2c:	8b 85       	ldd	r24, Y+11	; 0x0b
    3a2e:	8c 70       	andi	r24, 0x0C	; 12
    3a30:	84 30       	cpi	r24, 0x04	; 4
    3a32:	19 f4       	brne	.+6      	; 0x3a3a <follow_path+0x274>
    3a34:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a36:	88 60       	ori	r24, 0x08	; 8
    3a38:	8a 87       	std	Y+10, r24	; 0x0a
    3a3a:	8a 85       	ldd	r24, Y+10	; 0x0a
    3a3c:	d6 01       	movw	r26, r12
    3a3e:	1b 96       	adiw	r26, 0x0b	; 11
    3a40:	8c 93       	st	X, r24
    3a42:	60 e0       	ldi	r22, 0x00	; 0
    3a44:	70 e0       	ldi	r23, 0x00	; 0
    3a46:	c8 01       	movw	r24, r16
    3a48:	75 d9       	rcall	.-3350   	; 0x2d34 <dir_sdi>
    3a4a:	81 11       	cpse	r24, r1
    3a4c:	64 c0       	rjmp	.+200    	; 0x3b16 <follow_path+0x350>
    3a4e:	f8 01       	movw	r30, r16
    3a50:	46 85       	ldd	r20, Z+14	; 0x0e
    3a52:	57 85       	ldd	r21, Z+15	; 0x0f
    3a54:	60 89       	ldd	r22, Z+16	; 0x10
    3a56:	71 89       	ldd	r23, Z+17	; 0x11
    3a58:	80 81       	ld	r24, Z
    3a5a:	91 81       	ldd	r25, Z+1	; 0x01
    3a5c:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <move_window>
    3a60:	81 11       	cpse	r24, r1
    3a62:	59 c0       	rjmp	.+178    	; 0x3b16 <follow_path+0x350>
    3a64:	d8 01       	movw	r26, r16
    3a66:	52 96       	adiw	r26, 0x12	; 18
    3a68:	ed 91       	ld	r30, X+
    3a6a:	fc 91       	ld	r31, X
    3a6c:	53 97       	sbiw	r26, 0x13	; 19
    3a6e:	90 81       	ld	r25, Z
    3a70:	98 87       	std	Y+8, r25	; 0x08
    3a72:	98 85       	ldd	r25, Y+8	; 0x08
    3a74:	99 23       	and	r25, r25
    3a76:	09 f4       	brne	.+2      	; 0x3a7a <follow_path+0x2b4>
    3a78:	58 c0       	rjmp	.+176    	; 0x3b2a <follow_path+0x364>
    3a7a:	93 85       	ldd	r25, Z+11	; 0x0b
    3a7c:	93 fd       	sbrc	r25, 3
    3a7e:	1a c0       	rjmp	.+52     	; 0x3ab4 <follow_path+0x2ee>
    3a80:	54 96       	adiw	r26, 0x14	; 20
    3a82:	cd 90       	ld	r12, X+
    3a84:	dc 90       	ld	r13, X
    3a86:	55 97       	sbiw	r26, 0x15	; 21
    3a88:	24 2d       	mov	r18, r4
    3a8a:	35 2d       	mov	r19, r5
    3a8c:	a9 01       	movw	r20, r18
    3a8e:	21 50       	subi	r18, 0x01	; 1
    3a90:	31 09       	sbc	r19, r1
    3a92:	45 2b       	or	r20, r21
    3a94:	09 f4       	brne	.+2      	; 0x3a98 <follow_path+0x2d2>
    3a96:	51 c0       	rjmp	.+162    	; 0x3b3a <follow_path+0x374>
    3a98:	af 01       	movw	r20, r30
    3a9a:	4f 5f       	subi	r20, 0xFF	; 255
    3a9c:	5f 4f       	sbci	r21, 0xFF	; 255
    3a9e:	e0 81       	ld	r30, Z
    3aa0:	b6 01       	movw	r22, r12
    3aa2:	6f 5f       	subi	r22, 0xFF	; 255
    3aa4:	7f 4f       	sbci	r23, 0xFF	; 255
    3aa6:	d6 01       	movw	r26, r12
    3aa8:	9c 91       	ld	r25, X
    3aaa:	e9 13       	cpse	r30, r25
    3aac:	03 c0       	rjmp	.+6      	; 0x3ab4 <follow_path+0x2ee>
    3aae:	6b 01       	movw	r12, r22
    3ab0:	fa 01       	movw	r30, r20
    3ab2:	ec cf       	rjmp	.-40     	; 0x3a8c <follow_path+0x2c6>
    3ab4:	60 e0       	ldi	r22, 0x00	; 0
    3ab6:	70 e0       	ldi	r23, 0x00	; 0
    3ab8:	c8 01       	movw	r24, r16
    3aba:	20 dd       	rcall	.-1472   	; 0x34fc <dir_next>
    3abc:	88 23       	and	r24, r24
    3abe:	39 f2       	breq	.-114    	; 0x3a4e <follow_path+0x288>
    3ac0:	2a c0       	rjmp	.+84     	; 0x3b16 <follow_path+0x350>
    3ac2:	89 81       	ldd	r24, Y+1	; 0x01
    3ac4:	82 ff       	sbrs	r24, 2
    3ac6:	15 c0       	rjmp	.+42     	; 0x3af2 <follow_path+0x32c>
    3ac8:	12 c0       	rjmp	.+36     	; 0x3aee <follow_path+0x328>
    3aca:	f8 01       	movw	r30, r16
    3acc:	62 89       	ldd	r22, Z+18	; 0x12
    3ace:	73 89       	ldd	r23, Z+19	; 0x13
    3ad0:	db 01       	movw	r26, r22
    3ad2:	1b 96       	adiw	r26, 0x0b	; 11
    3ad4:	8c 91       	ld	r24, X
    3ad6:	84 ff       	sbrs	r24, 4
    3ad8:	0e c0       	rjmp	.+28     	; 0x3af6 <follow_path+0x330>
    3ada:	80 81       	ld	r24, Z
    3adc:	91 81       	ldd	r25, Z+1	; 0x01
    3ade:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <ld_clust>
    3ae2:	f8 01       	movw	r30, r16
    3ae4:	66 83       	std	Z+6, r22	; 0x06
    3ae6:	77 83       	std	Z+7, r23	; 0x07
    3ae8:	80 87       	std	Z+8, r24	; 0x08
    3aea:	91 87       	std	Z+9, r25	; 0x09
    3aec:	b3 ce       	rjmp	.-666    	; 0x3854 <follow_path+0x8e>
    3aee:	84 e0       	ldi	r24, 0x04	; 4
    3af0:	2e c0       	rjmp	.+92     	; 0x3b4e <follow_path+0x388>
    3af2:	85 e0       	ldi	r24, 0x05	; 5
    3af4:	2c c0       	rjmp	.+88     	; 0x3b4e <follow_path+0x388>
    3af6:	85 e0       	ldi	r24, 0x05	; 5
    3af8:	2a c0       	rjmp	.+84     	; 0x3b4e <follow_path+0x388>
    3afa:	2a 85       	ldd	r18, Y+10	; 0x0a
    3afc:	30 e0       	ldi	r19, 0x00	; 0
    3afe:	22 32       	cpi	r18, 0x22	; 34
    3b00:	31 05       	cpc	r19, r1
    3b02:	39 f0       	breq	.+14     	; 0x3b12 <follow_path+0x34c>
    3b04:	f4 01       	movw	r30, r8
    3b06:	45 cf       	rjmp	.-374    	; 0x3992 <follow_path+0x1cc>
    3b08:	8a 85       	ldd	r24, Y+10	; 0x0a
    3b0a:	81 34       	cpi	r24, 0x41	; 65
    3b0c:	08 f0       	brcs	.+2      	; 0x3b10 <follow_path+0x34a>
    3b0e:	4a cf       	rjmp	.-364    	; 0x39a4 <follow_path+0x1de>
    3b10:	50 cf       	rjmp	.-352    	; 0x39b2 <follow_path+0x1ec>
    3b12:	86 e0       	ldi	r24, 0x06	; 6
    3b14:	1c c0       	rjmp	.+56     	; 0x3b4e <follow_path+0x388>
    3b16:	d8 01       	movw	r26, r16
    3b18:	54 96       	adiw	r26, 0x14	; 20
    3b1a:	ed 91       	ld	r30, X+
    3b1c:	fc 91       	ld	r31, X
    3b1e:	55 97       	sbiw	r26, 0x15	; 21
    3b20:	93 85       	ldd	r25, Z+11	; 0x0b
    3b22:	99 83       	std	Y+1, r25	; 0x01
    3b24:	84 30       	cpi	r24, 0x04	; 4
    3b26:	99 f4       	brne	.+38     	; 0x3b4e <follow_path+0x388>
    3b28:	cc cf       	rjmp	.-104    	; 0x3ac2 <follow_path+0x2fc>
    3b2a:	d8 01       	movw	r26, r16
    3b2c:	54 96       	adiw	r26, 0x14	; 20
    3b2e:	ed 91       	ld	r30, X+
    3b30:	fc 91       	ld	r31, X
    3b32:	55 97       	sbiw	r26, 0x15	; 21
    3b34:	83 85       	ldd	r24, Z+11	; 0x0b
    3b36:	89 83       	std	Y+1, r24	; 0x01
    3b38:	c4 cf       	rjmp	.-120    	; 0x3ac2 <follow_path+0x2fc>
    3b3a:	d8 01       	movw	r26, r16
    3b3c:	54 96       	adiw	r26, 0x14	; 20
    3b3e:	ed 91       	ld	r30, X+
    3b40:	fc 91       	ld	r31, X
    3b42:	55 97       	sbiw	r26, 0x15	; 21
    3b44:	93 85       	ldd	r25, Z+11	; 0x0b
    3b46:	99 83       	std	Y+1, r25	; 0x01
    3b48:	99 81       	ldd	r25, Y+1	; 0x01
    3b4a:	92 ff       	sbrs	r25, 2
    3b4c:	be cf       	rjmp	.-132    	; 0x3aca <follow_path+0x304>
    3b4e:	2b 96       	adiw	r28, 0x0b	; 11
    3b50:	cd bf       	out	0x3d, r28	; 61
    3b52:	de bf       	out	0x3e, r29	; 62
    3b54:	df 91       	pop	r29
    3b56:	cf 91       	pop	r28
    3b58:	1f 91       	pop	r17
    3b5a:	0f 91       	pop	r16
    3b5c:	ff 90       	pop	r15
    3b5e:	ef 90       	pop	r14
    3b60:	df 90       	pop	r13
    3b62:	cf 90       	pop	r12
    3b64:	bf 90       	pop	r11
    3b66:	af 90       	pop	r10
    3b68:	9f 90       	pop	r9
    3b6a:	8f 90       	pop	r8
    3b6c:	7f 90       	pop	r7
    3b6e:	6f 90       	pop	r6
    3b70:	5f 90       	pop	r5
    3b72:	4f 90       	pop	r4
    3b74:	3f 90       	pop	r3
    3b76:	08 95       	ret

00003b78 <dir_register>:
    3b78:	df 92       	push	r13
    3b7a:	ef 92       	push	r14
    3b7c:	ff 92       	push	r15
    3b7e:	0f 93       	push	r16
    3b80:	1f 93       	push	r17
    3b82:	cf 93       	push	r28
    3b84:	df 93       	push	r29
    3b86:	1f 92       	push	r1
    3b88:	1f 92       	push	r1
    3b8a:	cd b7       	in	r28, 0x3d	; 61
    3b8c:	de b7       	in	r29, 0x3e	; 62
    3b8e:	8c 01       	movw	r16, r24
    3b90:	ee 24       	eor	r14, r14
    3b92:	e3 94       	inc	r14
    3b94:	f1 2c       	mov	r15, r1
    3b96:	60 e0       	ldi	r22, 0x00	; 0
    3b98:	70 e0       	ldi	r23, 0x00	; 0
    3b9a:	cc d8       	rcall	.-3688   	; 0x2d34 <dir_sdi>
    3b9c:	d8 2e       	mov	r13, r24
    3b9e:	81 11       	cpse	r24, r1
    3ba0:	2d c0       	rjmp	.+90     	; 0x3bfc <dir_register+0x84>
    3ba2:	19 82       	std	Y+1, r1	; 0x01
    3ba4:	1a 82       	std	Y+2, r1	; 0x02
    3ba6:	d8 01       	movw	r26, r16
    3ba8:	1e 96       	adiw	r26, 0x0e	; 14
    3baa:	4d 91       	ld	r20, X+
    3bac:	5d 91       	ld	r21, X+
    3bae:	6d 91       	ld	r22, X+
    3bb0:	7c 91       	ld	r23, X
    3bb2:	51 97       	sbiw	r26, 0x11	; 17
    3bb4:	8d 91       	ld	r24, X+
    3bb6:	9c 91       	ld	r25, X
    3bb8:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <move_window>
    3bbc:	d8 2e       	mov	r13, r24
    3bbe:	81 11       	cpse	r24, r1
    3bc0:	1d c0       	rjmp	.+58     	; 0x3bfc <dir_register+0x84>
    3bc2:	d8 01       	movw	r26, r16
    3bc4:	52 96       	adiw	r26, 0x12	; 18
    3bc6:	ed 91       	ld	r30, X+
    3bc8:	fc 91       	ld	r31, X
    3bca:	53 97       	sbiw	r26, 0x13	; 19
    3bcc:	80 81       	ld	r24, Z
    3bce:	85 3e       	cpi	r24, 0xE5	; 229
    3bd0:	19 f0       	breq	.+6      	; 0x3bd8 <dir_register+0x60>
    3bd2:	80 81       	ld	r24, Z
    3bd4:	81 11       	cpse	r24, r1
    3bd6:	09 c0       	rjmp	.+18     	; 0x3bea <dir_register+0x72>
    3bd8:	89 81       	ldd	r24, Y+1	; 0x01
    3bda:	9a 81       	ldd	r25, Y+2	; 0x02
    3bdc:	01 96       	adiw	r24, 0x01	; 1
    3bde:	89 83       	std	Y+1, r24	; 0x01
    3be0:	9a 83       	std	Y+2, r25	; 0x02
    3be2:	8e 15       	cp	r24, r14
    3be4:	9f 05       	cpc	r25, r15
    3be6:	19 f4       	brne	.+6      	; 0x3bee <dir_register+0x76>
    3be8:	0e c0       	rjmp	.+28     	; 0x3c06 <dir_register+0x8e>
    3bea:	19 82       	std	Y+1, r1	; 0x01
    3bec:	1a 82       	std	Y+2, r1	; 0x02
    3bee:	61 e0       	ldi	r22, 0x01	; 1
    3bf0:	70 e0       	ldi	r23, 0x00	; 0
    3bf2:	c8 01       	movw	r24, r16
    3bf4:	83 dc       	rcall	.-1786   	; 0x34fc <dir_next>
    3bf6:	d8 2e       	mov	r13, r24
    3bf8:	88 23       	and	r24, r24
    3bfa:	a9 f2       	breq	.-86     	; 0x3ba6 <dir_register+0x2e>
    3bfc:	b4 e0       	ldi	r27, 0x04	; 4
    3bfe:	db 16       	cp	r13, r27
    3c00:	41 f1       	breq	.+80     	; 0x3c52 <dir_register+0xda>
    3c02:	d1 10       	cpse	r13, r1
    3c04:	2a c0       	rjmp	.+84     	; 0x3c5a <dir_register+0xe2>
    3c06:	f8 01       	movw	r30, r16
    3c08:	46 85       	ldd	r20, Z+14	; 0x0e
    3c0a:	57 85       	ldd	r21, Z+15	; 0x0f
    3c0c:	60 89       	ldd	r22, Z+16	; 0x10
    3c0e:	71 89       	ldd	r23, Z+17	; 0x11
    3c10:	80 81       	ld	r24, Z
    3c12:	91 81       	ldd	r25, Z+1	; 0x01
    3c14:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <move_window>
    3c18:	d8 2e       	mov	r13, r24
    3c1a:	81 11       	cpse	r24, r1
    3c1c:	1e c0       	rjmp	.+60     	; 0x3c5a <dir_register+0xe2>
    3c1e:	40 e2       	ldi	r20, 0x20	; 32
    3c20:	50 e0       	ldi	r21, 0x00	; 0
    3c22:	60 e0       	ldi	r22, 0x00	; 0
    3c24:	70 e0       	ldi	r23, 0x00	; 0
    3c26:	d8 01       	movw	r26, r16
    3c28:	52 96       	adiw	r26, 0x12	; 18
    3c2a:	8d 91       	ld	r24, X+
    3c2c:	9c 91       	ld	r25, X
    3c2e:	53 97       	sbiw	r26, 0x13	; 19
    3c30:	0e 94 7e 0e 	call	0x1cfc	; 0x1cfc <mem_set>
    3c34:	f8 01       	movw	r30, r16
    3c36:	64 89       	ldd	r22, Z+20	; 0x14
    3c38:	75 89       	ldd	r23, Z+21	; 0x15
    3c3a:	4b e0       	ldi	r20, 0x0B	; 11
    3c3c:	50 e0       	ldi	r21, 0x00	; 0
    3c3e:	82 89       	ldd	r24, Z+18	; 0x12
    3c40:	93 89       	ldd	r25, Z+19	; 0x13
    3c42:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <mem_cpy>
    3c46:	d8 01       	movw	r26, r16
    3c48:	ed 91       	ld	r30, X+
    3c4a:	fc 91       	ld	r31, X
    3c4c:	81 e0       	ldi	r24, 0x01	; 1
    3c4e:	84 83       	std	Z+4, r24	; 0x04
    3c50:	04 c0       	rjmp	.+8      	; 0x3c5a <dir_register+0xe2>
    3c52:	0f 2e       	mov	r0, r31
    3c54:	f7 e0       	ldi	r31, 0x07	; 7
    3c56:	df 2e       	mov	r13, r31
    3c58:	f0 2d       	mov	r31, r0
    3c5a:	8d 2d       	mov	r24, r13
    3c5c:	0f 90       	pop	r0
    3c5e:	0f 90       	pop	r0
    3c60:	df 91       	pop	r29
    3c62:	cf 91       	pop	r28
    3c64:	1f 91       	pop	r17
    3c66:	0f 91       	pop	r16
    3c68:	ff 90       	pop	r15
    3c6a:	ef 90       	pop	r14
    3c6c:	df 90       	pop	r13
    3c6e:	08 95       	ret

00003c70 <remove_chain>:
    3c70:	ef 92       	push	r14
    3c72:	ff 92       	push	r15
    3c74:	0f 93       	push	r16
    3c76:	1f 93       	push	r17
    3c78:	cf 93       	push	r28
    3c7a:	df 93       	push	r29
    3c7c:	cd b7       	in	r28, 0x3d	; 61
    3c7e:	de b7       	in	r29, 0x3e	; 62
    3c80:	28 97       	sbiw	r28, 0x08	; 8
    3c82:	cd bf       	out	0x3d, r28	; 61
    3c84:	de bf       	out	0x3e, r29	; 62
    3c86:	7c 01       	movw	r14, r24
    3c88:	4d 83       	std	Y+5, r20	; 0x05
    3c8a:	5e 83       	std	Y+6, r21	; 0x06
    3c8c:	6f 83       	std	Y+7, r22	; 0x07
    3c8e:	78 87       	std	Y+8, r23	; 0x08
    3c90:	8d 81       	ldd	r24, Y+5	; 0x05
    3c92:	9e 81       	ldd	r25, Y+6	; 0x06
    3c94:	af 81       	ldd	r26, Y+7	; 0x07
    3c96:	b8 85       	ldd	r27, Y+8	; 0x08
    3c98:	02 97       	sbiw	r24, 0x02	; 2
    3c9a:	a1 05       	cpc	r26, r1
    3c9c:	b1 05       	cpc	r27, r1
    3c9e:	08 f4       	brcc	.+2      	; 0x3ca2 <remove_chain+0x32>
    3ca0:	81 c0       	rjmp	.+258    	; 0x3da4 <remove_chain+0x134>
    3ca2:	f7 01       	movw	r30, r14
    3ca4:	42 89       	ldd	r20, Z+18	; 0x12
    3ca6:	53 89       	ldd	r21, Z+19	; 0x13
    3ca8:	64 89       	ldd	r22, Z+20	; 0x14
    3caa:	75 89       	ldd	r23, Z+21	; 0x15
    3cac:	8d 81       	ldd	r24, Y+5	; 0x05
    3cae:	9e 81       	ldd	r25, Y+6	; 0x06
    3cb0:	af 81       	ldd	r26, Y+7	; 0x07
    3cb2:	b8 85       	ldd	r27, Y+8	; 0x08
    3cb4:	84 17       	cp	r24, r20
    3cb6:	95 07       	cpc	r25, r21
    3cb8:	a6 07       	cpc	r26, r22
    3cba:	b7 07       	cpc	r27, r23
    3cbc:	08 f0       	brcs	.+2      	; 0x3cc0 <remove_chain+0x50>
    3cbe:	74 c0       	rjmp	.+232    	; 0x3da8 <remove_chain+0x138>
    3cc0:	42 89       	ldd	r20, Z+18	; 0x12
    3cc2:	53 89       	ldd	r21, Z+19	; 0x13
    3cc4:	64 89       	ldd	r22, Z+20	; 0x14
    3cc6:	75 89       	ldd	r23, Z+21	; 0x15
    3cc8:	8d 81       	ldd	r24, Y+5	; 0x05
    3cca:	9e 81       	ldd	r25, Y+6	; 0x06
    3ccc:	af 81       	ldd	r26, Y+7	; 0x07
    3cce:	b8 85       	ldd	r27, Y+8	; 0x08
    3cd0:	84 17       	cp	r24, r20
    3cd2:	95 07       	cpc	r25, r21
    3cd4:	a6 07       	cpc	r26, r22
    3cd6:	b7 07       	cpc	r27, r23
    3cd8:	08 f0       	brcs	.+2      	; 0x3cdc <remove_chain+0x6c>
    3cda:	68 c0       	rjmp	.+208    	; 0x3dac <remove_chain+0x13c>
    3cdc:	4d 81       	ldd	r20, Y+5	; 0x05
    3cde:	5e 81       	ldd	r21, Y+6	; 0x06
    3ce0:	6f 81       	ldd	r22, Y+7	; 0x07
    3ce2:	78 85       	ldd	r23, Y+8	; 0x08
    3ce4:	c7 01       	movw	r24, r14
    3ce6:	0e 94 64 15 	call	0x2ac8	; 0x2ac8 <get_fat>
    3cea:	69 83       	std	Y+1, r22	; 0x01
    3cec:	7a 83       	std	Y+2, r23	; 0x02
    3cee:	8b 83       	std	Y+3, r24	; 0x03
    3cf0:	9c 83       	std	Y+4, r25	; 0x04
    3cf2:	49 81       	ldd	r20, Y+1	; 0x01
    3cf4:	5a 81       	ldd	r21, Y+2	; 0x02
    3cf6:	6b 81       	ldd	r22, Y+3	; 0x03
    3cf8:	7c 81       	ldd	r23, Y+4	; 0x04
    3cfa:	45 2b       	or	r20, r21
    3cfc:	46 2b       	or	r20, r22
    3cfe:	47 2b       	or	r20, r23
    3d00:	09 f4       	brne	.+2      	; 0x3d04 <remove_chain+0x94>
    3d02:	56 c0       	rjmp	.+172    	; 0x3db0 <remove_chain+0x140>
    3d04:	89 81       	ldd	r24, Y+1	; 0x01
    3d06:	9a 81       	ldd	r25, Y+2	; 0x02
    3d08:	ab 81       	ldd	r26, Y+3	; 0x03
    3d0a:	bc 81       	ldd	r27, Y+4	; 0x04
    3d0c:	01 97       	sbiw	r24, 0x01	; 1
    3d0e:	a1 05       	cpc	r26, r1
    3d10:	b1 05       	cpc	r27, r1
    3d12:	09 f4       	brne	.+2      	; 0x3d16 <remove_chain+0xa6>
    3d14:	4f c0       	rjmp	.+158    	; 0x3db4 <remove_chain+0x144>
    3d16:	89 81       	ldd	r24, Y+1	; 0x01
    3d18:	9a 81       	ldd	r25, Y+2	; 0x02
    3d1a:	ab 81       	ldd	r26, Y+3	; 0x03
    3d1c:	bc 81       	ldd	r27, Y+4	; 0x04
    3d1e:	8f 3f       	cpi	r24, 0xFF	; 255
    3d20:	9f 4f       	sbci	r25, 0xFF	; 255
    3d22:	af 4f       	sbci	r26, 0xFF	; 255
    3d24:	bf 4f       	sbci	r27, 0xFF	; 255
    3d26:	09 f4       	brne	.+2      	; 0x3d2a <remove_chain+0xba>
    3d28:	47 c0       	rjmp	.+142    	; 0x3db8 <remove_chain+0x148>
    3d2a:	4d 81       	ldd	r20, Y+5	; 0x05
    3d2c:	5e 81       	ldd	r21, Y+6	; 0x06
    3d2e:	6f 81       	ldd	r22, Y+7	; 0x07
    3d30:	78 85       	ldd	r23, Y+8	; 0x08
    3d32:	00 e0       	ldi	r16, 0x00	; 0
    3d34:	10 e0       	ldi	r17, 0x00	; 0
    3d36:	98 01       	movw	r18, r16
    3d38:	c7 01       	movw	r24, r14
    3d3a:	09 d9       	rcall	.-3566   	; 0x2f4e <put_fat>
    3d3c:	81 11       	cpse	r24, r1
    3d3e:	3d c0       	rjmp	.+122    	; 0x3dba <remove_chain+0x14a>
    3d40:	f7 01       	movw	r30, r14
    3d42:	46 85       	ldd	r20, Z+14	; 0x0e
    3d44:	57 85       	ldd	r21, Z+15	; 0x0f
    3d46:	60 89       	ldd	r22, Z+16	; 0x10
    3d48:	71 89       	ldd	r23, Z+17	; 0x11
    3d4a:	4f 3f       	cpi	r20, 0xFF	; 255
    3d4c:	5f 4f       	sbci	r21, 0xFF	; 255
    3d4e:	6f 4f       	sbci	r22, 0xFF	; 255
    3d50:	7f 4f       	sbci	r23, 0xFF	; 255
    3d52:	81 f0       	breq	.+32     	; 0x3d74 <remove_chain+0x104>
    3d54:	f7 01       	movw	r30, r14
    3d56:	46 85       	ldd	r20, Z+14	; 0x0e
    3d58:	57 85       	ldd	r21, Z+15	; 0x0f
    3d5a:	60 89       	ldd	r22, Z+16	; 0x10
    3d5c:	71 89       	ldd	r23, Z+17	; 0x11
    3d5e:	4f 5f       	subi	r20, 0xFF	; 255
    3d60:	5f 4f       	sbci	r21, 0xFF	; 255
    3d62:	6f 4f       	sbci	r22, 0xFF	; 255
    3d64:	7f 4f       	sbci	r23, 0xFF	; 255
    3d66:	46 87       	std	Z+14, r20	; 0x0e
    3d68:	57 87       	std	Z+15, r21	; 0x0f
    3d6a:	60 8b       	std	Z+16, r22	; 0x10
    3d6c:	71 8b       	std	Z+17, r23	; 0x11
    3d6e:	95 81       	ldd	r25, Z+5	; 0x05
    3d70:	91 60       	ori	r25, 0x01	; 1
    3d72:	95 83       	std	Z+5, r25	; 0x05
    3d74:	49 81       	ldd	r20, Y+1	; 0x01
    3d76:	5a 81       	ldd	r21, Y+2	; 0x02
    3d78:	6b 81       	ldd	r22, Y+3	; 0x03
    3d7a:	7c 81       	ldd	r23, Y+4	; 0x04
    3d7c:	4d 83       	std	Y+5, r20	; 0x05
    3d7e:	5e 83       	std	Y+6, r21	; 0x06
    3d80:	6f 83       	std	Y+7, r22	; 0x07
    3d82:	78 87       	std	Y+8, r23	; 0x08
    3d84:	f7 01       	movw	r30, r14
    3d86:	02 89       	ldd	r16, Z+18	; 0x12
    3d88:	13 89       	ldd	r17, Z+19	; 0x13
    3d8a:	24 89       	ldd	r18, Z+20	; 0x14
    3d8c:	35 89       	ldd	r19, Z+21	; 0x15
    3d8e:	4d 81       	ldd	r20, Y+5	; 0x05
    3d90:	5e 81       	ldd	r21, Y+6	; 0x06
    3d92:	6f 81       	ldd	r22, Y+7	; 0x07
    3d94:	78 85       	ldd	r23, Y+8	; 0x08
    3d96:	40 17       	cp	r20, r16
    3d98:	51 07       	cpc	r21, r17
    3d9a:	62 07       	cpc	r22, r18
    3d9c:	73 07       	cpc	r23, r19
    3d9e:	08 f4       	brcc	.+2      	; 0x3da2 <remove_chain+0x132>
    3da0:	9d cf       	rjmp	.-198    	; 0x3cdc <remove_chain+0x6c>
    3da2:	0b c0       	rjmp	.+22     	; 0x3dba <remove_chain+0x14a>
    3da4:	82 e0       	ldi	r24, 0x02	; 2
    3da6:	09 c0       	rjmp	.+18     	; 0x3dba <remove_chain+0x14a>
    3da8:	82 e0       	ldi	r24, 0x02	; 2
    3daa:	07 c0       	rjmp	.+14     	; 0x3dba <remove_chain+0x14a>
    3dac:	80 e0       	ldi	r24, 0x00	; 0
    3dae:	05 c0       	rjmp	.+10     	; 0x3dba <remove_chain+0x14a>
    3db0:	80 e0       	ldi	r24, 0x00	; 0
    3db2:	03 c0       	rjmp	.+6      	; 0x3dba <remove_chain+0x14a>
    3db4:	82 e0       	ldi	r24, 0x02	; 2
    3db6:	01 c0       	rjmp	.+2      	; 0x3dba <remove_chain+0x14a>
    3db8:	81 e0       	ldi	r24, 0x01	; 1
    3dba:	28 96       	adiw	r28, 0x08	; 8
    3dbc:	cd bf       	out	0x3d, r28	; 61
    3dbe:	de bf       	out	0x3e, r29	; 62
    3dc0:	df 91       	pop	r29
    3dc2:	cf 91       	pop	r28
    3dc4:	1f 91       	pop	r17
    3dc6:	0f 91       	pop	r16
    3dc8:	ff 90       	pop	r15
    3dca:	ef 90       	pop	r14
    3dcc:	08 95       	ret

00003dce <f_mount>:
    3dce:	cf 93       	push	r28
    3dd0:	df 93       	push	r29
    3dd2:	cd b7       	in	r28, 0x3d	; 61
    3dd4:	de b7       	in	r29, 0x3e	; 62
    3dd6:	27 97       	sbiw	r28, 0x07	; 7
    3dd8:	cd bf       	out	0x3d, r28	; 61
    3dda:	de bf       	out	0x3e, r29	; 62
    3ddc:	8b 83       	std	Y+3, r24	; 0x03
    3dde:	9c 83       	std	Y+4, r25	; 0x04
    3de0:	6d 83       	std	Y+5, r22	; 0x05
    3de2:	7e 83       	std	Y+6, r23	; 0x06
    3de4:	4f 83       	std	Y+7, r20	; 0x07
    3de6:	69 83       	std	Y+1, r22	; 0x01
    3de8:	7a 83       	std	Y+2, r23	; 0x02
    3dea:	ce 01       	movw	r24, r28
    3dec:	01 96       	adiw	r24, 0x01	; 1
    3dee:	0e 94 04 0f 	call	0x1e08	; 0x1e08 <get_ldnumber>
    3df2:	99 23       	and	r25, r25
    3df4:	3c f1       	brlt	.+78     	; 0x3e44 <f_mount+0x76>
    3df6:	fc 01       	movw	r30, r24
    3df8:	ee 0f       	add	r30, r30
    3dfa:	ff 1f       	adc	r31, r31
    3dfc:	e4 5a       	subi	r30, 0xA4	; 164
    3dfe:	fe 4d       	sbci	r31, 0xDE	; 222
    3e00:	01 90       	ld	r0, Z+
    3e02:	f0 81       	ld	r31, Z
    3e04:	e0 2d       	mov	r30, r0
    3e06:	30 97       	sbiw	r30, 0x00	; 0
    3e08:	09 f0       	breq	.+2      	; 0x3e0c <f_mount+0x3e>
    3e0a:	10 82       	st	Z, r1
    3e0c:	eb 81       	ldd	r30, Y+3	; 0x03
    3e0e:	fc 81       	ldd	r31, Y+4	; 0x04
    3e10:	30 97       	sbiw	r30, 0x00	; 0
    3e12:	f1 f0       	breq	.+60     	; 0x3e50 <f_mount+0x82>
    3e14:	10 82       	st	Z, r1
    3e16:	2b 81       	ldd	r18, Y+3	; 0x03
    3e18:	3c 81       	ldd	r19, Y+4	; 0x04
    3e1a:	fc 01       	movw	r30, r24
    3e1c:	ee 0f       	add	r30, r30
    3e1e:	ff 1f       	adc	r31, r31
    3e20:	e4 5a       	subi	r30, 0xA4	; 164
    3e22:	fe 4d       	sbci	r31, 0xDE	; 222
    3e24:	20 83       	st	Z, r18
    3e26:	31 83       	std	Z+1, r19	; 0x01
    3e28:	23 2b       	or	r18, r19
    3e2a:	71 f0       	breq	.+28     	; 0x3e48 <f_mount+0x7a>
    3e2c:	8f 81       	ldd	r24, Y+7	; 0x07
    3e2e:	81 30       	cpi	r24, 0x01	; 1
    3e30:	69 f4       	brne	.+26     	; 0x3e4c <f_mount+0x7e>
    3e32:	40 e0       	ldi	r20, 0x00	; 0
    3e34:	be 01       	movw	r22, r28
    3e36:	6b 5f       	subi	r22, 0xFB	; 251
    3e38:	7f 4f       	sbci	r23, 0xFF	; 255
    3e3a:	ce 01       	movw	r24, r28
    3e3c:	03 96       	adiw	r24, 0x03	; 3
    3e3e:	0e 94 bd 10 	call	0x217a	; 0x217a <find_volume>
    3e42:	0e c0       	rjmp	.+28     	; 0x3e60 <f_mount+0x92>
    3e44:	8b e0       	ldi	r24, 0x0B	; 11
    3e46:	0c c0       	rjmp	.+24     	; 0x3e60 <f_mount+0x92>
    3e48:	80 e0       	ldi	r24, 0x00	; 0
    3e4a:	0a c0       	rjmp	.+20     	; 0x3e60 <f_mount+0x92>
    3e4c:	80 e0       	ldi	r24, 0x00	; 0
    3e4e:	08 c0       	rjmp	.+16     	; 0x3e60 <f_mount+0x92>
    3e50:	fc 01       	movw	r30, r24
    3e52:	ee 0f       	add	r30, r30
    3e54:	ff 1f       	adc	r31, r31
    3e56:	e4 5a       	subi	r30, 0xA4	; 164
    3e58:	fe 4d       	sbci	r31, 0xDE	; 222
    3e5a:	10 82       	st	Z, r1
    3e5c:	11 82       	std	Z+1, r1	; 0x01
    3e5e:	80 e0       	ldi	r24, 0x00	; 0
    3e60:	27 96       	adiw	r28, 0x07	; 7
    3e62:	cd bf       	out	0x3d, r28	; 61
    3e64:	de bf       	out	0x3e, r29	; 62
    3e66:	df 91       	pop	r29
    3e68:	cf 91       	pop	r28
    3e6a:	08 95       	ret

00003e6c <f_open>:
    3e6c:	ef 92       	push	r14
    3e6e:	ff 92       	push	r15
    3e70:	0f 93       	push	r16
    3e72:	1f 93       	push	r17
    3e74:	cf 93       	push	r28
    3e76:	df 93       	push	r29
    3e78:	cd b7       	in	r28, 0x3d	; 61
    3e7a:	de b7       	in	r29, 0x3e	; 62
    3e7c:	ad 97       	sbiw	r28, 0x2d	; 45
    3e7e:	cd bf       	out	0x3d, r28	; 61
    3e80:	de bf       	out	0x3e, r29	; 62
    3e82:	8c 01       	movw	r16, r24
    3e84:	6b a7       	std	Y+43, r22	; 0x2b
    3e86:	7c a7       	std	Y+44, r23	; 0x2c
    3e88:	4d a7       	std	Y+45, r20	; 0x2d
    3e8a:	00 97       	sbiw	r24, 0x00	; 0
    3e8c:	09 f4       	brne	.+2      	; 0x3e90 <f_open+0x24>
    3e8e:	0e c1       	rjmp	.+540    	; 0x40ac <__stack+0xad>
    3e90:	dc 01       	movw	r26, r24
    3e92:	1d 92       	st	X+, r1
    3e94:	1c 92       	st	X, r1
    3e96:	8d a5       	ldd	r24, Y+45	; 0x2d
    3e98:	8f 71       	andi	r24, 0x1F	; 31
    3e9a:	8d a7       	std	Y+45, r24	; 0x2d
    3e9c:	4d a5       	ldd	r20, Y+45	; 0x2d
    3e9e:	4e 7f       	andi	r20, 0xFE	; 254
    3ea0:	be 01       	movw	r22, r28
    3ea2:	65 5d       	subi	r22, 0xD5	; 213
    3ea4:	7f 4f       	sbci	r23, 0xFF	; 255
    3ea6:	ce 01       	movw	r24, r28
    3ea8:	01 96       	adiw	r24, 0x01	; 1
    3eaa:	0e 94 bd 10 	call	0x217a	; 0x217a <find_volume>
    3eae:	81 11       	cpse	r24, r1
    3eb0:	15 c1       	rjmp	.+554    	; 0x40dc <__stack+0xdd>
    3eb2:	ce 01       	movw	r24, r28
    3eb4:	47 96       	adiw	r24, 0x17	; 23
    3eb6:	8d 8b       	std	Y+21, r24	; 0x15
    3eb8:	9e 8b       	std	Y+22, r25	; 0x16
    3eba:	6b a5       	ldd	r22, Y+43	; 0x2b
    3ebc:	7c a5       	ldd	r23, Y+44	; 0x2c
    3ebe:	46 97       	sbiw	r24, 0x16	; 22
    3ec0:	82 dc       	rcall	.-1788   	; 0x37c6 <follow_path>
    3ec2:	eb 88       	ldd	r14, Y+19	; 0x13
    3ec4:	fc 88       	ldd	r15, Y+20	; 0x14
    3ec6:	81 11       	cpse	r24, r1
    3ec8:	f9 c0       	rjmp	.+498    	; 0x40bc <__stack+0xbd>
    3eca:	e1 14       	cp	r14, r1
    3ecc:	f1 04       	cpc	r15, r1
    3ece:	09 f0       	breq	.+2      	; 0x3ed2 <f_open+0x66>
    3ed0:	ef c0       	rjmp	.+478    	; 0x40b0 <__stack+0xb1>
    3ed2:	f3 c0       	rjmp	.+486    	; 0x40ba <__stack+0xbb>
    3ed4:	88 23       	and	r24, r24
    3ed6:	71 f0       	breq	.+28     	; 0x3ef4 <f_open+0x88>
    3ed8:	84 30       	cpi	r24, 0x04	; 4
    3eda:	09 f0       	breq	.+2      	; 0x3ede <f_open+0x72>
    3edc:	fc c0       	rjmp	.+504    	; 0x40d6 <__stack+0xd7>
    3ede:	ce 01       	movw	r24, r28
    3ee0:	01 96       	adiw	r24, 0x01	; 1
    3ee2:	4a de       	rcall	.-876    	; 0x3b78 <dir_register>
    3ee4:	9d a5       	ldd	r25, Y+45	; 0x2d
    3ee6:	98 60       	ori	r25, 0x08	; 8
    3ee8:	9d a7       	std	Y+45, r25	; 0x2d
    3eea:	eb 88       	ldd	r14, Y+19	; 0x13
    3eec:	fc 88       	ldd	r15, Y+20	; 0x14
    3eee:	88 23       	and	r24, r24
    3ef0:	49 f0       	breq	.+18     	; 0x3f04 <f_open+0x98>
    3ef2:	f4 c0       	rjmp	.+488    	; 0x40dc <__stack+0xdd>
    3ef4:	f7 01       	movw	r30, r14
    3ef6:	83 85       	ldd	r24, Z+11	; 0x0b
    3ef8:	81 71       	andi	r24, 0x11	; 17
    3efa:	09 f0       	breq	.+2      	; 0x3efe <f_open+0x92>
    3efc:	e4 c0       	rjmp	.+456    	; 0x40c6 <__stack+0xc7>
    3efe:	8d a5       	ldd	r24, Y+45	; 0x2d
    3f00:	82 fd       	sbrc	r24, 2
    3f02:	e3 c0       	rjmp	.+454    	; 0x40ca <__stack+0xcb>
    3f04:	8d a5       	ldd	r24, Y+45	; 0x2d
    3f06:	83 ff       	sbrs	r24, 3
    3f08:	79 c0       	rjmp	.+242    	; 0x3ffc <f_open+0x190>
    3f0a:	0e 94 d4 33 	call	0x67a8	; 0x67a8 <get_fattime>
    3f0e:	6f a3       	std	Y+39, r22	; 0x27
    3f10:	78 a7       	std	Y+40, r23	; 0x28
    3f12:	89 a7       	std	Y+41, r24	; 0x29
    3f14:	9a a7       	std	Y+42, r25	; 0x2a
    3f16:	8f a1       	ldd	r24, Y+39	; 0x27
    3f18:	98 a5       	ldd	r25, Y+40	; 0x28
    3f1a:	a9 a5       	ldd	r26, Y+41	; 0x29
    3f1c:	ba a5       	ldd	r27, Y+42	; 0x2a
    3f1e:	f7 01       	movw	r30, r14
    3f20:	86 87       	std	Z+14, r24	; 0x0e
    3f22:	8f a1       	ldd	r24, Y+39	; 0x27
    3f24:	98 a5       	ldd	r25, Y+40	; 0x28
    3f26:	a9 a5       	ldd	r26, Y+41	; 0x29
    3f28:	ba a5       	ldd	r27, Y+42	; 0x2a
    3f2a:	89 2f       	mov	r24, r25
    3f2c:	99 27       	eor	r25, r25
    3f2e:	87 87       	std	Z+15, r24	; 0x0f
    3f30:	8f a1       	ldd	r24, Y+39	; 0x27
    3f32:	98 a5       	ldd	r25, Y+40	; 0x28
    3f34:	a9 a5       	ldd	r26, Y+41	; 0x29
    3f36:	ba a5       	ldd	r27, Y+42	; 0x2a
    3f38:	cd 01       	movw	r24, r26
    3f3a:	aa 27       	eor	r26, r26
    3f3c:	bb 27       	eor	r27, r27
    3f3e:	80 8b       	std	Z+16, r24	; 0x10
    3f40:	8f a1       	ldd	r24, Y+39	; 0x27
    3f42:	98 a5       	ldd	r25, Y+40	; 0x28
    3f44:	a9 a5       	ldd	r26, Y+41	; 0x29
    3f46:	ba a5       	ldd	r27, Y+42	; 0x2a
    3f48:	8b 2f       	mov	r24, r27
    3f4a:	99 27       	eor	r25, r25
    3f4c:	aa 27       	eor	r26, r26
    3f4e:	bb 27       	eor	r27, r27
    3f50:	81 8b       	std	Z+17, r24	; 0x11
    3f52:	13 86       	std	Z+11, r1	; 0x0b
    3f54:	14 8e       	std	Z+28, r1	; 0x1c
    3f56:	15 8e       	std	Z+29, r1	; 0x1d
    3f58:	16 8e       	std	Z+30, r1	; 0x1e
    3f5a:	17 8e       	std	Z+31, r1	; 0x1f
    3f5c:	b7 01       	movw	r22, r14
    3f5e:	89 81       	ldd	r24, Y+1	; 0x01
    3f60:	9a 81       	ldd	r25, Y+2	; 0x02
    3f62:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <ld_clust>
    3f66:	6b a3       	std	Y+35, r22	; 0x23
    3f68:	7c a3       	std	Y+36, r23	; 0x24
    3f6a:	8d a3       	std	Y+37, r24	; 0x25
    3f6c:	9e a3       	std	Y+38, r25	; 0x26
    3f6e:	40 e0       	ldi	r20, 0x00	; 0
    3f70:	50 e0       	ldi	r21, 0x00	; 0
    3f72:	ba 01       	movw	r22, r20
    3f74:	c7 01       	movw	r24, r14
    3f76:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <st_clust>
    3f7a:	e9 81       	ldd	r30, Y+1	; 0x01
    3f7c:	fa 81       	ldd	r31, Y+2	; 0x02
    3f7e:	81 e0       	ldi	r24, 0x01	; 1
    3f80:	84 83       	std	Z+4, r24	; 0x04
    3f82:	4b a1       	ldd	r20, Y+35	; 0x23
    3f84:	5c a1       	ldd	r21, Y+36	; 0x24
    3f86:	6d a1       	ldd	r22, Y+37	; 0x25
    3f88:	7e a1       	ldd	r23, Y+38	; 0x26
    3f8a:	45 2b       	or	r20, r21
    3f8c:	46 2b       	or	r20, r22
    3f8e:	47 2b       	or	r20, r23
    3f90:	a9 f1       	breq	.+106    	; 0x3ffc <f_open+0x190>
    3f92:	42 a5       	ldd	r20, Z+42	; 0x2a
    3f94:	53 a5       	ldd	r21, Z+43	; 0x2b
    3f96:	64 a5       	ldd	r22, Z+44	; 0x2c
    3f98:	75 a5       	ldd	r23, Z+45	; 0x2d
    3f9a:	4f a3       	std	Y+39, r20	; 0x27
    3f9c:	58 a7       	std	Y+40, r21	; 0x28
    3f9e:	69 a7       	std	Y+41, r22	; 0x29
    3fa0:	7a a7       	std	Y+42, r23	; 0x2a
    3fa2:	4b a1       	ldd	r20, Y+35	; 0x23
    3fa4:	5c a1       	ldd	r21, Y+36	; 0x24
    3fa6:	6d a1       	ldd	r22, Y+37	; 0x25
    3fa8:	7e a1       	ldd	r23, Y+38	; 0x26
    3faa:	cf 01       	movw	r24, r30
    3fac:	61 de       	rcall	.-830    	; 0x3c70 <remove_chain>
    3fae:	81 11       	cpse	r24, r1
    3fb0:	95 c0       	rjmp	.+298    	; 0x40dc <__stack+0xdd>
    3fb2:	89 81       	ldd	r24, Y+1	; 0x01
    3fb4:	9a 81       	ldd	r25, Y+2	; 0x02
    3fb6:	4b a1       	ldd	r20, Y+35	; 0x23
    3fb8:	5c a1       	ldd	r21, Y+36	; 0x24
    3fba:	6d a1       	ldd	r22, Y+37	; 0x25
    3fbc:	7e a1       	ldd	r23, Y+38	; 0x26
    3fbe:	41 50       	subi	r20, 0x01	; 1
    3fc0:	51 09       	sbc	r21, r1
    3fc2:	61 09       	sbc	r22, r1
    3fc4:	71 09       	sbc	r23, r1
    3fc6:	dc 01       	movw	r26, r24
    3fc8:	1a 96       	adiw	r26, 0x0a	; 10
    3fca:	4d 93       	st	X+, r20
    3fcc:	5d 93       	st	X+, r21
    3fce:	6d 93       	st	X+, r22
    3fd0:	7c 93       	st	X, r23
    3fd2:	1d 97       	sbiw	r26, 0x0d	; 13
    3fd4:	4f a1       	ldd	r20, Y+39	; 0x27
    3fd6:	58 a5       	ldd	r21, Y+40	; 0x28
    3fd8:	69 a5       	ldd	r22, Y+41	; 0x29
    3fda:	7a a5       	ldd	r23, Y+42	; 0x2a
    3fdc:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <move_window>
    3fe0:	0b c0       	rjmp	.+22     	; 0x3ff8 <f_open+0x18c>
    3fe2:	f7 01       	movw	r30, r14
    3fe4:	83 85       	ldd	r24, Z+11	; 0x0b
    3fe6:	84 fd       	sbrc	r24, 4
    3fe8:	72 c0       	rjmp	.+228    	; 0x40ce <__stack+0xcf>
    3fea:	8d a5       	ldd	r24, Y+45	; 0x2d
    3fec:	81 ff       	sbrs	r24, 1
    3fee:	06 c0       	rjmp	.+12     	; 0x3ffc <f_open+0x190>
    3ff0:	83 85       	ldd	r24, Z+11	; 0x0b
    3ff2:	80 fd       	sbrc	r24, 0
    3ff4:	6e c0       	rjmp	.+220    	; 0x40d2 <__stack+0xd3>
    3ff6:	02 c0       	rjmp	.+4      	; 0x3ffc <f_open+0x190>
    3ff8:	81 11       	cpse	r24, r1
    3ffa:	70 c0       	rjmp	.+224    	; 0x40dc <__stack+0xdd>
    3ffc:	8d a5       	ldd	r24, Y+45	; 0x2d
    3ffe:	83 ff       	sbrs	r24, 3
    4000:	03 c0       	rjmp	.+6      	; 0x4008 <__stack+0x9>
    4002:	8d a5       	ldd	r24, Y+45	; 0x2d
    4004:	80 62       	ori	r24, 0x20	; 32
    4006:	8d a7       	std	Y+45, r24	; 0x2d
    4008:	89 81       	ldd	r24, Y+1	; 0x01
    400a:	9a 81       	ldd	r25, Y+2	; 0x02
    400c:	dc 01       	movw	r26, r24
    400e:	9a 96       	adiw	r26, 0x2a	; 42
    4010:	4d 91       	ld	r20, X+
    4012:	5d 91       	ld	r21, X+
    4014:	6d 91       	ld	r22, X+
    4016:	7c 91       	ld	r23, X
    4018:	9d 97       	sbiw	r26, 0x2d	; 45
    401a:	f8 01       	movw	r30, r16
    401c:	42 8f       	std	Z+26, r20	; 0x1a
    401e:	53 8f       	std	Z+27, r21	; 0x1b
    4020:	64 8f       	std	Z+28, r22	; 0x1c
    4022:	75 8f       	std	Z+29, r23	; 0x1d
    4024:	e6 8e       	std	Z+30, r14	; 0x1e
    4026:	f7 8e       	std	Z+31, r15	; 0x1f
    4028:	2d a5       	ldd	r18, Y+45	; 0x2d
    402a:	24 83       	std	Z+4, r18	; 0x04
    402c:	15 82       	std	Z+5, r1	; 0x05
    402e:	b7 01       	movw	r22, r14
    4030:	0e 94 a4 0e 	call	0x1d48	; 0x1d48 <ld_clust>
    4034:	d8 01       	movw	r26, r16
    4036:	1e 96       	adiw	r26, 0x0e	; 14
    4038:	6d 93       	st	X+, r22
    403a:	7d 93       	st	X+, r23
    403c:	8d 93       	st	X+, r24
    403e:	9c 93       	st	X, r25
    4040:	51 97       	sbiw	r26, 0x11	; 17
    4042:	f7 01       	movw	r30, r14
    4044:	27 8d       	ldd	r18, Z+31	; 0x1f
    4046:	46 8d       	ldd	r20, Z+30	; 0x1e
    4048:	85 8d       	ldd	r24, Z+29	; 0x1d
    404a:	94 8d       	ldd	r25, Z+28	; 0x1c
    404c:	50 e0       	ldi	r21, 0x00	; 0
    404e:	60 e0       	ldi	r22, 0x00	; 0
    4050:	70 e0       	ldi	r23, 0x00	; 0
    4052:	ba 01       	movw	r22, r20
    4054:	55 27       	eor	r21, r21
    4056:	44 27       	eor	r20, r20
    4058:	72 2b       	or	r23, r18
    405a:	49 2b       	or	r20, r25
    405c:	90 e0       	ldi	r25, 0x00	; 0
    405e:	98 2f       	mov	r25, r24
    4060:	88 27       	eor	r24, r24
    4062:	a0 e0       	ldi	r26, 0x00	; 0
    4064:	b0 e0       	ldi	r27, 0x00	; 0
    4066:	48 2b       	or	r20, r24
    4068:	59 2b       	or	r21, r25
    406a:	6a 2b       	or	r22, r26
    406c:	7b 2b       	or	r23, r27
    406e:	d8 01       	movw	r26, r16
    4070:	1a 96       	adiw	r26, 0x0a	; 10
    4072:	4d 93       	st	X+, r20
    4074:	5d 93       	st	X+, r21
    4076:	6d 93       	st	X+, r22
    4078:	7c 93       	st	X, r23
    407a:	1d 97       	sbiw	r26, 0x0d	; 13
    407c:	f8 01       	movw	r30, r16
    407e:	16 82       	std	Z+6, r1	; 0x06
    4080:	17 82       	std	Z+7, r1	; 0x07
    4082:	10 86       	std	Z+8, r1	; 0x08
    4084:	11 86       	std	Z+9, r1	; 0x09
    4086:	56 96       	adiw	r26, 0x16	; 22
    4088:	1d 92       	st	X+, r1
    408a:	1d 92       	st	X+, r1
    408c:	1d 92       	st	X+, r1
    408e:	1c 92       	st	X, r1
    4090:	59 97       	sbiw	r26, 0x19	; 25
    4092:	e9 81       	ldd	r30, Y+1	; 0x01
    4094:	fa 81       	ldd	r31, Y+2	; 0x02
    4096:	ed 93       	st	X+, r30
    4098:	fc 93       	st	X, r31
    409a:	11 97       	sbiw	r26, 0x01	; 1
    409c:	86 81       	ldd	r24, Z+6	; 0x06
    409e:	97 81       	ldd	r25, Z+7	; 0x07
    40a0:	12 96       	adiw	r26, 0x02	; 2
    40a2:	8d 93       	st	X+, r24
    40a4:	9c 93       	st	X, r25
    40a6:	13 97       	sbiw	r26, 0x03	; 3
    40a8:	80 e0       	ldi	r24, 0x00	; 0
    40aa:	18 c0       	rjmp	.+48     	; 0x40dc <__stack+0xdd>
    40ac:	89 e0       	ldi	r24, 0x09	; 9
    40ae:	16 c0       	rjmp	.+44     	; 0x40dc <__stack+0xdd>
    40b0:	8d a5       	ldd	r24, Y+45	; 0x2d
    40b2:	8c 71       	andi	r24, 0x1C	; 28
    40b4:	09 f0       	breq	.+2      	; 0x40b8 <__stack+0xb9>
    40b6:	1e cf       	rjmp	.-452    	; 0x3ef4 <f_open+0x88>
    40b8:	94 cf       	rjmp	.-216    	; 0x3fe2 <f_open+0x176>
    40ba:	86 e0       	ldi	r24, 0x06	; 6
    40bc:	9d a5       	ldd	r25, Y+45	; 0x2d
    40be:	9c 71       	andi	r25, 0x1C	; 28
    40c0:	09 f0       	breq	.+2      	; 0x40c4 <__stack+0xc5>
    40c2:	08 cf       	rjmp	.-496    	; 0x3ed4 <f_open+0x68>
    40c4:	99 cf       	rjmp	.-206    	; 0x3ff8 <f_open+0x18c>
    40c6:	87 e0       	ldi	r24, 0x07	; 7
    40c8:	09 c0       	rjmp	.+18     	; 0x40dc <__stack+0xdd>
    40ca:	88 e0       	ldi	r24, 0x08	; 8
    40cc:	07 c0       	rjmp	.+14     	; 0x40dc <__stack+0xdd>
    40ce:	84 e0       	ldi	r24, 0x04	; 4
    40d0:	05 c0       	rjmp	.+10     	; 0x40dc <__stack+0xdd>
    40d2:	87 e0       	ldi	r24, 0x07	; 7
    40d4:	03 c0       	rjmp	.+6      	; 0x40dc <__stack+0xdd>
    40d6:	9d a5       	ldd	r25, Y+45	; 0x2d
    40d8:	98 60       	ori	r25, 0x08	; 8
    40da:	9d a7       	std	Y+45, r25	; 0x2d
    40dc:	ad 96       	adiw	r28, 0x2d	; 45
    40de:	cd bf       	out	0x3d, r28	; 61
    40e0:	de bf       	out	0x3e, r29	; 62
    40e2:	df 91       	pop	r29
    40e4:	cf 91       	pop	r28
    40e6:	1f 91       	pop	r17
    40e8:	0f 91       	pop	r16
    40ea:	ff 90       	pop	r15
    40ec:	ef 90       	pop	r14
    40ee:	08 95       	ret

000040f0 <f_write>:
    40f0:	6f 92       	push	r6
    40f2:	7f 92       	push	r7
    40f4:	8f 92       	push	r8
    40f6:	9f 92       	push	r9
    40f8:	af 92       	push	r10
    40fa:	bf 92       	push	r11
    40fc:	cf 92       	push	r12
    40fe:	df 92       	push	r13
    4100:	ef 92       	push	r14
    4102:	ff 92       	push	r15
    4104:	0f 93       	push	r16
    4106:	1f 93       	push	r17
    4108:	cf 93       	push	r28
    410a:	df 93       	push	r29
    410c:	cd b7       	in	r28, 0x3d	; 61
    410e:	de b7       	in	r29, 0x3e	; 62
    4110:	2f 97       	sbiw	r28, 0x0f	; 15
    4112:	cd bf       	out	0x3d, r28	; 61
    4114:	de bf       	out	0x3e, r29	; 62
    4116:	7c 01       	movw	r14, r24
    4118:	5b 01       	movw	r10, r22
    411a:	4e 87       	std	Y+14, r20	; 0x0e
    411c:	5f 87       	std	Y+15, r21	; 0x0f
    411e:	69 01       	movw	r12, r18
    4120:	d9 01       	movw	r26, r18
    4122:	1d 92       	st	X+, r1
    4124:	1c 92       	st	X, r1
    4126:	0e 94 98 10 	call	0x2130	; 0x2130 <validate>
    412a:	81 11       	cpse	r24, r1
    412c:	24 c2       	rjmp	.+1096   	; 0x4576 <f_write+0x486>
    412e:	f7 01       	movw	r30, r14
    4130:	85 81       	ldd	r24, Z+5	; 0x05
    4132:	88 23       	and	r24, r24
    4134:	11 f0       	breq	.+4      	; 0x413a <f_write+0x4a>
    4136:	85 81       	ldd	r24, Z+5	; 0x05
    4138:	1e c2       	rjmp	.+1084   	; 0x4576 <f_write+0x486>
    413a:	84 81       	ldd	r24, Z+4	; 0x04
    413c:	81 ff       	sbrs	r24, 1
    413e:	1a c2       	rjmp	.+1076   	; 0x4574 <f_write+0x484>
    4140:	46 81       	ldd	r20, Z+6	; 0x06
    4142:	57 81       	ldd	r21, Z+7	; 0x07
    4144:	60 85       	ldd	r22, Z+8	; 0x08
    4146:	71 85       	ldd	r23, Z+9	; 0x09
    4148:	2e 85       	ldd	r18, Y+14	; 0x0e
    414a:	3f 85       	ldd	r19, Y+15	; 0x0f
    414c:	86 81       	ldd	r24, Z+6	; 0x06
    414e:	97 81       	ldd	r25, Z+7	; 0x07
    4150:	a0 85       	ldd	r26, Z+8	; 0x08
    4152:	b1 85       	ldd	r27, Z+9	; 0x09
    4154:	42 0f       	add	r20, r18
    4156:	53 1f       	adc	r21, r19
    4158:	61 1d       	adc	r22, r1
    415a:	71 1d       	adc	r23, r1
    415c:	48 17       	cp	r20, r24
    415e:	59 07       	cpc	r21, r25
    4160:	6a 07       	cpc	r22, r26
    4162:	7b 07       	cpc	r23, r27
    4164:	10 f4       	brcc	.+4      	; 0x416a <f_write+0x7a>
    4166:	1e 86       	std	Y+14, r1	; 0x0e
    4168:	1f 86       	std	Y+15, r1	; 0x0f
    416a:	8e 85       	ldd	r24, Y+14	; 0x0e
    416c:	9f 85       	ldd	r25, Y+15	; 0x0f
    416e:	89 2b       	or	r24, r25
    4170:	09 f4       	brne	.+2      	; 0x4174 <f_write+0x84>
    4172:	e1 c1       	rjmp	.+962    	; 0x4536 <f_write+0x446>
    4174:	81 2c       	mov	r8, r1
    4176:	68 94       	set
    4178:	99 24       	eor	r9, r9
    417a:	91 f8       	bld	r9, 1
    417c:	37 01       	movw	r6, r14
    417e:	b0 e2       	ldi	r27, 0x20	; 32
    4180:	6b 0e       	add	r6, r27
    4182:	71 1c       	adc	r7, r1
    4184:	f7 01       	movw	r30, r14
    4186:	86 81       	ldd	r24, Z+6	; 0x06
    4188:	97 81       	ldd	r25, Z+7	; 0x07
    418a:	a0 85       	ldd	r26, Z+8	; 0x08
    418c:	b1 85       	ldd	r27, Z+9	; 0x09
    418e:	91 70       	andi	r25, 0x01	; 1
    4190:	aa 27       	eor	r26, r26
    4192:	bb 27       	eor	r27, r27
    4194:	89 2b       	or	r24, r25
    4196:	8a 2b       	or	r24, r26
    4198:	8b 2b       	or	r24, r27
    419a:	09 f0       	breq	.+2      	; 0x419e <f_write+0xae>
    419c:	75 c1       	rjmp	.+746    	; 0x4488 <f_write+0x398>
    419e:	46 81       	ldd	r20, Z+6	; 0x06
    41a0:	57 81       	ldd	r21, Z+7	; 0x07
    41a2:	60 85       	ldd	r22, Z+8	; 0x08
    41a4:	71 85       	ldd	r23, Z+9	; 0x09
    41a6:	01 90       	ld	r0, Z+
    41a8:	f0 81       	ld	r31, Z
    41aa:	e0 2d       	mov	r30, r0
    41ac:	82 81       	ldd	r24, Z+2	; 0x02
    41ae:	03 2e       	mov	r0, r19
    41b0:	39 e0       	ldi	r19, 0x09	; 9
    41b2:	76 95       	lsr	r23
    41b4:	67 95       	ror	r22
    41b6:	57 95       	ror	r21
    41b8:	47 95       	ror	r20
    41ba:	3a 95       	dec	r19
    41bc:	d1 f7       	brne	.-12     	; 0x41b2 <f_write+0xc2>
    41be:	30 2d       	mov	r19, r0
    41c0:	81 50       	subi	r24, 0x01	; 1
    41c2:	48 23       	and	r20, r24
    41c4:	4d 87       	std	Y+13, r20	; 0x0d
    41c6:	8d 85       	ldd	r24, Y+13	; 0x0d
    41c8:	81 11       	cpse	r24, r1
    41ca:	70 c0       	rjmp	.+224    	; 0x42ac <f_write+0x1bc>
    41cc:	d7 01       	movw	r26, r14
    41ce:	16 96       	adiw	r26, 0x06	; 6
    41d0:	4d 91       	ld	r20, X+
    41d2:	5d 91       	ld	r21, X+
    41d4:	6d 91       	ld	r22, X+
    41d6:	7c 91       	ld	r23, X
    41d8:	19 97       	sbiw	r26, 0x09	; 9
    41da:	45 2b       	or	r20, r21
    41dc:	46 2b       	or	r20, r22
    41de:	47 2b       	or	r20, r23
    41e0:	e1 f4       	brne	.+56     	; 0x421a <f_write+0x12a>
    41e2:	1e 96       	adiw	r26, 0x0e	; 14
    41e4:	4d 91       	ld	r20, X+
    41e6:	5d 91       	ld	r21, X+
    41e8:	6d 91       	ld	r22, X+
    41ea:	7c 91       	ld	r23, X
    41ec:	51 97       	sbiw	r26, 0x11	; 17
    41ee:	49 83       	std	Y+1, r20	; 0x01
    41f0:	5a 83       	std	Y+2, r21	; 0x02
    41f2:	6b 83       	std	Y+3, r22	; 0x03
    41f4:	7c 83       	std	Y+4, r23	; 0x04
    41f6:	49 81       	ldd	r20, Y+1	; 0x01
    41f8:	5a 81       	ldd	r21, Y+2	; 0x02
    41fa:	6b 81       	ldd	r22, Y+3	; 0x03
    41fc:	7c 81       	ldd	r23, Y+4	; 0x04
    41fe:	45 2b       	or	r20, r21
    4200:	46 2b       	or	r20, r22
    4202:	47 2b       	or	r20, r23
    4204:	b9 f4       	brne	.+46     	; 0x4234 <f_write+0x144>
    4206:	40 e0       	ldi	r20, 0x00	; 0
    4208:	50 e0       	ldi	r21, 0x00	; 0
    420a:	ba 01       	movw	r22, r20
    420c:	cf 01       	movw	r24, r30
    420e:	18 d8       	rcall	.-4048   	; 0x3240 <create_chain>
    4210:	69 83       	std	Y+1, r22	; 0x01
    4212:	7a 83       	std	Y+2, r23	; 0x02
    4214:	8b 83       	std	Y+3, r24	; 0x03
    4216:	9c 83       	std	Y+4, r25	; 0x04
    4218:	0d c0       	rjmp	.+26     	; 0x4234 <f_write+0x144>
    421a:	d7 01       	movw	r26, r14
    421c:	52 96       	adiw	r26, 0x12	; 18
    421e:	4d 91       	ld	r20, X+
    4220:	5d 91       	ld	r21, X+
    4222:	6d 91       	ld	r22, X+
    4224:	7c 91       	ld	r23, X
    4226:	55 97       	sbiw	r26, 0x15	; 21
    4228:	cf 01       	movw	r24, r30
    422a:	0a d8       	rcall	.-4076   	; 0x3240 <create_chain>
    422c:	69 83       	std	Y+1, r22	; 0x01
    422e:	7a 83       	std	Y+2, r23	; 0x02
    4230:	8b 83       	std	Y+3, r24	; 0x03
    4232:	9c 83       	std	Y+4, r25	; 0x04
    4234:	89 81       	ldd	r24, Y+1	; 0x01
    4236:	9a 81       	ldd	r25, Y+2	; 0x02
    4238:	ab 81       	ldd	r26, Y+3	; 0x03
    423a:	bc 81       	ldd	r27, Y+4	; 0x04
    423c:	89 2b       	or	r24, r25
    423e:	8a 2b       	or	r24, r26
    4240:	8b 2b       	or	r24, r27
    4242:	09 f4       	brne	.+2      	; 0x4246 <f_write+0x156>
    4244:	78 c1       	rjmp	.+752    	; 0x4536 <f_write+0x446>
    4246:	89 81       	ldd	r24, Y+1	; 0x01
    4248:	9a 81       	ldd	r25, Y+2	; 0x02
    424a:	ab 81       	ldd	r26, Y+3	; 0x03
    424c:	bc 81       	ldd	r27, Y+4	; 0x04
    424e:	01 97       	sbiw	r24, 0x01	; 1
    4250:	a1 05       	cpc	r26, r1
    4252:	b1 05       	cpc	r27, r1
    4254:	21 f4       	brne	.+8      	; 0x425e <f_write+0x16e>
    4256:	82 e0       	ldi	r24, 0x02	; 2
    4258:	f7 01       	movw	r30, r14
    425a:	85 83       	std	Z+5, r24	; 0x05
    425c:	8c c1       	rjmp	.+792    	; 0x4576 <f_write+0x486>
    425e:	89 81       	ldd	r24, Y+1	; 0x01
    4260:	9a 81       	ldd	r25, Y+2	; 0x02
    4262:	ab 81       	ldd	r26, Y+3	; 0x03
    4264:	bc 81       	ldd	r27, Y+4	; 0x04
    4266:	8f 3f       	cpi	r24, 0xFF	; 255
    4268:	9f 4f       	sbci	r25, 0xFF	; 255
    426a:	af 4f       	sbci	r26, 0xFF	; 255
    426c:	bf 4f       	sbci	r27, 0xFF	; 255
    426e:	29 f4       	brne	.+10     	; 0x427a <f_write+0x18a>
    4270:	81 e0       	ldi	r24, 0x01	; 1
    4272:	d7 01       	movw	r26, r14
    4274:	15 96       	adiw	r26, 0x05	; 5
    4276:	8c 93       	st	X, r24
    4278:	7e c1       	rjmp	.+764    	; 0x4576 <f_write+0x486>
    427a:	89 81       	ldd	r24, Y+1	; 0x01
    427c:	9a 81       	ldd	r25, Y+2	; 0x02
    427e:	ab 81       	ldd	r26, Y+3	; 0x03
    4280:	bc 81       	ldd	r27, Y+4	; 0x04
    4282:	f7 01       	movw	r30, r14
    4284:	82 8b       	std	Z+18, r24	; 0x12
    4286:	93 8b       	std	Z+19, r25	; 0x13
    4288:	a4 8b       	std	Z+20, r26	; 0x14
    428a:	b5 8b       	std	Z+21, r27	; 0x15
    428c:	86 85       	ldd	r24, Z+14	; 0x0e
    428e:	97 85       	ldd	r25, Z+15	; 0x0f
    4290:	a0 89       	ldd	r26, Z+16	; 0x10
    4292:	b1 89       	ldd	r27, Z+17	; 0x11
    4294:	89 2b       	or	r24, r25
    4296:	8a 2b       	or	r24, r26
    4298:	8b 2b       	or	r24, r27
    429a:	41 f4       	brne	.+16     	; 0x42ac <f_write+0x1bc>
    429c:	89 81       	ldd	r24, Y+1	; 0x01
    429e:	9a 81       	ldd	r25, Y+2	; 0x02
    42a0:	ab 81       	ldd	r26, Y+3	; 0x03
    42a2:	bc 81       	ldd	r27, Y+4	; 0x04
    42a4:	86 87       	std	Z+14, r24	; 0x0e
    42a6:	97 87       	std	Z+15, r25	; 0x0f
    42a8:	a0 8b       	std	Z+16, r26	; 0x10
    42aa:	b1 8b       	std	Z+17, r27	; 0x11
    42ac:	d7 01       	movw	r26, r14
    42ae:	14 96       	adiw	r26, 0x04	; 4
    42b0:	8c 91       	ld	r24, X
    42b2:	14 97       	sbiw	r26, 0x04	; 4
    42b4:	86 ff       	sbrs	r24, 6
    42b6:	1b c0       	rjmp	.+54     	; 0x42ee <f_write+0x1fe>
    42b8:	56 96       	adiw	r26, 0x16	; 22
    42ba:	2d 91       	ld	r18, X+
    42bc:	3d 91       	ld	r19, X+
    42be:	4d 91       	ld	r20, X+
    42c0:	5c 91       	ld	r21, X
    42c2:	59 97       	sbiw	r26, 0x19	; 25
    42c4:	ed 91       	ld	r30, X+
    42c6:	fc 91       	ld	r31, X
    42c8:	81 81       	ldd	r24, Z+1	; 0x01
    42ca:	01 e0       	ldi	r16, 0x01	; 1
    42cc:	10 e0       	ldi	r17, 0x00	; 0
    42ce:	b3 01       	movw	r22, r6
    42d0:	0e 94 b3 37 	call	0x6f66	; 0x6f66 <disk_write>
    42d4:	88 23       	and	r24, r24
    42d6:	21 f0       	breq	.+8      	; 0x42e0 <f_write+0x1f0>
    42d8:	81 e0       	ldi	r24, 0x01	; 1
    42da:	f7 01       	movw	r30, r14
    42dc:	85 83       	std	Z+5, r24	; 0x05
    42de:	4b c1       	rjmp	.+662    	; 0x4576 <f_write+0x486>
    42e0:	d7 01       	movw	r26, r14
    42e2:	14 96       	adiw	r26, 0x04	; 4
    42e4:	8c 91       	ld	r24, X
    42e6:	14 97       	sbiw	r26, 0x04	; 4
    42e8:	8f 7b       	andi	r24, 0xBF	; 191
    42ea:	14 96       	adiw	r26, 0x04	; 4
    42ec:	8c 93       	st	X, r24
    42ee:	f7 01       	movw	r30, r14
    42f0:	42 89       	ldd	r20, Z+18	; 0x12
    42f2:	53 89       	ldd	r21, Z+19	; 0x13
    42f4:	64 89       	ldd	r22, Z+20	; 0x14
    42f6:	75 89       	ldd	r23, Z+21	; 0x15
    42f8:	80 81       	ld	r24, Z
    42fa:	91 81       	ldd	r25, Z+1	; 0x01
    42fc:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <clust2sect>
    4300:	6d 83       	std	Y+5, r22	; 0x05
    4302:	7e 83       	std	Y+6, r23	; 0x06
    4304:	8f 83       	std	Y+7, r24	; 0x07
    4306:	98 87       	std	Y+8, r25	; 0x08
    4308:	8d 81       	ldd	r24, Y+5	; 0x05
    430a:	9e 81       	ldd	r25, Y+6	; 0x06
    430c:	af 81       	ldd	r26, Y+7	; 0x07
    430e:	b8 85       	ldd	r27, Y+8	; 0x08
    4310:	89 2b       	or	r24, r25
    4312:	8a 2b       	or	r24, r26
    4314:	8b 2b       	or	r24, r27
    4316:	29 f4       	brne	.+10     	; 0x4322 <f_write+0x232>
    4318:	82 e0       	ldi	r24, 0x02	; 2
    431a:	d7 01       	movw	r26, r14
    431c:	15 96       	adiw	r26, 0x05	; 5
    431e:	8c 93       	st	X, r24
    4320:	2a c1       	rjmp	.+596    	; 0x4576 <f_write+0x486>
    4322:	2d 85       	ldd	r18, Y+13	; 0x0d
    4324:	8d 81       	ldd	r24, Y+5	; 0x05
    4326:	9e 81       	ldd	r25, Y+6	; 0x06
    4328:	af 81       	ldd	r26, Y+7	; 0x07
    432a:	b8 85       	ldd	r27, Y+8	; 0x08
    432c:	82 0f       	add	r24, r18
    432e:	91 1d       	adc	r25, r1
    4330:	a1 1d       	adc	r26, r1
    4332:	b1 1d       	adc	r27, r1
    4334:	8d 83       	std	Y+5, r24	; 0x05
    4336:	9e 83       	std	Y+6, r25	; 0x06
    4338:	af 83       	std	Y+7, r26	; 0x07
    433a:	b8 87       	std	Y+8, r27	; 0x08
    433c:	8e 85       	ldd	r24, Y+14	; 0x0e
    433e:	9f 85       	ldd	r25, Y+15	; 0x0f
    4340:	89 2f       	mov	r24, r25
    4342:	99 27       	eor	r25, r25
    4344:	86 95       	lsr	r24
    4346:	8b 87       	std	Y+11, r24	; 0x0b
    4348:	9c 87       	std	Y+12, r25	; 0x0c
    434a:	8b 85       	ldd	r24, Y+11	; 0x0b
    434c:	9c 85       	ldd	r25, Y+12	; 0x0c
    434e:	89 2b       	or	r24, r25
    4350:	09 f4       	brne	.+2      	; 0x4354 <f_write+0x264>
    4352:	62 c0       	rjmp	.+196    	; 0x4418 <f_write+0x328>
    4354:	9d 85       	ldd	r25, Y+13	; 0x0d
    4356:	2b 85       	ldd	r18, Y+11	; 0x0b
    4358:	3c 85       	ldd	r19, Y+12	; 0x0c
    435a:	d7 01       	movw	r26, r14
    435c:	ed 91       	ld	r30, X+
    435e:	fc 91       	ld	r31, X
    4360:	82 81       	ldd	r24, Z+2	; 0x02
    4362:	29 0f       	add	r18, r25
    4364:	31 1d       	adc	r19, r1
    4366:	90 e0       	ldi	r25, 0x00	; 0
    4368:	82 17       	cp	r24, r18
    436a:	93 07       	cpc	r25, r19
    436c:	38 f4       	brcc	.+14     	; 0x437c <f_write+0x28c>
    436e:	82 81       	ldd	r24, Z+2	; 0x02
    4370:	2d 85       	ldd	r18, Y+13	; 0x0d
    4372:	90 e0       	ldi	r25, 0x00	; 0
    4374:	82 1b       	sub	r24, r18
    4376:	91 09       	sbc	r25, r1
    4378:	8b 87       	std	Y+11, r24	; 0x0b
    437a:	9c 87       	std	Y+12, r25	; 0x0c
    437c:	0b 85       	ldd	r16, Y+11	; 0x0b
    437e:	1c 85       	ldd	r17, Y+12	; 0x0c
    4380:	2d 81       	ldd	r18, Y+5	; 0x05
    4382:	3e 81       	ldd	r19, Y+6	; 0x06
    4384:	4f 81       	ldd	r20, Y+7	; 0x07
    4386:	58 85       	ldd	r21, Y+8	; 0x08
    4388:	81 81       	ldd	r24, Z+1	; 0x01
    438a:	b5 01       	movw	r22, r10
    438c:	0e 94 b3 37 	call	0x6f66	; 0x6f66 <disk_write>
    4390:	88 23       	and	r24, r24
    4392:	21 f0       	breq	.+8      	; 0x439c <f_write+0x2ac>
    4394:	81 e0       	ldi	r24, 0x01	; 1
    4396:	f7 01       	movw	r30, r14
    4398:	85 83       	std	Z+5, r24	; 0x05
    439a:	ed c0       	rjmp	.+474    	; 0x4576 <f_write+0x486>
    439c:	d7 01       	movw	r26, r14
    439e:	56 96       	adiw	r26, 0x16	; 22
    43a0:	4d 91       	ld	r20, X+
    43a2:	5d 91       	ld	r21, X+
    43a4:	6d 91       	ld	r22, X+
    43a6:	7c 91       	ld	r23, X
    43a8:	59 97       	sbiw	r26, 0x19	; 25
    43aa:	0d 81       	ldd	r16, Y+5	; 0x05
    43ac:	1e 81       	ldd	r17, Y+6	; 0x06
    43ae:	2f 81       	ldd	r18, Y+7	; 0x07
    43b0:	38 85       	ldd	r19, Y+8	; 0x08
    43b2:	8b 85       	ldd	r24, Y+11	; 0x0b
    43b4:	9c 85       	ldd	r25, Y+12	; 0x0c
    43b6:	40 1b       	sub	r20, r16
    43b8:	51 0b       	sbc	r21, r17
    43ba:	62 0b       	sbc	r22, r18
    43bc:	73 0b       	sbc	r23, r19
    43be:	a0 e0       	ldi	r26, 0x00	; 0
    43c0:	b0 e0       	ldi	r27, 0x00	; 0
    43c2:	48 17       	cp	r20, r24
    43c4:	59 07       	cpc	r21, r25
    43c6:	6a 07       	cpc	r22, r26
    43c8:	7b 07       	cpc	r23, r27
    43ca:	f0 f4       	brcc	.+60     	; 0x4408 <f_write+0x318>
    43cc:	f7 01       	movw	r30, r14
    43ce:	86 89       	ldd	r24, Z+22	; 0x16
    43d0:	97 89       	ldd	r25, Z+23	; 0x17
    43d2:	a0 8d       	ldd	r26, Z+24	; 0x18
    43d4:	b1 8d       	ldd	r27, Z+25	; 0x19
    43d6:	4d 81       	ldd	r20, Y+5	; 0x05
    43d8:	5e 81       	ldd	r21, Y+6	; 0x06
    43da:	6f 81       	ldd	r22, Y+7	; 0x07
    43dc:	78 85       	ldd	r23, Y+8	; 0x08
    43de:	84 1b       	sub	r24, r20
    43e0:	95 0b       	sbc	r25, r21
    43e2:	a6 0b       	sbc	r26, r22
    43e4:	b7 0b       	sbc	r27, r23
    43e6:	98 2f       	mov	r25, r24
    43e8:	88 27       	eor	r24, r24
    43ea:	99 0f       	add	r25, r25
    43ec:	b5 01       	movw	r22, r10
    43ee:	68 0f       	add	r22, r24
    43f0:	79 1f       	adc	r23, r25
    43f2:	a4 01       	movw	r20, r8
    43f4:	c3 01       	movw	r24, r6
    43f6:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <mem_cpy>
    43fa:	d7 01       	movw	r26, r14
    43fc:	14 96       	adiw	r26, 0x04	; 4
    43fe:	8c 91       	ld	r24, X
    4400:	14 97       	sbiw	r26, 0x04	; 4
    4402:	8f 7b       	andi	r24, 0xBF	; 191
    4404:	14 96       	adiw	r26, 0x04	; 4
    4406:	8c 93       	st	X, r24
    4408:	8b 85       	ldd	r24, Y+11	; 0x0b
    440a:	9c 85       	ldd	r25, Y+12	; 0x0c
    440c:	98 2f       	mov	r25, r24
    440e:	88 27       	eor	r24, r24
    4410:	99 0f       	add	r25, r25
    4412:	89 87       	std	Y+9, r24	; 0x09
    4414:	9a 87       	std	Y+10, r25	; 0x0a
    4416:	65 c0       	rjmp	.+202    	; 0x44e2 <f_write+0x3f2>
    4418:	f7 01       	movw	r30, r14
    441a:	46 89       	ldd	r20, Z+22	; 0x16
    441c:	57 89       	ldd	r21, Z+23	; 0x17
    441e:	60 8d       	ldd	r22, Z+24	; 0x18
    4420:	71 8d       	ldd	r23, Z+25	; 0x19
    4422:	8d 81       	ldd	r24, Y+5	; 0x05
    4424:	9e 81       	ldd	r25, Y+6	; 0x06
    4426:	af 81       	ldd	r26, Y+7	; 0x07
    4428:	b8 85       	ldd	r27, Y+8	; 0x08
    442a:	48 17       	cp	r20, r24
    442c:	59 07       	cpc	r21, r25
    442e:	6a 07       	cpc	r22, r26
    4430:	7b 07       	cpc	r23, r27
    4432:	09 f1       	breq	.+66     	; 0x4476 <f_write+0x386>
    4434:	46 81       	ldd	r20, Z+6	; 0x06
    4436:	57 81       	ldd	r21, Z+7	; 0x07
    4438:	60 85       	ldd	r22, Z+8	; 0x08
    443a:	71 85       	ldd	r23, Z+9	; 0x09
    443c:	82 85       	ldd	r24, Z+10	; 0x0a
    443e:	93 85       	ldd	r25, Z+11	; 0x0b
    4440:	a4 85       	ldd	r26, Z+12	; 0x0c
    4442:	b5 85       	ldd	r27, Z+13	; 0x0d
    4444:	48 17       	cp	r20, r24
    4446:	59 07       	cpc	r21, r25
    4448:	6a 07       	cpc	r22, r26
    444a:	7b 07       	cpc	r23, r27
    444c:	a0 f4       	brcc	.+40     	; 0x4476 <f_write+0x386>
    444e:	2d 81       	ldd	r18, Y+5	; 0x05
    4450:	3e 81       	ldd	r19, Y+6	; 0x06
    4452:	4f 81       	ldd	r20, Y+7	; 0x07
    4454:	58 85       	ldd	r21, Y+8	; 0x08
    4456:	01 90       	ld	r0, Z+
    4458:	f0 81       	ld	r31, Z
    445a:	e0 2d       	mov	r30, r0
    445c:	81 81       	ldd	r24, Z+1	; 0x01
    445e:	01 e0       	ldi	r16, 0x01	; 1
    4460:	10 e0       	ldi	r17, 0x00	; 0
    4462:	b3 01       	movw	r22, r6
    4464:	0e 94 f6 36 	call	0x6dec	; 0x6dec <disk_read>
    4468:	88 23       	and	r24, r24
    446a:	29 f0       	breq	.+10     	; 0x4476 <f_write+0x386>
    446c:	81 e0       	ldi	r24, 0x01	; 1
    446e:	d7 01       	movw	r26, r14
    4470:	15 96       	adiw	r26, 0x05	; 5
    4472:	8c 93       	st	X, r24
    4474:	80 c0       	rjmp	.+256    	; 0x4576 <f_write+0x486>
    4476:	8d 81       	ldd	r24, Y+5	; 0x05
    4478:	9e 81       	ldd	r25, Y+6	; 0x06
    447a:	af 81       	ldd	r26, Y+7	; 0x07
    447c:	b8 85       	ldd	r27, Y+8	; 0x08
    447e:	f7 01       	movw	r30, r14
    4480:	86 8b       	std	Z+22, r24	; 0x16
    4482:	97 8b       	std	Z+23, r25	; 0x17
    4484:	a0 8f       	std	Z+24, r26	; 0x18
    4486:	b1 8f       	std	Z+25, r27	; 0x19
    4488:	f7 01       	movw	r30, r14
    448a:	86 81       	ldd	r24, Z+6	; 0x06
    448c:	97 81       	ldd	r25, Z+7	; 0x07
    448e:	a0 85       	ldd	r26, Z+8	; 0x08
    4490:	b1 85       	ldd	r27, Z+9	; 0x09
    4492:	91 70       	andi	r25, 0x01	; 1
    4494:	94 01       	movw	r18, r8
    4496:	28 1b       	sub	r18, r24
    4498:	39 0b       	sbc	r19, r25
    449a:	29 87       	std	Y+9, r18	; 0x09
    449c:	3a 87       	std	Y+10, r19	; 0x0a
    449e:	29 85       	ldd	r18, Y+9	; 0x09
    44a0:	3a 85       	ldd	r19, Y+10	; 0x0a
    44a2:	8e 85       	ldd	r24, Y+14	; 0x0e
    44a4:	9f 85       	ldd	r25, Y+15	; 0x0f
    44a6:	82 17       	cp	r24, r18
    44a8:	93 07       	cpc	r25, r19
    44aa:	20 f4       	brcc	.+8      	; 0x44b4 <f_write+0x3c4>
    44ac:	8e 85       	ldd	r24, Y+14	; 0x0e
    44ae:	9f 85       	ldd	r25, Y+15	; 0x0f
    44b0:	89 87       	std	Y+9, r24	; 0x09
    44b2:	9a 87       	std	Y+10, r25	; 0x0a
    44b4:	49 85       	ldd	r20, Y+9	; 0x09
    44b6:	5a 85       	ldd	r21, Y+10	; 0x0a
    44b8:	f7 01       	movw	r30, r14
    44ba:	86 81       	ldd	r24, Z+6	; 0x06
    44bc:	97 81       	ldd	r25, Z+7	; 0x07
    44be:	a0 85       	ldd	r26, Z+8	; 0x08
    44c0:	b1 85       	ldd	r27, Z+9	; 0x09
    44c2:	91 70       	andi	r25, 0x01	; 1
    44c4:	aa 27       	eor	r26, r26
    44c6:	bb 27       	eor	r27, r27
    44c8:	80 96       	adiw	r24, 0x20	; 32
    44ca:	b5 01       	movw	r22, r10
    44cc:	8e 0d       	add	r24, r14
    44ce:	9f 1d       	adc	r25, r15
    44d0:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <mem_cpy>
    44d4:	d7 01       	movw	r26, r14
    44d6:	14 96       	adiw	r26, 0x04	; 4
    44d8:	8c 91       	ld	r24, X
    44da:	14 97       	sbiw	r26, 0x04	; 4
    44dc:	80 64       	ori	r24, 0x40	; 64
    44de:	14 96       	adiw	r26, 0x04	; 4
    44e0:	8c 93       	st	X, r24
    44e2:	89 85       	ldd	r24, Y+9	; 0x09
    44e4:	9a 85       	ldd	r25, Y+10	; 0x0a
    44e6:	a8 0e       	add	r10, r24
    44e8:	b9 1e       	adc	r11, r25
    44ea:	f7 01       	movw	r30, r14
    44ec:	86 81       	ldd	r24, Z+6	; 0x06
    44ee:	97 81       	ldd	r25, Z+7	; 0x07
    44f0:	a0 85       	ldd	r26, Z+8	; 0x08
    44f2:	b1 85       	ldd	r27, Z+9	; 0x09
    44f4:	29 85       	ldd	r18, Y+9	; 0x09
    44f6:	3a 85       	ldd	r19, Y+10	; 0x0a
    44f8:	82 0f       	add	r24, r18
    44fa:	93 1f       	adc	r25, r19
    44fc:	a1 1d       	adc	r26, r1
    44fe:	b1 1d       	adc	r27, r1
    4500:	86 83       	std	Z+6, r24	; 0x06
    4502:	97 83       	std	Z+7, r25	; 0x07
    4504:	a0 87       	std	Z+8, r26	; 0x08
    4506:	b1 87       	std	Z+9, r27	; 0x09
    4508:	d6 01       	movw	r26, r12
    450a:	2d 91       	ld	r18, X+
    450c:	3c 91       	ld	r19, X
    450e:	11 97       	sbiw	r26, 0x01	; 1
    4510:	89 85       	ldd	r24, Y+9	; 0x09
    4512:	9a 85       	ldd	r25, Y+10	; 0x0a
    4514:	82 0f       	add	r24, r18
    4516:	93 1f       	adc	r25, r19
    4518:	8d 93       	st	X+, r24
    451a:	9c 93       	st	X, r25
    451c:	8e 85       	ldd	r24, Y+14	; 0x0e
    451e:	9f 85       	ldd	r25, Y+15	; 0x0f
    4520:	29 85       	ldd	r18, Y+9	; 0x09
    4522:	3a 85       	ldd	r19, Y+10	; 0x0a
    4524:	82 1b       	sub	r24, r18
    4526:	93 0b       	sbc	r25, r19
    4528:	8e 87       	std	Y+14, r24	; 0x0e
    452a:	9f 87       	std	Y+15, r25	; 0x0f
    452c:	8e 85       	ldd	r24, Y+14	; 0x0e
    452e:	9f 85       	ldd	r25, Y+15	; 0x0f
    4530:	89 2b       	or	r24, r25
    4532:	09 f0       	breq	.+2      	; 0x4536 <f_write+0x446>
    4534:	27 ce       	rjmp	.-946    	; 0x4184 <f_write+0x94>
    4536:	f7 01       	movw	r30, r14
    4538:	46 81       	ldd	r20, Z+6	; 0x06
    453a:	57 81       	ldd	r21, Z+7	; 0x07
    453c:	60 85       	ldd	r22, Z+8	; 0x08
    453e:	71 85       	ldd	r23, Z+9	; 0x09
    4540:	82 85       	ldd	r24, Z+10	; 0x0a
    4542:	93 85       	ldd	r25, Z+11	; 0x0b
    4544:	a4 85       	ldd	r26, Z+12	; 0x0c
    4546:	b5 85       	ldd	r27, Z+13	; 0x0d
    4548:	84 17       	cp	r24, r20
    454a:	95 07       	cpc	r25, r21
    454c:	a6 07       	cpc	r26, r22
    454e:	b7 07       	cpc	r27, r23
    4550:	40 f4       	brcc	.+16     	; 0x4562 <f_write+0x472>
    4552:	86 81       	ldd	r24, Z+6	; 0x06
    4554:	97 81       	ldd	r25, Z+7	; 0x07
    4556:	a0 85       	ldd	r26, Z+8	; 0x08
    4558:	b1 85       	ldd	r27, Z+9	; 0x09
    455a:	82 87       	std	Z+10, r24	; 0x0a
    455c:	93 87       	std	Z+11, r25	; 0x0b
    455e:	a4 87       	std	Z+12, r26	; 0x0c
    4560:	b5 87       	std	Z+13, r27	; 0x0d
    4562:	d7 01       	movw	r26, r14
    4564:	14 96       	adiw	r26, 0x04	; 4
    4566:	8c 91       	ld	r24, X
    4568:	14 97       	sbiw	r26, 0x04	; 4
    456a:	80 62       	ori	r24, 0x20	; 32
    456c:	14 96       	adiw	r26, 0x04	; 4
    456e:	8c 93       	st	X, r24
    4570:	80 e0       	ldi	r24, 0x00	; 0
    4572:	01 c0       	rjmp	.+2      	; 0x4576 <f_write+0x486>
    4574:	87 e0       	ldi	r24, 0x07	; 7
    4576:	2f 96       	adiw	r28, 0x0f	; 15
    4578:	cd bf       	out	0x3d, r28	; 61
    457a:	de bf       	out	0x3e, r29	; 62
    457c:	df 91       	pop	r29
    457e:	cf 91       	pop	r28
    4580:	1f 91       	pop	r17
    4582:	0f 91       	pop	r16
    4584:	ff 90       	pop	r15
    4586:	ef 90       	pop	r14
    4588:	df 90       	pop	r13
    458a:	cf 90       	pop	r12
    458c:	bf 90       	pop	r11
    458e:	af 90       	pop	r10
    4590:	9f 90       	pop	r9
    4592:	8f 90       	pop	r8
    4594:	7f 90       	pop	r7
    4596:	6f 90       	pop	r6
    4598:	08 95       	ret

0000459a <putc_bfd>:
    459a:	df 92       	push	r13
    459c:	ef 92       	push	r14
    459e:	ff 92       	push	r15
    45a0:	0f 93       	push	r16
    45a2:	1f 93       	push	r17
    45a4:	cf 93       	push	r28
    45a6:	df 93       	push	r29
    45a8:	1f 92       	push	r1
    45aa:	1f 92       	push	r1
    45ac:	cd b7       	in	r28, 0x3d	; 61
    45ae:	de b7       	in	r29, 0x3e	; 62
    45b0:	8c 01       	movw	r16, r24
    45b2:	d6 2e       	mov	r13, r22
    45b4:	2a e0       	ldi	r18, 0x0A	; 10
    45b6:	62 13       	cpse	r22, r18
    45b8:	02 c0       	rjmp	.+4      	; 0x45be <putc_bfd+0x24>
    45ba:	6d e0       	ldi	r22, 0x0D	; 13
    45bc:	ee df       	rcall	.-36     	; 0x459a <putc_bfd>
    45be:	f8 01       	movw	r30, r16
    45c0:	82 81       	ldd	r24, Z+2	; 0x02
    45c2:	93 81       	ldd	r25, Z+3	; 0x03
    45c4:	99 23       	and	r25, r25
    45c6:	64 f1       	brlt	.+88     	; 0x4620 <putc_bfd+0x86>
    45c8:	7c 01       	movw	r14, r24
    45ca:	ff ef       	ldi	r31, 0xFF	; 255
    45cc:	ef 1a       	sub	r14, r31
    45ce:	ff 0a       	sbc	r15, r31
    45d0:	f8 01       	movw	r30, r16
    45d2:	e8 0f       	add	r30, r24
    45d4:	f9 1f       	adc	r31, r25
    45d6:	d6 82       	std	Z+6, r13	; 0x06
    45d8:	2d e3       	ldi	r18, 0x3D	; 61
    45da:	e2 16       	cp	r14, r18
    45dc:	f1 04       	cpc	r15, r1
    45de:	c4 f0       	brlt	.+48     	; 0x4610 <putc_bfd+0x76>
    45e0:	9e 01       	movw	r18, r28
    45e2:	2f 5f       	subi	r18, 0xFF	; 255
    45e4:	3f 4f       	sbci	r19, 0xFF	; 255
    45e6:	a7 01       	movw	r20, r14
    45e8:	b8 01       	movw	r22, r16
    45ea:	6a 5f       	subi	r22, 0xFA	; 250
    45ec:	7f 4f       	sbci	r23, 0xFF	; 255
    45ee:	f8 01       	movw	r30, r16
    45f0:	80 81       	ld	r24, Z
    45f2:	91 81       	ldd	r25, Z+1	; 0x01
    45f4:	7d dd       	rcall	.-1286   	; 0x40f0 <f_write>
    45f6:	29 81       	ldd	r18, Y+1	; 0x01
    45f8:	3a 81       	ldd	r19, Y+2	; 0x02
    45fa:	81 e0       	ldi	r24, 0x01	; 1
    45fc:	90 e0       	ldi	r25, 0x00	; 0
    45fe:	e2 16       	cp	r14, r18
    4600:	f3 06       	cpc	r15, r19
    4602:	11 f4       	brne	.+4      	; 0x4608 <putc_bfd+0x6e>
    4604:	80 e0       	ldi	r24, 0x00	; 0
    4606:	90 e0       	ldi	r25, 0x00	; 0
    4608:	ee 24       	eor	r14, r14
    460a:	ff 24       	eor	r15, r15
    460c:	e8 1a       	sub	r14, r24
    460e:	f9 0a       	sbc	r15, r25
    4610:	f8 01       	movw	r30, r16
    4612:	e2 82       	std	Z+2, r14	; 0x02
    4614:	f3 82       	std	Z+3, r15	; 0x03
    4616:	84 81       	ldd	r24, Z+4	; 0x04
    4618:	95 81       	ldd	r25, Z+5	; 0x05
    461a:	01 96       	adiw	r24, 0x01	; 1
    461c:	84 83       	std	Z+4, r24	; 0x04
    461e:	95 83       	std	Z+5, r25	; 0x05
    4620:	0f 90       	pop	r0
    4622:	0f 90       	pop	r0
    4624:	df 91       	pop	r29
    4626:	cf 91       	pop	r28
    4628:	1f 91       	pop	r17
    462a:	0f 91       	pop	r16
    462c:	ff 90       	pop	r15
    462e:	ef 90       	pop	r14
    4630:	df 90       	pop	r13
    4632:	08 95       	ret

00004634 <f_sync>:
    4634:	ef 92       	push	r14
    4636:	ff 92       	push	r15
    4638:	0f 93       	push	r16
    463a:	1f 93       	push	r17
    463c:	cf 93       	push	r28
    463e:	df 93       	push	r29
    4640:	00 d0       	rcall	.+0      	; 0x4642 <f_sync+0xe>
    4642:	1f 92       	push	r1
    4644:	cd b7       	in	r28, 0x3d	; 61
    4646:	de b7       	in	r29, 0x3e	; 62
    4648:	7c 01       	movw	r14, r24
    464a:	0e 94 98 10 	call	0x2130	; 0x2130 <validate>
    464e:	81 11       	cpse	r24, r1
    4650:	a1 c0       	rjmp	.+322    	; 0x4794 <f_sync+0x160>
    4652:	d7 01       	movw	r26, r14
    4654:	14 96       	adiw	r26, 0x04	; 4
    4656:	8c 91       	ld	r24, X
    4658:	14 97       	sbiw	r26, 0x04	; 4
    465a:	85 ff       	sbrs	r24, 5
    465c:	98 c0       	rjmp	.+304    	; 0x478e <f_sync+0x15a>
    465e:	14 96       	adiw	r26, 0x04	; 4
    4660:	8c 91       	ld	r24, X
    4662:	14 97       	sbiw	r26, 0x04	; 4
    4664:	86 ff       	sbrs	r24, 6
    4666:	16 c0       	rjmp	.+44     	; 0x4694 <f_sync+0x60>
    4668:	56 96       	adiw	r26, 0x16	; 22
    466a:	2d 91       	ld	r18, X+
    466c:	3d 91       	ld	r19, X+
    466e:	4d 91       	ld	r20, X+
    4670:	5c 91       	ld	r21, X
    4672:	59 97       	sbiw	r26, 0x19	; 25
    4674:	ed 91       	ld	r30, X+
    4676:	fc 91       	ld	r31, X
    4678:	81 81       	ldd	r24, Z+1	; 0x01
    467a:	01 e0       	ldi	r16, 0x01	; 1
    467c:	10 e0       	ldi	r17, 0x00	; 0
    467e:	b7 01       	movw	r22, r14
    4680:	60 5e       	subi	r22, 0xE0	; 224
    4682:	7f 4f       	sbci	r23, 0xFF	; 255
    4684:	0e 94 b3 37 	call	0x6f66	; 0x6f66 <disk_write>
    4688:	81 11       	cpse	r24, r1
    468a:	83 c0       	rjmp	.+262    	; 0x4792 <f_sync+0x15e>
    468c:	f7 01       	movw	r30, r14
    468e:	84 81       	ldd	r24, Z+4	; 0x04
    4690:	8f 7b       	andi	r24, 0xBF	; 191
    4692:	84 83       	std	Z+4, r24	; 0x04
    4694:	d7 01       	movw	r26, r14
    4696:	5a 96       	adiw	r26, 0x1a	; 26
    4698:	4d 91       	ld	r20, X+
    469a:	5d 91       	ld	r21, X+
    469c:	6d 91       	ld	r22, X+
    469e:	7c 91       	ld	r23, X
    46a0:	5d 97       	sbiw	r26, 0x1d	; 29
    46a2:	8d 91       	ld	r24, X+
    46a4:	9c 91       	ld	r25, X
    46a6:	0e 94 d4 0f 	call	0x1fa8	; 0x1fa8 <move_window>
    46aa:	81 11       	cpse	r24, r1
    46ac:	73 c0       	rjmp	.+230    	; 0x4794 <f_sync+0x160>
    46ae:	f7 01       	movw	r30, r14
    46b0:	06 8d       	ldd	r16, Z+30	; 0x1e
    46b2:	17 8d       	ldd	r17, Z+31	; 0x1f
    46b4:	d8 01       	movw	r26, r16
    46b6:	1b 96       	adiw	r26, 0x0b	; 11
    46b8:	8c 91       	ld	r24, X
    46ba:	1b 97       	sbiw	r26, 0x0b	; 11
    46bc:	80 62       	ori	r24, 0x20	; 32
    46be:	1b 96       	adiw	r26, 0x0b	; 11
    46c0:	8c 93       	st	X, r24
    46c2:	82 85       	ldd	r24, Z+10	; 0x0a
    46c4:	93 85       	ldd	r25, Z+11	; 0x0b
    46c6:	a4 85       	ldd	r26, Z+12	; 0x0c
    46c8:	b5 85       	ldd	r27, Z+13	; 0x0d
    46ca:	f8 01       	movw	r30, r16
    46cc:	84 8f       	std	Z+28, r24	; 0x1c
    46ce:	f7 01       	movw	r30, r14
    46d0:	82 85       	ldd	r24, Z+10	; 0x0a
    46d2:	93 85       	ldd	r25, Z+11	; 0x0b
    46d4:	a4 85       	ldd	r26, Z+12	; 0x0c
    46d6:	b5 85       	ldd	r27, Z+13	; 0x0d
    46d8:	89 2f       	mov	r24, r25
    46da:	99 27       	eor	r25, r25
    46dc:	d8 01       	movw	r26, r16
    46de:	5d 96       	adiw	r26, 0x1d	; 29
    46e0:	8c 93       	st	X, r24
    46e2:	82 85       	ldd	r24, Z+10	; 0x0a
    46e4:	93 85       	ldd	r25, Z+11	; 0x0b
    46e6:	a4 85       	ldd	r26, Z+12	; 0x0c
    46e8:	b5 85       	ldd	r27, Z+13	; 0x0d
    46ea:	cd 01       	movw	r24, r26
    46ec:	aa 27       	eor	r26, r26
    46ee:	bb 27       	eor	r27, r27
    46f0:	f8 01       	movw	r30, r16
    46f2:	86 8f       	std	Z+30, r24	; 0x1e
    46f4:	f7 01       	movw	r30, r14
    46f6:	82 85       	ldd	r24, Z+10	; 0x0a
    46f8:	93 85       	ldd	r25, Z+11	; 0x0b
    46fa:	a4 85       	ldd	r26, Z+12	; 0x0c
    46fc:	b5 85       	ldd	r27, Z+13	; 0x0d
    46fe:	8b 2f       	mov	r24, r27
    4700:	99 27       	eor	r25, r25
    4702:	aa 27       	eor	r26, r26
    4704:	bb 27       	eor	r27, r27
    4706:	f8 01       	movw	r30, r16
    4708:	87 8f       	std	Z+31, r24	; 0x1f
    470a:	d7 01       	movw	r26, r14
    470c:	1e 96       	adiw	r26, 0x0e	; 14
    470e:	4d 91       	ld	r20, X+
    4710:	5d 91       	ld	r21, X+
    4712:	6d 91       	ld	r22, X+
    4714:	7c 91       	ld	r23, X
    4716:	51 97       	sbiw	r26, 0x11	; 17
    4718:	c8 01       	movw	r24, r16
    471a:	0e 94 d8 0e 	call	0x1db0	; 0x1db0 <st_clust>
    471e:	0e 94 d4 33 	call	0x67a8	; 0x67a8 <get_fattime>
    4722:	69 83       	std	Y+1, r22	; 0x01
    4724:	7a 83       	std	Y+2, r23	; 0x02
    4726:	8b 83       	std	Y+3, r24	; 0x03
    4728:	9c 83       	std	Y+4, r25	; 0x04
    472a:	89 81       	ldd	r24, Y+1	; 0x01
    472c:	9a 81       	ldd	r25, Y+2	; 0x02
    472e:	ab 81       	ldd	r26, Y+3	; 0x03
    4730:	bc 81       	ldd	r27, Y+4	; 0x04
    4732:	f8 01       	movw	r30, r16
    4734:	86 8b       	std	Z+22, r24	; 0x16
    4736:	89 81       	ldd	r24, Y+1	; 0x01
    4738:	9a 81       	ldd	r25, Y+2	; 0x02
    473a:	ab 81       	ldd	r26, Y+3	; 0x03
    473c:	bc 81       	ldd	r27, Y+4	; 0x04
    473e:	89 2f       	mov	r24, r25
    4740:	99 27       	eor	r25, r25
    4742:	87 8b       	std	Z+23, r24	; 0x17
    4744:	89 81       	ldd	r24, Y+1	; 0x01
    4746:	9a 81       	ldd	r25, Y+2	; 0x02
    4748:	ab 81       	ldd	r26, Y+3	; 0x03
    474a:	bc 81       	ldd	r27, Y+4	; 0x04
    474c:	cd 01       	movw	r24, r26
    474e:	aa 27       	eor	r26, r26
    4750:	bb 27       	eor	r27, r27
    4752:	80 8f       	std	Z+24, r24	; 0x18
    4754:	49 81       	ldd	r20, Y+1	; 0x01
    4756:	5a 81       	ldd	r21, Y+2	; 0x02
    4758:	6b 81       	ldd	r22, Y+3	; 0x03
    475a:	7c 81       	ldd	r23, Y+4	; 0x04
    475c:	47 2f       	mov	r20, r23
    475e:	55 27       	eor	r21, r21
    4760:	66 27       	eor	r22, r22
    4762:	77 27       	eor	r23, r23
    4764:	41 8f       	std	Z+25, r20	; 0x19
    4766:	12 8a       	std	Z+18, r1	; 0x12
    4768:	13 8a       	std	Z+19, r1	; 0x13
    476a:	d7 01       	movw	r26, r14
    476c:	14 96       	adiw	r26, 0x04	; 4
    476e:	8c 91       	ld	r24, X
    4770:	14 97       	sbiw	r26, 0x04	; 4
    4772:	8f 7d       	andi	r24, 0xDF	; 223
    4774:	14 96       	adiw	r26, 0x04	; 4
    4776:	8c 93       	st	X, r24
    4778:	14 97       	sbiw	r26, 0x04	; 4
    477a:	ed 91       	ld	r30, X+
    477c:	fc 91       	ld	r31, X
    477e:	11 97       	sbiw	r26, 0x01	; 1
    4780:	81 e0       	ldi	r24, 0x01	; 1
    4782:	84 83       	std	Z+4, r24	; 0x04
    4784:	8d 91       	ld	r24, X+
    4786:	9c 91       	ld	r25, X
    4788:	0e 94 77 14 	call	0x28ee	; 0x28ee <sync_fs>
    478c:	03 c0       	rjmp	.+6      	; 0x4794 <f_sync+0x160>
    478e:	80 e0       	ldi	r24, 0x00	; 0
    4790:	01 c0       	rjmp	.+2      	; 0x4794 <f_sync+0x160>
    4792:	81 e0       	ldi	r24, 0x01	; 1
    4794:	24 96       	adiw	r28, 0x04	; 4
    4796:	cd bf       	out	0x3d, r28	; 61
    4798:	de bf       	out	0x3e, r29	; 62
    479a:	df 91       	pop	r29
    479c:	cf 91       	pop	r28
    479e:	1f 91       	pop	r17
    47a0:	0f 91       	pop	r16
    47a2:	ff 90       	pop	r15
    47a4:	ef 90       	pop	r14
    47a6:	08 95       	ret

000047a8 <f_close>:
    47a8:	cf 93       	push	r28
    47aa:	df 93       	push	r29
    47ac:	ec 01       	movw	r28, r24
    47ae:	42 df       	rcall	.-380    	; 0x4634 <f_sync>
    47b0:	81 11       	cpse	r24, r1
    47b2:	07 c0       	rjmp	.+14     	; 0x47c2 <f_close+0x1a>
    47b4:	ce 01       	movw	r24, r28
    47b6:	0e 94 98 10 	call	0x2130	; 0x2130 <validate>
    47ba:	81 11       	cpse	r24, r1
    47bc:	02 c0       	rjmp	.+4      	; 0x47c2 <f_close+0x1a>
    47be:	18 82       	st	Y, r1
    47c0:	19 82       	std	Y+1, r1	; 0x01
    47c2:	df 91       	pop	r29
    47c4:	cf 91       	pop	r28
    47c6:	08 95       	ret

000047c8 <f_lseek>:
    47c8:	4f 92       	push	r4
    47ca:	5f 92       	push	r5
    47cc:	6f 92       	push	r6
    47ce:	7f 92       	push	r7
    47d0:	8f 92       	push	r8
    47d2:	9f 92       	push	r9
    47d4:	af 92       	push	r10
    47d6:	bf 92       	push	r11
    47d8:	cf 92       	push	r12
    47da:	df 92       	push	r13
    47dc:	ef 92       	push	r14
    47de:	ff 92       	push	r15
    47e0:	0f 93       	push	r16
    47e2:	1f 93       	push	r17
    47e4:	cf 93       	push	r28
    47e6:	df 93       	push	r29
    47e8:	cd b7       	in	r28, 0x3d	; 61
    47ea:	de b7       	in	r29, 0x3e	; 62
    47ec:	68 97       	sbiw	r28, 0x18	; 24
    47ee:	cd bf       	out	0x3d, r28	; 61
    47f0:	de bf       	out	0x3e, r29	; 62
    47f2:	7c 01       	movw	r14, r24
    47f4:	49 8b       	std	Y+17, r20	; 0x11
    47f6:	5a 8b       	std	Y+18, r21	; 0x12
    47f8:	6b 8b       	std	Y+19, r22	; 0x13
    47fa:	7c 8b       	std	Y+20, r23	; 0x14
    47fc:	0e 94 98 10 	call	0x2130	; 0x2130 <validate>
    4800:	81 11       	cpse	r24, r1
    4802:	71 c2       	rjmp	.+1250   	; 0x4ce6 <f_lseek+0x51e>
    4804:	d7 01       	movw	r26, r14
    4806:	15 96       	adiw	r26, 0x05	; 5
    4808:	8c 91       	ld	r24, X
    480a:	15 97       	sbiw	r26, 0x05	; 5
    480c:	88 23       	and	r24, r24
    480e:	19 f0       	breq	.+6      	; 0x4816 <f_lseek+0x4e>
    4810:	15 96       	adiw	r26, 0x05	; 5
    4812:	8c 91       	ld	r24, X
    4814:	68 c2       	rjmp	.+1232   	; 0x4ce6 <f_lseek+0x51e>
    4816:	f7 01       	movw	r30, r14
    4818:	42 85       	ldd	r20, Z+10	; 0x0a
    481a:	53 85       	ldd	r21, Z+11	; 0x0b
    481c:	64 85       	ldd	r22, Z+12	; 0x0c
    481e:	75 85       	ldd	r23, Z+13	; 0x0d
    4820:	89 89       	ldd	r24, Y+17	; 0x11
    4822:	9a 89       	ldd	r25, Y+18	; 0x12
    4824:	ab 89       	ldd	r26, Y+19	; 0x13
    4826:	bc 89       	ldd	r27, Y+20	; 0x14
    4828:	48 17       	cp	r20, r24
    482a:	59 07       	cpc	r21, r25
    482c:	6a 07       	cpc	r22, r26
    482e:	7b 07       	cpc	r23, r27
    4830:	58 f4       	brcc	.+22     	; 0x4848 <f_lseek+0x80>
    4832:	84 81       	ldd	r24, Z+4	; 0x04
    4834:	81 fd       	sbrc	r24, 1
    4836:	08 c0       	rjmp	.+16     	; 0x4848 <f_lseek+0x80>
    4838:	82 85       	ldd	r24, Z+10	; 0x0a
    483a:	93 85       	ldd	r25, Z+11	; 0x0b
    483c:	a4 85       	ldd	r26, Z+12	; 0x0c
    483e:	b5 85       	ldd	r27, Z+13	; 0x0d
    4840:	89 8b       	std	Y+17, r24	; 0x11
    4842:	9a 8b       	std	Y+18, r25	; 0x12
    4844:	ab 8b       	std	Y+19, r26	; 0x13
    4846:	bc 8b       	std	Y+20, r27	; 0x14
    4848:	f7 01       	movw	r30, r14
    484a:	86 81       	ldd	r24, Z+6	; 0x06
    484c:	97 81       	ldd	r25, Z+7	; 0x07
    484e:	a0 85       	ldd	r26, Z+8	; 0x08
    4850:	b1 85       	ldd	r27, Z+9	; 0x09
    4852:	89 83       	std	Y+1, r24	; 0x01
    4854:	9a 83       	std	Y+2, r25	; 0x02
    4856:	ab 83       	std	Y+3, r26	; 0x03
    4858:	bc 83       	std	Y+4, r27	; 0x04
    485a:	1d 82       	std	Y+5, r1	; 0x05
    485c:	1e 82       	std	Y+6, r1	; 0x06
    485e:	1f 82       	std	Y+7, r1	; 0x07
    4860:	18 86       	std	Y+8, r1	; 0x08
    4862:	16 82       	std	Z+6, r1	; 0x06
    4864:	17 82       	std	Z+7, r1	; 0x07
    4866:	10 86       	std	Z+8, r1	; 0x08
    4868:	11 86       	std	Z+9, r1	; 0x09
    486a:	89 89       	ldd	r24, Y+17	; 0x11
    486c:	9a 89       	ldd	r25, Y+18	; 0x12
    486e:	ab 89       	ldd	r26, Y+19	; 0x13
    4870:	bc 89       	ldd	r27, Y+20	; 0x14
    4872:	89 2b       	or	r24, r25
    4874:	8a 2b       	or	r24, r26
    4876:	8b 2b       	or	r24, r27
    4878:	09 f4       	brne	.+2      	; 0x487c <f_lseek+0xb4>
    487a:	bf c1       	rjmp	.+894    	; 0x4bfa <f_lseek+0x432>
    487c:	00 81       	ld	r16, Z
    487e:	11 81       	ldd	r17, Z+1	; 0x01
    4880:	d8 01       	movw	r26, r16
    4882:	12 96       	adiw	r26, 0x02	; 2
    4884:	8c 91       	ld	r24, X
    4886:	90 e0       	ldi	r25, 0x00	; 0
    4888:	a0 e0       	ldi	r26, 0x00	; 0
    488a:	b0 e0       	ldi	r27, 0x00	; 0
    488c:	07 2e       	mov	r0, r23
    488e:	79 e0       	ldi	r23, 0x09	; 9
    4890:	88 0f       	add	r24, r24
    4892:	99 1f       	adc	r25, r25
    4894:	aa 1f       	adc	r26, r26
    4896:	bb 1f       	adc	r27, r27
    4898:	7a 95       	dec	r23
    489a:	d1 f7       	brne	.-12     	; 0x4890 <f_lseek+0xc8>
    489c:	70 2d       	mov	r23, r0
    489e:	89 87       	std	Y+9, r24	; 0x09
    48a0:	9a 87       	std	Y+10, r25	; 0x0a
    48a2:	ab 87       	std	Y+11, r26	; 0x0b
    48a4:	bc 87       	std	Y+12, r27	; 0x0c
    48a6:	49 81       	ldd	r20, Y+1	; 0x01
    48a8:	5a 81       	ldd	r21, Y+2	; 0x02
    48aa:	6b 81       	ldd	r22, Y+3	; 0x03
    48ac:	7c 81       	ldd	r23, Y+4	; 0x04
    48ae:	45 2b       	or	r20, r21
    48b0:	46 2b       	or	r20, r22
    48b2:	47 2b       	or	r20, r23
    48b4:	09 f4       	brne	.+2      	; 0x48b8 <f_lseek+0xf0>
    48b6:	63 c0       	rjmp	.+198    	; 0x497e <f_lseek+0x1b6>
    48b8:	89 89       	ldd	r24, Y+17	; 0x11
    48ba:	9a 89       	ldd	r25, Y+18	; 0x12
    48bc:	ab 89       	ldd	r26, Y+19	; 0x13
    48be:	bc 89       	ldd	r27, Y+20	; 0x14
    48c0:	29 85       	ldd	r18, Y+9	; 0x09
    48c2:	3a 85       	ldd	r19, Y+10	; 0x0a
    48c4:	4b 85       	ldd	r20, Y+11	; 0x0b
    48c6:	5c 85       	ldd	r21, Y+12	; 0x0c
    48c8:	a9 80       	ldd	r10, Y+1	; 0x01
    48ca:	ba 80       	ldd	r11, Y+2	; 0x02
    48cc:	cb 80       	ldd	r12, Y+3	; 0x03
    48ce:	dc 80       	ldd	r13, Y+4	; 0x04
    48d0:	ad 8a       	std	Y+21, r10	; 0x15
    48d2:	be 8a       	std	Y+22, r11	; 0x16
    48d4:	cf 8a       	std	Y+23, r12	; 0x17
    48d6:	d8 8e       	std	Y+24, r13	; 0x18
    48d8:	49 84       	ldd	r4, Y+9	; 0x09
    48da:	5a 84       	ldd	r5, Y+10	; 0x0a
    48dc:	6b 84       	ldd	r6, Y+11	; 0x0b
    48de:	7c 84       	ldd	r7, Y+12	; 0x0c
    48e0:	bc 01       	movw	r22, r24
    48e2:	cd 01       	movw	r24, r26
    48e4:	61 50       	subi	r22, 0x01	; 1
    48e6:	71 09       	sbc	r23, r1
    48e8:	81 09       	sbc	r24, r1
    48ea:	91 09       	sbc	r25, r1
    48ec:	0e 94 90 3c 	call	0x7920	; 0x7920 <__udivmodsi4>
    48f0:	49 01       	movw	r8, r18
    48f2:	5a 01       	movw	r10, r20
    48f4:	6d 89       	ldd	r22, Y+21	; 0x15
    48f6:	7e 89       	ldd	r23, Y+22	; 0x16
    48f8:	8f 89       	ldd	r24, Y+23	; 0x17
    48fa:	98 8d       	ldd	r25, Y+24	; 0x18
    48fc:	61 50       	subi	r22, 0x01	; 1
    48fe:	71 09       	sbc	r23, r1
    4900:	81 09       	sbc	r24, r1
    4902:	91 09       	sbc	r25, r1
    4904:	a3 01       	movw	r20, r6
    4906:	92 01       	movw	r18, r4
    4908:	0e 94 90 3c 	call	0x7920	; 0x7920 <__udivmodsi4>
    490c:	82 16       	cp	r8, r18
    490e:	93 06       	cpc	r9, r19
    4910:	a4 06       	cpc	r10, r20
    4912:	b5 06       	cpc	r11, r21
    4914:	a0 f1       	brcs	.+104    	; 0x497e <f_lseek+0x1b6>
    4916:	89 81       	ldd	r24, Y+1	; 0x01
    4918:	9a 81       	ldd	r25, Y+2	; 0x02
    491a:	ab 81       	ldd	r26, Y+3	; 0x03
    491c:	bc 81       	ldd	r27, Y+4	; 0x04
    491e:	49 85       	ldd	r20, Y+9	; 0x09
    4920:	5a 85       	ldd	r21, Y+10	; 0x0a
    4922:	6b 85       	ldd	r22, Y+11	; 0x0b
    4924:	7c 85       	ldd	r23, Y+12	; 0x0c
    4926:	70 95       	com	r23
    4928:	60 95       	com	r22
    492a:	50 95       	com	r21
    492c:	41 95       	neg	r20
    492e:	5f 4f       	sbci	r21, 0xFF	; 255
    4930:	6f 4f       	sbci	r22, 0xFF	; 255
    4932:	7f 4f       	sbci	r23, 0xFF	; 255
    4934:	01 97       	sbiw	r24, 0x01	; 1
    4936:	a1 09       	sbc	r26, r1
    4938:	b1 09       	sbc	r27, r1
    493a:	84 23       	and	r24, r20
    493c:	95 23       	and	r25, r21
    493e:	a6 23       	and	r26, r22
    4940:	b7 23       	and	r27, r23
    4942:	f7 01       	movw	r30, r14
    4944:	86 83       	std	Z+6, r24	; 0x06
    4946:	97 83       	std	Z+7, r25	; 0x07
    4948:	a0 87       	std	Z+8, r26	; 0x08
    494a:	b1 87       	std	Z+9, r27	; 0x09
    494c:	89 89       	ldd	r24, Y+17	; 0x11
    494e:	9a 89       	ldd	r25, Y+18	; 0x12
    4950:	ab 89       	ldd	r26, Y+19	; 0x13
    4952:	bc 89       	ldd	r27, Y+20	; 0x14
    4954:	46 81       	ldd	r20, Z+6	; 0x06
    4956:	57 81       	ldd	r21, Z+7	; 0x07
    4958:	60 85       	ldd	r22, Z+8	; 0x08
    495a:	71 85       	ldd	r23, Z+9	; 0x09
    495c:	84 1b       	sub	r24, r20
    495e:	95 0b       	sbc	r25, r21
    4960:	a6 0b       	sbc	r26, r22
    4962:	b7 0b       	sbc	r27, r23
    4964:	89 8b       	std	Y+17, r24	; 0x11
    4966:	9a 8b       	std	Y+18, r25	; 0x12
    4968:	ab 8b       	std	Y+19, r26	; 0x13
    496a:	bc 8b       	std	Y+20, r27	; 0x14
    496c:	82 89       	ldd	r24, Z+18	; 0x12
    496e:	93 89       	ldd	r25, Z+19	; 0x13
    4970:	a4 89       	ldd	r26, Z+20	; 0x14
    4972:	b5 89       	ldd	r27, Z+21	; 0x15
    4974:	8d 87       	std	Y+13, r24	; 0x0d
    4976:	9e 87       	std	Y+14, r25	; 0x0e
    4978:	af 87       	std	Y+15, r26	; 0x0f
    497a:	b8 8b       	std	Y+16, r27	; 0x10
    497c:	48 c0       	rjmp	.+144    	; 0x4a0e <f_lseek+0x246>
    497e:	f7 01       	movw	r30, r14
    4980:	86 85       	ldd	r24, Z+14	; 0x0e
    4982:	97 85       	ldd	r25, Z+15	; 0x0f
    4984:	a0 89       	ldd	r26, Z+16	; 0x10
    4986:	b1 89       	ldd	r27, Z+17	; 0x11
    4988:	8d 87       	std	Y+13, r24	; 0x0d
    498a:	9e 87       	std	Y+14, r25	; 0x0e
    498c:	af 87       	std	Y+15, r26	; 0x0f
    498e:	b8 8b       	std	Y+16, r27	; 0x10
    4990:	8d 85       	ldd	r24, Y+13	; 0x0d
    4992:	9e 85       	ldd	r25, Y+14	; 0x0e
    4994:	af 85       	ldd	r26, Y+15	; 0x0f
    4996:	b8 89       	ldd	r27, Y+16	; 0x10
    4998:	89 2b       	or	r24, r25
    499a:	8a 2b       	or	r24, r26
    499c:	8b 2b       	or	r24, r27
    499e:	71 f5       	brne	.+92     	; 0x49fc <f_lseek+0x234>
    49a0:	40 e0       	ldi	r20, 0x00	; 0
    49a2:	50 e0       	ldi	r21, 0x00	; 0
    49a4:	ba 01       	movw	r22, r20
    49a6:	c8 01       	movw	r24, r16
    49a8:	0e 94 20 19 	call	0x3240	; 0x3240 <create_chain>
    49ac:	6d 87       	std	Y+13, r22	; 0x0d
    49ae:	7e 87       	std	Y+14, r23	; 0x0e
    49b0:	8f 87       	std	Y+15, r24	; 0x0f
    49b2:	98 8b       	std	Y+16, r25	; 0x10
    49b4:	8d 85       	ldd	r24, Y+13	; 0x0d
    49b6:	9e 85       	ldd	r25, Y+14	; 0x0e
    49b8:	af 85       	ldd	r26, Y+15	; 0x0f
    49ba:	b8 89       	ldd	r27, Y+16	; 0x10
    49bc:	01 97       	sbiw	r24, 0x01	; 1
    49be:	a1 05       	cpc	r26, r1
    49c0:	b1 05       	cpc	r27, r1
    49c2:	29 f4       	brne	.+10     	; 0x49ce <f_lseek+0x206>
    49c4:	82 e0       	ldi	r24, 0x02	; 2
    49c6:	d7 01       	movw	r26, r14
    49c8:	15 96       	adiw	r26, 0x05	; 5
    49ca:	8c 93       	st	X, r24
    49cc:	8c c1       	rjmp	.+792    	; 0x4ce6 <f_lseek+0x51e>
    49ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    49d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    49d2:	af 85       	ldd	r26, Y+15	; 0x0f
    49d4:	b8 89       	ldd	r27, Y+16	; 0x10
    49d6:	8f 3f       	cpi	r24, 0xFF	; 255
    49d8:	9f 4f       	sbci	r25, 0xFF	; 255
    49da:	af 4f       	sbci	r26, 0xFF	; 255
    49dc:	bf 4f       	sbci	r27, 0xFF	; 255
    49de:	29 f4       	brne	.+10     	; 0x49ea <f_lseek+0x222>
    49e0:	81 e0       	ldi	r24, 0x01	; 1
    49e2:	d7 01       	movw	r26, r14
    49e4:	15 96       	adiw	r26, 0x05	; 5
    49e6:	8c 93       	st	X, r24
    49e8:	7e c1       	rjmp	.+764    	; 0x4ce6 <f_lseek+0x51e>
    49ea:	8d 85       	ldd	r24, Y+13	; 0x0d
    49ec:	9e 85       	ldd	r25, Y+14	; 0x0e
    49ee:	af 85       	ldd	r26, Y+15	; 0x0f
    49f0:	b8 89       	ldd	r27, Y+16	; 0x10
    49f2:	f7 01       	movw	r30, r14
    49f4:	86 87       	std	Z+14, r24	; 0x0e
    49f6:	97 87       	std	Z+15, r25	; 0x0f
    49f8:	a0 8b       	std	Z+16, r26	; 0x10
    49fa:	b1 8b       	std	Z+17, r27	; 0x11
    49fc:	8d 85       	ldd	r24, Y+13	; 0x0d
    49fe:	9e 85       	ldd	r25, Y+14	; 0x0e
    4a00:	af 85       	ldd	r26, Y+15	; 0x0f
    4a02:	b8 89       	ldd	r27, Y+16	; 0x10
    4a04:	f7 01       	movw	r30, r14
    4a06:	82 8b       	std	Z+18, r24	; 0x12
    4a08:	93 8b       	std	Z+19, r25	; 0x13
    4a0a:	a4 8b       	std	Z+20, r26	; 0x14
    4a0c:	b5 8b       	std	Z+21, r27	; 0x15
    4a0e:	8d 85       	ldd	r24, Y+13	; 0x0d
    4a10:	9e 85       	ldd	r25, Y+14	; 0x0e
    4a12:	af 85       	ldd	r26, Y+15	; 0x0f
    4a14:	b8 89       	ldd	r27, Y+16	; 0x10
    4a16:	89 2b       	or	r24, r25
    4a18:	8a 2b       	or	r24, r26
    4a1a:	8b 2b       	or	r24, r27
    4a1c:	09 f4       	brne	.+2      	; 0x4a20 <f_lseek+0x258>
    4a1e:	ed c0       	rjmp	.+474    	; 0x4bfa <f_lseek+0x432>
    4a20:	49 89       	ldd	r20, Y+17	; 0x11
    4a22:	5a 89       	ldd	r21, Y+18	; 0x12
    4a24:	6b 89       	ldd	r22, Y+19	; 0x13
    4a26:	7c 89       	ldd	r23, Y+20	; 0x14
    4a28:	89 85       	ldd	r24, Y+9	; 0x09
    4a2a:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a2c:	ab 85       	ldd	r26, Y+11	; 0x0b
    4a2e:	bc 85       	ldd	r27, Y+12	; 0x0c
    4a30:	84 17       	cp	r24, r20
    4a32:	95 07       	cpc	r25, r21
    4a34:	a6 07       	cpc	r26, r22
    4a36:	b7 07       	cpc	r27, r23
    4a38:	08 f0       	brcs	.+2      	; 0x4a3c <f_lseek+0x274>
    4a3a:	91 c0       	rjmp	.+290    	; 0x4b5e <f_lseek+0x396>
    4a3c:	d7 01       	movw	r26, r14
    4a3e:	14 96       	adiw	r26, 0x04	; 4
    4a40:	8c 91       	ld	r24, X
    4a42:	14 97       	sbiw	r26, 0x04	; 4
    4a44:	81 ff       	sbrs	r24, 1
    4a46:	1d c0       	rjmp	.+58     	; 0x4a82 <f_lseek+0x2ba>
    4a48:	4d 85       	ldd	r20, Y+13	; 0x0d
    4a4a:	5e 85       	ldd	r21, Y+14	; 0x0e
    4a4c:	6f 85       	ldd	r22, Y+15	; 0x0f
    4a4e:	78 89       	ldd	r23, Y+16	; 0x10
    4a50:	8d 91       	ld	r24, X+
    4a52:	9c 91       	ld	r25, X
    4a54:	0e 94 20 19 	call	0x3240	; 0x3240 <create_chain>
    4a58:	6d 87       	std	Y+13, r22	; 0x0d
    4a5a:	7e 87       	std	Y+14, r23	; 0x0e
    4a5c:	8f 87       	std	Y+15, r24	; 0x0f
    4a5e:	98 8b       	std	Y+16, r25	; 0x10
    4a60:	8d 85       	ldd	r24, Y+13	; 0x0d
    4a62:	9e 85       	ldd	r25, Y+14	; 0x0e
    4a64:	af 85       	ldd	r26, Y+15	; 0x0f
    4a66:	b8 89       	ldd	r27, Y+16	; 0x10
    4a68:	89 2b       	or	r24, r25
    4a6a:	8a 2b       	or	r24, r26
    4a6c:	8b 2b       	or	r24, r27
    4a6e:	b1 f4       	brne	.+44     	; 0x4a9c <f_lseek+0x2d4>
    4a70:	89 85       	ldd	r24, Y+9	; 0x09
    4a72:	9a 85       	ldd	r25, Y+10	; 0x0a
    4a74:	ab 85       	ldd	r26, Y+11	; 0x0b
    4a76:	bc 85       	ldd	r27, Y+12	; 0x0c
    4a78:	89 8b       	std	Y+17, r24	; 0x11
    4a7a:	9a 8b       	std	Y+18, r25	; 0x12
    4a7c:	ab 8b       	std	Y+19, r26	; 0x13
    4a7e:	bc 8b       	std	Y+20, r27	; 0x14
    4a80:	6e c0       	rjmp	.+220    	; 0x4b5e <f_lseek+0x396>
    4a82:	4d 85       	ldd	r20, Y+13	; 0x0d
    4a84:	5e 85       	ldd	r21, Y+14	; 0x0e
    4a86:	6f 85       	ldd	r22, Y+15	; 0x0f
    4a88:	78 89       	ldd	r23, Y+16	; 0x10
    4a8a:	f7 01       	movw	r30, r14
    4a8c:	80 81       	ld	r24, Z
    4a8e:	91 81       	ldd	r25, Z+1	; 0x01
    4a90:	0e 94 64 15 	call	0x2ac8	; 0x2ac8 <get_fat>
    4a94:	6d 87       	std	Y+13, r22	; 0x0d
    4a96:	7e 87       	std	Y+14, r23	; 0x0e
    4a98:	8f 87       	std	Y+15, r24	; 0x0f
    4a9a:	98 8b       	std	Y+16, r25	; 0x10
    4a9c:	4d 85       	ldd	r20, Y+13	; 0x0d
    4a9e:	5e 85       	ldd	r21, Y+14	; 0x0e
    4aa0:	6f 85       	ldd	r22, Y+15	; 0x0f
    4aa2:	78 89       	ldd	r23, Y+16	; 0x10
    4aa4:	4f 3f       	cpi	r20, 0xFF	; 255
    4aa6:	5f 4f       	sbci	r21, 0xFF	; 255
    4aa8:	6f 4f       	sbci	r22, 0xFF	; 255
    4aaa:	7f 4f       	sbci	r23, 0xFF	; 255
    4aac:	29 f4       	brne	.+10     	; 0x4ab8 <f_lseek+0x2f0>
    4aae:	81 e0       	ldi	r24, 0x01	; 1
    4ab0:	d7 01       	movw	r26, r14
    4ab2:	15 96       	adiw	r26, 0x05	; 5
    4ab4:	8c 93       	st	X, r24
    4ab6:	17 c1       	rjmp	.+558    	; 0x4ce6 <f_lseek+0x51e>
    4ab8:	8d 85       	ldd	r24, Y+13	; 0x0d
    4aba:	9e 85       	ldd	r25, Y+14	; 0x0e
    4abc:	af 85       	ldd	r26, Y+15	; 0x0f
    4abe:	b8 89       	ldd	r27, Y+16	; 0x10
    4ac0:	02 97       	sbiw	r24, 0x02	; 2
    4ac2:	a1 05       	cpc	r26, r1
    4ac4:	b1 05       	cpc	r27, r1
    4ac6:	80 f0       	brcs	.+32     	; 0x4ae8 <f_lseek+0x320>
    4ac8:	d7 01       	movw	r26, r14
    4aca:	ed 91       	ld	r30, X+
    4acc:	fc 91       	ld	r31, X
    4ace:	42 89       	ldd	r20, Z+18	; 0x12
    4ad0:	53 89       	ldd	r21, Z+19	; 0x13
    4ad2:	64 89       	ldd	r22, Z+20	; 0x14
    4ad4:	75 89       	ldd	r23, Z+21	; 0x15
    4ad6:	8d 85       	ldd	r24, Y+13	; 0x0d
    4ad8:	9e 85       	ldd	r25, Y+14	; 0x0e
    4ada:	af 85       	ldd	r26, Y+15	; 0x0f
    4adc:	b8 89       	ldd	r27, Y+16	; 0x10
    4ade:	84 17       	cp	r24, r20
    4ae0:	95 07       	cpc	r25, r21
    4ae2:	a6 07       	cpc	r26, r22
    4ae4:	b7 07       	cpc	r27, r23
    4ae6:	20 f0       	brcs	.+8      	; 0x4af0 <f_lseek+0x328>
    4ae8:	82 e0       	ldi	r24, 0x02	; 2
    4aea:	f7 01       	movw	r30, r14
    4aec:	85 83       	std	Z+5, r24	; 0x05
    4aee:	fb c0       	rjmp	.+502    	; 0x4ce6 <f_lseek+0x51e>
    4af0:	8d 85       	ldd	r24, Y+13	; 0x0d
    4af2:	9e 85       	ldd	r25, Y+14	; 0x0e
    4af4:	af 85       	ldd	r26, Y+15	; 0x0f
    4af6:	b8 89       	ldd	r27, Y+16	; 0x10
    4af8:	f7 01       	movw	r30, r14
    4afa:	82 8b       	std	Z+18, r24	; 0x12
    4afc:	93 8b       	std	Z+19, r25	; 0x13
    4afe:	a4 8b       	std	Z+20, r26	; 0x14
    4b00:	b5 8b       	std	Z+21, r27	; 0x15
    4b02:	86 81       	ldd	r24, Z+6	; 0x06
    4b04:	97 81       	ldd	r25, Z+7	; 0x07
    4b06:	a0 85       	ldd	r26, Z+8	; 0x08
    4b08:	b1 85       	ldd	r27, Z+9	; 0x09
    4b0a:	49 85       	ldd	r20, Y+9	; 0x09
    4b0c:	5a 85       	ldd	r21, Y+10	; 0x0a
    4b0e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4b10:	7c 85       	ldd	r23, Y+12	; 0x0c
    4b12:	84 0f       	add	r24, r20
    4b14:	95 1f       	adc	r25, r21
    4b16:	a6 1f       	adc	r26, r22
    4b18:	b7 1f       	adc	r27, r23
    4b1a:	86 83       	std	Z+6, r24	; 0x06
    4b1c:	97 83       	std	Z+7, r25	; 0x07
    4b1e:	a0 87       	std	Z+8, r26	; 0x08
    4b20:	b1 87       	std	Z+9, r27	; 0x09
    4b22:	89 89       	ldd	r24, Y+17	; 0x11
    4b24:	9a 89       	ldd	r25, Y+18	; 0x12
    4b26:	ab 89       	ldd	r26, Y+19	; 0x13
    4b28:	bc 89       	ldd	r27, Y+20	; 0x14
    4b2a:	49 85       	ldd	r20, Y+9	; 0x09
    4b2c:	5a 85       	ldd	r21, Y+10	; 0x0a
    4b2e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4b30:	7c 85       	ldd	r23, Y+12	; 0x0c
    4b32:	84 1b       	sub	r24, r20
    4b34:	95 0b       	sbc	r25, r21
    4b36:	a6 0b       	sbc	r26, r22
    4b38:	b7 0b       	sbc	r27, r23
    4b3a:	89 8b       	std	Y+17, r24	; 0x11
    4b3c:	9a 8b       	std	Y+18, r25	; 0x12
    4b3e:	ab 8b       	std	Y+19, r26	; 0x13
    4b40:	bc 8b       	std	Y+20, r27	; 0x14
    4b42:	49 89       	ldd	r20, Y+17	; 0x11
    4b44:	5a 89       	ldd	r21, Y+18	; 0x12
    4b46:	6b 89       	ldd	r22, Y+19	; 0x13
    4b48:	7c 89       	ldd	r23, Y+20	; 0x14
    4b4a:	89 85       	ldd	r24, Y+9	; 0x09
    4b4c:	9a 85       	ldd	r25, Y+10	; 0x0a
    4b4e:	ab 85       	ldd	r26, Y+11	; 0x0b
    4b50:	bc 85       	ldd	r27, Y+12	; 0x0c
    4b52:	84 17       	cp	r24, r20
    4b54:	95 07       	cpc	r25, r21
    4b56:	a6 07       	cpc	r26, r22
    4b58:	b7 07       	cpc	r27, r23
    4b5a:	08 f4       	brcc	.+2      	; 0x4b5e <f_lseek+0x396>
    4b5c:	6f cf       	rjmp	.-290    	; 0x4a3c <f_lseek+0x274>
    4b5e:	f7 01       	movw	r30, r14
    4b60:	86 81       	ldd	r24, Z+6	; 0x06
    4b62:	97 81       	ldd	r25, Z+7	; 0x07
    4b64:	a0 85       	ldd	r26, Z+8	; 0x08
    4b66:	b1 85       	ldd	r27, Z+9	; 0x09
    4b68:	49 89       	ldd	r20, Y+17	; 0x11
    4b6a:	5a 89       	ldd	r21, Y+18	; 0x12
    4b6c:	6b 89       	ldd	r22, Y+19	; 0x13
    4b6e:	7c 89       	ldd	r23, Y+20	; 0x14
    4b70:	84 0f       	add	r24, r20
    4b72:	95 1f       	adc	r25, r21
    4b74:	a6 1f       	adc	r26, r22
    4b76:	b7 1f       	adc	r27, r23
    4b78:	86 83       	std	Z+6, r24	; 0x06
    4b7a:	97 83       	std	Z+7, r25	; 0x07
    4b7c:	a0 87       	std	Z+8, r26	; 0x08
    4b7e:	b1 87       	std	Z+9, r27	; 0x09
    4b80:	89 89       	ldd	r24, Y+17	; 0x11
    4b82:	9a 89       	ldd	r25, Y+18	; 0x12
    4b84:	ab 89       	ldd	r26, Y+19	; 0x13
    4b86:	bc 89       	ldd	r27, Y+20	; 0x14
    4b88:	91 70       	andi	r25, 0x01	; 1
    4b8a:	aa 27       	eor	r26, r26
    4b8c:	bb 27       	eor	r27, r27
    4b8e:	89 2b       	or	r24, r25
    4b90:	8a 2b       	or	r24, r26
    4b92:	8b 2b       	or	r24, r27
    4b94:	91 f1       	breq	.+100    	; 0x4bfa <f_lseek+0x432>
    4b96:	4d 85       	ldd	r20, Y+13	; 0x0d
    4b98:	5e 85       	ldd	r21, Y+14	; 0x0e
    4b9a:	6f 85       	ldd	r22, Y+15	; 0x0f
    4b9c:	78 89       	ldd	r23, Y+16	; 0x10
    4b9e:	80 81       	ld	r24, Z
    4ba0:	91 81       	ldd	r25, Z+1	; 0x01
    4ba2:	0e 94 16 15 	call	0x2a2c	; 0x2a2c <clust2sect>
    4ba6:	6d 83       	std	Y+5, r22	; 0x05
    4ba8:	7e 83       	std	Y+6, r23	; 0x06
    4baa:	8f 83       	std	Y+7, r24	; 0x07
    4bac:	98 87       	std	Y+8, r25	; 0x08
    4bae:	8d 81       	ldd	r24, Y+5	; 0x05
    4bb0:	9e 81       	ldd	r25, Y+6	; 0x06
    4bb2:	af 81       	ldd	r26, Y+7	; 0x07
    4bb4:	b8 85       	ldd	r27, Y+8	; 0x08
    4bb6:	89 2b       	or	r24, r25
    4bb8:	8a 2b       	or	r24, r26
    4bba:	8b 2b       	or	r24, r27
    4bbc:	29 f4       	brne	.+10     	; 0x4bc8 <f_lseek+0x400>
    4bbe:	82 e0       	ldi	r24, 0x02	; 2
    4bc0:	d7 01       	movw	r26, r14
    4bc2:	15 96       	adiw	r26, 0x05	; 5
    4bc4:	8c 93       	st	X, r24
    4bc6:	8f c0       	rjmp	.+286    	; 0x4ce6 <f_lseek+0x51e>
    4bc8:	89 89       	ldd	r24, Y+17	; 0x11
    4bca:	9a 89       	ldd	r25, Y+18	; 0x12
    4bcc:	ab 89       	ldd	r26, Y+19	; 0x13
    4bce:	bc 89       	ldd	r27, Y+20	; 0x14
    4bd0:	4d 81       	ldd	r20, Y+5	; 0x05
    4bd2:	5e 81       	ldd	r21, Y+6	; 0x06
    4bd4:	6f 81       	ldd	r22, Y+7	; 0x07
    4bd6:	78 85       	ldd	r23, Y+8	; 0x08
    4bd8:	07 2e       	mov	r0, r23
    4bda:	79 e0       	ldi	r23, 0x09	; 9
    4bdc:	b6 95       	lsr	r27
    4bde:	a7 95       	ror	r26
    4be0:	97 95       	ror	r25
    4be2:	87 95       	ror	r24
    4be4:	7a 95       	dec	r23
    4be6:	d1 f7       	brne	.-12     	; 0x4bdc <f_lseek+0x414>
    4be8:	70 2d       	mov	r23, r0
    4bea:	84 0f       	add	r24, r20
    4bec:	95 1f       	adc	r25, r21
    4bee:	a6 1f       	adc	r26, r22
    4bf0:	b7 1f       	adc	r27, r23
    4bf2:	8d 83       	std	Y+5, r24	; 0x05
    4bf4:	9e 83       	std	Y+6, r25	; 0x06
    4bf6:	af 83       	std	Y+7, r26	; 0x07
    4bf8:	b8 87       	std	Y+8, r27	; 0x08
    4bfa:	f7 01       	movw	r30, r14
    4bfc:	86 81       	ldd	r24, Z+6	; 0x06
    4bfe:	97 81       	ldd	r25, Z+7	; 0x07
    4c00:	a0 85       	ldd	r26, Z+8	; 0x08
    4c02:	b1 85       	ldd	r27, Z+9	; 0x09
    4c04:	91 70       	andi	r25, 0x01	; 1
    4c06:	aa 27       	eor	r26, r26
    4c08:	bb 27       	eor	r27, r27
    4c0a:	89 2b       	or	r24, r25
    4c0c:	8a 2b       	or	r24, r26
    4c0e:	8b 2b       	or	r24, r27
    4c10:	09 f4       	brne	.+2      	; 0x4c14 <f_lseek+0x44c>
    4c12:	48 c0       	rjmp	.+144    	; 0x4ca4 <f_lseek+0x4dc>
    4c14:	46 89       	ldd	r20, Z+22	; 0x16
    4c16:	57 89       	ldd	r21, Z+23	; 0x17
    4c18:	60 8d       	ldd	r22, Z+24	; 0x18
    4c1a:	71 8d       	ldd	r23, Z+25	; 0x19
    4c1c:	8d 81       	ldd	r24, Y+5	; 0x05
    4c1e:	9e 81       	ldd	r25, Y+6	; 0x06
    4c20:	af 81       	ldd	r26, Y+7	; 0x07
    4c22:	b8 85       	ldd	r27, Y+8	; 0x08
    4c24:	48 17       	cp	r20, r24
    4c26:	59 07       	cpc	r21, r25
    4c28:	6a 07       	cpc	r22, r26
    4c2a:	7b 07       	cpc	r23, r27
    4c2c:	d9 f1       	breq	.+118    	; 0x4ca4 <f_lseek+0x4dc>
    4c2e:	84 81       	ldd	r24, Z+4	; 0x04
    4c30:	86 ff       	sbrs	r24, 6
    4c32:	1a c0       	rjmp	.+52     	; 0x4c68 <f_lseek+0x4a0>
    4c34:	26 89       	ldd	r18, Z+22	; 0x16
    4c36:	37 89       	ldd	r19, Z+23	; 0x17
    4c38:	40 8d       	ldd	r20, Z+24	; 0x18
    4c3a:	51 8d       	ldd	r21, Z+25	; 0x19
    4c3c:	01 90       	ld	r0, Z+
    4c3e:	f0 81       	ld	r31, Z
    4c40:	e0 2d       	mov	r30, r0
    4c42:	81 81       	ldd	r24, Z+1	; 0x01
    4c44:	01 e0       	ldi	r16, 0x01	; 1
    4c46:	10 e0       	ldi	r17, 0x00	; 0
    4c48:	b7 01       	movw	r22, r14
    4c4a:	60 5e       	subi	r22, 0xE0	; 224
    4c4c:	7f 4f       	sbci	r23, 0xFF	; 255
    4c4e:	0e 94 b3 37 	call	0x6f66	; 0x6f66 <disk_write>
    4c52:	88 23       	and	r24, r24
    4c54:	29 f0       	breq	.+10     	; 0x4c60 <f_lseek+0x498>
    4c56:	81 e0       	ldi	r24, 0x01	; 1
    4c58:	d7 01       	movw	r26, r14
    4c5a:	15 96       	adiw	r26, 0x05	; 5
    4c5c:	8c 93       	st	X, r24
    4c5e:	43 c0       	rjmp	.+134    	; 0x4ce6 <f_lseek+0x51e>
    4c60:	f7 01       	movw	r30, r14
    4c62:	84 81       	ldd	r24, Z+4	; 0x04
    4c64:	8f 7b       	andi	r24, 0xBF	; 191
    4c66:	84 83       	std	Z+4, r24	; 0x04
    4c68:	2d 81       	ldd	r18, Y+5	; 0x05
    4c6a:	3e 81       	ldd	r19, Y+6	; 0x06
    4c6c:	4f 81       	ldd	r20, Y+7	; 0x07
    4c6e:	58 85       	ldd	r21, Y+8	; 0x08
    4c70:	d7 01       	movw	r26, r14
    4c72:	ed 91       	ld	r30, X+
    4c74:	fc 91       	ld	r31, X
    4c76:	81 81       	ldd	r24, Z+1	; 0x01
    4c78:	01 e0       	ldi	r16, 0x01	; 1
    4c7a:	10 e0       	ldi	r17, 0x00	; 0
    4c7c:	b7 01       	movw	r22, r14
    4c7e:	60 5e       	subi	r22, 0xE0	; 224
    4c80:	7f 4f       	sbci	r23, 0xFF	; 255
    4c82:	0e 94 f6 36 	call	0x6dec	; 0x6dec <disk_read>
    4c86:	88 23       	and	r24, r24
    4c88:	21 f0       	breq	.+8      	; 0x4c92 <f_lseek+0x4ca>
    4c8a:	81 e0       	ldi	r24, 0x01	; 1
    4c8c:	f7 01       	movw	r30, r14
    4c8e:	85 83       	std	Z+5, r24	; 0x05
    4c90:	2a c0       	rjmp	.+84     	; 0x4ce6 <f_lseek+0x51e>
    4c92:	8d 81       	ldd	r24, Y+5	; 0x05
    4c94:	9e 81       	ldd	r25, Y+6	; 0x06
    4c96:	af 81       	ldd	r26, Y+7	; 0x07
    4c98:	b8 85       	ldd	r27, Y+8	; 0x08
    4c9a:	f7 01       	movw	r30, r14
    4c9c:	86 8b       	std	Z+22, r24	; 0x16
    4c9e:	97 8b       	std	Z+23, r25	; 0x17
    4ca0:	a0 8f       	std	Z+24, r26	; 0x18
    4ca2:	b1 8f       	std	Z+25, r27	; 0x19
    4ca4:	d7 01       	movw	r26, r14
    4ca6:	16 96       	adiw	r26, 0x06	; 6
    4ca8:	4d 91       	ld	r20, X+
    4caa:	5d 91       	ld	r21, X+
    4cac:	6d 91       	ld	r22, X+
    4cae:	7c 91       	ld	r23, X
    4cb0:	19 97       	sbiw	r26, 0x09	; 9
    4cb2:	1a 96       	adiw	r26, 0x0a	; 10
    4cb4:	8d 91       	ld	r24, X+
    4cb6:	9d 91       	ld	r25, X+
    4cb8:	0d 90       	ld	r0, X+
    4cba:	bc 91       	ld	r27, X
    4cbc:	a0 2d       	mov	r26, r0
    4cbe:	84 17       	cp	r24, r20
    4cc0:	95 07       	cpc	r25, r21
    4cc2:	a6 07       	cpc	r26, r22
    4cc4:	b7 07       	cpc	r27, r23
    4cc6:	70 f4       	brcc	.+28     	; 0x4ce4 <f_lseek+0x51c>
    4cc8:	f7 01       	movw	r30, r14
    4cca:	86 81       	ldd	r24, Z+6	; 0x06
    4ccc:	97 81       	ldd	r25, Z+7	; 0x07
    4cce:	a0 85       	ldd	r26, Z+8	; 0x08
    4cd0:	b1 85       	ldd	r27, Z+9	; 0x09
    4cd2:	82 87       	std	Z+10, r24	; 0x0a
    4cd4:	93 87       	std	Z+11, r25	; 0x0b
    4cd6:	a4 87       	std	Z+12, r26	; 0x0c
    4cd8:	b5 87       	std	Z+13, r27	; 0x0d
    4cda:	84 81       	ldd	r24, Z+4	; 0x04
    4cdc:	80 62       	ori	r24, 0x20	; 32
    4cde:	84 83       	std	Z+4, r24	; 0x04
    4ce0:	80 e0       	ldi	r24, 0x00	; 0
    4ce2:	01 c0       	rjmp	.+2      	; 0x4ce6 <f_lseek+0x51e>
    4ce4:	80 e0       	ldi	r24, 0x00	; 0
    4ce6:	68 96       	adiw	r28, 0x18	; 24
    4ce8:	cd bf       	out	0x3d, r28	; 61
    4cea:	de bf       	out	0x3e, r29	; 62
    4cec:	df 91       	pop	r29
    4cee:	cf 91       	pop	r28
    4cf0:	1f 91       	pop	r17
    4cf2:	0f 91       	pop	r16
    4cf4:	ff 90       	pop	r15
    4cf6:	ef 90       	pop	r14
    4cf8:	df 90       	pop	r13
    4cfa:	cf 90       	pop	r12
    4cfc:	bf 90       	pop	r11
    4cfe:	af 90       	pop	r10
    4d00:	9f 90       	pop	r9
    4d02:	8f 90       	pop	r8
    4d04:	7f 90       	pop	r7
    4d06:	6f 90       	pop	r6
    4d08:	5f 90       	pop	r5
    4d0a:	4f 90       	pop	r4
    4d0c:	08 95       	ret

00004d0e <f_putc>:

int f_putc (
	TCHAR c,	/* A character to be output */
	FIL* fp		/* Pointer to the file object */
)
{
    4d0e:	cf 93       	push	r28
    4d10:	df 93       	push	r29
    4d12:	cd b7       	in	r28, 0x3d	; 61
    4d14:	de b7       	in	r29, 0x3e	; 62
    4d16:	c8 54       	subi	r28, 0x48	; 72
    4d18:	d1 09       	sbc	r29, r1
    4d1a:	cd bf       	out	0x3d, r28	; 61
    4d1c:	de bf       	out	0x3e, r29	; 62
	putbuff pb;
	UINT nw;


	pb.fp = fp;			/* Initialize output buffer */
    4d1e:	69 83       	std	Y+1, r22	; 0x01
    4d20:	7a 83       	std	Y+2, r23	; 0x02
	pb.nchr = pb.idx = 0;
    4d22:	1b 82       	std	Y+3, r1	; 0x03
    4d24:	1c 82       	std	Y+4, r1	; 0x04
    4d26:	1d 82       	std	Y+5, r1	; 0x05
    4d28:	1e 82       	std	Y+6, r1	; 0x06

	putc_bfd(&pb, c);	/* Put a character */
    4d2a:	68 2f       	mov	r22, r24
    4d2c:	ce 01       	movw	r24, r28
    4d2e:	01 96       	adiw	r24, 0x01	; 1
    4d30:	34 dc       	rcall	.-1944   	; 0x459a <putc_bfd>

	if (   pb.idx >= 0	/* Flush buffered characters to the file */
    4d32:	4b 81       	ldd	r20, Y+3	; 0x03
    4d34:	5c 81       	ldd	r21, Y+4	; 0x04
    4d36:	55 23       	and	r21, r21
    4d38:	bc f0       	brlt	.+46     	; 0x4d68 <f_putc+0x5a>
		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
    4d3a:	9e 01       	movw	r18, r28
    4d3c:	29 5b       	subi	r18, 0xB9	; 185
    4d3e:	3f 4f       	sbci	r19, 0xFF	; 255
    4d40:	be 01       	movw	r22, r28
    4d42:	69 5f       	subi	r22, 0xF9	; 249
    4d44:	7f 4f       	sbci	r23, 0xFF	; 255
    4d46:	89 81       	ldd	r24, Y+1	; 0x01
    4d48:	9a 81       	ldd	r25, Y+2	; 0x02
    4d4a:	d2 d9       	rcall	.-3164   	; 0x40f0 <f_write>
    4d4c:	81 11       	cpse	r24, r1
    4d4e:	0f c0       	rjmp	.+30     	; 0x4d6e <f_putc+0x60>
		&& (UINT)pb.idx == nw) return pb.nchr;
    4d50:	29 96       	adiw	r28, 0x09	; 9
    4d52:	8e ad       	ldd	r24, Y+62	; 0x3e
    4d54:	9f ad       	ldd	r25, Y+63	; 0x3f
    4d56:	29 97       	sbiw	r28, 0x09	; 9
    4d58:	2b 81       	ldd	r18, Y+3	; 0x03
    4d5a:	3c 81       	ldd	r19, Y+4	; 0x04
    4d5c:	28 17       	cp	r18, r24
    4d5e:	39 07       	cpc	r19, r25
    4d60:	49 f4       	brne	.+18     	; 0x4d74 <f_putc+0x66>
    4d62:	8d 81       	ldd	r24, Y+5	; 0x05
    4d64:	9e 81       	ldd	r25, Y+6	; 0x06
    4d66:	08 c0       	rjmp	.+16     	; 0x4d78 <f_putc+0x6a>
	return EOF;
    4d68:	8f ef       	ldi	r24, 0xFF	; 255
    4d6a:	9f ef       	ldi	r25, 0xFF	; 255
    4d6c:	05 c0       	rjmp	.+10     	; 0x4d78 <f_putc+0x6a>
    4d6e:	8f ef       	ldi	r24, 0xFF	; 255
    4d70:	9f ef       	ldi	r25, 0xFF	; 255
    4d72:	02 c0       	rjmp	.+4      	; 0x4d78 <f_putc+0x6a>
    4d74:	8f ef       	ldi	r24, 0xFF	; 255
    4d76:	9f ef       	ldi	r25, 0xFF	; 255
}
    4d78:	c8 5b       	subi	r28, 0xB8	; 184
    4d7a:	df 4f       	sbci	r29, 0xFF	; 255
    4d7c:	cd bf       	out	0x3d, r28	; 61
    4d7e:	de bf       	out	0x3e, r29	; 62
    4d80:	df 91       	pop	r29
    4d82:	cf 91       	pop	r28
    4d84:	08 95       	ret

00004d86 <f_puts>:

int f_puts (
	const TCHAR* str,	/* Pointer to the string to be output */
	FIL* fp				/* Pointer to the file object */
)
{
    4d86:	0f 93       	push	r16
    4d88:	1f 93       	push	r17
    4d8a:	cf 93       	push	r28
    4d8c:	df 93       	push	r29
    4d8e:	cd b7       	in	r28, 0x3d	; 61
    4d90:	de b7       	in	r29, 0x3e	; 62
    4d92:	c8 54       	subi	r28, 0x48	; 72
    4d94:	d1 09       	sbc	r29, r1
    4d96:	cd bf       	out	0x3d, r28	; 61
    4d98:	de bf       	out	0x3e, r29	; 62
	putbuff pb;
	UINT nw;


	pb.fp = fp;				/* Initialize output buffer */
    4d9a:	69 83       	std	Y+1, r22	; 0x01
    4d9c:	7a 83       	std	Y+2, r23	; 0x02
	pb.nchr = pb.idx = 0;
    4d9e:	1b 82       	std	Y+3, r1	; 0x03
    4da0:	1c 82       	std	Y+4, r1	; 0x04
    4da2:	1d 82       	std	Y+5, r1	; 0x05
    4da4:	1e 82       	std	Y+6, r1	; 0x06

	while (*str)			/* Put the string */
    4da6:	fc 01       	movw	r30, r24
    4da8:	60 81       	ld	r22, Z
    4daa:	66 23       	and	r22, r22
    4dac:	59 f0       	breq	.+22     	; 0x4dc4 <f_puts+0x3e>
    4dae:	8c 01       	movw	r16, r24
    4db0:	0f 5f       	subi	r16, 0xFF	; 255
    4db2:	1f 4f       	sbci	r17, 0xFF	; 255
		putc_bfd(&pb, *str++);
    4db4:	ce 01       	movw	r24, r28
    4db6:	01 96       	adiw	r24, 0x01	; 1
    4db8:	f0 db       	rcall	.-2080   	; 0x459a <putc_bfd>


	pb.fp = fp;				/* Initialize output buffer */
	pb.nchr = pb.idx = 0;

	while (*str)			/* Put the string */
    4dba:	f8 01       	movw	r30, r16
    4dbc:	61 91       	ld	r22, Z+
    4dbe:	8f 01       	movw	r16, r30
    4dc0:	61 11       	cpse	r22, r1
    4dc2:	f8 cf       	rjmp	.-16     	; 0x4db4 <f_puts+0x2e>
		putc_bfd(&pb, *str++);

	if (   pb.idx >= 0		/* Flush buffered characters to the file */
    4dc4:	4b 81       	ldd	r20, Y+3	; 0x03
    4dc6:	5c 81       	ldd	r21, Y+4	; 0x04
    4dc8:	55 23       	and	r21, r21
    4dca:	bc f0       	brlt	.+46     	; 0x4dfa <f_puts+0x74>
		&& f_write(pb.fp, pb.buf, (UINT)pb.idx, &nw) == FR_OK
    4dcc:	9e 01       	movw	r18, r28
    4dce:	29 5b       	subi	r18, 0xB9	; 185
    4dd0:	3f 4f       	sbci	r19, 0xFF	; 255
    4dd2:	be 01       	movw	r22, r28
    4dd4:	69 5f       	subi	r22, 0xF9	; 249
    4dd6:	7f 4f       	sbci	r23, 0xFF	; 255
    4dd8:	89 81       	ldd	r24, Y+1	; 0x01
    4dda:	9a 81       	ldd	r25, Y+2	; 0x02
    4ddc:	89 d9       	rcall	.-3310   	; 0x40f0 <f_write>
    4dde:	81 11       	cpse	r24, r1
    4de0:	0f c0       	rjmp	.+30     	; 0x4e00 <f_puts+0x7a>
		&& (UINT)pb.idx == nw) return pb.nchr;
    4de2:	29 96       	adiw	r28, 0x09	; 9
    4de4:	8e ad       	ldd	r24, Y+62	; 0x3e
    4de6:	9f ad       	ldd	r25, Y+63	; 0x3f
    4de8:	29 97       	sbiw	r28, 0x09	; 9
    4dea:	2b 81       	ldd	r18, Y+3	; 0x03
    4dec:	3c 81       	ldd	r19, Y+4	; 0x04
    4dee:	28 17       	cp	r18, r24
    4df0:	39 07       	cpc	r19, r25
    4df2:	49 f4       	brne	.+18     	; 0x4e06 <f_puts+0x80>
    4df4:	8d 81       	ldd	r24, Y+5	; 0x05
    4df6:	9e 81       	ldd	r25, Y+6	; 0x06
    4df8:	08 c0       	rjmp	.+16     	; 0x4e0a <f_puts+0x84>
	return EOF;
    4dfa:	8f ef       	ldi	r24, 0xFF	; 255
    4dfc:	9f ef       	ldi	r25, 0xFF	; 255
    4dfe:	05 c0       	rjmp	.+10     	; 0x4e0a <f_puts+0x84>
    4e00:	8f ef       	ldi	r24, 0xFF	; 255
    4e02:	9f ef       	ldi	r25, 0xFF	; 255
    4e04:	02 c0       	rjmp	.+4      	; 0x4e0a <f_puts+0x84>
    4e06:	8f ef       	ldi	r24, 0xFF	; 255
    4e08:	9f ef       	ldi	r25, 0xFF	; 255
}
    4e0a:	c8 5b       	subi	r28, 0xB8	; 184
    4e0c:	df 4f       	sbci	r29, 0xFF	; 255
    4e0e:	cd bf       	out	0x3d, r28	; 61
    4e10:	de bf       	out	0x3e, r29	; 62
    4e12:	df 91       	pop	r29
    4e14:	cf 91       	pop	r28
    4e16:	1f 91       	pop	r17
    4e18:	0f 91       	pop	r16
    4e1a:	08 95       	ret

00004e1c <_ZN3GPSC1Ev>:
		char c = uart.rxDequeue();
		lcd->write(c);
		
	}*/

}
    4e1c:	af 92       	push	r10
    4e1e:	bf 92       	push	r11
    4e20:	cf 92       	push	r12
    4e22:	ef 92       	push	r14
    4e24:	0f 93       	push	r16
    4e26:	cf 93       	push	r28
    4e28:	df 93       	push	r29
    4e2a:	ec 01       	movw	r28, r24
    4e2c:	8b e0       	ldi	r24, 0x0B	; 11
    4e2e:	e0 e2       	ldi	r30, 0x20	; 32
    4e30:	f0 e2       	ldi	r31, 0x20	; 32
    4e32:	de 01       	movw	r26, r28
    4e34:	01 90       	ld	r0, Z+
    4e36:	0d 92       	st	X+, r0
    4e38:	8a 95       	dec	r24
    4e3a:	e1 f7       	brne	.-8      	; 0x4e34 <_ZN3GPSC1Ev+0x18>
    4e3c:	8a e0       	ldi	r24, 0x0A	; 10
    4e3e:	eb e2       	ldi	r30, 0x2B	; 43
    4e40:	f0 e2       	ldi	r31, 0x20	; 32
    4e42:	de 01       	movw	r26, r28
    4e44:	1b 96       	adiw	r26, 0x0b	; 11
    4e46:	01 90       	ld	r0, Z+
    4e48:	0d 92       	st	X+, r0
    4e4a:	8a 95       	dec	r24
    4e4c:	e1 f7       	brne	.-8      	; 0x4e46 <_ZN3GPSC1Ev+0x2a>
    4e4e:	fe 01       	movw	r30, r28
    4e50:	ee 5a       	subi	r30, 0xAE	; 174
    4e52:	ff 4f       	sbci	r31, 0xFF	; 255
    4e54:	10 82       	st	Z, r1
    4e56:	31 96       	adiw	r30, 0x01	; 1
    4e58:	10 82       	st	Z, r1
    4e5a:	5e 01       	movw	r10, r28
    4e5c:	84 e5       	ldi	r24, 0x54	; 84
    4e5e:	a8 0e       	add	r10, r24
    4e60:	b1 1c       	adc	r11, r1
    4e62:	40 e5       	ldi	r20, 0x50	; 80
    4e64:	50 e0       	ldi	r21, 0x00	; 0
    4e66:	6c ed       	ldi	r22, 0xDC	; 220
    4e68:	70 e0       	ldi	r23, 0x00	; 0
    4e6a:	c5 01       	movw	r24, r10
    4e6c:	0e 94 c0 3a 	call	0x7580	; 0x7580 <_ZN10UartDriverC1Eii>
    4e70:	0f 2e       	mov	r0, r31
    4e72:	f0 e5       	ldi	r31, 0x50	; 80
    4e74:	cf 2e       	mov	r12, r31
    4e76:	f0 2d       	mov	r31, r0
    4e78:	0f 2e       	mov	r0, r31
    4e7a:	fc e0       	ldi	r31, 0x0C	; 12
    4e7c:	ef 2e       	mov	r14, r31
    4e7e:	f0 2d       	mov	r31, r0
    4e80:	00 e0       	ldi	r16, 0x00	; 0
    4e82:	23 e0       	ldi	r18, 0x03	; 3
    4e84:	40 e0       	ldi	r20, 0x00	; 0
    4e86:	60 eb       	ldi	r22, 0xB0	; 176
    4e88:	79 e0       	ldi	r23, 0x09	; 9
    4e8a:	c5 01       	movw	r24, r10
    4e8c:	0e 94 d3 3a 	call	0x75a6	; 0x75a6 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc>
    4e90:	1d 8a       	std	Y+21, r1	; 0x15
    4e92:	1e 8a       	std	Y+22, r1	; 0x16
    4e94:	de 01       	movw	r26, r28
    4e96:	57 96       	adiw	r26, 0x17	; 23
    4e98:	80 e0       	ldi	r24, 0x00	; 0
    4e9a:	1d 92       	st	X+, r1
    4e9c:	8f 5f       	subi	r24, 0xFF	; 255
    4e9e:	8b 33       	cpi	r24, 0x3B	; 59
    4ea0:	e1 f7       	brne	.-8      	; 0x4e9a <_ZN3GPSC1Ev+0x7e>
    4ea2:	df 91       	pop	r29
    4ea4:	cf 91       	pop	r28
    4ea6:	0f 91       	pop	r16
    4ea8:	ef 90       	pop	r14
    4eaa:	cf 90       	pop	r12
    4eac:	bf 90       	pop	r11
    4eae:	af 90       	pop	r10
    4eb0:	08 95       	ret

00004eb2 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc>:
    4eb2:	0f 93       	push	r16
    4eb4:	1f 93       	push	r17
    4eb6:	ca 01       	movw	r24, r20
    4eb8:	20 e3       	ldi	r18, 0x30	; 48
    4eba:	fa 01       	movw	r30, r20
    4ebc:	20 83       	st	Z, r18
    4ebe:	06 2f       	mov	r16, r22
    4ec0:	10 e0       	ldi	r17, 0x00	; 0
    4ec2:	07 30       	cpi	r16, 0x07	; 7
    4ec4:	11 05       	cpc	r17, r1
    4ec6:	00 f5       	brcc	.+64     	; 0x4f08 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    4ec8:	f8 01       	movw	r30, r16
    4eca:	e2 5e       	subi	r30, 0xE2	; 226
    4ecc:	fe 4f       	sbci	r31, 0xFE	; 254
    4ece:	0c 94 b2 3c 	jmp	0x7964	; 0x7964 <__tablejump2__>
    4ed2:	20 e3       	ldi	r18, 0x30	; 48
    4ed4:	fa 01       	movw	r30, r20
    4ed6:	21 83       	std	Z+1, r18	; 0x01
    4ed8:	17 c0       	rjmp	.+46     	; 0x4f08 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    4eda:	21 e3       	ldi	r18, 0x31	; 49
    4edc:	fa 01       	movw	r30, r20
    4ede:	21 83       	std	Z+1, r18	; 0x01
    4ee0:	13 c0       	rjmp	.+38     	; 0x4f08 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    4ee2:	22 e3       	ldi	r18, 0x32	; 50
    4ee4:	fa 01       	movw	r30, r20
    4ee6:	21 83       	std	Z+1, r18	; 0x01
    4ee8:	0f c0       	rjmp	.+30     	; 0x4f08 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    4eea:	23 e3       	ldi	r18, 0x33	; 51
    4eec:	fa 01       	movw	r30, r20
    4eee:	21 83       	std	Z+1, r18	; 0x01
    4ef0:	0b c0       	rjmp	.+22     	; 0x4f08 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    4ef2:	24 e3       	ldi	r18, 0x34	; 52
    4ef4:	fa 01       	movw	r30, r20
    4ef6:	21 83       	std	Z+1, r18	; 0x01
    4ef8:	07 c0       	rjmp	.+14     	; 0x4f08 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    4efa:	25 e3       	ldi	r18, 0x35	; 53
    4efc:	fa 01       	movw	r30, r20
    4efe:	21 83       	std	Z+1, r18	; 0x01
    4f00:	03 c0       	rjmp	.+6      	; 0x4f08 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x56>
    4f02:	28 e3       	ldi	r18, 0x38	; 56
    4f04:	fa 01       	movw	r30, r20
    4f06:	21 83       	std	Z+1, r18	; 0x01
    4f08:	1f 91       	pop	r17
    4f0a:	0f 91       	pop	r16
    4f0c:	08 95       	ret

00004f0e <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>:
    4f0e:	af 92       	push	r10
    4f10:	bf 92       	push	r11
    4f12:	cf 92       	push	r12
    4f14:	df 92       	push	r13
    4f16:	ef 92       	push	r14
    4f18:	ff 92       	push	r15
    4f1a:	0f 93       	push	r16
    4f1c:	1f 93       	push	r17
    4f1e:	cf 93       	push	r28
    4f20:	df 93       	push	r29
    4f22:	00 d0       	rcall	.+0      	; 0x4f24 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh+0x16>
    4f24:	00 d0       	rcall	.+0      	; 0x4f26 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh+0x18>
    4f26:	cd b7       	in	r28, 0x3d	; 61
    4f28:	de b7       	in	r29, 0x3e	; 62
    4f2a:	6c 01       	movw	r12, r24
    4f2c:	a6 2e       	mov	r10, r22
    4f2e:	4e 83       	std	Y+6, r20	; 0x06
    4f30:	1d 82       	std	Y+5, r1	; 0x05
    4f32:	2d 81       	ldd	r18, Y+5	; 0x05
    4f34:	8c 01       	movw	r16, r24
    4f36:	0c 5a       	subi	r16, 0xAC	; 172
    4f38:	1f 4f       	sbci	r17, 0xFF	; 255
    4f3a:	49 e0       	ldi	r20, 0x09	; 9
    4f3c:	50 e0       	ldi	r21, 0x00	; 0
    4f3e:	65 e6       	ldi	r22, 0x65	; 101
    4f40:	70 e2       	ldi	r23, 0x20	; 32
    4f42:	c8 01       	movw	r24, r16
    4f44:	0e 94 6a 3b 	call	0x76d4	; 0x76d4 <_ZN10UartDriver10sendStringEPKcih>
    4f48:	8d 83       	std	Y+5, r24	; 0x05
    4f4a:	bd 80       	ldd	r11, Y+5	; 0x05
    4f4c:	ce 01       	movw	r24, r28
    4f4e:	01 96       	adiw	r24, 0x01	; 1
    4f50:	7c 01       	movw	r14, r24
    4f52:	ac 01       	movw	r20, r24
    4f54:	6a 2d       	mov	r22, r10
    4f56:	c6 01       	movw	r24, r12
    4f58:	ac df       	rcall	.-168    	; 0x4eb2 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc>
    4f5a:	2b 2d       	mov	r18, r11
    4f5c:	42 e0       	ldi	r20, 0x02	; 2
    4f5e:	50 e0       	ldi	r21, 0x00	; 0
    4f60:	bc 01       	movw	r22, r24
    4f62:	c8 01       	movw	r24, r16
    4f64:	0e 94 6a 3b 	call	0x76d4	; 0x76d4 <_ZN10UartDriver10sendStringEPKcih>
    4f68:	8d 83       	std	Y+5, r24	; 0x05
    4f6a:	2d 81       	ldd	r18, Y+5	; 0x05
    4f6c:	44 e0       	ldi	r20, 0x04	; 4
    4f6e:	50 e0       	ldi	r21, 0x00	; 0
    4f70:	6f e6       	ldi	r22, 0x6F	; 111
    4f72:	70 e2       	ldi	r23, 0x20	; 32
    4f74:	c8 01       	movw	r24, r16
    4f76:	0e 94 6a 3b 	call	0x76d4	; 0x76d4 <_ZN10UartDriver10sendStringEPKcih>
    4f7a:	8d 83       	std	Y+5, r24	; 0x05
    4f7c:	8e 81       	ldd	r24, Y+6	; 0x06
    4f7e:	1f 92       	push	r1
    4f80:	8f 93       	push	r24
    4f82:	84 e7       	ldi	r24, 0x74	; 116
    4f84:	90 e2       	ldi	r25, 0x20	; 32
    4f86:	9f 93       	push	r25
    4f88:	8f 93       	push	r24
    4f8a:	ff 92       	push	r15
    4f8c:	ef 92       	push	r14
    4f8e:	0e 94 1f 3e 	call	0x7c3e	; 0x7c3e <sprintf>
    4f92:	2d 81       	ldd	r18, Y+5	; 0x05
    4f94:	43 e0       	ldi	r20, 0x03	; 3
    4f96:	50 e0       	ldi	r21, 0x00	; 0
    4f98:	b7 01       	movw	r22, r14
    4f9a:	c8 01       	movw	r24, r16
    4f9c:	0e 94 6a 3b 	call	0x76d4	; 0x76d4 <_ZN10UartDriver10sendStringEPKcih>
    4fa0:	8d 83       	std	Y+5, r24	; 0x05
    4fa2:	2d 81       	ldd	r18, Y+5	; 0x05
    4fa4:	44 e0       	ldi	r20, 0x04	; 4
    4fa6:	50 e0       	ldi	r21, 0x00	; 0
    4fa8:	69 e7       	ldi	r22, 0x79	; 121
    4faa:	70 e2       	ldi	r23, 0x20	; 32
    4fac:	c8 01       	movw	r24, r16
    4fae:	0e 94 6a 3b 	call	0x76d4	; 0x76d4 <_ZN10UartDriver10sendStringEPKcih>
    4fb2:	8d 83       	std	Y+5, r24	; 0x05
    4fb4:	dd 80       	ldd	r13, Y+5	; 0x05
    4fb6:	8d 81       	ldd	r24, Y+5	; 0x05
    4fb8:	40 e1       	ldi	r20, 0x10	; 16
    4fba:	b7 01       	movw	r22, r14
    4fbc:	90 e0       	ldi	r25, 0x00	; 0
    4fbe:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <__itoa_ncheck>
    4fc2:	2d 2d       	mov	r18, r13
    4fc4:	42 e0       	ldi	r20, 0x02	; 2
    4fc6:	50 e0       	ldi	r21, 0x00	; 0
    4fc8:	bc 01       	movw	r22, r24
    4fca:	c8 01       	movw	r24, r16
    4fcc:	0e 94 6a 3b 	call	0x76d4	; 0x76d4 <_ZN10UartDriver10sendStringEPKcih>
    4fd0:	2d 81       	ldd	r18, Y+5	; 0x05
    4fd2:	42 e0       	ldi	r20, 0x02	; 2
    4fd4:	50 e0       	ldi	r21, 0x00	; 0
    4fd6:	6b e8       	ldi	r22, 0x8B	; 139
    4fd8:	70 e2       	ldi	r23, 0x20	; 32
    4fda:	c8 01       	movw	r24, r16
    4fdc:	0e 94 6a 3b 	call	0x76d4	; 0x76d4 <_ZN10UartDriver10sendStringEPKcih>
    4fe0:	0f 90       	pop	r0
    4fe2:	0f 90       	pop	r0
    4fe4:	0f 90       	pop	r0
    4fe6:	0f 90       	pop	r0
    4fe8:	0f 90       	pop	r0
    4fea:	0f 90       	pop	r0
    4fec:	26 96       	adiw	r28, 0x06	; 6
    4fee:	cd bf       	out	0x3d, r28	; 61
    4ff0:	de bf       	out	0x3e, r29	; 62
    4ff2:	df 91       	pop	r29
    4ff4:	cf 91       	pop	r28
    4ff6:	1f 91       	pop	r17
    4ff8:	0f 91       	pop	r16
    4ffa:	ff 90       	pop	r15
    4ffc:	ef 90       	pop	r14
    4ffe:	df 90       	pop	r13
    5000:	cf 90       	pop	r12
    5002:	bf 90       	pop	r11
    5004:	af 90       	pop	r10
    5006:	08 95       	ret

00005008 <_ZN3GPS4initEv>:
    5008:	cf 93       	push	r28
    500a:	df 93       	push	r29
    500c:	ec 01       	movw	r28, r24
    500e:	20 e0       	ldi	r18, 0x00	; 0
    5010:	4f e0       	ldi	r20, 0x0F	; 15
    5012:	50 e0       	ldi	r21, 0x00	; 0
    5014:	6e e7       	ldi	r22, 0x7E	; 126
    5016:	70 e2       	ldi	r23, 0x20	; 32
    5018:	8c 5a       	subi	r24, 0xAC	; 172
    501a:	9f 4f       	sbci	r25, 0xFF	; 255
    501c:	0e 94 6a 3b 	call	0x76d4	; 0x76d4 <_ZN10UartDriver10sendStringEPKcih>
    5020:	2f ef       	ldi	r18, 0xFF	; 255
    5022:	83 ec       	ldi	r24, 0xC3	; 195
    5024:	99 e0       	ldi	r25, 0x09	; 9
    5026:	21 50       	subi	r18, 0x01	; 1
    5028:	80 40       	sbci	r24, 0x00	; 0
    502a:	90 40       	sbci	r25, 0x00	; 0
    502c:	e1 f7       	brne	.-8      	; 0x5026 <_ZN3GPS4initEv+0x1e>
    502e:	00 c0       	rjmp	.+0      	; 0x5030 <_ZN3GPS4initEv+0x28>
    5030:	00 00       	nop
    5032:	40 e0       	ldi	r20, 0x00	; 0
    5034:	60 e0       	ldi	r22, 0x00	; 0
    5036:	ce 01       	movw	r24, r28
    5038:	6a df       	rcall	.-300    	; 0x4f0e <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    503a:	2f ef       	ldi	r18, 0xFF	; 255
    503c:	83 ec       	ldi	r24, 0xC3	; 195
    503e:	99 e0       	ldi	r25, 0x09	; 9
    5040:	21 50       	subi	r18, 0x01	; 1
    5042:	80 40       	sbci	r24, 0x00	; 0
    5044:	90 40       	sbci	r25, 0x00	; 0
    5046:	e1 f7       	brne	.-8      	; 0x5040 <_ZN3GPS4initEv+0x38>
    5048:	00 c0       	rjmp	.+0      	; 0x504a <_ZN3GPS4initEv+0x42>
    504a:	00 00       	nop
    504c:	40 e0       	ldi	r20, 0x00	; 0
    504e:	65 e0       	ldi	r22, 0x05	; 5
    5050:	ce 01       	movw	r24, r28
    5052:	5d df       	rcall	.-326    	; 0x4f0e <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    5054:	2f ef       	ldi	r18, 0xFF	; 255
    5056:	83 ec       	ldi	r24, 0xC3	; 195
    5058:	99 e0       	ldi	r25, 0x09	; 9
    505a:	21 50       	subi	r18, 0x01	; 1
    505c:	80 40       	sbci	r24, 0x00	; 0
    505e:	90 40       	sbci	r25, 0x00	; 0
    5060:	e1 f7       	brne	.-8      	; 0x505a <_ZN3GPS4initEv+0x52>
    5062:	00 c0       	rjmp	.+0      	; 0x5064 <_ZN3GPS4initEv+0x5c>
    5064:	00 00       	nop
    5066:	40 e0       	ldi	r20, 0x00	; 0
    5068:	62 e0       	ldi	r22, 0x02	; 2
    506a:	ce 01       	movw	r24, r28
    506c:	50 df       	rcall	.-352    	; 0x4f0e <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    506e:	2f ef       	ldi	r18, 0xFF	; 255
    5070:	83 ec       	ldi	r24, 0xC3	; 195
    5072:	99 e0       	ldi	r25, 0x09	; 9
    5074:	21 50       	subi	r18, 0x01	; 1
    5076:	80 40       	sbci	r24, 0x00	; 0
    5078:	90 40       	sbci	r25, 0x00	; 0
    507a:	e1 f7       	brne	.-8      	; 0x5074 <_ZN3GPS4initEv+0x6c>
    507c:	00 c0       	rjmp	.+0      	; 0x507e <_ZN3GPS4initEv+0x76>
    507e:	00 00       	nop
    5080:	40 e0       	ldi	r20, 0x00	; 0
    5082:	61 e0       	ldi	r22, 0x01	; 1
    5084:	ce 01       	movw	r24, r28
    5086:	43 df       	rcall	.-378    	; 0x4f0e <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    5088:	2f ef       	ldi	r18, 0xFF	; 255
    508a:	83 ec       	ldi	r24, 0xC3	; 195
    508c:	99 e0       	ldi	r25, 0x09	; 9
    508e:	21 50       	subi	r18, 0x01	; 1
    5090:	80 40       	sbci	r24, 0x00	; 0
    5092:	90 40       	sbci	r25, 0x00	; 0
    5094:	e1 f7       	brne	.-8      	; 0x508e <_ZN3GPS4initEv+0x86>
    5096:	00 c0       	rjmp	.+0      	; 0x5098 <_ZN3GPS4initEv+0x90>
    5098:	00 00       	nop
    509a:	41 e0       	ldi	r20, 0x01	; 1
    509c:	63 e0       	ldi	r22, 0x03	; 3
    509e:	ce 01       	movw	r24, r28
    50a0:	36 df       	rcall	.-404    	; 0x4f0e <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    50a2:	2f ef       	ldi	r18, 0xFF	; 255
    50a4:	83 ec       	ldi	r24, 0xC3	; 195
    50a6:	99 e0       	ldi	r25, 0x09	; 9
    50a8:	21 50       	subi	r18, 0x01	; 1
    50aa:	80 40       	sbci	r24, 0x00	; 0
    50ac:	90 40       	sbci	r25, 0x00	; 0
    50ae:	e1 f7       	brne	.-8      	; 0x50a8 <_ZN3GPS4initEv+0xa0>
    50b0:	00 c0       	rjmp	.+0      	; 0x50b2 <_ZN3GPS4initEv+0xaa>
    50b2:	00 00       	nop
    50b4:	40 e0       	ldi	r20, 0x00	; 0
    50b6:	64 e0       	ldi	r22, 0x04	; 4
    50b8:	ce 01       	movw	r24, r28
    50ba:	29 df       	rcall	.-430    	; 0x4f0e <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    50bc:	2f ef       	ldi	r18, 0xFF	; 255
    50be:	83 ec       	ldi	r24, 0xC3	; 195
    50c0:	99 e0       	ldi	r25, 0x09	; 9
    50c2:	21 50       	subi	r18, 0x01	; 1
    50c4:	80 40       	sbci	r24, 0x00	; 0
    50c6:	90 40       	sbci	r25, 0x00	; 0
    50c8:	e1 f7       	brne	.-8      	; 0x50c2 <_ZN3GPS4initEv+0xba>
    50ca:	00 c0       	rjmp	.+0      	; 0x50cc <_ZN3GPS4initEv+0xc4>
    50cc:	00 00       	nop
    50ce:	40 e0       	ldi	r20, 0x00	; 0
    50d0:	66 e0       	ldi	r22, 0x06	; 6
    50d2:	ce 01       	movw	r24, r28
    50d4:	1c df       	rcall	.-456    	; 0x4f0e <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    50d6:	df 91       	pop	r29
    50d8:	cf 91       	pop	r28
    50da:	08 95       	ret

000050dc <_ZN3GPS13interceptByteEv>:
    50dc:	ff 92       	push	r15
    50de:	0f 93       	push	r16
    50e0:	1f 93       	push	r17
    50e2:	cf 93       	push	r28
    50e4:	df 93       	push	r29
    50e6:	ec 01       	movw	r28, r24
    50e8:	8c 01       	movw	r16, r24
    50ea:	0c 5a       	subi	r16, 0xAC	; 172
    50ec:	1f 4f       	sbci	r17, 0xFF	; 255
    50ee:	c8 01       	movw	r24, r16
    50f0:	0e 94 66 3b 	call	0x76cc	; 0x76cc <_ZN10UartDriver11getUARTPortEv>
    50f4:	fc 01       	movw	r30, r24
    50f6:	f0 80       	ld	r15, Z
    50f8:	fe 01       	movw	r30, r28
    50fa:	ee 5a       	subi	r30, 0xAE	; 174
    50fc:	ff 4f       	sbci	r31, 0xFF	; 255
    50fe:	80 81       	ld	r24, Z
    5100:	88 23       	and	r24, r24
    5102:	61 f0       	breq	.+24     	; 0x511c <_ZN3GPS13interceptByteEv+0x40>
    5104:	6f 2d       	mov	r22, r15
    5106:	c8 01       	movw	r24, r16
    5108:	0e 94 52 3b 	call	0x76a4	; 0x76a4 <_ZN10UartDriver7rcvByteEc>
    510c:	fa e0       	ldi	r31, 0x0A	; 10
    510e:	ff 12       	cpse	r15, r31
    5110:	05 c0       	rjmp	.+10     	; 0x511c <_ZN3GPS13interceptByteEv+0x40>
    5112:	cd 5a       	subi	r28, 0xAD	; 173
    5114:	df 4f       	sbci	r29, 0xFF	; 255
    5116:	88 81       	ld	r24, Y
    5118:	8f 5f       	subi	r24, 0xFF	; 255
    511a:	88 83       	st	Y, r24
    511c:	df 91       	pop	r29
    511e:	cf 91       	pop	r28
    5120:	1f 91       	pop	r17
    5122:	0f 91       	pop	r16
    5124:	ff 90       	pop	r15
    5126:	08 95       	ret

00005128 <_ZN3GPS15updateRegistersEv>:
    5128:	5f 92       	push	r5
    512a:	6f 92       	push	r6
    512c:	7f 92       	push	r7
    512e:	8f 92       	push	r8
    5130:	9f 92       	push	r9
    5132:	af 92       	push	r10
    5134:	bf 92       	push	r11
    5136:	cf 92       	push	r12
    5138:	df 92       	push	r13
    513a:	ef 92       	push	r14
    513c:	ff 92       	push	r15
    513e:	0f 93       	push	r16
    5140:	1f 93       	push	r17
    5142:	cf 93       	push	r28
    5144:	df 93       	push	r29
    5146:	4c 01       	movw	r8, r24
    5148:	fc 01       	movw	r30, r24
    514a:	ed 5a       	subi	r30, 0xAD	; 173
    514c:	ff 4f       	sbci	r31, 0xFF	; 255
    514e:	80 81       	ld	r24, Z
    5150:	88 23       	and	r24, r24
    5152:	09 f4       	brne	.+2      	; 0x5156 <_ZN3GPS15updateRegistersEv+0x2e>
    5154:	7a c0       	rjmp	.+244    	; 0x524a <_ZN3GPS15updateRegistersEv+0x122>
    5156:	82 30       	cpi	r24, 0x02	; 2
    5158:	88 f0       	brcs	.+34     	; 0x517c <_ZN3GPS15updateRegistersEv+0x54>
    515a:	e4 01       	movw	r28, r8
    515c:	cc 5a       	subi	r28, 0xAC	; 172
    515e:	df 4f       	sbci	r29, 0xFF	; 255
    5160:	8f 01       	movw	r16, r30
    5162:	ce 01       	movw	r24, r28
    5164:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    5168:	8a 30       	cpi	r24, 0x0A	; 10
    516a:	d9 f7       	brne	.-10     	; 0x5162 <_ZN3GPS15updateRegistersEv+0x3a>
    516c:	f8 94       	cli
    516e:	f8 01       	movw	r30, r16
    5170:	80 81       	ld	r24, Z
    5172:	81 50       	subi	r24, 0x01	; 1
    5174:	80 83       	st	Z, r24
    5176:	78 94       	sei
    5178:	82 30       	cpi	r24, 0x02	; 2
    517a:	98 f7       	brcc	.-26     	; 0x5162 <_ZN3GPS15updateRegistersEv+0x3a>
    517c:	e4 01       	movw	r28, r8
    517e:	cc 5a       	subi	r28, 0xAC	; 172
    5180:	df 4f       	sbci	r29, 0xFF	; 255
    5182:	6c 2e       	mov	r6, r28
    5184:	5d 2e       	mov	r5, r29
    5186:	ce 01       	movw	r24, r28
    5188:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    518c:	8c 32       	cpi	r24, 0x2C	; 44
    518e:	c9 f7       	brne	.-14     	; 0x5182 <_ZN3GPS15updateRegistersEv+0x5a>
    5190:	54 01       	movw	r10, r8
    5192:	64 01       	movw	r12, r8
    5194:	fa e0       	ldi	r31, 0x0A	; 10
    5196:	cf 0e       	add	r12, r31
    5198:	d1 1c       	adc	r13, r1
    519a:	84 01       	movw	r16, r8
    519c:	ee 24       	eor	r14, r14
    519e:	e3 94       	inc	r14
    51a0:	f1 2c       	mov	r15, r1
    51a2:	e8 01       	movw	r28, r16
    51a4:	ca 19       	sub	r28, r10
    51a6:	db 09       	sbc	r29, r11
    51a8:	f8 01       	movw	r30, r16
    51aa:	71 90       	ld	r7, Z+
    51ac:	8f 01       	movw	r16, r30
    51ae:	c7 01       	movw	r24, r14
    51b0:	02 c0       	rjmp	.+4      	; 0x51b6 <_ZN3GPS15updateRegistersEv+0x8e>
    51b2:	88 0f       	add	r24, r24
    51b4:	99 1f       	adc	r25, r25
    51b6:	ca 95       	dec	r28
    51b8:	e2 f7       	brpl	.-8      	; 0x51b2 <_ZN3GPS15updateRegistersEv+0x8a>
    51ba:	ec 01       	movw	r28, r24
    51bc:	14 c0       	rjmp	.+40     	; 0x51e6 <_ZN3GPS15updateRegistersEv+0xbe>
    51be:	27 2d       	mov	r18, r7
    51c0:	30 e0       	ldi	r19, 0x00	; 0
    51c2:	f4 01       	movw	r30, r8
    51c4:	e2 0f       	add	r30, r18
    51c6:	f3 1f       	adc	r31, r19
    51c8:	97 89       	ldd	r25, Z+23	; 0x17
    51ca:	98 17       	cp	r25, r24
    51cc:	39 f0       	breq	.+14     	; 0x51dc <_ZN3GPS15updateRegistersEv+0xb4>
    51ce:	f4 01       	movw	r30, r8
    51d0:	45 89       	ldd	r20, Z+21	; 0x15
    51d2:	56 89       	ldd	r21, Z+22	; 0x16
    51d4:	4c 2b       	or	r20, r28
    51d6:	5d 2b       	or	r21, r29
    51d8:	45 8b       	std	Z+21, r20	; 0x15
    51da:	56 8b       	std	Z+22, r21	; 0x16
    51dc:	73 94       	inc	r7
    51de:	f4 01       	movw	r30, r8
    51e0:	e2 0f       	add	r30, r18
    51e2:	f3 1f       	adc	r31, r19
    51e4:	87 8b       	std	Z+23, r24	; 0x17
    51e6:	86 2d       	mov	r24, r6
    51e8:	95 2d       	mov	r25, r5
    51ea:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    51ee:	8c 32       	cpi	r24, 0x2C	; 44
    51f0:	31 f7       	brne	.-52     	; 0x51be <_ZN3GPS15updateRegistersEv+0x96>
    51f2:	f8 01       	movw	r30, r16
    51f4:	40 81       	ld	r20, Z
    51f6:	74 16       	cp	r7, r20
    51f8:	b0 f4       	brcc	.+44     	; 0x5226 <_ZN3GPS15updateRegistersEv+0xfe>
    51fa:	27 2d       	mov	r18, r7
    51fc:	30 e0       	ldi	r19, 0x00	; 0
    51fe:	f4 01       	movw	r30, r8
    5200:	e2 0f       	add	r30, r18
    5202:	f3 1f       	adc	r31, r19
    5204:	87 89       	ldd	r24, Z+23	; 0x17
    5206:	88 23       	and	r24, r24
    5208:	39 f0       	breq	.+14     	; 0x5218 <_ZN3GPS15updateRegistersEv+0xf0>
    520a:	f4 01       	movw	r30, r8
    520c:	85 89       	ldd	r24, Z+21	; 0x15
    520e:	96 89       	ldd	r25, Z+22	; 0x16
    5210:	8c 2b       	or	r24, r28
    5212:	9d 2b       	or	r25, r29
    5214:	85 8b       	std	Z+21, r24	; 0x15
    5216:	96 8b       	std	Z+22, r25	; 0x16
    5218:	73 94       	inc	r7
    521a:	f4 01       	movw	r30, r8
    521c:	e2 0f       	add	r30, r18
    521e:	f3 1f       	adc	r31, r19
    5220:	17 8a       	std	Z+23, r1	; 0x17
    5222:	74 16       	cp	r7, r20
    5224:	50 f3       	brcs	.-44     	; 0x51fa <_ZN3GPS15updateRegistersEv+0xd2>
    5226:	0c 15       	cp	r16, r12
    5228:	1d 05       	cpc	r17, r13
    522a:	09 f0       	breq	.+2      	; 0x522e <_ZN3GPS15updateRegistersEv+0x106>
    522c:	ba cf       	rjmp	.-140    	; 0x51a2 <_ZN3GPS15updateRegistersEv+0x7a>
    522e:	86 2d       	mov	r24, r6
    5230:	95 2d       	mov	r25, r5
    5232:	0e 94 56 3b 	call	0x76ac	; 0x76ac <_ZN10UartDriver9rxDequeueEv>
    5236:	8a 30       	cpi	r24, 0x0A	; 10
    5238:	d1 f7       	brne	.-12     	; 0x522e <_ZN3GPS15updateRegistersEv+0x106>
    523a:	f8 94       	cli
    523c:	f4 01       	movw	r30, r8
    523e:	ed 5a       	subi	r30, 0xAD	; 173
    5240:	ff 4f       	sbci	r31, 0xFF	; 255
    5242:	80 81       	ld	r24, Z
    5244:	81 50       	subi	r24, 0x01	; 1
    5246:	80 83       	st	Z, r24
    5248:	78 94       	sei
    524a:	df 91       	pop	r29
    524c:	cf 91       	pop	r28
    524e:	1f 91       	pop	r17
    5250:	0f 91       	pop	r16
    5252:	ff 90       	pop	r15
    5254:	ef 90       	pop	r14
    5256:	df 90       	pop	r13
    5258:	cf 90       	pop	r12
    525a:	bf 90       	pop	r11
    525c:	af 90       	pop	r10
    525e:	9f 90       	pop	r9
    5260:	8f 90       	pop	r8
    5262:	7f 90       	pop	r7
    5264:	6f 90       	pop	r6
    5266:	5f 90       	pop	r5
    5268:	08 95       	ret

0000526a <_ZN3GPS9getStatusEv>:
    526a:	fc 01       	movw	r30, r24
    526c:	85 89       	ldd	r24, Z+21	; 0x15
    526e:	96 89       	ldd	r25, Z+22	; 0x16
    5270:	08 95       	ret

00005272 <_ZN3GPS11clearStatusEv>:
    5272:	fc 01       	movw	r30, r24
    5274:	15 8a       	std	Z+21, r1	; 0x15
    5276:	16 8a       	std	Z+22, r1	; 0x16
    5278:	08 95       	ret

0000527a <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>:

char * GPS::retrieve(GPSVAL::VAL value, char * b) {
    527a:	ef 92       	push	r14
    527c:	ff 92       	push	r15
    527e:	0f 93       	push	r16
    5280:	1f 93       	push	r17
    5282:	cf 93       	push	r28
    5284:	df 93       	push	r29
	uint8_t i,y;
	y = 0;
	for (i = offsets[value]; i<offsets[value] + sizes[value]; i++, y++) {
    5286:	c6 2f       	mov	r28, r22
    5288:	d0 e0       	ldi	r29, 0x00	; 0
    528a:	fc 01       	movw	r30, r24
    528c:	ec 0f       	add	r30, r28
    528e:	fd 1f       	adc	r31, r29
    5290:	00 81       	ld	r16, Z
    5292:	20 2f       	mov	r18, r16
    5294:	30 e0       	ldi	r19, 0x00	; 0
    5296:	63 85       	ldd	r22, Z+11	; 0x0b
    5298:	79 01       	movw	r14, r18
    529a:	e6 0e       	add	r14, r22
    529c:	f1 1c       	adc	r15, r1
    529e:	2e 15       	cp	r18, r14
    52a0:	3f 05       	cpc	r19, r15
    52a2:	64 f5       	brge	.+88     	; 0x52fc <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x82>
		b[y] = buffer[i];
    52a4:	fc 01       	movw	r30, r24
    52a6:	e2 0f       	add	r30, r18
    52a8:	f3 1f       	adc	r31, r19
    52aa:	27 89       	ldd	r18, Z+23	; 0x17
    52ac:	da 01       	movw	r26, r20
    52ae:	2c 93       	st	X, r18
		if (buffer[i] == '\0') return b;
    52b0:	27 89       	ldd	r18, Z+23	; 0x17
    52b2:	22 23       	and	r18, r18
    52b4:	41 f1       	breq	.+80     	; 0x5306 <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x8c>
}

char * GPS::retrieve(GPSVAL::VAL value, char * b) {
	uint8_t i,y;
	y = 0;
	for (i = offsets[value]; i<offsets[value] + sizes[value]; i++, y++) {
    52b6:	10 2f       	mov	r17, r16
    52b8:	c8 0f       	add	r28, r24
    52ba:	d9 1f       	adc	r29, r25
    52bc:	be 01       	movw	r22, r28
    52be:	65 5f       	subi	r22, 0xF5	; 245
    52c0:	7f 4f       	sbci	r23, 0xFF	; 255
    52c2:	0c c0       	rjmp	.+24     	; 0x52dc <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x62>
		b[y] = buffer[i];
    52c4:	fc 01       	movw	r30, r24
    52c6:	e2 0f       	add	r30, r18
    52c8:	f3 1f       	adc	r31, r19
    52ca:	27 89       	ldd	r18, Z+23	; 0x17
    52cc:	7a 01       	movw	r14, r20
    52ce:	ea 0e       	add	r14, r26
    52d0:	f1 1c       	adc	r15, r1
    52d2:	d7 01       	movw	r26, r14
    52d4:	2c 93       	st	X, r18
		if (buffer[i] == '\0') return b;
    52d6:	27 89       	ldd	r18, Z+23	; 0x17
    52d8:	22 23       	and	r18, r18
    52da:	a9 f0       	breq	.+42     	; 0x5306 <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x8c>
}

char * GPS::retrieve(GPSVAL::VAL value, char * b) {
	uint8_t i,y;
	y = 0;
	for (i = offsets[value]; i<offsets[value] + sizes[value]; i++, y++) {
    52dc:	1f 5f       	subi	r17, 0xFF	; 255
    52de:	a1 2f       	mov	r26, r17
    52e0:	a0 1b       	sub	r26, r16
    52e2:	21 2f       	mov	r18, r17
    52e4:	30 e0       	ldi	r19, 0x00	; 0
    52e6:	b8 81       	ld	r27, Y
    52e8:	fb 01       	movw	r30, r22
    52ea:	f0 80       	ld	r15, Z
    52ec:	ef 2d       	mov	r30, r15
    52ee:	f0 e0       	ldi	r31, 0x00	; 0
    52f0:	eb 0f       	add	r30, r27
    52f2:	f1 1d       	adc	r31, r1
    52f4:	2e 17       	cp	r18, r30
    52f6:	3f 07       	cpc	r19, r31
    52f8:	2c f3       	brlt	.-54     	; 0x52c4 <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x4a>
    52fa:	01 c0       	rjmp	.+2      	; 0x52fe <_ZN3GPS8retrieveEN6GPSVAL3VALEPc+0x84>

}

char * GPS::retrieve(GPSVAL::VAL value, char * b) {
	uint8_t i,y;
	y = 0;
    52fc:	a0 e0       	ldi	r26, 0x00	; 0
	for (i = offsets[value]; i<offsets[value] + sizes[value]; i++, y++) {
		b[y] = buffer[i];
		if (buffer[i] == '\0') return b;
	}
	b[y] = '\0';
    52fe:	fa 01       	movw	r30, r20
    5300:	ea 0f       	add	r30, r26
    5302:	f1 1d       	adc	r31, r1
    5304:	10 82       	st	Z, r1
	return b;
}
    5306:	ca 01       	movw	r24, r20
    5308:	df 91       	pop	r29
    530a:	cf 91       	pop	r28
    530c:	1f 91       	pop	r17
    530e:	0f 91       	pop	r16
    5310:	ff 90       	pop	r15
    5312:	ef 90       	pop	r14
    5314:	08 95       	ret

00005316 <_ZN3GPS9handleDREEv>:

 void GPS::handleDRE() {
    5316:	0f 93       	push	r16
    5318:	1f 93       	push	r17
    531a:	cf 93       	push	r28
    531c:	df 93       	push	r29
	 if (!uart.txIsEmpty()) {
    531e:	ec 01       	movw	r28, r24
    5320:	cc 5a       	subi	r28, 0xAC	; 172
    5322:	df 4f       	sbci	r29, 0xFF	; 255
    5324:	ce 01       	movw	r24, r28
    5326:	0e 94 5e 3b 	call	0x76bc	; 0x76bc <_ZN10UartDriver9txIsEmptyEv>
    532a:	81 11       	cpse	r24, r1
    532c:	0a c0       	rjmp	.+20     	; 0x5342 <_ZN3GPS9handleDREEv+0x2c>
		 uart.getUARTPort()->DATA = uart.txDequeue();
    532e:	ce 01       	movw	r24, r28
    5330:	0e 94 66 3b 	call	0x76cc	; 0x76cc <_ZN10UartDriver11getUARTPortEv>
    5334:	8c 01       	movw	r16, r24
    5336:	ce 01       	movw	r24, r28
    5338:	0e 94 62 3b 	call	0x76c4	; 0x76c4 <_ZN10UartDriver9txDequeueEv>
    533c:	f8 01       	movw	r30, r16
    533e:	80 83       	st	Z, r24
    5340:	07 c0       	rjmp	.+14     	; 0x5350 <_ZN3GPS9handleDREEv+0x3a>
	 } else {
		 uart.getUARTPort()->CTRLA &= ~(0x03); //Disable DREint
    5342:	ce 01       	movw	r24, r28
    5344:	0e 94 66 3b 	call	0x76cc	; 0x76cc <_ZN10UartDriver11getUARTPortEv>
    5348:	fc 01       	movw	r30, r24
    534a:	23 81       	ldd	r18, Z+3	; 0x03
    534c:	2c 7f       	andi	r18, 0xFC	; 252
    534e:	23 83       	std	Z+3, r18	; 0x03
	 }
 }
    5350:	df 91       	pop	r29
    5352:	cf 91       	pop	r28
    5354:	1f 91       	pop	r17
    5356:	0f 91       	pop	r16
    5358:	08 95       	ret

0000535a <_ZN3GPS14startReceivingEv>:
 
 void GPS::startReceiving() {
	 allowRcv = true;
    535a:	8e 5a       	subi	r24, 0xAE	; 174
    535c:	9f 4f       	sbci	r25, 0xFF	; 255
    535e:	21 e0       	ldi	r18, 0x01	; 1
    5360:	fc 01       	movw	r30, r24
    5362:	20 83       	st	Z, r18
    5364:	08 95       	ret

00005366 <_ZN10LCD_Driver4initEv>:
		asm("NOP");
		_delay_ms(10);
		asm("NOP");
	}
	LCD_DATA_PORT.DIR= 0xFF;
}
    5366:	dc 01       	movw	r26, r24
    5368:	e0 e6       	ldi	r30, 0x60	; 96
    536a:	f6 e0       	ldi	r31, 0x06	; 6
    536c:	81 81       	ldd	r24, Z+1	; 0x01
    536e:	81 60       	ori	r24, 0x01	; 1
    5370:	81 83       	std	Z+1, r24	; 0x01
    5372:	84 81       	ldd	r24, Z+4	; 0x04
    5374:	81 60       	ori	r24, 0x01	; 1
    5376:	84 83       	std	Z+4, r24	; 0x04
    5378:	8f ef       	ldi	r24, 0xFF	; 255
    537a:	e0 e4       	ldi	r30, 0x40	; 64
    537c:	f6 e0       	ldi	r31, 0x06	; 6
    537e:	81 83       	std	Z+1, r24	; 0x01
    5380:	e0 e0       	ldi	r30, 0x00	; 0
    5382:	f6 e0       	ldi	r31, 0x06	; 6
    5384:	81 81       	ldd	r24, Z+1	; 0x01
    5386:	88 60       	ori	r24, 0x08	; 8
    5388:	81 83       	std	Z+1, r24	; 0x01
    538a:	81 81       	ldd	r24, Z+1	; 0x01
    538c:	84 60       	ori	r24, 0x04	; 4
    538e:	81 83       	std	Z+1, r24	; 0x01
    5390:	81 81       	ldd	r24, Z+1	; 0x01
    5392:	82 60       	ori	r24, 0x02	; 2
    5394:	81 83       	std	Z+1, r24	; 0x01
    5396:	81 81       	ldd	r24, Z+1	; 0x01
    5398:	81 60       	ori	r24, 0x01	; 1
    539a:	81 83       	std	Z+1, r24	; 0x01
    539c:	84 81       	ldd	r24, Z+4	; 0x04
    539e:	81 60       	ori	r24, 0x01	; 1
    53a0:	84 83       	std	Z+4, r24	; 0x04
    53a2:	84 81       	ldd	r24, Z+4	; 0x04
    53a4:	84 60       	ori	r24, 0x04	; 4
    53a6:	84 83       	std	Z+4, r24	; 0x04
    53a8:	84 81       	ldd	r24, Z+4	; 0x04
    53aa:	88 60       	ori	r24, 0x08	; 8
    53ac:	84 83       	std	Z+4, r24	; 0x04
    53ae:	84 81       	ldd	r24, Z+4	; 0x04
    53b0:	82 60       	ori	r24, 0x02	; 2
    53b2:	84 83       	std	Z+4, r24	; 0x04
    53b4:	55 96       	adiw	r26, 0x15	; 21
    53b6:	1c 92       	st	X, r1
    53b8:	55 97       	sbiw	r26, 0x15	; 21
    53ba:	1a 96       	adiw	r26, 0x0a	; 10
    53bc:	1d 92       	st	X+, r1
    53be:	1c 92       	st	X, r1
    53c0:	1b 97       	sbiw	r26, 0x0b	; 11
    53c2:	1c 96       	adiw	r26, 0x0c	; 12
    53c4:	1d 92       	st	X+, r1
    53c6:	1c 92       	st	X, r1
    53c8:	1d 97       	sbiw	r26, 0x0d	; 13
    53ca:	81 e0       	ldi	r24, 0x01	; 1
    53cc:	54 96       	adiw	r26, 0x14	; 20
    53ce:	8c 93       	st	X, r24
    53d0:	54 97       	sbiw	r26, 0x14	; 20
    53d2:	50 96       	adiw	r26, 0x10	; 16
    53d4:	1d 92       	st	X+, r1
    53d6:	1c 92       	st	X, r1
    53d8:	51 97       	sbiw	r26, 0x11	; 17
    53da:	80 e4       	ldi	r24, 0x40	; 64
    53dc:	91 e0       	ldi	r25, 0x01	; 1
    53de:	16 96       	adiw	r26, 0x06	; 6
    53e0:	8d 93       	st	X+, r24
    53e2:	9c 93       	st	X, r25
    53e4:	17 97       	sbiw	r26, 0x07	; 7
    53e6:	80 ee       	ldi	r24, 0xE0	; 224
    53e8:	91 e0       	ldi	r25, 0x01	; 1
    53ea:	18 96       	adiw	r26, 0x08	; 8
    53ec:	8d 93       	st	X+, r24
    53ee:	9c 93       	st	X, r25
    53f0:	19 97       	sbiw	r26, 0x09	; 9
    53f2:	08 95       	ret

000053f4 <_ZN10LCD_DriverC1Ev>:
    53f4:	cf 93       	push	r28
    53f6:	df 93       	push	r29
    53f8:	ec 01       	movw	r28, r24
    53fa:	40 ee       	ldi	r20, 0xE0	; 224
    53fc:	51 e0       	ldi	r21, 0x01	; 1
    53fe:	60 e4       	ldi	r22, 0x40	; 64
    5400:	71 e0       	ldi	r23, 0x01	; 1
    5402:	0e 94 88 05 	call	0xb10	; 0xb10 <_ZN12Adafruit_GFXC1Eii>
    5406:	8e ed       	ldi	r24, 0xDE	; 222
    5408:	90 e2       	ldi	r25, 0x20	; 32
    540a:	88 83       	st	Y, r24
    540c:	99 83       	std	Y+1, r25	; 0x01
    540e:	ce 01       	movw	r24, r28
    5410:	aa df       	rcall	.-172    	; 0x5366 <_ZN10LCD_Driver4initEv>
    5412:	df 91       	pop	r29
    5414:	cf 91       	pop	r28
    5416:	08 95       	ret

00005418 <_ZN10LCD_Driver9writeDataEh>:
    5418:	e0 e4       	ldi	r30, 0x40	; 64
    541a:	f6 e0       	ldi	r31, 0x06	; 6
    541c:	64 83       	std	Z+4, r22	; 0x04
    541e:	e0 e0       	ldi	r30, 0x00	; 0
    5420:	f6 e0       	ldi	r31, 0x06	; 6
    5422:	84 81       	ldd	r24, Z+4	; 0x04
    5424:	8b 7f       	andi	r24, 0xFB	; 251
    5426:	84 83       	std	Z+4, r24	; 0x04
    5428:	84 81       	ldd	r24, Z+4	; 0x04
    542a:	84 60       	ori	r24, 0x04	; 4
    542c:	84 83       	std	Z+4, r24	; 0x04
    542e:	08 95       	ret

00005430 <_ZN10LCD_Driver5resetEv>:
    5430:	cf 93       	push	r28
    5432:	df 93       	push	r29
    5434:	e0 e0       	ldi	r30, 0x00	; 0
    5436:	f6 e0       	ldi	r31, 0x06	; 6
    5438:	24 81       	ldd	r18, Z+4	; 0x04
    543a:	21 60       	ori	r18, 0x01	; 1
    543c:	24 83       	std	Z+4, r18	; 0x04
    543e:	24 81       	ldd	r18, Z+4	; 0x04
    5440:	24 60       	ori	r18, 0x04	; 4
    5442:	24 83       	std	Z+4, r18	; 0x04
    5444:	24 81       	ldd	r18, Z+4	; 0x04
    5446:	28 60       	ori	r18, 0x08	; 8
    5448:	24 83       	std	Z+4, r18	; 0x04
    544a:	e0 e6       	ldi	r30, 0x60	; 96
    544c:	f6 e0       	ldi	r31, 0x06	; 6
    544e:	24 81       	ldd	r18, Z+4	; 0x04
    5450:	2e 7f       	andi	r18, 0xFE	; 254
    5452:	24 83       	std	Z+4, r18	; 0x04
    5454:	e7 ee       	ldi	r30, 0xE7	; 231
    5456:	f3 e0       	ldi	r31, 0x03	; 3
    5458:	31 97       	sbiw	r30, 0x01	; 1
    545a:	f1 f7       	brne	.-4      	; 0x5458 <_ZN10LCD_Driver5resetEv+0x28>
    545c:	00 c0       	rjmp	.+0      	; 0x545e <_ZN10LCD_Driver5resetEv+0x2e>
    545e:	00 00       	nop
    5460:	e0 e6       	ldi	r30, 0x60	; 96
    5462:	f6 e0       	ldi	r31, 0x06	; 6
    5464:	24 81       	ldd	r18, Z+4	; 0x04
    5466:	21 60       	ori	r18, 0x01	; 1
    5468:	24 83       	std	Z+4, r18	; 0x04
    546a:	c0 e0       	ldi	r28, 0x00	; 0
    546c:	d6 e0       	ldi	r29, 0x06	; 6
    546e:	2c 81       	ldd	r18, Y+4	; 0x04
    5470:	2e 7f       	andi	r18, 0xFE	; 254
    5472:	2c 83       	std	Y+4, r18	; 0x04
    5474:	2c 81       	ldd	r18, Y+4	; 0x04
    5476:	2d 7f       	andi	r18, 0xFD	; 253
    5478:	2c 83       	std	Y+4, r18	; 0x04
    547a:	60 e0       	ldi	r22, 0x00	; 0
    547c:	cd df       	rcall	.-102    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    547e:	8c 81       	ldd	r24, Y+4	; 0x04
    5480:	8b 7f       	andi	r24, 0xFB	; 251
    5482:	8c 83       	std	Y+4, r24	; 0x04
    5484:	8c 81       	ldd	r24, Y+4	; 0x04
    5486:	84 60       	ori	r24, 0x04	; 4
    5488:	8c 83       	std	Y+4, r24	; 0x04
    548a:	8c 81       	ldd	r24, Y+4	; 0x04
    548c:	8b 7f       	andi	r24, 0xFB	; 251
    548e:	8c 83       	std	Y+4, r24	; 0x04
    5490:	8c 81       	ldd	r24, Y+4	; 0x04
    5492:	84 60       	ori	r24, 0x04	; 4
    5494:	8c 83       	std	Y+4, r24	; 0x04
    5496:	8c 81       	ldd	r24, Y+4	; 0x04
    5498:	8b 7f       	andi	r24, 0xFB	; 251
    549a:	8c 83       	std	Y+4, r24	; 0x04
    549c:	8c 81       	ldd	r24, Y+4	; 0x04
    549e:	84 60       	ori	r24, 0x04	; 4
    54a0:	8c 83       	std	Y+4, r24	; 0x04
    54a2:	8c 81       	ldd	r24, Y+4	; 0x04
    54a4:	81 60       	ori	r24, 0x01	; 1
    54a6:	8c 83       	std	Y+4, r24	; 0x04
    54a8:	df 91       	pop	r29
    54aa:	cf 91       	pop	r28
    54ac:	08 95       	ret

000054ae <_ZN10LCD_Driver5beginEv>:
    54ae:	ef 92       	push	r14
    54b0:	ff 92       	push	r15
    54b2:	0f 93       	push	r16
    54b4:	1f 93       	push	r17
    54b6:	cf 93       	push	r28
    54b8:	df 93       	push	r29
    54ba:	cd b7       	in	r28, 0x3d	; 61
    54bc:	de b7       	in	r29, 0x3e	; 62
    54be:	25 97       	sbiw	r28, 0x05	; 5
    54c0:	cd bf       	out	0x3d, r28	; 61
    54c2:	de bf       	out	0x3e, r29	; 62
    54c4:	8c 01       	movw	r16, r24
    54c6:	1d 82       	std	Y+5, r1	; 0x05
    54c8:	b3 df       	rcall	.-154    	; 0x5430 <_ZN10LCD_Driver5resetEv>
    54ca:	2f e7       	ldi	r18, 0x7F	; 127
    54cc:	88 e3       	ldi	r24, 0x38	; 56
    54ce:	91 e0       	ldi	r25, 0x01	; 1
    54d0:	21 50       	subi	r18, 0x01	; 1
    54d2:	80 40       	sbci	r24, 0x00	; 0
    54d4:	90 40       	sbci	r25, 0x00	; 0
    54d6:	e1 f7       	brne	.-8      	; 0x54d0 <_ZN10LCD_Driver5beginEv+0x22>
    54d8:	00 c0       	rjmp	.+0      	; 0x54da <_ZN10LCD_Driver5beginEv+0x2c>
    54da:	00 00       	nop
    54dc:	e0 e0       	ldi	r30, 0x00	; 0
    54de:	f6 e0       	ldi	r31, 0x06	; 6
    54e0:	84 81       	ldd	r24, Z+4	; 0x04
    54e2:	8e 7f       	andi	r24, 0xFE	; 254
    54e4:	84 83       	std	Z+4, r24	; 0x04
    54e6:	0f 2e       	mov	r0, r31
    54e8:	e1 2c       	mov	r14, r1
    54ea:	f6 e0       	ldi	r31, 0x06	; 6
    54ec:	ff 2e       	mov	r15, r31
    54ee:	f0 2d       	mov	r31, r0
    54f0:	49 c0       	rjmp	.+146    	; 0x5584 <_ZN10LCD_Driver5beginEv+0xd6>
    54f2:	ed 81       	ldd	r30, Y+5	; 0x05
    54f4:	81 e0       	ldi	r24, 0x01	; 1
    54f6:	8e 0f       	add	r24, r30
    54f8:	8d 83       	std	Y+5, r24	; 0x05
    54fa:	f0 e0       	ldi	r31, 0x00	; 0
    54fc:	ec 56       	subi	r30, 0x6C	; 108
    54fe:	ff 4d       	sbci	r31, 0xDF	; 223
    5500:	80 81       	ld	r24, Z
    5502:	8c 83       	std	Y+4, r24	; 0x04
    5504:	ed 81       	ldd	r30, Y+5	; 0x05
    5506:	81 e0       	ldi	r24, 0x01	; 1
    5508:	8e 0f       	add	r24, r30
    550a:	8d 83       	std	Y+5, r24	; 0x05
    550c:	f0 e0       	ldi	r31, 0x00	; 0
    550e:	ec 56       	subi	r30, 0x6C	; 108
    5510:	ff 4d       	sbci	r31, 0xDF	; 223
    5512:	80 81       	ld	r24, Z
    5514:	8b 83       	std	Y+3, r24	; 0x03
    5516:	8c 81       	ldd	r24, Y+4	; 0x04
    5518:	81 11       	cpse	r24, r1
    551a:	0a c0       	rjmp	.+20     	; 0x5530 <_ZN10LCD_Driver5beginEv+0x82>
    551c:	ef eb       	ldi	r30, 0xBF	; 191
    551e:	f4 ed       	ldi	r31, 0xD4	; 212
    5520:	21 e0       	ldi	r18, 0x01	; 1
    5522:	e1 50       	subi	r30, 0x01	; 1
    5524:	f0 40       	sbci	r31, 0x00	; 0
    5526:	20 40       	sbci	r18, 0x00	; 0
    5528:	e1 f7       	brne	.-8      	; 0x5522 <_ZN10LCD_Driver5beginEv+0x74>
    552a:	00 c0       	rjmp	.+0      	; 0x552c <_ZN10LCD_Driver5beginEv+0x7e>
    552c:	00 00       	nop
    552e:	2a c0       	rjmp	.+84     	; 0x5584 <_ZN10LCD_Driver5beginEv+0xd6>
    5530:	f7 01       	movw	r30, r14
    5532:	84 81       	ldd	r24, Z+4	; 0x04
    5534:	8e 7f       	andi	r24, 0xFE	; 254
    5536:	84 83       	std	Z+4, r24	; 0x04
    5538:	84 81       	ldd	r24, Z+4	; 0x04
    553a:	8d 7f       	andi	r24, 0xFD	; 253
    553c:	84 83       	std	Z+4, r24	; 0x04
    553e:	6c 81       	ldd	r22, Y+4	; 0x04
    5540:	c8 01       	movw	r24, r16
    5542:	6a df       	rcall	.-300    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    5544:	f7 01       	movw	r30, r14
    5546:	84 81       	ldd	r24, Z+4	; 0x04
    5548:	82 60       	ori	r24, 0x02	; 2
    554a:	84 83       	std	Z+4, r24	; 0x04
    554c:	1a 82       	std	Y+2, r1	; 0x02
    554e:	9a 81       	ldd	r25, Y+2	; 0x02
    5550:	8b 81       	ldd	r24, Y+3	; 0x03
    5552:	98 17       	cp	r25, r24
    5554:	98 f4       	brcc	.+38     	; 0x557c <_ZN10LCD_Driver5beginEv+0xce>
    5556:	ed 81       	ldd	r30, Y+5	; 0x05
    5558:	81 e0       	ldi	r24, 0x01	; 1
    555a:	8e 0f       	add	r24, r30
    555c:	8d 83       	std	Y+5, r24	; 0x05
    555e:	f0 e0       	ldi	r31, 0x00	; 0
    5560:	ec 56       	subi	r30, 0x6C	; 108
    5562:	ff 4d       	sbci	r31, 0xDF	; 223
    5564:	80 81       	ld	r24, Z
    5566:	89 83       	std	Y+1, r24	; 0x01
    5568:	69 81       	ldd	r22, Y+1	; 0x01
    556a:	c8 01       	movw	r24, r16
    556c:	55 df       	rcall	.-342    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    556e:	8a 81       	ldd	r24, Y+2	; 0x02
    5570:	8f 5f       	subi	r24, 0xFF	; 255
    5572:	8a 83       	std	Y+2, r24	; 0x02
    5574:	9a 81       	ldd	r25, Y+2	; 0x02
    5576:	8b 81       	ldd	r24, Y+3	; 0x03
    5578:	98 17       	cp	r25, r24
    557a:	68 f3       	brcs	.-38     	; 0x5556 <_ZN10LCD_Driver5beginEv+0xa8>
    557c:	f7 01       	movw	r30, r14
    557e:	84 81       	ldd	r24, Z+4	; 0x04
    5580:	81 60       	ori	r24, 0x01	; 1
    5582:	84 83       	std	Z+4, r24	; 0x04
    5584:	8d 81       	ldd	r24, Y+5	; 0x05
    5586:	86 34       	cpi	r24, 0x46	; 70
    5588:	08 f4       	brcc	.+2      	; 0x558c <_ZN10LCD_Driver5beginEv+0xde>
    558a:	b3 cf       	rjmp	.-154    	; 0x54f2 <_ZN10LCD_Driver5beginEv+0x44>
    558c:	25 96       	adiw	r28, 0x05	; 5
    558e:	cd bf       	out	0x3d, r28	; 61
    5590:	de bf       	out	0x3e, r29	; 62
    5592:	df 91       	pop	r29
    5594:	cf 91       	pop	r28
    5596:	1f 91       	pop	r17
    5598:	0f 91       	pop	r16
    559a:	ff 90       	pop	r15
    559c:	ef 90       	pop	r14
    559e:	08 95       	ret

000055a0 <_ZN10LCD_Driver5floodEjm>:
    55a0:	4f 92       	push	r4
    55a2:	5f 92       	push	r5
    55a4:	6f 92       	push	r6
    55a6:	7f 92       	push	r7
    55a8:	af 92       	push	r10
    55aa:	bf 92       	push	r11
    55ac:	cf 92       	push	r12
    55ae:	df 92       	push	r13
    55b0:	ef 92       	push	r14
    55b2:	ff 92       	push	r15
    55b4:	0f 93       	push	r16
    55b6:	1f 93       	push	r17
    55b8:	cf 93       	push	r28
    55ba:	df 93       	push	r29
    55bc:	cd b7       	in	r28, 0x3d	; 61
    55be:	de b7       	in	r29, 0x3e	; 62
    55c0:	28 97       	sbiw	r28, 0x08	; 8
    55c2:	cd bf       	out	0x3d, r28	; 61
    55c4:	de bf       	out	0x3e, r29	; 62
    55c6:	8c 01       	movw	r16, r24
    55c8:	d6 2e       	mov	r13, r22
    55ca:	c7 2e       	mov	r12, r23
    55cc:	29 01       	movw	r4, r18
    55ce:	3a 01       	movw	r6, r20
    55d0:	b7 2e       	mov	r11, r23
    55d2:	a6 2e       	mov	r10, r22
    55d4:	0f 2e       	mov	r0, r31
    55d6:	e1 2c       	mov	r14, r1
    55d8:	f6 e0       	ldi	r31, 0x06	; 6
    55da:	ff 2e       	mov	r15, r31
    55dc:	f0 2d       	mov	r31, r0
    55de:	f7 01       	movw	r30, r14
    55e0:	84 81       	ldd	r24, Z+4	; 0x04
    55e2:	8e 7f       	andi	r24, 0xFE	; 254
    55e4:	84 83       	std	Z+4, r24	; 0x04
    55e6:	84 81       	ldd	r24, Z+4	; 0x04
    55e8:	8d 7f       	andi	r24, 0xFD	; 253
    55ea:	84 83       	std	Z+4, r24	; 0x04
    55ec:	6c e2       	ldi	r22, 0x2C	; 44
    55ee:	c8 01       	movw	r24, r16
    55f0:	13 df       	rcall	.-474    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    55f2:	f7 01       	movw	r30, r14
    55f4:	84 81       	ldd	r24, Z+4	; 0x04
    55f6:	82 60       	ori	r24, 0x02	; 2
    55f8:	84 83       	std	Z+4, r24	; 0x04
    55fa:	6c 2d       	mov	r22, r12
    55fc:	c8 01       	movw	r24, r16
    55fe:	0c df       	rcall	.-488    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    5600:	6d 2d       	mov	r22, r13
    5602:	c8 01       	movw	r24, r16
    5604:	09 df       	rcall	.-494    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    5606:	cd 10       	cpse	r12, r13
    5608:	38 c0       	rjmp	.+112    	; 0x567a <_ZN10LCD_Driver5floodEjm+0xda>
    560a:	1d 82       	std	Y+5, r1	; 0x05
    560c:	1e 82       	std	Y+6, r1	; 0x06
    560e:	1f 82       	std	Y+7, r1	; 0x07
    5610:	18 86       	std	Y+8, r1	; 0x08
    5612:	73 01       	movw	r14, r6
    5614:	62 01       	movw	r12, r4
    5616:	f1 e0       	ldi	r31, 0x01	; 1
    5618:	cf 1a       	sub	r12, r31
    561a:	d1 08       	sbc	r13, r1
    561c:	e1 08       	sbc	r14, r1
    561e:	f1 08       	sbc	r15, r1
    5620:	8d 81       	ldd	r24, Y+5	; 0x05
    5622:	9e 81       	ldd	r25, Y+6	; 0x06
    5624:	af 81       	ldd	r26, Y+7	; 0x07
    5626:	b8 85       	ldd	r27, Y+8	; 0x08
    5628:	8c 15       	cp	r24, r12
    562a:	9d 05       	cpc	r25, r13
    562c:	ae 05       	cpc	r26, r14
    562e:	bf 05       	cpc	r27, r15
    5630:	08 f0       	brcs	.+2      	; 0x5634 <_ZN10LCD_Driver5floodEjm+0x94>
    5632:	51 c0       	rjmp	.+162    	; 0x56d6 <_ZN10LCD_Driver5floodEjm+0x136>
    5634:	e0 e0       	ldi	r30, 0x00	; 0
    5636:	f6 e0       	ldi	r31, 0x06	; 6
    5638:	84 81       	ldd	r24, Z+4	; 0x04
    563a:	8b 7f       	andi	r24, 0xFB	; 251
    563c:	84 83       	std	Z+4, r24	; 0x04
    563e:	84 81       	ldd	r24, Z+4	; 0x04
    5640:	84 60       	ori	r24, 0x04	; 4
    5642:	84 83       	std	Z+4, r24	; 0x04
    5644:	84 81       	ldd	r24, Z+4	; 0x04
    5646:	8b 7f       	andi	r24, 0xFB	; 251
    5648:	84 83       	std	Z+4, r24	; 0x04
    564a:	84 81       	ldd	r24, Z+4	; 0x04
    564c:	84 60       	ori	r24, 0x04	; 4
    564e:	84 83       	std	Z+4, r24	; 0x04
    5650:	8d 81       	ldd	r24, Y+5	; 0x05
    5652:	9e 81       	ldd	r25, Y+6	; 0x06
    5654:	af 81       	ldd	r26, Y+7	; 0x07
    5656:	b8 85       	ldd	r27, Y+8	; 0x08
    5658:	01 96       	adiw	r24, 0x01	; 1
    565a:	a1 1d       	adc	r26, r1
    565c:	b1 1d       	adc	r27, r1
    565e:	8d 83       	std	Y+5, r24	; 0x05
    5660:	9e 83       	std	Y+6, r25	; 0x06
    5662:	af 83       	std	Y+7, r26	; 0x07
    5664:	b8 87       	std	Y+8, r27	; 0x08
    5666:	8d 81       	ldd	r24, Y+5	; 0x05
    5668:	9e 81       	ldd	r25, Y+6	; 0x06
    566a:	af 81       	ldd	r26, Y+7	; 0x07
    566c:	b8 85       	ldd	r27, Y+8	; 0x08
    566e:	8c 15       	cp	r24, r12
    5670:	9d 05       	cpc	r25, r13
    5672:	ae 05       	cpc	r26, r14
    5674:	bf 05       	cpc	r27, r15
    5676:	00 f3       	brcs	.-64     	; 0x5638 <_ZN10LCD_Driver5floodEjm+0x98>
    5678:	2e c0       	rjmp	.+92     	; 0x56d6 <_ZN10LCD_Driver5floodEjm+0x136>
    567a:	19 82       	std	Y+1, r1	; 0x01
    567c:	1a 82       	std	Y+2, r1	; 0x02
    567e:	1b 82       	std	Y+3, r1	; 0x03
    5680:	1c 82       	std	Y+4, r1	; 0x04
    5682:	73 01       	movw	r14, r6
    5684:	62 01       	movw	r12, r4
    5686:	81 e0       	ldi	r24, 0x01	; 1
    5688:	c8 1a       	sub	r12, r24
    568a:	d1 08       	sbc	r13, r1
    568c:	e1 08       	sbc	r14, r1
    568e:	f1 08       	sbc	r15, r1
    5690:	89 81       	ldd	r24, Y+1	; 0x01
    5692:	9a 81       	ldd	r25, Y+2	; 0x02
    5694:	ab 81       	ldd	r26, Y+3	; 0x03
    5696:	bc 81       	ldd	r27, Y+4	; 0x04
    5698:	8c 15       	cp	r24, r12
    569a:	9d 05       	cpc	r25, r13
    569c:	ae 05       	cpc	r26, r14
    569e:	bf 05       	cpc	r27, r15
    56a0:	d0 f4       	brcc	.+52     	; 0x56d6 <_ZN10LCD_Driver5floodEjm+0x136>
    56a2:	6b 2d       	mov	r22, r11
    56a4:	c8 01       	movw	r24, r16
    56a6:	b8 de       	rcall	.-656    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    56a8:	6a 2d       	mov	r22, r10
    56aa:	c8 01       	movw	r24, r16
    56ac:	b5 de       	rcall	.-662    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    56ae:	89 81       	ldd	r24, Y+1	; 0x01
    56b0:	9a 81       	ldd	r25, Y+2	; 0x02
    56b2:	ab 81       	ldd	r26, Y+3	; 0x03
    56b4:	bc 81       	ldd	r27, Y+4	; 0x04
    56b6:	01 96       	adiw	r24, 0x01	; 1
    56b8:	a1 1d       	adc	r26, r1
    56ba:	b1 1d       	adc	r27, r1
    56bc:	89 83       	std	Y+1, r24	; 0x01
    56be:	9a 83       	std	Y+2, r25	; 0x02
    56c0:	ab 83       	std	Y+3, r26	; 0x03
    56c2:	bc 83       	std	Y+4, r27	; 0x04
    56c4:	49 81       	ldd	r20, Y+1	; 0x01
    56c6:	5a 81       	ldd	r21, Y+2	; 0x02
    56c8:	6b 81       	ldd	r22, Y+3	; 0x03
    56ca:	7c 81       	ldd	r23, Y+4	; 0x04
    56cc:	4c 15       	cp	r20, r12
    56ce:	5d 05       	cpc	r21, r13
    56d0:	6e 05       	cpc	r22, r14
    56d2:	7f 05       	cpc	r23, r15
    56d4:	30 f3       	brcs	.-52     	; 0x56a2 <_ZN10LCD_Driver5floodEjm+0x102>
    56d6:	e0 e0       	ldi	r30, 0x00	; 0
    56d8:	f6 e0       	ldi	r31, 0x06	; 6
    56da:	84 81       	ldd	r24, Z+4	; 0x04
    56dc:	81 60       	ori	r24, 0x01	; 1
    56de:	84 83       	std	Z+4, r24	; 0x04
    56e0:	28 96       	adiw	r28, 0x08	; 8
    56e2:	cd bf       	out	0x3d, r28	; 61
    56e4:	de bf       	out	0x3e, r29	; 62
    56e6:	df 91       	pop	r29
    56e8:	cf 91       	pop	r28
    56ea:	1f 91       	pop	r17
    56ec:	0f 91       	pop	r16
    56ee:	ff 90       	pop	r15
    56f0:	ef 90       	pop	r14
    56f2:	df 90       	pop	r13
    56f4:	cf 90       	pop	r12
    56f6:	bf 90       	pop	r11
    56f8:	af 90       	pop	r10
    56fa:	7f 90       	pop	r7
    56fc:	6f 90       	pop	r6
    56fe:	5f 90       	pop	r5
    5700:	4f 90       	pop	r4
    5702:	08 95       	ret

00005704 <_ZN10LCD_Driver15writeRegister32Ehm>:
	writeRegister32(HX8357_PASET, t);
	CS_IDLE;
}

void LCD_Driver::writeRegister32(uint8_t r, uint32_t d) 
{
    5704:	cf 92       	push	r12
    5706:	df 92       	push	r13
    5708:	ef 92       	push	r14
    570a:	ff 92       	push	r15
    570c:	0f 93       	push	r16
    570e:	1f 93       	push	r17
    5710:	cf 93       	push	r28
    5712:	df 93       	push	r29
    5714:	ec 01       	movw	r28, r24
    5716:	69 01       	movw	r12, r18
    5718:	7a 01       	movw	r14, r20
    CS_ACTIVE;
    571a:	00 e0       	ldi	r16, 0x00	; 0
    571c:	16 e0       	ldi	r17, 0x06	; 6
    571e:	f8 01       	movw	r30, r16
    5720:	84 81       	ldd	r24, Z+4	; 0x04
    5722:	8e 7f       	andi	r24, 0xFE	; 254
    5724:	84 83       	std	Z+4, r24	; 0x04
    CD_COMMAND;
    5726:	84 81       	ldd	r24, Z+4	; 0x04
    5728:	8d 7f       	andi	r24, 0xFD	; 253
    572a:	84 83       	std	Z+4, r24	; 0x04
    writeData(r);
    572c:	ce 01       	movw	r24, r28
    572e:	74 de       	rcall	.-792    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    CD_DATA;
    5730:	f8 01       	movw	r30, r16
    5732:	84 81       	ldd	r24, Z+4	; 0x04
    5734:	82 60       	ori	r24, 0x02	; 2
    5736:	84 83       	std	Z+4, r24	; 0x04
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    5738:	f6 e0       	ldi	r31, 0x06	; 6
    573a:	fa 95       	dec	r31
    573c:	f1 f7       	brne	.-4      	; 0x573a <_ZN10LCD_Driver15writeRegister32Ehm+0x36>
    573e:	00 c0       	rjmp	.+0      	; 0x5740 <_ZN10LCD_Driver15writeRegister32Ehm+0x3c>
    _delay_us(10);
    writeData(d >> 24);
    5740:	6f 2d       	mov	r22, r15
    5742:	77 27       	eor	r23, r23
    5744:	88 27       	eor	r24, r24
    5746:	99 27       	eor	r25, r25
    5748:	ce 01       	movw	r24, r28
    574a:	66 de       	rcall	.-820    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    574c:	86 e0       	ldi	r24, 0x06	; 6
    574e:	8a 95       	dec	r24
    5750:	f1 f7       	brne	.-4      	; 0x574e <_ZN10LCD_Driver15writeRegister32Ehm+0x4a>
    5752:	00 c0       	rjmp	.+0      	; 0x5754 <_ZN10LCD_Driver15writeRegister32Ehm+0x50>
    _delay_us(10);
    writeData(d >> 16);
    5754:	b7 01       	movw	r22, r14
    5756:	88 27       	eor	r24, r24
    5758:	99 27       	eor	r25, r25
    575a:	ce 01       	movw	r24, r28
    575c:	5d de       	rcall	.-838    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    575e:	e6 e0       	ldi	r30, 0x06	; 6
    5760:	ea 95       	dec	r30
    5762:	f1 f7       	brne	.-4      	; 0x5760 <_ZN10LCD_Driver15writeRegister32Ehm+0x5c>
    5764:	00 c0       	rjmp	.+0      	; 0x5766 <_ZN10LCD_Driver15writeRegister32Ehm+0x62>
    _delay_us(10);
    writeData(d >> 8);
    5766:	99 27       	eor	r25, r25
    5768:	8f 2d       	mov	r24, r15
    576a:	7e 2d       	mov	r23, r14
    576c:	6d 2d       	mov	r22, r13
    576e:	ce 01       	movw	r24, r28
    5770:	53 de       	rcall	.-858    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    5772:	f6 e0       	ldi	r31, 0x06	; 6
    5774:	fa 95       	dec	r31
    5776:	f1 f7       	brne	.-4      	; 0x5774 <_ZN10LCD_Driver15writeRegister32Ehm+0x70>
    5778:	00 c0       	rjmp	.+0      	; 0x577a <_ZN10LCD_Driver15writeRegister32Ehm+0x76>
    _delay_us(10);
    writeData(d);
    577a:	6c 2d       	mov	r22, r12
    577c:	ce 01       	movw	r24, r28
    577e:	4c de       	rcall	.-872    	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
    CS_IDLE;
    5780:	e0 e0       	ldi	r30, 0x00	; 0
    5782:	f6 e0       	ldi	r31, 0x06	; 6
    5784:	84 81       	ldd	r24, Z+4	; 0x04
    5786:	81 60       	ori	r24, 0x01	; 1
    5788:	84 83       	std	Z+4, r24	; 0x04
}
    578a:	df 91       	pop	r29
    578c:	cf 91       	pop	r28
    578e:	1f 91       	pop	r17
    5790:	0f 91       	pop	r16
    5792:	ff 90       	pop	r15
    5794:	ef 90       	pop	r14
    5796:	df 90       	pop	r13
    5798:	cf 90       	pop	r12
    579a:	08 95       	ret

0000579c <_ZN10LCD_Driver13setAddrWindowEjjjj>:
	LCD_DATA_PORT.DIR= 0xFF;
}


void LCD_Driver::setAddrWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2)
{
    579c:	cf 92       	push	r12
    579e:	df 92       	push	r13
    57a0:	ef 92       	push	r14
    57a2:	ff 92       	push	r15
    57a4:	0f 93       	push	r16
    57a6:	1f 93       	push	r17
    57a8:	cf 93       	push	r28
    57aa:	df 93       	push	r29
    57ac:	7c 01       	movw	r14, r24
    57ae:	6a 01       	movw	r12, r20
    57b0:	c9 01       	movw	r24, r18
	CS_ACTIVE;
    57b2:	c0 e0       	ldi	r28, 0x00	; 0
    57b4:	d6 e0       	ldi	r29, 0x06	; 6
    57b6:	2c 81       	ldd	r18, Y+4	; 0x04
    57b8:	2e 7f       	andi	r18, 0xFE	; 254
    57ba:	2c 83       	std	Y+4, r18	; 0x04
	uint32_t t;

	t = x1;
    57bc:	ab 01       	movw	r20, r22
    57be:	60 e0       	ldi	r22, 0x00	; 0
    57c0:	70 e0       	ldi	r23, 0x00	; 0
	t <<= 16;
    57c2:	ba 01       	movw	r22, r20
    57c4:	55 27       	eor	r21, r21
    57c6:	44 27       	eor	r20, r20
	t |= x2;
    57c8:	a0 e0       	ldi	r26, 0x00	; 0
    57ca:	b0 e0       	ldi	r27, 0x00	; 0
    57cc:	9a 01       	movw	r18, r20
    57ce:	ab 01       	movw	r20, r22
    57d0:	28 2b       	or	r18, r24
    57d2:	39 2b       	or	r19, r25
    57d4:	4a 2b       	or	r20, r26
    57d6:	5b 2b       	or	r21, r27
	//TODO move register
	//writeRegister32(ILI9341_COLADDRSET, t);  // HX8357D uses same registers!
	writeRegister32(HX8357_CASET, t);
    57d8:	6a e2       	ldi	r22, 0x2A	; 42
    57da:	c7 01       	movw	r24, r14
    57dc:	93 df       	rcall	.-218    	; 0x5704 <_ZN10LCD_Driver15writeRegister32Ehm>
	t = y1;
    57de:	a6 01       	movw	r20, r12
    57e0:	60 e0       	ldi	r22, 0x00	; 0
    57e2:	70 e0       	ldi	r23, 0x00	; 0
	t <<= 16;
    57e4:	ba 01       	movw	r22, r20
    57e6:	55 27       	eor	r21, r21
    57e8:	44 27       	eor	r20, r20
	t |= y2;
    57ea:	20 e0       	ldi	r18, 0x00	; 0
    57ec:	30 e0       	ldi	r19, 0x00	; 0
    57ee:	db 01       	movw	r26, r22
    57f0:	ca 01       	movw	r24, r20
    57f2:	80 2b       	or	r24, r16
    57f4:	91 2b       	or	r25, r17
    57f6:	a2 2b       	or	r26, r18
    57f8:	b3 2b       	or	r27, r19
    57fa:	9c 01       	movw	r18, r24
    57fc:	ad 01       	movw	r20, r26
	//TODO move register
	//writeRegister32(ILI9341_PAGEADDRSET, t); // HX8357D uses same registers!
	writeRegister32(HX8357_PASET, t);
    57fe:	6b e2       	ldi	r22, 0x2B	; 43
    5800:	c7 01       	movw	r24, r14
    5802:	80 df       	rcall	.-256    	; 0x5704 <_ZN10LCD_Driver15writeRegister32Ehm>
	CS_IDLE;
    5804:	8c 81       	ldd	r24, Y+4	; 0x04
    5806:	81 60       	ori	r24, 0x01	; 1
    5808:	8c 83       	std	Y+4, r24	; 0x04
}
    580a:	df 91       	pop	r29
    580c:	cf 91       	pop	r28
    580e:	1f 91       	pop	r17
    5810:	0f 91       	pop	r16
    5812:	ff 90       	pop	r15
    5814:	ef 90       	pop	r14
    5816:	df 90       	pop	r13
    5818:	cf 90       	pop	r12
    581a:	08 95       	ret

0000581c <_ZN10LCD_Driver11setRotationEh>:

  CS_IDLE;
}

void LCD_Driver::setRotation(uint8_t x)
{
    581c:	ff 92       	push	r15
    581e:	0f 93       	push	r16
    5820:	1f 93       	push	r17
    5822:	cf 93       	push	r28
    5824:	df 93       	push	r29
    5826:	ec 01       	movw	r28, r24
    Adafruit_GFX::setRotation(x);
    5828:	0e 94 1a 07 	call	0xe34	; 0xe34 <_ZN12Adafruit_GFX11setRotationEh>
	CS_ACTIVE;
    582c:	e0 e0       	ldi	r30, 0x00	; 0
    582e:	f6 e0       	ldi	r31, 0x06	; 6
    5830:	84 81       	ldd	r24, Z+4	; 0x04
    5832:	8e 7f       	andi	r24, 0xFE	; 254
    5834:	84 83       	std	Z+4, r24	; 0x04

	uint8_t t;
	switch (rotation)
    5836:	8d 89       	ldd	r24, Y+21	; 0x15
    5838:	81 30       	cpi	r24, 0x01	; 1
    583a:	31 f0       	breq	.+12     	; 0x5848 <_ZN10LCD_Driver11setRotationEh+0x2c>
    583c:	88 f0       	brcs	.+34     	; 0x5860 <_ZN10LCD_Driver11setRotationEh+0x44>
    583e:	82 30       	cpi	r24, 0x02	; 2
    5840:	41 f0       	breq	.+16     	; 0x5852 <_ZN10LCD_Driver11setRotationEh+0x36>
    5842:	83 30       	cpi	r24, 0x03	; 3
    5844:	41 f0       	breq	.+16     	; 0x5856 <_ZN10LCD_Driver11setRotationEh+0x3a>
    5846:	10 c0       	rjmp	.+32     	; 0x5868 <_ZN10LCD_Driver11setRotationEh+0x4c>
	{
	    case 0: t = HX8357B_MADCTL_MX | HX8357B_MADCTL_MY | HX8357B_MADCTL_RGB; break;
		case 1: t = HX8357B_MADCTL_MY | HX8357B_MADCTL_MV | HX8357B_MADCTL_RGB; break;
    5848:	0f 2e       	mov	r0, r31
    584a:	f0 ea       	ldi	r31, 0xA0	; 160
    584c:	ff 2e       	mov	r15, r31
    584e:	f0 2d       	mov	r31, r0
    5850:	0b c0       	rjmp	.+22     	; 0x5868 <_ZN10LCD_Driver11setRotationEh+0x4c>
		case 2: t = HX8357B_MADCTL_RGB; break;
    5852:	f1 2c       	mov	r15, r1
    5854:	09 c0       	rjmp	.+18     	; 0x5868 <_ZN10LCD_Driver11setRotationEh+0x4c>
		case 3: t = HX8357B_MADCTL_MX | HX8357B_MADCTL_MV | HX8357B_MADCTL_RGB; break;
    5856:	0f 2e       	mov	r0, r31
    5858:	f0 e6       	ldi	r31, 0x60	; 96
    585a:	ff 2e       	mov	r15, r31
    585c:	f0 2d       	mov	r31, r0
    585e:	04 c0       	rjmp	.+8      	; 0x5868 <_ZN10LCD_Driver11setRotationEh+0x4c>
	CS_ACTIVE;

	uint8_t t;
	switch (rotation)
	{
	    case 0: t = HX8357B_MADCTL_MX | HX8357B_MADCTL_MY | HX8357B_MADCTL_RGB; break;
    5860:	0f 2e       	mov	r0, r31
    5862:	f0 ec       	ldi	r31, 0xC0	; 192
    5864:	ff 2e       	mov	r15, r31
    5866:	f0 2d       	mov	r31, r0
		case 1: t = HX8357B_MADCTL_MY | HX8357B_MADCTL_MV | HX8357B_MADCTL_RGB; break;
		case 2: t = HX8357B_MADCTL_RGB; break;
		case 3: t = HX8357B_MADCTL_MX | HX8357B_MADCTL_MV | HX8357B_MADCTL_RGB; break;
	}

	CD_COMMAND;
    5868:	00 e0       	ldi	r16, 0x00	; 0
    586a:	16 e0       	ldi	r17, 0x06	; 6
    586c:	f8 01       	movw	r30, r16
    586e:	84 81       	ldd	r24, Z+4	; 0x04
    5870:	8d 7f       	andi	r24, 0xFD	; 253
    5872:	84 83       	std	Z+4, r24	; 0x04
	writeData(ILI9341_MADCTL);
    5874:	66 e3       	ldi	r22, 0x36	; 54
    5876:	ce 01       	movw	r24, r28
    5878:	cf dd       	rcall	.-1122   	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
	CD_DATA;
    587a:	f8 01       	movw	r30, r16
    587c:	84 81       	ldd	r24, Z+4	; 0x04
    587e:	82 60       	ori	r24, 0x02	; 2
    5880:	84 83       	std	Z+4, r24	; 0x04
	writeData(t);
    5882:	6f 2d       	mov	r22, r15
    5884:	ce 01       	movw	r24, r28
    5886:	c8 dd       	rcall	.-1136   	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
	setAddrWindow(0, 0, _width-1, _height-1);
    5888:	08 85       	ldd	r16, Y+8	; 0x08
    588a:	19 85       	ldd	r17, Y+9	; 0x09
    588c:	01 50       	subi	r16, 0x01	; 1
    588e:	11 09       	sbc	r17, r1
    5890:	2e 81       	ldd	r18, Y+6	; 0x06
    5892:	3f 81       	ldd	r19, Y+7	; 0x07
    5894:	21 50       	subi	r18, 0x01	; 1
    5896:	31 09       	sbc	r19, r1
    5898:	40 e0       	ldi	r20, 0x00	; 0
    589a:	50 e0       	ldi	r21, 0x00	; 0
    589c:	60 e0       	ldi	r22, 0x00	; 0
    589e:	70 e0       	ldi	r23, 0x00	; 0
    58a0:	ce 01       	movw	r24, r28
    58a2:	7c df       	rcall	.-264    	; 0x579c <_ZN10LCD_Driver13setAddrWindowEjjjj>
}
    58a4:	df 91       	pop	r29
    58a6:	cf 91       	pop	r28
    58a8:	1f 91       	pop	r17
    58aa:	0f 91       	pop	r16
    58ac:	ff 90       	pop	r15
    58ae:	08 95       	ret

000058b0 <_ZN10LCD_Driver9drawPixelEiij>:

void LCD_Driver::drawPixel(int16_t x, int16_t y, uint16_t color)
{
    58b0:	cf 92       	push	r12
    58b2:	df 92       	push	r13
    58b4:	ef 92       	push	r14
    58b6:	ff 92       	push	r15
    58b8:	0f 93       	push	r16
    58ba:	1f 93       	push	r17
    58bc:	cf 93       	push	r28
    58be:	df 93       	push	r29
    58c0:	ec 01       	movw	r28, r24
    58c2:	d2 2e       	mov	r13, r18
    58c4:	c3 2e       	mov	r12, r19
	if((x < 0) || (y < 0) || (x >= _width) || (y >= _height)) return;
    58c6:	77 23       	and	r23, r23
    58c8:	c4 f1       	brlt	.+112    	; 0x593a <_ZN10LCD_Driver9drawPixelEiij+0x8a>
    58ca:	55 23       	and	r21, r21
    58cc:	b4 f1       	brlt	.+108    	; 0x593a <_ZN10LCD_Driver9drawPixelEiij+0x8a>
    58ce:	8e 81       	ldd	r24, Y+6	; 0x06
    58d0:	9f 81       	ldd	r25, Y+7	; 0x07
    58d2:	68 17       	cp	r22, r24
    58d4:	79 07       	cpc	r23, r25
    58d6:	8c f5       	brge	.+98     	; 0x593a <_ZN10LCD_Driver9drawPixelEiij+0x8a>
    58d8:	88 85       	ldd	r24, Y+8	; 0x08
    58da:	99 85       	ldd	r25, Y+9	; 0x09
    58dc:	48 17       	cp	r20, r24
    58de:	59 07       	cpc	r21, r25
    58e0:	64 f5       	brge	.+88     	; 0x593a <_ZN10LCD_Driver9drawPixelEiij+0x8a>
	CS_ACTIVE;
    58e2:	0f 2e       	mov	r0, r31
    58e4:	e1 2c       	mov	r14, r1
    58e6:	f6 e0       	ldi	r31, 0x06	; 6
    58e8:	ff 2e       	mov	r15, r31
    58ea:	f0 2d       	mov	r31, r0
    58ec:	f7 01       	movw	r30, r14
    58ee:	84 81       	ldd	r24, Z+4	; 0x04
    58f0:	8e 7f       	andi	r24, 0xFE	; 254
    58f2:	84 83       	std	Z+4, r24	; 0x04
	setAddrWindow(x, y, _width-1, _height-1);
    58f4:	08 85       	ldd	r16, Y+8	; 0x08
    58f6:	19 85       	ldd	r17, Y+9	; 0x09
    58f8:	01 50       	subi	r16, 0x01	; 1
    58fa:	11 09       	sbc	r17, r1
    58fc:	8e 81       	ldd	r24, Y+6	; 0x06
    58fe:	9f 81       	ldd	r25, Y+7	; 0x07
    5900:	9c 01       	movw	r18, r24
    5902:	21 50       	subi	r18, 0x01	; 1
    5904:	31 09       	sbc	r19, r1
    5906:	ce 01       	movw	r24, r28
    5908:	49 df       	rcall	.-366    	; 0x579c <_ZN10LCD_Driver13setAddrWindowEjjjj>
	CS_ACTIVE;
    590a:	f7 01       	movw	r30, r14
    590c:	84 81       	ldd	r24, Z+4	; 0x04
    590e:	8e 7f       	andi	r24, 0xFE	; 254
    5910:	84 83       	std	Z+4, r24	; 0x04
	CD_COMMAND;
    5912:	84 81       	ldd	r24, Z+4	; 0x04
    5914:	8d 7f       	andi	r24, 0xFD	; 253
    5916:	84 83       	std	Z+4, r24	; 0x04
	writeData(0x2C);
    5918:	6c e2       	ldi	r22, 0x2C	; 44
    591a:	ce 01       	movw	r24, r28
    591c:	7d dd       	rcall	.-1286   	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
	CD_DATA;
    591e:	f7 01       	movw	r30, r14
    5920:	84 81       	ldd	r24, Z+4	; 0x04
    5922:	82 60       	ori	r24, 0x02	; 2
    5924:	84 83       	std	Z+4, r24	; 0x04
	writeData(color >> 8);
    5926:	6c 2d       	mov	r22, r12
    5928:	ce 01       	movw	r24, r28
    592a:	76 dd       	rcall	.-1300   	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
	writeData(color);
    592c:	6d 2d       	mov	r22, r13
    592e:	ce 01       	movw	r24, r28
    5930:	73 dd       	rcall	.-1306   	; 0x5418 <_ZN10LCD_Driver9writeDataEh>
	CS_IDLE;
    5932:	f7 01       	movw	r30, r14
    5934:	84 81       	ldd	r24, Z+4	; 0x04
    5936:	81 60       	ori	r24, 0x01	; 1
    5938:	84 83       	std	Z+4, r24	; 0x04
}
    593a:	df 91       	pop	r29
    593c:	cf 91       	pop	r28
    593e:	1f 91       	pop	r17
    5940:	0f 91       	pop	r16
    5942:	ff 90       	pop	r15
    5944:	ef 90       	pop	r14
    5946:	df 90       	pop	r13
    5948:	cf 90       	pop	r12
    594a:	08 95       	ret

0000594c <_ZN10LCD_Driver10fillScreenEj>:
{
	LCD_DATA_PORT.OUT = data;
	WR_STROBE;
}

void LCD_Driver::fillScreen(uint16_t color) {
    594c:	ef 92       	push	r14
    594e:	ff 92       	push	r15
    5950:	0f 93       	push	r16
    5952:	1f 93       	push	r17
    5954:	cf 93       	push	r28
    5956:	df 93       	push	r29
    5958:	ec 01       	movw	r28, r24
    595a:	7b 01       	movw	r14, r22
	setAddrWindow(0,0, _width-1, _height - 1);
    595c:	08 85       	ldd	r16, Y+8	; 0x08
    595e:	19 85       	ldd	r17, Y+9	; 0x09
    5960:	01 50       	subi	r16, 0x01	; 1
    5962:	11 09       	sbc	r17, r1
    5964:	2e 81       	ldd	r18, Y+6	; 0x06
    5966:	3f 81       	ldd	r19, Y+7	; 0x07
    5968:	21 50       	subi	r18, 0x01	; 1
    596a:	31 09       	sbc	r19, r1
    596c:	40 e0       	ldi	r20, 0x00	; 0
    596e:	50 e0       	ldi	r21, 0x00	; 0
    5970:	60 e0       	ldi	r22, 0x00	; 0
    5972:	70 e0       	ldi	r23, 0x00	; 0
    5974:	13 df       	rcall	.-474    	; 0x579c <_ZN10LCD_Driver13setAddrWindowEjjjj>
	flood(color, (long)TFTWIDTH * (long) TFTHEIGHT);
    5976:	20 e0       	ldi	r18, 0x00	; 0
    5978:	38 e5       	ldi	r19, 0x58	; 88
    597a:	42 e0       	ldi	r20, 0x02	; 2
    597c:	50 e0       	ldi	r21, 0x00	; 0
    597e:	b7 01       	movw	r22, r14
    5980:	ce 01       	movw	r24, r28
    5982:	0e de       	rcall	.-996    	; 0x55a0 <_ZN10LCD_Driver5floodEjm>
}
    5984:	df 91       	pop	r29
    5986:	cf 91       	pop	r28
    5988:	1f 91       	pop	r17
    598a:	0f 91       	pop	r16
    598c:	ff 90       	pop	r15
    598e:	ef 90       	pop	r14
    5990:	08 95       	ret

00005992 <_ZN10LCD_Driver8writeStrEPc>:
    _delay_us(10);
    writeData(d);
    CS_IDLE;
}

void LCD_Driver::writeStr(char * str) {
    5992:	0f 93       	push	r16
    5994:	1f 93       	push	r17
    5996:	cf 93       	push	r28
    5998:	df 93       	push	r29
    599a:	ec 01       	movw	r28, r24
    599c:	fb 01       	movw	r30, r22
	while(*str) {
    599e:	60 81       	ld	r22, Z
    59a0:	66 23       	and	r22, r22
    59a2:	79 f0       	breq	.+30     	; 0x59c2 <_ZN10LCD_Driver8writeStrEPc+0x30>
    59a4:	8f 01       	movw	r16, r30
    59a6:	0f 5f       	subi	r16, 0xFF	; 255
    59a8:	1f 4f       	sbci	r17, 0xFF	; 255
		this->write(*str++);
    59aa:	e8 81       	ld	r30, Y
    59ac:	f9 81       	ldd	r31, Y+1	; 0x01
    59ae:	00 88       	ldd	r0, Z+16	; 0x10
    59b0:	f1 89       	ldd	r31, Z+17	; 0x11
    59b2:	e0 2d       	mov	r30, r0
    59b4:	ce 01       	movw	r24, r28
    59b6:	19 95       	eicall
    writeData(d);
    CS_IDLE;
}

void LCD_Driver::writeStr(char * str) {
	while(*str) {
    59b8:	f8 01       	movw	r30, r16
    59ba:	61 91       	ld	r22, Z+
    59bc:	8f 01       	movw	r16, r30
    59be:	61 11       	cpse	r22, r1
    59c0:	f4 cf       	rjmp	.-24     	; 0x59aa <_ZN10LCD_Driver8writeStrEPc+0x18>
		this->write(*str++);
	}

}
    59c2:	df 91       	pop	r29
    59c4:	cf 91       	pop	r28
    59c6:	1f 91       	pop	r17
    59c8:	0f 91       	pop	r16
    59ca:	08 95       	ret

000059cc <_ZN10MainScreenC1EP10LCD_Driver>:
 *  Author: ee63pc3-user
 */ 

 #include "MainScreen.h"

 MainScreen::MainScreen(LCD_Driver * lcdscreen) : Screen(lcdscreen) {}
    59cc:	e9 c6       	rjmp	.+3538   	; 0x67a0 <_ZN6ScreenC1EP10LCD_Driver>
    59ce:	08 95       	ret

000059d0 <_ZN10MainScreen5clearEv>:
		status >>= 1;
		value = static_cast<GPSVAL::VAL>(((int)value)+1);
	}

 }
 void MainScreen::clear() {
    59d0:	0f 93       	push	r16
    59d2:	1f 93       	push	r17
    59d4:	cf 93       	push	r28
    59d6:	df 93       	push	r29
    59d8:	ec 01       	movw	r28, r24
	lcd->fillScreen(BLACK);
    59da:	88 81       	ld	r24, Y
    59dc:	99 81       	ldd	r25, Y+1	; 0x01
    59de:	dc 01       	movw	r26, r24
    59e0:	ed 91       	ld	r30, X+
    59e2:	fc 91       	ld	r31, X
    59e4:	04 84       	ldd	r0, Z+12	; 0x0c
    59e6:	f5 85       	ldd	r31, Z+13	; 0x0d
    59e8:	e0 2d       	mov	r30, r0
    59ea:	60 e0       	ldi	r22, 0x00	; 0
    59ec:	70 e0       	ldi	r23, 0x00	; 0
    59ee:	19 95       	eicall
	lcd->drawFastVLine(239, 0, 320, WHITE);
    59f0:	88 81       	ld	r24, Y
    59f2:	99 81       	ldd	r25, Y+1	; 0x01
    59f4:	dc 01       	movw	r26, r24
    59f6:	ed 91       	ld	r30, X+
    59f8:	fc 91       	ld	r31, X
    59fa:	04 80       	ldd	r0, Z+4	; 0x04
    59fc:	f5 81       	ldd	r31, Z+5	; 0x05
    59fe:	e0 2d       	mov	r30, r0
    5a00:	0f ef       	ldi	r16, 0xFF	; 255
    5a02:	1f ef       	ldi	r17, 0xFF	; 255
    5a04:	20 e4       	ldi	r18, 0x40	; 64
    5a06:	31 e0       	ldi	r19, 0x01	; 1
    5a08:	40 e0       	ldi	r20, 0x00	; 0
    5a0a:	50 e0       	ldi	r21, 0x00	; 0
    5a0c:	6f ee       	ldi	r22, 0xEF	; 239
    5a0e:	70 e0       	ldi	r23, 0x00	; 0
    5a10:	19 95       	eicall
	lcd->drawFastHLine(0, 119, 480, WHITE);
    5a12:	88 81       	ld	r24, Y
    5a14:	99 81       	ldd	r25, Y+1	; 0x01
    5a16:	dc 01       	movw	r26, r24
    5a18:	ed 91       	ld	r30, X+
    5a1a:	fc 91       	ld	r31, X
    5a1c:	06 80       	ldd	r0, Z+6	; 0x06
    5a1e:	f7 81       	ldd	r31, Z+7	; 0x07
    5a20:	e0 2d       	mov	r30, r0
    5a22:	20 ee       	ldi	r18, 0xE0	; 224
    5a24:	31 e0       	ldi	r19, 0x01	; 1
    5a26:	47 e7       	ldi	r20, 0x77	; 119
    5a28:	50 e0       	ldi	r21, 0x00	; 0
    5a2a:	60 e0       	ldi	r22, 0x00	; 0
    5a2c:	70 e0       	ldi	r23, 0x00	; 0
    5a2e:	19 95       	eicall
	lcd->drawFastHLine(0, 239, 480, WHITE);
    5a30:	88 81       	ld	r24, Y
    5a32:	99 81       	ldd	r25, Y+1	; 0x01
    5a34:	dc 01       	movw	r26, r24
    5a36:	ed 91       	ld	r30, X+
    5a38:	fc 91       	ld	r31, X
    5a3a:	06 80       	ldd	r0, Z+6	; 0x06
    5a3c:	f7 81       	ldd	r31, Z+7	; 0x07
    5a3e:	e0 2d       	mov	r30, r0
    5a40:	20 ee       	ldi	r18, 0xE0	; 224
    5a42:	31 e0       	ldi	r19, 0x01	; 1
    5a44:	4f ee       	ldi	r20, 0xEF	; 239
    5a46:	50 e0       	ldi	r21, 0x00	; 0
    5a48:	60 e0       	ldi	r22, 0x00	; 0
    5a4a:	70 e0       	ldi	r23, 0x00	; 0
    5a4c:	19 95       	eicall
	lcd->setTextColor(WHITE, BLACK);
    5a4e:	40 e0       	ldi	r20, 0x00	; 0
    5a50:	50 e0       	ldi	r21, 0x00	; 0
    5a52:	6f ef       	ldi	r22, 0xFF	; 255
    5a54:	7f ef       	ldi	r23, 0xFF	; 255
    5a56:	88 81       	ld	r24, Y
    5a58:	99 81       	ldd	r25, Y+1	; 0x01
    5a5a:	0e 94 11 07 	call	0xe22	; 0xe22 <_ZN12Adafruit_GFX12setTextColorEjj>
	lcd->setTextSize(2);
    5a5e:	62 e0       	ldi	r22, 0x02	; 2
    5a60:	88 81       	ld	r24, Y
    5a62:	99 81       	ldd	r25, Y+1	; 0x01
    5a64:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setTextSizeEh>
	lcd->setCursor(200,50);
    5a68:	42 e3       	ldi	r20, 0x32	; 50
    5a6a:	50 e0       	ldi	r21, 0x00	; 0
    5a6c:	68 ec       	ldi	r22, 0xC8	; 200
    5a6e:	70 e0       	ldi	r23, 0x00	; 0
    5a70:	88 81       	ld	r24, Y
    5a72:	99 81       	ldd	r25, Y+1	; 0x01
    5a74:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("MPH");
    5a78:	60 ef       	ldi	r22, 0xF0	; 240
    5a7a:	70 e2       	ldi	r23, 0x20	; 32
    5a7c:	88 81       	ld	r24, Y
    5a7e:	99 81       	ldd	r25, Y+1	; 0x01
    5a80:	88 df       	rcall	.-240    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(200,180);
    5a82:	44 eb       	ldi	r20, 0xB4	; 180
    5a84:	50 e0       	ldi	r21, 0x00	; 0
    5a86:	68 ec       	ldi	r22, 0xC8	; 200
    5a88:	70 e0       	ldi	r23, 0x00	; 0
    5a8a:	88 81       	ld	r24, Y
    5a8c:	99 81       	ldd	r25, Y+1	; 0x01
    5a8e:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("RPM");
    5a92:	64 ef       	ldi	r22, 0xF4	; 244
    5a94:	70 e2       	ldi	r23, 0x20	; 32
    5a96:	88 81       	ld	r24, Y
    5a98:	99 81       	ldd	r25, Y+1	; 0x01
    5a9a:	7b df       	rcall	.-266    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(10,300);
    5a9c:	4c e2       	ldi	r20, 0x2C	; 44
    5a9e:	51 e0       	ldi	r21, 0x01	; 1
    5aa0:	6a e0       	ldi	r22, 0x0A	; 10
    5aa2:	70 e0       	ldi	r23, 0x00	; 0
    5aa4:	88 81       	ld	r24, Y
    5aa6:	99 81       	ldd	r25, Y+1	; 0x01
    5aa8:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("Lat:");
    5aac:	68 ef       	ldi	r22, 0xF8	; 248
    5aae:	70 e2       	ldi	r23, 0x20	; 32
    5ab0:	88 81       	ld	r24, Y
    5ab2:	99 81       	ldd	r25, Y+1	; 0x01
    5ab4:	6e df       	rcall	.-292    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(249, 300);
    5ab6:	4c e2       	ldi	r20, 0x2C	; 44
    5ab8:	51 e0       	ldi	r21, 0x01	; 1
    5aba:	69 ef       	ldi	r22, 0xF9	; 249
    5abc:	70 e0       	ldi	r23, 0x00	; 0
    5abe:	88 81       	ld	r24, Y
    5ac0:	99 81       	ldd	r25, Y+1	; 0x01
    5ac2:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("Lon:");
    5ac6:	6d ef       	ldi	r22, 0xFD	; 253
    5ac8:	70 e2       	ldi	r23, 0x20	; 32
    5aca:	88 81       	ld	r24, Y
    5acc:	99 81       	ldd	r25, Y+1	; 0x01
    5ace:	61 df       	rcall	.-318    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(429,75);
    5ad0:	4b e4       	ldi	r20, 0x4B	; 75
    5ad2:	50 e0       	ldi	r21, 0x00	; 0
    5ad4:	6d ea       	ldi	r22, 0xAD	; 173
    5ad6:	71 e0       	ldi	r23, 0x01	; 1
    5ad8:	88 81       	ld	r24, Y
    5ada:	99 81       	ldd	r25, Y+1	; 0x01
    5adc:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("Eng\nLoad");
    5ae0:	62 e0       	ldi	r22, 0x02	; 2
    5ae2:	71 e2       	ldi	r23, 0x21	; 33
    5ae4:	88 81       	ld	r24, Y
    5ae6:	99 81       	ldd	r25, Y+1	; 0x01
    5ae8:	54 df       	rcall	.-344    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(429,195);
    5aea:	43 ec       	ldi	r20, 0xC3	; 195
    5aec:	50 e0       	ldi	r21, 0x00	; 0
    5aee:	6d ea       	ldi	r22, 0xAD	; 173
    5af0:	71 e0       	ldi	r23, 0x01	; 1
    5af2:	88 81       	ld	r24, Y
    5af4:	99 81       	ldd	r25, Y+1	; 0x01
    5af6:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("Pdl\nPos");
    5afa:	6b e0       	ldi	r22, 0x0B	; 11
    5afc:	71 e2       	ldi	r23, 0x21	; 33
    5afe:	88 81       	ld	r24, Y
    5b00:	99 81       	ldd	r25, Y+1	; 0x01
    5b02:	47 df       	rcall	.-370    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>

	lcd->setTextSize(9);
    5b04:	69 e0       	ldi	r22, 0x09	; 9
    5b06:	88 81       	ld	r24, Y
    5b08:	99 81       	ldd	r25, Y+1	; 0x01
    5b0a:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setTextSizeEh>
	lcd->setCursor(30, 30);
    5b0e:	4e e1       	ldi	r20, 0x1E	; 30
    5b10:	50 e0       	ldi	r21, 0x00	; 0
    5b12:	6e e1       	ldi	r22, 0x1E	; 30
    5b14:	70 e0       	ldi	r23, 0x00	; 0
    5b16:	88 81       	ld	r24, Y
    5b18:	99 81       	ldd	r25, Y+1	; 0x01
    5b1a:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("000");
    5b1e:	68 e1       	ldi	r22, 0x18	; 24
    5b20:	71 e2       	ldi	r23, 0x21	; 33
    5b22:	88 81       	ld	r24, Y
    5b24:	99 81       	ldd	r25, Y+1	; 0x01
    5b26:	35 df       	rcall	.-406    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(259,30);
    5b28:	4e e1       	ldi	r20, 0x1E	; 30
    5b2a:	50 e0       	ldi	r21, 0x00	; 0
    5b2c:	63 e0       	ldi	r22, 0x03	; 3
    5b2e:	71 e0       	ldi	r23, 0x01	; 1
    5b30:	88 81       	ld	r24, Y
    5b32:	99 81       	ldd	r25, Y+1	; 0x01
    5b34:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("100");
    5b38:	63 e1       	ldi	r22, 0x13	; 19
    5b3a:	71 e2       	ldi	r23, 0x21	; 33
    5b3c:	88 81       	ld	r24, Y
    5b3e:	99 81       	ldd	r25, Y+1	; 0x01
    5b40:	28 df       	rcall	.-432    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(259,149);
    5b42:	45 e9       	ldi	r20, 0x95	; 149
    5b44:	50 e0       	ldi	r21, 0x00	; 0
    5b46:	63 e0       	ldi	r22, 0x03	; 3
    5b48:	71 e0       	ldi	r23, 0x01	; 1
    5b4a:	88 81       	ld	r24, Y
    5b4c:	99 81       	ldd	r25, Y+1	; 0x01
    5b4e:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("100");
    5b52:	63 e1       	ldi	r22, 0x13	; 19
    5b54:	71 e2       	ldi	r23, 0x21	; 33
    5b56:	88 81       	ld	r24, Y
    5b58:	99 81       	ldd	r25, Y+1	; 0x01
    5b5a:	1b df       	rcall	.-458    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>


	lcd->setTextSize(8);
    5b5c:	68 e0       	ldi	r22, 0x08	; 8
    5b5e:	88 81       	ld	r24, Y
    5b60:	99 81       	ldd	r25, Y+1	; 0x01
    5b62:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setTextSizeEh>
	lcd->setCursor(5,149);
    5b66:	45 e9       	ldi	r20, 0x95	; 149
    5b68:	50 e0       	ldi	r21, 0x00	; 0
    5b6a:	65 e0       	ldi	r22, 0x05	; 5
    5b6c:	70 e0       	ldi	r23, 0x00	; 0
    5b6e:	88 81       	ld	r24, Y
    5b70:	99 81       	ldd	r25, Y+1	; 0x01
    5b72:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->writeStr("0000");
    5b76:	67 e1       	ldi	r22, 0x17	; 23
    5b78:	71 e2       	ldi	r23, 0x21	; 33
    5b7a:	88 81       	ld	r24, Y
    5b7c:	99 81       	ldd	r25, Y+1	; 0x01
    5b7e:	09 df       	rcall	.-494    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
	lcd->setCursor(429,10);
    5b80:	4a e0       	ldi	r20, 0x0A	; 10
    5b82:	50 e0       	ldi	r21, 0x00	; 0
    5b84:	6d ea       	ldi	r22, 0xAD	; 173
    5b86:	71 e0       	ldi	r23, 0x01	; 1
    5b88:	88 81       	ld	r24, Y
    5b8a:	99 81       	ldd	r25, Y+1	; 0x01
    5b8c:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->write('%');
    5b90:	88 81       	ld	r24, Y
    5b92:	99 81       	ldd	r25, Y+1	; 0x01
    5b94:	dc 01       	movw	r26, r24
    5b96:	ed 91       	ld	r30, X+
    5b98:	fc 91       	ld	r31, X
    5b9a:	00 88       	ldd	r0, Z+16	; 0x10
    5b9c:	f1 89       	ldd	r31, Z+17	; 0x11
    5b9e:	e0 2d       	mov	r30, r0
    5ba0:	65 e2       	ldi	r22, 0x25	; 37
    5ba2:	19 95       	eicall
	lcd->setCursor(429,129);
    5ba4:	41 e8       	ldi	r20, 0x81	; 129
    5ba6:	50 e0       	ldi	r21, 0x00	; 0
    5ba8:	6d ea       	ldi	r22, 0xAD	; 173
    5baa:	71 e0       	ldi	r23, 0x01	; 1
    5bac:	88 81       	ld	r24, Y
    5bae:	99 81       	ldd	r25, Y+1	; 0x01
    5bb0:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	lcd->write('%');
    5bb4:	88 81       	ld	r24, Y
    5bb6:	99 81       	ldd	r25, Y+1	; 0x01
    5bb8:	dc 01       	movw	r26, r24
    5bba:	ed 91       	ld	r30, X+
    5bbc:	fc 91       	ld	r31, X
    5bbe:	00 88       	ldd	r0, Z+16	; 0x10
    5bc0:	f1 89       	ldd	r31, Z+17	; 0x11
    5bc2:	e0 2d       	mov	r30, r0
    5bc4:	65 e2       	ldi	r22, 0x25	; 37
    5bc6:	19 95       	eicall
 }
    5bc8:	df 91       	pop	r29
    5bca:	cf 91       	pop	r28
    5bcc:	1f 91       	pop	r17
    5bce:	0f 91       	pop	r16
    5bd0:	08 95       	ret

00005bd2 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD>:
 void MainScreen::draw(OBDCMDS::CMD cmd, BTOBD * bt){
    5bd2:	bf 92       	push	r11
    5bd4:	cf 92       	push	r12
    5bd6:	df 92       	push	r13
    5bd8:	ef 92       	push	r14
    5bda:	ff 92       	push	r15
    5bdc:	0f 93       	push	r16
    5bde:	1f 93       	push	r17
    5be0:	cf 93       	push	r28
    5be2:	df 93       	push	r29
    5be4:	cd b7       	in	r28, 0x3d	; 61
    5be6:	de b7       	in	r29, 0x3e	; 62
    5be8:	25 97       	sbiw	r28, 0x05	; 5
    5bea:	cd bf       	out	0x3d, r28	; 61
    5bec:	de bf       	out	0x3e, r29	; 62
    5bee:	8c 01       	movw	r16, r24
    5bf0:	f6 2e       	mov	r15, r22
    5bf2:	ca 01       	movw	r24, r20
 	CBUFFER resp = bt->getRecent(cmd);
    5bf4:	0e 94 8c 0d 	call	0x1b18	; 0x1b18 <_ZN5BTOBD9getRecentEN7OBDCMDS3CMDE>
    5bf8:	e6 2e       	mov	r14, r22
    5bfa:	d7 2e       	mov	r13, r23
    5bfc:	c8 2e       	mov	r12, r24
    5bfe:	b9 2e       	mov	r11, r25
	uint16_t val;
	char wbuf[5];
	switch(cmd) {
    5c00:	81 e0       	ldi	r24, 0x01	; 1
    5c02:	f8 16       	cp	r15, r24
    5c04:	09 f4       	brne	.+2      	; 0x5c08 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x36>
    5c06:	4c c0       	rjmp	.+152    	; 0x5ca0 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0xce>
    5c08:	f8 16       	cp	r15, r24
    5c0a:	48 f0       	brcs	.+18     	; 0x5c1e <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x4c>
    5c0c:	a2 e0       	ldi	r26, 0x02	; 2
    5c0e:	fa 16       	cp	r15, r26
    5c10:	09 f4       	brne	.+2      	; 0x5c14 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x42>
    5c12:	e1 c0       	rjmp	.+450    	; 0x5dd6 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x204>
    5c14:	b6 e0       	ldi	r27, 0x06	; 6
    5c16:	fb 16       	cp	r15, r27
    5c18:	09 f4       	brne	.+2      	; 0x5c1c <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x4a>
    5c1a:	9c c0       	rjmp	.+312    	; 0x5d54 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x182>
    5c1c:	1c c1       	rjmp	.+568    	; 0x5e56 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x284>
	case OBDCMDS::SPEED:
		lcd->setCursor(30,30);
    5c1e:	4e e1       	ldi	r20, 0x1E	; 30
    5c20:	50 e0       	ldi	r21, 0x00	; 0
    5c22:	6e e1       	ldi	r22, 0x1E	; 30
    5c24:	70 e0       	ldi	r23, 0x00	; 0
    5c26:	f8 01       	movw	r30, r16
    5c28:	80 81       	ld	r24, Z
    5c2a:	91 81       	ldd	r25, Z+1	; 0x01
    5c2c:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(9);
    5c30:	69 e0       	ldi	r22, 0x09	; 9
    5c32:	d8 01       	movw	r26, r16
    5c34:	8d 91       	ld	r24, X+
    5c36:	9c 91       	ld	r25, X
    5c38:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setTextSizeEh>
		val = OBDConversion::speed(resp.au, resp.al);
    5c3c:	6d 2d       	mov	r22, r13
    5c3e:	8e 2d       	mov	r24, r14
    5c40:	4b d2       	rcall	.+1174   	; 0x60d8 <_ZN13OBDConversion5speedEcc>
    5c42:	d8 2e       	mov	r13, r24
    5c44:	e8 2e       	mov	r14, r24
    5c46:	f1 2c       	mov	r15, r1
		if (val < 100) lcd->write(' ');
    5c48:	b4 e6       	ldi	r27, 0x64	; 100
    5c4a:	eb 16       	cp	r14, r27
    5c4c:	f1 04       	cpc	r15, r1
    5c4e:	58 f4       	brcc	.+22     	; 0x5c66 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x94>
    5c50:	f8 01       	movw	r30, r16
    5c52:	80 81       	ld	r24, Z
    5c54:	91 81       	ldd	r25, Z+1	; 0x01
    5c56:	dc 01       	movw	r26, r24
    5c58:	ed 91       	ld	r30, X+
    5c5a:	fc 91       	ld	r31, X
    5c5c:	00 88       	ldd	r0, Z+16	; 0x10
    5c5e:	f1 89       	ldd	r31, Z+17	; 0x11
    5c60:	e0 2d       	mov	r30, r0
    5c62:	60 e2       	ldi	r22, 0x20	; 32
    5c64:	19 95       	eicall
		if (val < 10) lcd->write(' ');
    5c66:	ba e0       	ldi	r27, 0x0A	; 10
    5c68:	eb 16       	cp	r14, r27
    5c6a:	f1 04       	cpc	r15, r1
    5c6c:	58 f4       	brcc	.+22     	; 0x5c84 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0xb2>
    5c6e:	f8 01       	movw	r30, r16
    5c70:	80 81       	ld	r24, Z
    5c72:	91 81       	ldd	r25, Z+1	; 0x01
    5c74:	dc 01       	movw	r26, r24
    5c76:	ed 91       	ld	r30, X+
    5c78:	fc 91       	ld	r31, X
    5c7a:	00 88       	ldd	r0, Z+16	; 0x10
    5c7c:	f1 89       	ldd	r31, Z+17	; 0x11
    5c7e:	e0 2d       	mov	r30, r0
    5c80:	60 e2       	ldi	r22, 0x20	; 32
    5c82:	19 95       	eicall
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    5c84:	4a e0       	ldi	r20, 0x0A	; 10
    5c86:	be 01       	movw	r22, r28
    5c88:	6f 5f       	subi	r22, 0xFF	; 255
    5c8a:	7f 4f       	sbci	r23, 0xFF	; 255
    5c8c:	8d 2d       	mov	r24, r13
    5c8e:	90 e0       	ldi	r25, 0x00	; 0
    5c90:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <__itoa_ncheck>
		lcd->writeStr(itoa(val, wbuf, 10));
    5c94:	bc 01       	movw	r22, r24
    5c96:	f8 01       	movw	r30, r16
    5c98:	80 81       	ld	r24, Z
    5c9a:	91 81       	ldd	r25, Z+1	; 0x01
    5c9c:	7a de       	rcall	.-780    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
		break;
    5c9e:	db c0       	rjmp	.+438    	; 0x5e56 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x284>
	case OBDCMDS::RPM:
		lcd->setCursor(5,149);
    5ca0:	45 e9       	ldi	r20, 0x95	; 149
    5ca2:	50 e0       	ldi	r21, 0x00	; 0
    5ca4:	65 e0       	ldi	r22, 0x05	; 5
    5ca6:	70 e0       	ldi	r23, 0x00	; 0
    5ca8:	d8 01       	movw	r26, r16
    5caa:	8d 91       	ld	r24, X+
    5cac:	9c 91       	ld	r25, X
    5cae:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(8);
    5cb2:	68 e0       	ldi	r22, 0x08	; 8
    5cb4:	f8 01       	movw	r30, r16
    5cb6:	80 81       	ld	r24, Z
    5cb8:	91 81       	ldd	r25, Z+1	; 0x01
    5cba:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setTextSizeEh>
		val = OBDConversion::rpm(resp.au, resp.al, resp.bu, resp.bl);
    5cbe:	2b 2d       	mov	r18, r11
    5cc0:	4c 2d       	mov	r20, r12
    5cc2:	6d 2d       	mov	r22, r13
    5cc4:	8e 2d       	mov	r24, r14
    5cc6:	31 d2       	rcall	.+1122   	; 0x612a <_ZN13OBDConversion3rpmEcccc>
    5cc8:	7c 01       	movw	r14, r24
    5cca:	80 31       	cpi	r24, 0x10	; 16
    5ccc:	f7 e2       	ldi	r31, 0x27	; 39
    5cce:	9f 07       	cpc	r25, r31
    5cd0:	30 f0       	brcs	.+12     	; 0x5cde <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x10c>
    5cd2:	0f 2e       	mov	r0, r31
    5cd4:	ff e0       	ldi	r31, 0x0F	; 15
    5cd6:	ef 2e       	mov	r14, r31
    5cd8:	f7 e2       	ldi	r31, 0x27	; 39
    5cda:	ff 2e       	mov	r15, r31
    5cdc:	f0 2d       	mov	r31, r0
		if (val >= 10000) val = 9999;
		if (val < 1000) lcd->write(' ');
    5cde:	88 ee       	ldi	r24, 0xE8	; 232
    5ce0:	e8 16       	cp	r14, r24
    5ce2:	83 e0       	ldi	r24, 0x03	; 3
    5ce4:	f8 06       	cpc	r15, r24
    5ce6:	58 f4       	brcc	.+22     	; 0x5cfe <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x12c>
    5ce8:	d8 01       	movw	r26, r16
    5cea:	8d 91       	ld	r24, X+
    5cec:	9c 91       	ld	r25, X
    5cee:	dc 01       	movw	r26, r24
    5cf0:	ed 91       	ld	r30, X+
    5cf2:	fc 91       	ld	r31, X
    5cf4:	00 88       	ldd	r0, Z+16	; 0x10
    5cf6:	f1 89       	ldd	r31, Z+17	; 0x11
    5cf8:	e0 2d       	mov	r30, r0
    5cfa:	60 e2       	ldi	r22, 0x20	; 32
    5cfc:	19 95       	eicall
		if (val < 100) lcd->write(' ');
    5cfe:	b4 e6       	ldi	r27, 0x64	; 100
    5d00:	eb 16       	cp	r14, r27
    5d02:	f1 04       	cpc	r15, r1
    5d04:	58 f4       	brcc	.+22     	; 0x5d1c <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x14a>
    5d06:	f8 01       	movw	r30, r16
    5d08:	80 81       	ld	r24, Z
    5d0a:	91 81       	ldd	r25, Z+1	; 0x01
    5d0c:	dc 01       	movw	r26, r24
    5d0e:	ed 91       	ld	r30, X+
    5d10:	fc 91       	ld	r31, X
    5d12:	00 88       	ldd	r0, Z+16	; 0x10
    5d14:	f1 89       	ldd	r31, Z+17	; 0x11
    5d16:	e0 2d       	mov	r30, r0
    5d18:	60 e2       	ldi	r22, 0x20	; 32
    5d1a:	19 95       	eicall
		if (val < 10) lcd->write(' ');
    5d1c:	ba e0       	ldi	r27, 0x0A	; 10
    5d1e:	eb 16       	cp	r14, r27
    5d20:	f1 04       	cpc	r15, r1
    5d22:	58 f4       	brcc	.+22     	; 0x5d3a <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x168>
    5d24:	f8 01       	movw	r30, r16
    5d26:	80 81       	ld	r24, Z
    5d28:	91 81       	ldd	r25, Z+1	; 0x01
    5d2a:	dc 01       	movw	r26, r24
    5d2c:	ed 91       	ld	r30, X+
    5d2e:	fc 91       	ld	r31, X
    5d30:	00 88       	ldd	r0, Z+16	; 0x10
    5d32:	f1 89       	ldd	r31, Z+17	; 0x11
    5d34:	e0 2d       	mov	r30, r0
    5d36:	60 e2       	ldi	r22, 0x20	; 32
    5d38:	19 95       	eicall
    5d3a:	4a e0       	ldi	r20, 0x0A	; 10
    5d3c:	be 01       	movw	r22, r28
    5d3e:	6f 5f       	subi	r22, 0xFF	; 255
    5d40:	7f 4f       	sbci	r23, 0xFF	; 255
    5d42:	c7 01       	movw	r24, r14
    5d44:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <__itoa_ncheck>
		lcd->writeStr(itoa(val, wbuf, 10));
    5d48:	bc 01       	movw	r22, r24
    5d4a:	f8 01       	movw	r30, r16
    5d4c:	80 81       	ld	r24, Z
    5d4e:	91 81       	ldd	r25, Z+1	; 0x01
    5d50:	20 de       	rcall	.-960    	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
		break;
    5d52:	81 c0       	rjmp	.+258    	; 0x5e56 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x284>
	case OBDCMDS::ENGINE_LOAD:
		lcd->setCursor(259,30);
    5d54:	4e e1       	ldi	r20, 0x1E	; 30
    5d56:	50 e0       	ldi	r21, 0x00	; 0
    5d58:	63 e0       	ldi	r22, 0x03	; 3
    5d5a:	71 e0       	ldi	r23, 0x01	; 1
    5d5c:	d8 01       	movw	r26, r16
    5d5e:	8d 91       	ld	r24, X+
    5d60:	9c 91       	ld	r25, X
    5d62:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(9);
    5d66:	69 e0       	ldi	r22, 0x09	; 9
    5d68:	f8 01       	movw	r30, r16
    5d6a:	80 81       	ld	r24, Z
    5d6c:	91 81       	ldd	r25, Z+1	; 0x01
    5d6e:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setTextSizeEh>
		val = OBDConversion::engine_load(resp.au, resp.al);
    5d72:	6d 2d       	mov	r22, r13
    5d74:	8e 2d       	mov	r24, r14
    5d76:	0b d2       	rcall	.+1046   	; 0x618e <_ZN13OBDConversion11engine_loadEcc>
    5d78:	d8 2e       	mov	r13, r24
    5d7a:	e8 2e       	mov	r14, r24
    5d7c:	f1 2c       	mov	r15, r1
		
		if (val < 100) lcd->write(' ');
    5d7e:	f4 e6       	ldi	r31, 0x64	; 100
    5d80:	ef 16       	cp	r14, r31
    5d82:	f1 04       	cpc	r15, r1
    5d84:	58 f4       	brcc	.+22     	; 0x5d9c <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x1ca>
    5d86:	d8 01       	movw	r26, r16
    5d88:	8d 91       	ld	r24, X+
    5d8a:	9c 91       	ld	r25, X
    5d8c:	dc 01       	movw	r26, r24
    5d8e:	ed 91       	ld	r30, X+
    5d90:	fc 91       	ld	r31, X
    5d92:	00 88       	ldd	r0, Z+16	; 0x10
    5d94:	f1 89       	ldd	r31, Z+17	; 0x11
    5d96:	e0 2d       	mov	r30, r0
    5d98:	60 e2       	ldi	r22, 0x20	; 32
    5d9a:	19 95       	eicall
		if (val < 10) lcd->write(' ');
    5d9c:	ba e0       	ldi	r27, 0x0A	; 10
    5d9e:	eb 16       	cp	r14, r27
    5da0:	f1 04       	cpc	r15, r1
    5da2:	58 f4       	brcc	.+22     	; 0x5dba <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x1e8>
    5da4:	f8 01       	movw	r30, r16
    5da6:	80 81       	ld	r24, Z
    5da8:	91 81       	ldd	r25, Z+1	; 0x01
    5daa:	dc 01       	movw	r26, r24
    5dac:	ed 91       	ld	r30, X+
    5dae:	fc 91       	ld	r31, X
    5db0:	00 88       	ldd	r0, Z+16	; 0x10
    5db2:	f1 89       	ldd	r31, Z+17	; 0x11
    5db4:	e0 2d       	mov	r30, r0
    5db6:	60 e2       	ldi	r22, 0x20	; 32
    5db8:	19 95       	eicall
    5dba:	4a e0       	ldi	r20, 0x0A	; 10
    5dbc:	be 01       	movw	r22, r28
    5dbe:	6f 5f       	subi	r22, 0xFF	; 255
    5dc0:	7f 4f       	sbci	r23, 0xFF	; 255
    5dc2:	8d 2d       	mov	r24, r13
    5dc4:	90 e0       	ldi	r25, 0x00	; 0
    5dc6:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <__itoa_ncheck>
		lcd->writeStr(itoa(val, wbuf, 10));
    5dca:	bc 01       	movw	r22, r24
    5dcc:	f8 01       	movw	r30, r16
    5dce:	80 81       	ld	r24, Z
    5dd0:	91 81       	ldd	r25, Z+1	; 0x01
    5dd2:	df dd       	rcall	.-1090   	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
		break;
    5dd4:	40 c0       	rjmp	.+128    	; 0x5e56 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x284>
	case OBDCMDS::THROTTLE_POS:
		lcd->setCursor(259, 149);
    5dd6:	45 e9       	ldi	r20, 0x95	; 149
    5dd8:	50 e0       	ldi	r21, 0x00	; 0
    5dda:	63 e0       	ldi	r22, 0x03	; 3
    5ddc:	71 e0       	ldi	r23, 0x01	; 1
    5dde:	d8 01       	movw	r26, r16
    5de0:	8d 91       	ld	r24, X+
    5de2:	9c 91       	ld	r25, X
    5de4:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(9);
    5de8:	69 e0       	ldi	r22, 0x09	; 9
    5dea:	f8 01       	movw	r30, r16
    5dec:	80 81       	ld	r24, Z
    5dee:	91 81       	ldd	r25, Z+1	; 0x01
    5df0:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setTextSizeEh>
		val = OBDConversion::throttle_pos(resp.au, resp.al);
    5df4:	6d 2d       	mov	r22, r13
    5df6:	8e 2d       	mov	r24, r14
    5df8:	e5 d1       	rcall	.+970    	; 0x61c4 <_ZN13OBDConversion12throttle_posEcc>
    5dfa:	d8 2e       	mov	r13, r24
    5dfc:	e8 2e       	mov	r14, r24
    5dfe:	f1 2c       	mov	r15, r1
		if (val < 100) lcd->write(' ');
    5e00:	f4 e6       	ldi	r31, 0x64	; 100
    5e02:	ef 16       	cp	r14, r31
    5e04:	f1 04       	cpc	r15, r1
    5e06:	58 f4       	brcc	.+22     	; 0x5e1e <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x24c>
    5e08:	d8 01       	movw	r26, r16
    5e0a:	8d 91       	ld	r24, X+
    5e0c:	9c 91       	ld	r25, X
    5e0e:	dc 01       	movw	r26, r24
    5e10:	ed 91       	ld	r30, X+
    5e12:	fc 91       	ld	r31, X
    5e14:	00 88       	ldd	r0, Z+16	; 0x10
    5e16:	f1 89       	ldd	r31, Z+17	; 0x11
    5e18:	e0 2d       	mov	r30, r0
    5e1a:	60 e2       	ldi	r22, 0x20	; 32
    5e1c:	19 95       	eicall
		if (val < 10) lcd->write(' ');
    5e1e:	ba e0       	ldi	r27, 0x0A	; 10
    5e20:	eb 16       	cp	r14, r27
    5e22:	f1 04       	cpc	r15, r1
    5e24:	58 f4       	brcc	.+22     	; 0x5e3c <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD+0x26a>
    5e26:	f8 01       	movw	r30, r16
    5e28:	80 81       	ld	r24, Z
    5e2a:	91 81       	ldd	r25, Z+1	; 0x01
    5e2c:	dc 01       	movw	r26, r24
    5e2e:	ed 91       	ld	r30, X+
    5e30:	fc 91       	ld	r31, X
    5e32:	00 88       	ldd	r0, Z+16	; 0x10
    5e34:	f1 89       	ldd	r31, Z+17	; 0x11
    5e36:	e0 2d       	mov	r30, r0
    5e38:	60 e2       	ldi	r22, 0x20	; 32
    5e3a:	19 95       	eicall
    5e3c:	4a e0       	ldi	r20, 0x0A	; 10
    5e3e:	be 01       	movw	r22, r28
    5e40:	6f 5f       	subi	r22, 0xFF	; 255
    5e42:	7f 4f       	sbci	r23, 0xFF	; 255
    5e44:	8d 2d       	mov	r24, r13
    5e46:	90 e0       	ldi	r25, 0x00	; 0
    5e48:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <__itoa_ncheck>
		lcd->writeStr(itoa(val, wbuf, 10));
    5e4c:	bc 01       	movw	r22, r24
    5e4e:	f8 01       	movw	r30, r16
    5e50:	80 81       	ld	r24, Z
    5e52:	91 81       	ldd	r25, Z+1	; 0x01
    5e54:	9e dd       	rcall	.-1220   	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
		break;
	}
	

 }
    5e56:	25 96       	adiw	r28, 0x05	; 5
    5e58:	cd bf       	out	0x3d, r28	; 61
    5e5a:	de bf       	out	0x3e, r29	; 62
    5e5c:	df 91       	pop	r29
    5e5e:	cf 91       	pop	r28
    5e60:	1f 91       	pop	r17
    5e62:	0f 91       	pop	r16
    5e64:	ff 90       	pop	r15
    5e66:	ef 90       	pop	r14
    5e68:	df 90       	pop	r13
    5e6a:	cf 90       	pop	r12
    5e6c:	bf 90       	pop	r11
    5e6e:	08 95       	ret

00005e70 <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS>:
 void MainScreen::drawGPS(GPSVAL::VAL value, GPS * gps) {
    5e70:	df 92       	push	r13
    5e72:	ef 92       	push	r14
    5e74:	ff 92       	push	r15
    5e76:	0f 93       	push	r16
    5e78:	1f 93       	push	r17
    5e7a:	cf 93       	push	r28
    5e7c:	df 93       	push	r29
    5e7e:	cd b7       	in	r28, 0x3d	; 61
    5e80:	de b7       	in	r29, 0x3e	; 62
    5e82:	2f 97       	sbiw	r28, 0x0f	; 15
    5e84:	cd bf       	out	0x3d, r28	; 61
    5e86:	de bf       	out	0x3e, r29	; 62
    5e88:	8c 01       	movw	r16, r24
    5e8a:	d6 2e       	mov	r13, r22
    5e8c:	7a 01       	movw	r14, r20
	 char wbuf[15];
	 gps->retrieve(value, wbuf);
    5e8e:	ae 01       	movw	r20, r28
    5e90:	4f 5f       	subi	r20, 0xFF	; 255
    5e92:	5f 4f       	sbci	r21, 0xFF	; 255
    5e94:	c7 01       	movw	r24, r14
    5e96:	f1 d9       	rcall	.-3102   	; 0x527a <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>
	 switch(value) {
    5e98:	82 e0       	ldi	r24, 0x02	; 2
    5e9a:	d8 16       	cp	r13, r24
    5e9c:	29 f0       	breq	.+10     	; 0x5ea8 <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS+0x38>
    5e9e:	a4 e0       	ldi	r26, 0x04	; 4
    5ea0:	da 16       	cp	r13, r26
    5ea2:	09 f4       	brne	.+2      	; 0x5ea6 <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS+0x36>
    5ea4:	5a c0       	rjmp	.+180    	; 0x5f5a <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS+0xea>
    5ea6:	bc c0       	rjmp	.+376    	; 0x6020 <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS+0x1b0>
	 case GPSVAL::LAT:
		lcd->setCursor(60,300);
    5ea8:	4c e2       	ldi	r20, 0x2C	; 44
    5eaa:	51 e0       	ldi	r21, 0x01	; 1
    5eac:	6c e3       	ldi	r22, 0x3C	; 60
    5eae:	70 e0       	ldi	r23, 0x00	; 0
    5eb0:	f8 01       	movw	r30, r16
    5eb2:	80 81       	ld	r24, Z
    5eb4:	91 81       	ldd	r25, Z+1	; 0x01
    5eb6:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(2);
    5eba:	62 e0       	ldi	r22, 0x02	; 2
    5ebc:	d8 01       	movw	r26, r16
    5ebe:	8d 91       	ld	r24, X+
    5ec0:	9c 91       	ld	r25, X
    5ec2:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setTextSizeEh>
		lcd->write(wbuf[0]);
    5ec6:	f8 01       	movw	r30, r16
    5ec8:	80 81       	ld	r24, Z
    5eca:	91 81       	ldd	r25, Z+1	; 0x01
    5ecc:	dc 01       	movw	r26, r24
    5ece:	ed 91       	ld	r30, X+
    5ed0:	fc 91       	ld	r31, X
    5ed2:	00 88       	ldd	r0, Z+16	; 0x10
    5ed4:	f1 89       	ldd	r31, Z+17	; 0x11
    5ed6:	e0 2d       	mov	r30, r0
    5ed8:	69 81       	ldd	r22, Y+1	; 0x01
    5eda:	19 95       	eicall
		lcd->write(wbuf[1]);
    5edc:	f8 01       	movw	r30, r16
    5ede:	80 81       	ld	r24, Z
    5ee0:	91 81       	ldd	r25, Z+1	; 0x01
    5ee2:	dc 01       	movw	r26, r24
    5ee4:	ed 91       	ld	r30, X+
    5ee6:	fc 91       	ld	r31, X
    5ee8:	00 88       	ldd	r0, Z+16	; 0x10
    5eea:	f1 89       	ldd	r31, Z+17	; 0x11
    5eec:	e0 2d       	mov	r30, r0
    5eee:	6a 81       	ldd	r22, Y+2	; 0x02
    5ef0:	19 95       	eicall
		lcd->write(248);
    5ef2:	f8 01       	movw	r30, r16
    5ef4:	80 81       	ld	r24, Z
    5ef6:	91 81       	ldd	r25, Z+1	; 0x01
    5ef8:	dc 01       	movw	r26, r24
    5efa:	ed 91       	ld	r30, X+
    5efc:	fc 91       	ld	r31, X
    5efe:	00 88       	ldd	r0, Z+16	; 0x10
    5f00:	f1 89       	ldd	r31, Z+17	; 0x11
    5f02:	e0 2d       	mov	r30, r0
    5f04:	68 ef       	ldi	r22, 0xF8	; 248
    5f06:	19 95       	eicall
		lcd->write(' ');
    5f08:	f8 01       	movw	r30, r16
    5f0a:	80 81       	ld	r24, Z
    5f0c:	91 81       	ldd	r25, Z+1	; 0x01
    5f0e:	dc 01       	movw	r26, r24
    5f10:	ed 91       	ld	r30, X+
    5f12:	fc 91       	ld	r31, X
    5f14:	00 88       	ldd	r0, Z+16	; 0x10
    5f16:	f1 89       	ldd	r31, Z+17	; 0x11
    5f18:	e0 2d       	mov	r30, r0
    5f1a:	60 e2       	ldi	r22, 0x20	; 32
    5f1c:	19 95       	eicall
		lcd->writeStr(wbuf + 2);
    5f1e:	be 01       	movw	r22, r28
    5f20:	6d 5f       	subi	r22, 0xFD	; 253
    5f22:	7f 4f       	sbci	r23, 0xFF	; 255
    5f24:	f8 01       	movw	r30, r16
    5f26:	80 81       	ld	r24, Z
    5f28:	91 81       	ldd	r25, Z+1	; 0x01
    5f2a:	33 dd       	rcall	.-1434   	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
		lcd->write('\'');
    5f2c:	d8 01       	movw	r26, r16
    5f2e:	8d 91       	ld	r24, X+
    5f30:	9c 91       	ld	r25, X
    5f32:	dc 01       	movw	r26, r24
    5f34:	ed 91       	ld	r30, X+
    5f36:	fc 91       	ld	r31, X
    5f38:	00 88       	ldd	r0, Z+16	; 0x10
    5f3a:	f1 89       	ldd	r31, Z+17	; 0x11
    5f3c:	e0 2d       	mov	r30, r0
    5f3e:	67 e2       	ldi	r22, 0x27	; 39
    5f40:	19 95       	eicall
		lcd->writeStr(gps->retrieve(GPSVAL::NS, wbuf));
    5f42:	ae 01       	movw	r20, r28
    5f44:	4f 5f       	subi	r20, 0xFF	; 255
    5f46:	5f 4f       	sbci	r21, 0xFF	; 255
    5f48:	63 e0       	ldi	r22, 0x03	; 3
    5f4a:	c7 01       	movw	r24, r14
    5f4c:	96 d9       	rcall	.-3284   	; 0x527a <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>
    5f4e:	bc 01       	movw	r22, r24
    5f50:	f8 01       	movw	r30, r16
    5f52:	80 81       	ld	r24, Z
    5f54:	91 81       	ldd	r25, Z+1	; 0x01
    5f56:	1d dd       	rcall	.-1478   	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
		break;
    5f58:	63 c0       	rjmp	.+198    	; 0x6020 <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS+0x1b0>
	 case GPSVAL::LONG:
		lcd->setCursor(305, 300);
    5f5a:	4c e2       	ldi	r20, 0x2C	; 44
    5f5c:	51 e0       	ldi	r21, 0x01	; 1
    5f5e:	61 e3       	ldi	r22, 0x31	; 49
    5f60:	71 e0       	ldi	r23, 0x01	; 1
    5f62:	d8 01       	movw	r26, r16
    5f64:	8d 91       	ld	r24, X+
    5f66:	9c 91       	ld	r25, X
    5f68:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
		lcd->setTextSize(2);
    5f6c:	62 e0       	ldi	r22, 0x02	; 2
    5f6e:	f8 01       	movw	r30, r16
    5f70:	80 81       	ld	r24, Z
    5f72:	91 81       	ldd	r25, Z+1	; 0x01
    5f74:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setTextSizeEh>
		lcd->write(wbuf[0]);
    5f78:	d8 01       	movw	r26, r16
    5f7a:	8d 91       	ld	r24, X+
    5f7c:	9c 91       	ld	r25, X
    5f7e:	dc 01       	movw	r26, r24
    5f80:	ed 91       	ld	r30, X+
    5f82:	fc 91       	ld	r31, X
    5f84:	00 88       	ldd	r0, Z+16	; 0x10
    5f86:	f1 89       	ldd	r31, Z+17	; 0x11
    5f88:	e0 2d       	mov	r30, r0
    5f8a:	69 81       	ldd	r22, Y+1	; 0x01
    5f8c:	19 95       	eicall
		lcd->write(wbuf[1]);
    5f8e:	f8 01       	movw	r30, r16
    5f90:	80 81       	ld	r24, Z
    5f92:	91 81       	ldd	r25, Z+1	; 0x01
    5f94:	dc 01       	movw	r26, r24
    5f96:	ed 91       	ld	r30, X+
    5f98:	fc 91       	ld	r31, X
    5f9a:	00 88       	ldd	r0, Z+16	; 0x10
    5f9c:	f1 89       	ldd	r31, Z+17	; 0x11
    5f9e:	e0 2d       	mov	r30, r0
    5fa0:	6a 81       	ldd	r22, Y+2	; 0x02
    5fa2:	19 95       	eicall
		lcd->write(wbuf[2]);
    5fa4:	f8 01       	movw	r30, r16
    5fa6:	80 81       	ld	r24, Z
    5fa8:	91 81       	ldd	r25, Z+1	; 0x01
    5faa:	dc 01       	movw	r26, r24
    5fac:	ed 91       	ld	r30, X+
    5fae:	fc 91       	ld	r31, X
    5fb0:	00 88       	ldd	r0, Z+16	; 0x10
    5fb2:	f1 89       	ldd	r31, Z+17	; 0x11
    5fb4:	e0 2d       	mov	r30, r0
    5fb6:	6b 81       	ldd	r22, Y+3	; 0x03
    5fb8:	19 95       	eicall
		lcd->write(248);
    5fba:	f8 01       	movw	r30, r16
    5fbc:	80 81       	ld	r24, Z
    5fbe:	91 81       	ldd	r25, Z+1	; 0x01
    5fc0:	dc 01       	movw	r26, r24
    5fc2:	ed 91       	ld	r30, X+
    5fc4:	fc 91       	ld	r31, X
    5fc6:	00 88       	ldd	r0, Z+16	; 0x10
    5fc8:	f1 89       	ldd	r31, Z+17	; 0x11
    5fca:	e0 2d       	mov	r30, r0
    5fcc:	68 ef       	ldi	r22, 0xF8	; 248
    5fce:	19 95       	eicall
		lcd->write(' ');
    5fd0:	f8 01       	movw	r30, r16
    5fd2:	80 81       	ld	r24, Z
    5fd4:	91 81       	ldd	r25, Z+1	; 0x01
    5fd6:	dc 01       	movw	r26, r24
    5fd8:	ed 91       	ld	r30, X+
    5fda:	fc 91       	ld	r31, X
    5fdc:	00 88       	ldd	r0, Z+16	; 0x10
    5fde:	f1 89       	ldd	r31, Z+17	; 0x11
    5fe0:	e0 2d       	mov	r30, r0
    5fe2:	60 e2       	ldi	r22, 0x20	; 32
    5fe4:	19 95       	eicall
		lcd->writeStr(wbuf + 3);
    5fe6:	be 01       	movw	r22, r28
    5fe8:	6c 5f       	subi	r22, 0xFC	; 252
    5fea:	7f 4f       	sbci	r23, 0xFF	; 255
    5fec:	f8 01       	movw	r30, r16
    5fee:	80 81       	ld	r24, Z
    5ff0:	91 81       	ldd	r25, Z+1	; 0x01
    5ff2:	cf dc       	rcall	.-1634   	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
		lcd->write('\'');
    5ff4:	d8 01       	movw	r26, r16
    5ff6:	8d 91       	ld	r24, X+
    5ff8:	9c 91       	ld	r25, X
    5ffa:	dc 01       	movw	r26, r24
    5ffc:	ed 91       	ld	r30, X+
    5ffe:	fc 91       	ld	r31, X
    6000:	00 88       	ldd	r0, Z+16	; 0x10
    6002:	f1 89       	ldd	r31, Z+17	; 0x11
    6004:	e0 2d       	mov	r30, r0
    6006:	67 e2       	ldi	r22, 0x27	; 39
    6008:	19 95       	eicall
		lcd->writeStr(gps->retrieve(GPSVAL::EW, wbuf));
    600a:	ae 01       	movw	r20, r28
    600c:	4f 5f       	subi	r20, 0xFF	; 255
    600e:	5f 4f       	sbci	r21, 0xFF	; 255
    6010:	65 e0       	ldi	r22, 0x05	; 5
    6012:	c7 01       	movw	r24, r14
    6014:	32 d9       	rcall	.-3484   	; 0x527a <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>
    6016:	bc 01       	movw	r22, r24
    6018:	f8 01       	movw	r30, r16
    601a:	80 81       	ld	r24, Z
    601c:	91 81       	ldd	r25, Z+1	; 0x01
    601e:	b9 dc       	rcall	.-1678   	; 0x5992 <_ZN10LCD_Driver8writeStrEPc>
		break;
	 }
    6020:	2f 96       	adiw	r28, 0x0f	; 15
    6022:	cd bf       	out	0x3d, r28	; 61
    6024:	de bf       	out	0x3e, r29	; 62
    6026:	df 91       	pop	r29
    6028:	cf 91       	pop	r28
    602a:	1f 91       	pop	r17
    602c:	0f 91       	pop	r16
    602e:	ff 90       	pop	r15
    6030:	ef 90       	pop	r14
    6032:	df 90       	pop	r13
    6034:	08 95       	ret

00006036 <_ZN10MainScreen6updateEP5BTOBDP3GPS>:

 #include "MainScreen.h"

 MainScreen::MainScreen(LCD_Driver * lcdscreen) : Screen(lcdscreen) {}
 
 void MainScreen::update(BTOBD * bt, GPS * gps) {
    6036:	bf 92       	push	r11
    6038:	cf 92       	push	r12
    603a:	df 92       	push	r13
    603c:	ef 92       	push	r14
    603e:	ff 92       	push	r15
    6040:	0f 93       	push	r16
    6042:	1f 93       	push	r17
    6044:	cf 93       	push	r28
    6046:	df 93       	push	r29
    6048:	8c 01       	movw	r16, r24
    604a:	6b 01       	movw	r12, r22
    604c:	7a 01       	movw	r14, r20
	uint16_t status = bt->getStatus();
    604e:	cb 01       	movw	r24, r22
    6050:	0e 94 61 0d 	call	0x1ac2	; 0x1ac2 <_ZN5BTOBD9getStatusEv>
    6054:	ec 01       	movw	r28, r24
	bt->clearStatus();
    6056:	c6 01       	movw	r24, r12
    6058:	0e 94 65 0d 	call	0x1aca	; 0x1aca <_ZN5BTOBD11clearStatusEv>
	OBDCMDS::CMD cmd = OBDCMDS::SPEED;
	while (status) {
    605c:	20 97       	sbiw	r28, 0x00	; 0
    605e:	61 f0       	breq	.+24     	; 0x6078 <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x42>
 MainScreen::MainScreen(LCD_Driver * lcdscreen) : Screen(lcdscreen) {}
 
 void MainScreen::update(BTOBD * bt, GPS * gps) {
	uint16_t status = bt->getStatus();
	bt->clearStatus();
	OBDCMDS::CMD cmd = OBDCMDS::SPEED;
    6060:	b1 2c       	mov	r11, r1
	while (status) {
		if (status & 1) draw(cmd, bt);
    6062:	c0 ff       	sbrs	r28, 0
    6064:	04 c0       	rjmp	.+8      	; 0x606e <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x38>
    6066:	a6 01       	movw	r20, r12
    6068:	6b 2d       	mov	r22, r11
    606a:	c8 01       	movw	r24, r16
    606c:	b2 dd       	rcall	.-1180   	; 0x5bd2 <_ZN10MainScreen4drawEN7OBDCMDS3CMDEP5BTOBD>
		status >>= 1;
    606e:	d6 95       	lsr	r29
    6070:	c7 95       	ror	r28
		cmd = static_cast<OBDCMDS::CMD>(((int)cmd)+ 1);
    6072:	b3 94       	inc	r11
 
 void MainScreen::update(BTOBD * bt, GPS * gps) {
	uint16_t status = bt->getStatus();
	bt->clearStatus();
	OBDCMDS::CMD cmd = OBDCMDS::SPEED;
	while (status) {
    6074:	20 97       	sbiw	r28, 0x00	; 0
    6076:	a9 f7       	brne	.-22     	; 0x6062 <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x2c>
		if (status & 1) draw(cmd, bt);
		status >>= 1;
		cmd = static_cast<OBDCMDS::CMD>(((int)cmd)+ 1);
	}
	GPSVAL::VAL value = GPSVAL::FIX_TIME;
	status = gps->getStatus();
    6078:	c7 01       	movw	r24, r14
    607a:	f7 d8       	rcall	.-3602   	; 0x526a <_ZN3GPS9getStatusEv>
    607c:	ec 01       	movw	r28, r24
	gps->clearStatus();
    607e:	c7 01       	movw	r24, r14
    6080:	f8 d8       	rcall	.-3600   	; 0x5272 <_ZN3GPS11clearStatusEv>
	while (status) {
    6082:	20 97       	sbiw	r28, 0x00	; 0
    6084:	61 f0       	breq	.+24     	; 0x609e <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x68>
	while (status) {
		if (status & 1) draw(cmd, bt);
		status >>= 1;
		cmd = static_cast<OBDCMDS::CMD>(((int)cmd)+ 1);
	}
	GPSVAL::VAL value = GPSVAL::FIX_TIME;
    6086:	d1 2c       	mov	r13, r1
	status = gps->getStatus();
	gps->clearStatus();
	while (status) {
		if (status & 1) drawGPS(value, gps);
    6088:	c0 ff       	sbrs	r28, 0
    608a:	04 c0       	rjmp	.+8      	; 0x6094 <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x5e>
    608c:	a7 01       	movw	r20, r14
    608e:	6d 2d       	mov	r22, r13
    6090:	c8 01       	movw	r24, r16
    6092:	ee de       	rcall	.-548    	; 0x5e70 <_ZN10MainScreen7drawGPSEN6GPSVAL3VALEP3GPS>
		status >>= 1;
    6094:	d6 95       	lsr	r29
    6096:	c7 95       	ror	r28
		value = static_cast<GPSVAL::VAL>(((int)value)+1);
    6098:	d3 94       	inc	r13
		cmd = static_cast<OBDCMDS::CMD>(((int)cmd)+ 1);
	}
	GPSVAL::VAL value = GPSVAL::FIX_TIME;
	status = gps->getStatus();
	gps->clearStatus();
	while (status) {
    609a:	20 97       	sbiw	r28, 0x00	; 0
    609c:	a9 f7       	brne	.-22     	; 0x6088 <_ZN10MainScreen6updateEP5BTOBDP3GPS+0x52>
		if (status & 1) drawGPS(value, gps);
		status >>= 1;
		value = static_cast<GPSVAL::VAL>(((int)value)+1);
	}

 }
    609e:	df 91       	pop	r29
    60a0:	cf 91       	pop	r28
    60a2:	1f 91       	pop	r17
    60a4:	0f 91       	pop	r16
    60a6:	ff 90       	pop	r15
    60a8:	ef 90       	pop	r14
    60aa:	df 90       	pop	r13
    60ac:	cf 90       	pop	r12
    60ae:	bf 90       	pop	r11
    60b0:	08 95       	ret

000060b2 <_ZN13OBDConversion4initEv>:
#include "OBDConversion.h"

DATAPOINT OBDConversion::dp;

void OBDConversion::init() {
	OBDConversion::dp.engine_load = 0;
    60b2:	10 92 60 21 	sts	0x2160, r1
	OBDConversion::dp.rpm = 0;
    60b6:	10 92 61 21 	sts	0x2161, r1
    60ba:	10 92 62 21 	sts	0x2162, r1
	OBDConversion::dp.speed = 0;
    60be:	10 92 5e 21 	sts	0x215E, r1
	OBDConversion::dp.throttle_pos = 0;
    60c2:	10 92 5f 21 	sts	0x215F, r1
    60c6:	08 95       	ret

000060c8 <_ZN13OBDConversion3hexEc>:
}

uint8_t OBDConversion::hex(char c)
{
    if (c >= 48 && c <= 57) return c - 48;
    60c8:	90 ed       	ldi	r25, 0xD0	; 208
    60ca:	98 0f       	add	r25, r24
    60cc:	9a 30       	cpi	r25, 0x0A	; 10
    60ce:	10 f0       	brcs	.+4      	; 0x60d4 <_ZN13OBDConversion3hexEc+0xc>
	else return c - 55;
    60d0:	87 53       	subi	r24, 0x37	; 55
    60d2:	08 95       	ret
	OBDConversion::dp.throttle_pos = 0;
}

uint8_t OBDConversion::hex(char c)
{
    if (c >= 48 && c <= 57) return c - 48;
    60d4:	89 2f       	mov	r24, r25
	else return c - 55;
}
    60d6:	08 95       	ret

000060d8 <_ZN13OBDConversion5speedEcc>:

uint8_t OBDConversion::speed(char au, char al)
{
    60d8:	cf 93       	push	r28
    60da:	df 93       	push	r29
    60dc:	d6 2f       	mov	r29, r22
	uint16_t val = (((uint16_t)(16 * hex(au) + hex(al))) * 62 / 100);
    60de:	f4 df       	rcall	.-24     	; 0x60c8 <_ZN13OBDConversion3hexEc>
    60e0:	c8 2f       	mov	r28, r24
    60e2:	8d 2f       	mov	r24, r29
    60e4:	f1 df       	rcall	.-30     	; 0x60c8 <_ZN13OBDConversion3hexEc>
    60e6:	28 2f       	mov	r18, r24
    60e8:	30 e0       	ldi	r19, 0x00	; 0
    60ea:	c9 01       	movw	r24, r18
    60ec:	40 e1       	ldi	r20, 0x10	; 16
    60ee:	c4 9f       	mul	r28, r20
    60f0:	80 0d       	add	r24, r0
    60f2:	91 1d       	adc	r25, r1
    60f4:	11 24       	eor	r1, r1
    60f6:	4e e3       	ldi	r20, 0x3E	; 62
    60f8:	48 9f       	mul	r20, r24
    60fa:	90 01       	movw	r18, r0
    60fc:	49 9f       	mul	r20, r25
    60fe:	30 0d       	add	r19, r0
    6100:	11 24       	eor	r1, r1
    6102:	36 95       	lsr	r19
    6104:	27 95       	ror	r18
    6106:	36 95       	lsr	r19
    6108:	27 95       	ror	r18
    610a:	ab e7       	ldi	r26, 0x7B	; 123
    610c:	b4 e1       	ldi	r27, 0x14	; 20
    610e:	0e 94 b8 3c 	call	0x7970	; 0x7970 <__umulhisi3>
    6112:	96 95       	lsr	r25
    6114:	87 95       	ror	r24
	OBDConversion::dp.speed = val ? val + 1 : 0;
    6116:	00 97       	sbiw	r24, 0x00	; 0
    6118:	11 f0       	breq	.+4      	; 0x611e <_ZN13OBDConversion5speedEcc+0x46>
    611a:	8f 5f       	subi	r24, 0xFF	; 255
    611c:	01 c0       	rjmp	.+2      	; 0x6120 <_ZN13OBDConversion5speedEcc+0x48>
    611e:	80 e0       	ldi	r24, 0x00	; 0
    6120:	80 93 5e 21 	sts	0x215E, r24
	return OBDConversion::dp.speed;
}
    6124:	df 91       	pop	r29
    6126:	cf 91       	pop	r28
    6128:	08 95       	ret

0000612a <_ZN13OBDConversion3rpmEcccc>:

uint16_t OBDConversion::rpm(char au, char al, char bu, char bl)
{
    612a:	0f 93       	push	r16
    612c:	1f 93       	push	r17
    612e:	cf 93       	push	r28
    6130:	df 93       	push	r29
    6132:	c8 2f       	mov	r28, r24
    6134:	d6 2f       	mov	r29, r22
    6136:	84 2f       	mov	r24, r20
    6138:	02 2f       	mov	r16, r18
    OBDConversion::dp.rpm = ((uint16_t)((uint16_t)256 * ((uint16_t)(16 * hex(au) + hex(al))) + ((uint16_t)(16 * hex(bu) + hex(bl)))) / (uint16_t)4);
    613a:	c6 df       	rcall	.-116    	; 0x60c8 <_ZN13OBDConversion3hexEc>
    613c:	18 2f       	mov	r17, r24
    613e:	8c 2f       	mov	r24, r28
    6140:	c3 df       	rcall	.-122    	; 0x60c8 <_ZN13OBDConversion3hexEc>
    6142:	c8 2f       	mov	r28, r24
    6144:	8d 2f       	mov	r24, r29
    6146:	c0 df       	rcall	.-128    	; 0x60c8 <_ZN13OBDConversion3hexEc>
    6148:	d8 2f       	mov	r29, r24
    614a:	80 2f       	mov	r24, r16
    614c:	bd df       	rcall	.-134    	; 0x60c8 <_ZN13OBDConversion3hexEc>
    614e:	48 2f       	mov	r20, r24
    6150:	50 e0       	ldi	r21, 0x00	; 0
    6152:	80 e1       	ldi	r24, 0x10	; 16
    6154:	18 9f       	mul	r17, r24
    6156:	40 0d       	add	r20, r0
    6158:	51 1d       	adc	r21, r1
    615a:	11 24       	eor	r1, r1
    615c:	2d 2f       	mov	r18, r29
    615e:	30 e0       	ldi	r19, 0x00	; 0
    6160:	80 e1       	ldi	r24, 0x10	; 16
    6162:	c8 9f       	mul	r28, r24
    6164:	20 0d       	add	r18, r0
    6166:	31 1d       	adc	r19, r1
    6168:	11 24       	eor	r1, r1
    616a:	32 2f       	mov	r19, r18
    616c:	22 27       	eor	r18, r18
    616e:	ca 01       	movw	r24, r20
    6170:	82 0f       	add	r24, r18
    6172:	93 1f       	adc	r25, r19
    6174:	96 95       	lsr	r25
    6176:	87 95       	ror	r24
    6178:	96 95       	lsr	r25
    617a:	87 95       	ror	r24
    617c:	80 93 61 21 	sts	0x2161, r24
    6180:	90 93 62 21 	sts	0x2162, r25
	return OBDConversion::dp.rpm;
}
    6184:	df 91       	pop	r29
    6186:	cf 91       	pop	r28
    6188:	1f 91       	pop	r17
    618a:	0f 91       	pop	r16
    618c:	08 95       	ret

0000618e <_ZN13OBDConversion11engine_loadEcc>:

uint8_t OBDConversion::engine_load(char au, char al) {
    618e:	cf 93       	push	r28
    6190:	df 93       	push	r29
    6192:	d6 2f       	mov	r29, r22
	OBDConversion::dp.engine_load = ((uint16_t)(hex(au) * 16 + hex(al)) * 100) >> 8;
    6194:	99 df       	rcall	.-206    	; 0x60c8 <_ZN13OBDConversion3hexEc>
    6196:	c8 2f       	mov	r28, r24
    6198:	8d 2f       	mov	r24, r29
    619a:	96 df       	rcall	.-212    	; 0x60c8 <_ZN13OBDConversion3hexEc>
    619c:	28 2f       	mov	r18, r24
    619e:	30 e0       	ldi	r19, 0x00	; 0
    61a0:	c9 01       	movw	r24, r18
    61a2:	40 e1       	ldi	r20, 0x10	; 16
    61a4:	c4 9f       	mul	r28, r20
    61a6:	80 0d       	add	r24, r0
    61a8:	91 1d       	adc	r25, r1
    61aa:	11 24       	eor	r1, r1
    61ac:	44 e6       	ldi	r20, 0x64	; 100
    61ae:	48 9f       	mul	r20, r24
    61b0:	90 01       	movw	r18, r0
    61b2:	49 9f       	mul	r20, r25
    61b4:	30 0d       	add	r19, r0
    61b6:	11 24       	eor	r1, r1
    61b8:	30 93 60 21 	sts	0x2160, r19
	return OBDConversion::dp.engine_load;
}
    61bc:	83 2f       	mov	r24, r19
    61be:	df 91       	pop	r29
    61c0:	cf 91       	pop	r28
    61c2:	08 95       	ret

000061c4 <_ZN13OBDConversion12throttle_posEcc>:

uint8_t OBDConversion::throttle_pos(char au, char al) {
    61c4:	cf 93       	push	r28
    61c6:	df 93       	push	r29
    61c8:	d6 2f       	mov	r29, r22
	OBDConversion::dp.throttle_pos = ((uint16_t)(hex(au) * 16 + hex(al)) * 100) >> 8;
    61ca:	7e df       	rcall	.-260    	; 0x60c8 <_ZN13OBDConversion3hexEc>
    61cc:	c8 2f       	mov	r28, r24
    61ce:	8d 2f       	mov	r24, r29
    61d0:	7b df       	rcall	.-266    	; 0x60c8 <_ZN13OBDConversion3hexEc>
    61d2:	28 2f       	mov	r18, r24
    61d4:	30 e0       	ldi	r19, 0x00	; 0
    61d6:	c9 01       	movw	r24, r18
    61d8:	40 e1       	ldi	r20, 0x10	; 16
    61da:	c4 9f       	mul	r28, r20
    61dc:	80 0d       	add	r24, r0
    61de:	91 1d       	adc	r25, r1
    61e0:	11 24       	eor	r1, r1
    61e2:	44 e6       	ldi	r20, 0x64	; 100
    61e4:	48 9f       	mul	r20, r24
    61e6:	90 01       	movw	r18, r0
    61e8:	49 9f       	mul	r20, r25
    61ea:	30 0d       	add	r19, r0
    61ec:	11 24       	eor	r1, r1
    61ee:	30 93 5f 21 	sts	0x215F, r19
	return OBDConversion::dp.throttle_pos;
    61f2:	83 2f       	mov	r24, r19
    61f4:	df 91       	pop	r29
    61f6:	cf 91       	pop	r28
    61f8:	08 95       	ret

000061fa <__vector_88>:
{
	CCP = CCP_IOREG_gc;
	OSC.CTRL = OSC_RC2MEN_bm;
	while(!(OSC.STATUS & OSC_RC2MRDY_bm));
	CCP = CCP_IOREG_gc;
	CLK.CTRL = CLK_SCLKSEL_RC2M_gc;   
    61fa:	1f 92       	push	r1
    61fc:	0f 92       	push	r0
    61fe:	0f b6       	in	r0, 0x3f	; 63
    6200:	0f 92       	push	r0
    6202:	11 24       	eor	r1, r1
    6204:	0b b6       	in	r0, 0x3b	; 59
    6206:	0f 92       	push	r0
    6208:	2f 93       	push	r18
    620a:	3f 93       	push	r19
    620c:	4f 93       	push	r20
    620e:	5f 93       	push	r21
    6210:	6f 93       	push	r22
    6212:	7f 93       	push	r23
    6214:	8f 93       	push	r24
    6216:	9f 93       	push	r25
    6218:	af 93       	push	r26
    621a:	bf 93       	push	r27
    621c:	ef 93       	push	r30
    621e:	ff 93       	push	r31
    6220:	80 91 6b 21 	lds	r24, 0x216B
    6224:	90 91 6c 21 	lds	r25, 0x216C
    6228:	0e 94 99 07 	call	0xf32	; 0xf32 <_ZN5BTOBD13interceptByteEv>
    622c:	ff 91       	pop	r31
    622e:	ef 91       	pop	r30
    6230:	bf 91       	pop	r27
    6232:	af 91       	pop	r26
    6234:	9f 91       	pop	r25
    6236:	8f 91       	pop	r24
    6238:	7f 91       	pop	r23
    623a:	6f 91       	pop	r22
    623c:	5f 91       	pop	r21
    623e:	4f 91       	pop	r20
    6240:	3f 91       	pop	r19
    6242:	2f 91       	pop	r18
    6244:	0f 90       	pop	r0
    6246:	0b be       	out	0x3b, r0	; 59
    6248:	0f 90       	pop	r0
    624a:	0f be       	out	0x3f, r0	; 63
    624c:	0f 90       	pop	r0
    624e:	1f 90       	pop	r1
    6250:	18 95       	reti

00006252 <__vector_91>:
    6252:	1f 92       	push	r1
    6254:	0f 92       	push	r0
    6256:	0f b6       	in	r0, 0x3f	; 63
    6258:	0f 92       	push	r0
    625a:	11 24       	eor	r1, r1
    625c:	0b b6       	in	r0, 0x3b	; 59
    625e:	0f 92       	push	r0
    6260:	2f 93       	push	r18
    6262:	3f 93       	push	r19
    6264:	4f 93       	push	r20
    6266:	5f 93       	push	r21
    6268:	6f 93       	push	r22
    626a:	7f 93       	push	r23
    626c:	8f 93       	push	r24
    626e:	9f 93       	push	r25
    6270:	af 93       	push	r26
    6272:	bf 93       	push	r27
    6274:	ef 93       	push	r30
    6276:	ff 93       	push	r31
    6278:	80 91 67 21 	lds	r24, 0x2167
    627c:	90 91 68 21 	lds	r25, 0x2168
    6280:	0e 94 6e 28 	call	0x50dc	; 0x50dc <_ZN3GPS13interceptByteEv>
    6284:	ff 91       	pop	r31
    6286:	ef 91       	pop	r30
    6288:	bf 91       	pop	r27
    628a:	af 91       	pop	r26
    628c:	9f 91       	pop	r25
    628e:	8f 91       	pop	r24
    6290:	7f 91       	pop	r23
    6292:	6f 91       	pop	r22
    6294:	5f 91       	pop	r21
    6296:	4f 91       	pop	r20
    6298:	3f 91       	pop	r19
    629a:	2f 91       	pop	r18
    629c:	0f 90       	pop	r0
    629e:	0b be       	out	0x3b, r0	; 59
    62a0:	0f 90       	pop	r0
    62a2:	0f be       	out	0x3f, r0	; 63
    62a4:	0f 90       	pop	r0
    62a6:	1f 90       	pop	r1
    62a8:	18 95       	reti

000062aa <__vector_90>:
    62aa:	1f 92       	push	r1
    62ac:	0f 92       	push	r0
    62ae:	0f b6       	in	r0, 0x3f	; 63
    62b0:	0f 92       	push	r0
    62b2:	11 24       	eor	r1, r1
    62b4:	0f 90       	pop	r0
    62b6:	0f be       	out	0x3f, r0	; 63
    62b8:	0f 90       	pop	r0
    62ba:	1f 90       	pop	r1
    62bc:	18 95       	reti

000062be <__vector_93>:
    62be:	1f 92       	push	r1
    62c0:	0f 92       	push	r0
    62c2:	0f b6       	in	r0, 0x3f	; 63
    62c4:	0f 92       	push	r0
    62c6:	11 24       	eor	r1, r1
    62c8:	0f 90       	pop	r0
    62ca:	0f be       	out	0x3f, r0	; 63
    62cc:	0f 90       	pop	r0
    62ce:	1f 90       	pop	r1
    62d0:	18 95       	reti

000062d2 <__vector_89>:
    62d2:	1f 92       	push	r1
    62d4:	0f 92       	push	r0
    62d6:	0f b6       	in	r0, 0x3f	; 63
    62d8:	0f 92       	push	r0
    62da:	11 24       	eor	r1, r1
    62dc:	0b b6       	in	r0, 0x3b	; 59
    62de:	0f 92       	push	r0
    62e0:	2f 93       	push	r18
    62e2:	3f 93       	push	r19
    62e4:	4f 93       	push	r20
    62e6:	5f 93       	push	r21
    62e8:	6f 93       	push	r22
    62ea:	7f 93       	push	r23
    62ec:	8f 93       	push	r24
    62ee:	9f 93       	push	r25
    62f0:	af 93       	push	r26
    62f2:	bf 93       	push	r27
    62f4:	ef 93       	push	r30
    62f6:	ff 93       	push	r31
    62f8:	80 91 6b 21 	lds	r24, 0x216B
    62fc:	90 91 6c 21 	lds	r25, 0x216C
    6300:	0e 94 b1 07 	call	0xf62	; 0xf62 <_ZN5BTOBD9handleDREEv>
    6304:	ff 91       	pop	r31
    6306:	ef 91       	pop	r30
    6308:	bf 91       	pop	r27
    630a:	af 91       	pop	r26
    630c:	9f 91       	pop	r25
    630e:	8f 91       	pop	r24
    6310:	7f 91       	pop	r23
    6312:	6f 91       	pop	r22
    6314:	5f 91       	pop	r21
    6316:	4f 91       	pop	r20
    6318:	3f 91       	pop	r19
    631a:	2f 91       	pop	r18
    631c:	0f 90       	pop	r0
    631e:	0b be       	out	0x3b, r0	; 59
    6320:	0f 90       	pop	r0
    6322:	0f be       	out	0x3f, r0	; 63
    6324:	0f 90       	pop	r0
    6326:	1f 90       	pop	r1
    6328:	18 95       	reti

0000632a <__vector_92>:
    632a:	1f 92       	push	r1
    632c:	0f 92       	push	r0
    632e:	0f b6       	in	r0, 0x3f	; 63
    6330:	0f 92       	push	r0
    6332:	11 24       	eor	r1, r1
    6334:	0b b6       	in	r0, 0x3b	; 59
    6336:	0f 92       	push	r0
    6338:	2f 93       	push	r18
    633a:	3f 93       	push	r19
    633c:	4f 93       	push	r20
    633e:	5f 93       	push	r21
    6340:	6f 93       	push	r22
    6342:	7f 93       	push	r23
    6344:	8f 93       	push	r24
    6346:	9f 93       	push	r25
    6348:	af 93       	push	r26
    634a:	bf 93       	push	r27
    634c:	ef 93       	push	r30
    634e:	ff 93       	push	r31
    6350:	80 91 67 21 	lds	r24, 0x2167
    6354:	90 91 68 21 	lds	r25, 0x2168
    6358:	0e 94 8b 29 	call	0x5316	; 0x5316 <_ZN3GPS9handleDREEv>
    635c:	ff 91       	pop	r31
    635e:	ef 91       	pop	r30
    6360:	bf 91       	pop	r27
    6362:	af 91       	pop	r26
    6364:	9f 91       	pop	r25
    6366:	8f 91       	pop	r24
    6368:	7f 91       	pop	r23
    636a:	6f 91       	pop	r22
    636c:	5f 91       	pop	r21
    636e:	4f 91       	pop	r20
    6370:	3f 91       	pop	r19
    6372:	2f 91       	pop	r18
    6374:	0f 90       	pop	r0
    6376:	0b be       	out	0x3b, r0	; 59
    6378:	0f 90       	pop	r0
    637a:	0f be       	out	0x3f, r0	; 63
    637c:	0f 90       	pop	r0
    637e:	1f 90       	pop	r1
    6380:	18 95       	reti

00006382 <__vector_default>:
    6382:	1f 92       	push	r1
    6384:	0f 92       	push	r0
    6386:	0f b6       	in	r0, 0x3f	; 63
    6388:	0f 92       	push	r0
    638a:	11 24       	eor	r1, r1
    638c:	00 00       	nop
    638e:	0f 90       	pop	r0
    6390:	0f be       	out	0x3f, r0	; 63
    6392:	0f 90       	pop	r0
    6394:	1f 90       	pop	r1
    6396:	18 95       	reti

00006398 <__vector_57>:
    6398:	1f 92       	push	r1
    639a:	0f 92       	push	r0
    639c:	0f b6       	in	r0, 0x3f	; 63
    639e:	0f 92       	push	r0
    63a0:	11 24       	eor	r1, r1
    63a2:	0f 90       	pop	r0
    63a4:	0f be       	out	0x3f, r0	; 63
    63a6:	0f 90       	pop	r0
    63a8:	1f 90       	pop	r1
    63aa:	18 95       	reti

000063ac <__vector_16>:
    63ac:	1f 92       	push	r1
    63ae:	0f 92       	push	r0
    63b0:	0f b6       	in	r0, 0x3f	; 63
    63b2:	0f 92       	push	r0
    63b4:	11 24       	eor	r1, r1
    63b6:	0b b6       	in	r0, 0x3b	; 59
    63b8:	0f 92       	push	r0
    63ba:	2f 93       	push	r18
    63bc:	3f 93       	push	r19
    63be:	4f 93       	push	r20
    63c0:	5f 93       	push	r21
    63c2:	6f 93       	push	r22
    63c4:	7f 93       	push	r23
    63c6:	8f 93       	push	r24
    63c8:	9f 93       	push	r25
    63ca:	af 93       	push	r26
    63cc:	bf 93       	push	r27
    63ce:	ef 93       	push	r30
    63d0:	ff 93       	push	r31
    63d2:	e0 e0       	ldi	r30, 0x00	; 0
    63d4:	f8 e0       	ldi	r31, 0x08	; 8
    63d6:	10 a2       	std	Z+32, r1	; 0x20
    63d8:	11 a2       	std	Z+33, r1	; 0x21
    63da:	80 91 65 21 	lds	r24, 0x2165
    63de:	90 91 66 21 	lds	r25, 0x2166
    63e2:	0e 94 8f 3a 	call	0x751e	; 0x751e <_ZN5Touch7processEv>
    63e6:	80 91 65 21 	lds	r24, 0x2165
    63ea:	90 91 66 21 	lds	r25, 0x2166
    63ee:	0e 94 b8 3a 	call	0x7570	; 0x7570 <_ZN5Touch4getXEv>
    63f2:	81 30       	cpi	r24, 0x01	; 1
    63f4:	94 40       	sbci	r25, 0x04	; 4
    63f6:	4c f4       	brge	.+18     	; 0x640a <__vector_16+0x5e>
    63f8:	80 91 65 21 	lds	r24, 0x2165
    63fc:	90 91 66 21 	lds	r25, 0x2166
    6400:	0e 94 bc 3a 	call	0x7578	; 0x7578 <_ZN5Touch4getYEv>
    6404:	81 30       	cpi	r24, 0x01	; 1
    6406:	94 40       	sbci	r25, 0x04	; 4
    6408:	2c f0       	brlt	.+10     	; 0x6414 <__vector_16+0x68>
    640a:	81 e0       	ldi	r24, 0x01	; 1
    640c:	e0 ea       	ldi	r30, 0xA0	; 160
    640e:	f6 e0       	ldi	r31, 0x06	; 6
    6410:	85 83       	std	Z+5, r24	; 0x05
    6412:	04 c0       	rjmp	.+8      	; 0x641c <__vector_16+0x70>
    6414:	81 e0       	ldi	r24, 0x01	; 1
    6416:	e0 ea       	ldi	r30, 0xA0	; 160
    6418:	f6 e0       	ldi	r31, 0x06	; 6
    641a:	86 83       	std	Z+6, r24	; 0x06
    641c:	ff 91       	pop	r31
    641e:	ef 91       	pop	r30
    6420:	bf 91       	pop	r27
    6422:	af 91       	pop	r26
    6424:	9f 91       	pop	r25
    6426:	8f 91       	pop	r24
    6428:	7f 91       	pop	r23
    642a:	6f 91       	pop	r22
    642c:	5f 91       	pop	r21
    642e:	4f 91       	pop	r20
    6430:	3f 91       	pop	r19
    6432:	2f 91       	pop	r18
    6434:	0f 90       	pop	r0
    6436:	0b be       	out	0x3b, r0	; 59
    6438:	0f 90       	pop	r0
    643a:	0f be       	out	0x3f, r0	; 63
    643c:	0f 90       	pop	r0
    643e:	1f 90       	pop	r1
    6440:	18 95       	reti

00006442 <_Z15setClockTo32MHzv>:
}

void setClockTo32MHz()
{
    CCP = CCP_IOREG_gc;              // disable register security for oscillator update
    6442:	88 ed       	ldi	r24, 0xD8	; 216
    6444:	84 bf       	out	0x34, r24	; 52
    OSC.CTRL = OSC_RC32MEN_bm;			   // enable 32MHz oscillator
    6446:	82 e0       	ldi	r24, 0x02	; 2
    6448:	80 93 50 00 	sts	0x0050, r24
    while(!(OSC.STATUS & OSC_RC32MRDY_bm)); // wait for oscillator to be ready
    644c:	e0 e5       	ldi	r30, 0x50	; 80
    644e:	f0 e0       	ldi	r31, 0x00	; 0
    6450:	81 81       	ldd	r24, Z+1	; 0x01
    6452:	81 ff       	sbrs	r24, 1
    6454:	fd cf       	rjmp	.-6      	; 0x6450 <_Z15setClockTo32MHzv+0xe>
    CCP = CCP_IOREG_gc;              // disable register security for clock update
    6456:	88 ed       	ldi	r24, 0xD8	; 216
    6458:	84 bf       	out	0x34, r24	; 52
    CLK.CTRL = CLK_SCLKSEL_RC32M_gc; // switch to 32MHz clock
    645a:	81 e0       	ldi	r24, 0x01	; 1
    645c:	80 93 40 00 	sts	0x0040, r24
    6460:	08 95       	ret

00006462 <_Z11open_appendP3FILPKc>:
}

FRESULT open_append(FIL * fp, const char * path) {
    6462:	1f 93       	push	r17
    6464:	cf 93       	push	r28
    6466:	df 93       	push	r29
    6468:	ec 01       	movw	r28, r24
	FRESULT fr;

	fr = f_open(fp, path, FA_WRITE | FA_OPEN_ALWAYS);
    646a:	42 e1       	ldi	r20, 0x12	; 18
    646c:	0e 94 36 1f 	call	0x3e6c	; 0x3e6c <f_open>
    6470:	18 2f       	mov	r17, r24
	if (fr == FR_OK) {
    6472:	81 11       	cpse	r24, r1
    6474:	0d c0       	rjmp	.+26     	; 0x6490 <_Z11open_appendP3FILPKc+0x2e>
		fr = f_lseek(fp, f_size(fp));
    6476:	4a 85       	ldd	r20, Y+10	; 0x0a
    6478:	5b 85       	ldd	r21, Y+11	; 0x0b
    647a:	6c 85       	ldd	r22, Y+12	; 0x0c
    647c:	7d 85       	ldd	r23, Y+13	; 0x0d
    647e:	ce 01       	movw	r24, r28
    6480:	0e 94 e4 23 	call	0x47c8	; 0x47c8 <f_lseek>
    6484:	18 2f       	mov	r17, r24
		if (fr != FR_OK) f_close(fp);
    6486:	88 23       	and	r24, r24
    6488:	19 f0       	breq	.+6      	; 0x6490 <_Z11open_appendP3FILPKc+0x2e>
    648a:	ce 01       	movw	r24, r28
    648c:	0e 94 d4 23 	call	0x47a8	; 0x47a8 <f_close>
	}
	return fr;
}
    6490:	81 2f       	mov	r24, r17
    6492:	df 91       	pop	r29
    6494:	cf 91       	pop	r28
    6496:	1f 91       	pop	r17
    6498:	08 95       	ret

0000649a <_Z7writeDPP3FIL>:

FRESULT writeDP(FIL * fp) {
    649a:	0f 93       	push	r16
    649c:	1f 93       	push	r17
    649e:	cf 93       	push	r28
    64a0:	df 93       	push	r29
    64a2:	cd b7       	in	r28, 0x3d	; 61
    64a4:	de b7       	in	r29, 0x3e	; 62
    64a6:	64 97       	sbiw	r28, 0x14	; 20
    64a8:	cd bf       	out	0x3d, r28	; 61
    64aa:	de bf       	out	0x3e, r29	; 62
    64ac:	8c 01       	movw	r16, r24
	char buff[20];
	if (numattempts < 10) {
    64ae:	80 91 63 21 	lds	r24, 0x2163
    64b2:	8a 30       	cpi	r24, 0x0A	; 10
    64b4:	08 f0       	brcs	.+2      	; 0x64b8 <_Z7writeDPP3FIL+0x1e>
    64b6:	9d c0       	rjmp	.+314    	; 0x65f2 <_Z7writeDPP3FIL+0x158>
		if (OBDConversion::dp.speed != 0) {
    64b8:	80 91 5e 21 	lds	r24, 0x215E
    64bc:	88 23       	and	r24, r24
    64be:	09 f4       	brne	.+2      	; 0x64c2 <_Z7writeDPP3FIL+0x28>
    64c0:	8f c0       	rjmp	.+286    	; 0x65e0 <_Z7writeDPP3FIL+0x146>
			if (!fileOpened) {
    64c2:	80 91 64 21 	lds	r24, 0x2164
    64c6:	81 11       	cpse	r24, r1
    64c8:	16 c0       	rjmp	.+44     	; 0x64f6 <_Z7writeDPP3FIL+0x5c>
				FRESULT res = open_append(fp, "test.csv");
    64ca:	6c e1       	ldi	r22, 0x1C	; 28
    64cc:	71 e2       	ldi	r23, 0x21	; 33
    64ce:	c8 01       	movw	r24, r16
    64d0:	c8 df       	rcall	.-112    	; 0x6462 <_Z11open_appendP3FILPKc>
				if (res != FR_OK) {
    64d2:	88 23       	and	r24, r24
    64d4:	59 f0       	breq	.+22     	; 0x64ec <_Z7writeDPP3FIL+0x52>
					numattempts++;
    64d6:	80 91 63 21 	lds	r24, 0x2163
    64da:	8f 5f       	subi	r24, 0xFF	; 255
    64dc:	80 93 63 21 	sts	0x2163, r24
				} else {
					numattempts = 0;
					fileOpened = true;
				}
			}
			if (fileOpened) {
    64e0:	80 91 64 21 	lds	r24, 0x2164
    64e4:	88 23       	and	r24, r24
    64e6:	09 f4       	brne	.+2      	; 0x64ea <_Z7writeDPP3FIL+0x50>
    64e8:	84 c0       	rjmp	.+264    	; 0x65f2 <_Z7writeDPP3FIL+0x158>
    64ea:	05 c0       	rjmp	.+10     	; 0x64f6 <_Z7writeDPP3FIL+0x5c>
			if (!fileOpened) {
				FRESULT res = open_append(fp, "test.csv");
				if (res != FR_OK) {
					numattempts++;
				} else {
					numattempts = 0;
    64ec:	10 92 63 21 	sts	0x2163, r1
					fileOpened = true;
    64f0:	81 e0       	ldi	r24, 0x01	; 1
    64f2:	80 93 64 21 	sts	0x2164, r24
				}
			}
			if (fileOpened) {
				f_puts(GPSref->retrieve(GPSVAL::LAT, buff), fp);
    64f6:	ae 01       	movw	r20, r28
    64f8:	4f 5f       	subi	r20, 0xFF	; 255
    64fa:	5f 4f       	sbci	r21, 0xFF	; 255
    64fc:	62 e0       	ldi	r22, 0x02	; 2
    64fe:	80 91 67 21 	lds	r24, 0x2167
    6502:	90 91 68 21 	lds	r25, 0x2168
    6506:	0e 94 3d 29 	call	0x527a	; 0x527a <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>
    650a:	b8 01       	movw	r22, r16
    650c:	0e 94 c3 26 	call	0x4d86	; 0x4d86 <f_puts>
				f_putc(',', fp);
    6510:	b8 01       	movw	r22, r16
    6512:	8c e2       	ldi	r24, 0x2C	; 44
    6514:	0e 94 87 26 	call	0x4d0e	; 0x4d0e <f_putc>
				f_puts(GPSref->retrieve(GPSVAL::LONG, buff), fp);
    6518:	ae 01       	movw	r20, r28
    651a:	4f 5f       	subi	r20, 0xFF	; 255
    651c:	5f 4f       	sbci	r21, 0xFF	; 255
    651e:	64 e0       	ldi	r22, 0x04	; 4
    6520:	80 91 67 21 	lds	r24, 0x2167
    6524:	90 91 68 21 	lds	r25, 0x2168
    6528:	0e 94 3d 29 	call	0x527a	; 0x527a <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>
    652c:	b8 01       	movw	r22, r16
    652e:	0e 94 c3 26 	call	0x4d86	; 0x4d86 <f_puts>
				f_putc(',', fp);
    6532:	b8 01       	movw	r22, r16
    6534:	8c e2       	ldi	r24, 0x2C	; 44
    6536:	0e 94 87 26 	call	0x4d0e	; 0x4d0e <f_putc>
				f_puts(GPSref->retrieve(GPSVAL::FIX_TIME, buff), fp);
    653a:	ae 01       	movw	r20, r28
    653c:	4f 5f       	subi	r20, 0xFF	; 255
    653e:	5f 4f       	sbci	r21, 0xFF	; 255
    6540:	60 e0       	ldi	r22, 0x00	; 0
    6542:	80 91 67 21 	lds	r24, 0x2167
    6546:	90 91 68 21 	lds	r25, 0x2168
    654a:	0e 94 3d 29 	call	0x527a	; 0x527a <_ZN3GPS8retrieveEN6GPSVAL3VALEPc>
    654e:	b8 01       	movw	r22, r16
    6550:	0e 94 c3 26 	call	0x4d86	; 0x4d86 <f_puts>
				f_putc(',', fp);
    6554:	b8 01       	movw	r22, r16
    6556:	8c e2       	ldi	r24, 0x2C	; 44
    6558:	0e 94 87 26 	call	0x4d0e	; 0x4d0e <f_putc>
				f_puts(itoa(OBDConversion::dp.speed, buff, 10), fp);
    655c:	80 91 5e 21 	lds	r24, 0x215E
    6560:	4a e0       	ldi	r20, 0x0A	; 10
    6562:	be 01       	movw	r22, r28
    6564:	6f 5f       	subi	r22, 0xFF	; 255
    6566:	7f 4f       	sbci	r23, 0xFF	; 255
    6568:	90 e0       	ldi	r25, 0x00	; 0
    656a:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <__itoa_ncheck>
    656e:	b8 01       	movw	r22, r16
    6570:	0e 94 c3 26 	call	0x4d86	; 0x4d86 <f_puts>
				f_putc(',', fp);
    6574:	b8 01       	movw	r22, r16
    6576:	8c e2       	ldi	r24, 0x2C	; 44
    6578:	0e 94 87 26 	call	0x4d0e	; 0x4d0e <f_putc>
    657c:	4a e0       	ldi	r20, 0x0A	; 10
    657e:	be 01       	movw	r22, r28
    6580:	6f 5f       	subi	r22, 0xFF	; 255
    6582:	7f 4f       	sbci	r23, 0xFF	; 255
    6584:	80 91 61 21 	lds	r24, 0x2161
    6588:	90 91 62 21 	lds	r25, 0x2162
    658c:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <__itoa_ncheck>
				f_puts(itoa(OBDConversion::dp.rpm, buff, 10), fp);
    6590:	b8 01       	movw	r22, r16
    6592:	0e 94 c3 26 	call	0x4d86	; 0x4d86 <f_puts>
				f_putc(',', fp);
    6596:	b8 01       	movw	r22, r16
    6598:	8c e2       	ldi	r24, 0x2C	; 44
    659a:	0e 94 87 26 	call	0x4d0e	; 0x4d0e <f_putc>
				f_puts(itoa(OBDConversion::dp.throttle_pos, buff, 10), fp);
    659e:	80 91 5f 21 	lds	r24, 0x215F
    65a2:	4a e0       	ldi	r20, 0x0A	; 10
    65a4:	be 01       	movw	r22, r28
    65a6:	6f 5f       	subi	r22, 0xFF	; 255
    65a8:	7f 4f       	sbci	r23, 0xFF	; 255
    65aa:	90 e0       	ldi	r25, 0x00	; 0
    65ac:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <__itoa_ncheck>
    65b0:	b8 01       	movw	r22, r16
    65b2:	0e 94 c3 26 	call	0x4d86	; 0x4d86 <f_puts>
				f_putc(',', fp);
    65b6:	b8 01       	movw	r22, r16
    65b8:	8c e2       	ldi	r24, 0x2C	; 44
    65ba:	0e 94 87 26 	call	0x4d0e	; 0x4d0e <f_putc>
				f_puts(itoa(OBDConversion::dp.engine_load, buff, 10), fp);
    65be:	80 91 60 21 	lds	r24, 0x2160
    65c2:	4a e0       	ldi	r20, 0x0A	; 10
    65c4:	be 01       	movw	r22, r28
    65c6:	6f 5f       	subi	r22, 0xFF	; 255
    65c8:	7f 4f       	sbci	r23, 0xFF	; 255
    65ca:	90 e0       	ldi	r25, 0x00	; 0
    65cc:	0e 94 fc 3d 	call	0x7bf8	; 0x7bf8 <__itoa_ncheck>
    65d0:	b8 01       	movw	r22, r16
    65d2:	0e 94 c3 26 	call	0x4d86	; 0x4d86 <f_puts>
				f_putc('\n', fp);
    65d6:	b8 01       	movw	r22, r16
    65d8:	8a e0       	ldi	r24, 0x0A	; 10
    65da:	0e 94 87 26 	call	0x4d0e	; 0x4d0e <f_putc>
    65de:	09 c0       	rjmp	.+18     	; 0x65f2 <_Z7writeDPP3FIL+0x158>
			}
		}else {
			if (fileOpened) {
    65e0:	80 91 64 21 	lds	r24, 0x2164
    65e4:	88 23       	and	r24, r24
    65e6:	29 f0       	breq	.+10     	; 0x65f2 <_Z7writeDPP3FIL+0x158>
				fileOpened = false;
    65e8:	10 92 64 21 	sts	0x2164, r1
				f_close(fp);
    65ec:	c8 01       	movw	r24, r16
    65ee:	0e 94 d4 23 	call	0x47a8	; 0x47a8 <f_close>
			}
		}
	} 
}
    65f2:	64 96       	adiw	r28, 0x14	; 20
    65f4:	cd bf       	out	0x3d, r28	; 61
    65f6:	de bf       	out	0x3e, r29	; 62
    65f8:	df 91       	pop	r29
    65fa:	cf 91       	pop	r28
    65fc:	1f 91       	pop	r17
    65fe:	0f 91       	pop	r16
    6600:	08 95       	ret

00006602 <main>:


int main(void)
{
    6602:	cf 93       	push	r28
    6604:	df 93       	push	r29
    6606:	cd b7       	in	r28, 0x3d	; 61
    6608:	de b7       	in	r29, 0x3e	; 62
    660a:	c1 54       	subi	r28, 0x41	; 65
    660c:	d5 40       	sbci	r29, 0x05	; 5
    660e:	cd bf       	out	0x3d, r28	; 61
    6610:	de bf       	out	0x3e, r29	; 62
	asm("cli");
    6612:	f8 94       	cli
	setClockTo32MHz();
    6614:	16 df       	rcall	.-468    	; 0x6442 <_Z15setClockTo32MHzv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    6616:	2f ef       	ldi	r18, 0xFF	; 255
    6618:	87 ea       	ldi	r24, 0xA7	; 167
    661a:	91 e6       	ldi	r25, 0x61	; 97
    661c:	21 50       	subi	r18, 0x01	; 1
    661e:	80 40       	sbci	r24, 0x00	; 0
    6620:	90 40       	sbci	r25, 0x00	; 0
    6622:	e1 f7       	brne	.-8      	; 0x661c <main+0x1a>
    6624:	00 c0       	rjmp	.+0      	; 0x6626 <main+0x24>
    6626:	00 00       	nop
	FATFS fs;
	FIL fil;
	int err;

	// Set pins as outputs
	PORTD.OUT = 0x88;
    6628:	e0 e6       	ldi	r30, 0x60	; 96
    662a:	f6 e0       	ldi	r31, 0x06	; 6
    662c:	88 e8       	ldi	r24, 0x88	; 136
    662e:	84 83       	std	Z+4, r24	; 0x04
	PORTD.DIR = 0x88;
    6630:	80 83       	st	Z, r24
	PORTE.DIR = 0xB0;
    6632:	80 eb       	ldi	r24, 0xB0	; 176
    6634:	80 93 80 06 	sts	0x0680, r24
	PORTF.DIR = 0x01;
    6638:	81 e0       	ldi	r24, 0x01	; 1
    663a:	80 93 a0 06 	sts	0x06A0, r24

	//SD card setup
	f_mount(&fs, "", 0);
    663e:	40 e0       	ldi	r20, 0x00	; 0
    6640:	6d e8       	ldi	r22, 0x8D	; 141
    6642:	70 e2       	ldi	r23, 0x20	; 32
    6644:	ce 01       	movw	r24, r28
    6646:	01 96       	adiw	r24, 0x01	; 1
    6648:	0e 94 e7 1e 	call	0x3dce	; 0x3dce <f_mount>
	fr = f_open(&fil, "test.csv",FA_WRITE | FA_CREATE_ALWAYS);
    664c:	4a e0       	ldi	r20, 0x0A	; 10
    664e:	6c e1       	ldi	r22, 0x1C	; 28
    6650:	71 e2       	ldi	r23, 0x21	; 33
    6652:	ce 01       	movw	r24, r28
    6654:	81 5d       	subi	r24, 0xD1	; 209
    6656:	9d 4f       	sbci	r25, 0xFD	; 253
    6658:	0e 94 36 1f 	call	0x3e6c	; 0x3e6c <f_open>
	if (fr == FR_OK) {
    665c:	81 11       	cpse	r24, r1
    665e:	07 c0       	rjmp	.+14     	; 0x666e <main+0x6c>
		f_puts((TCHAR *) "lat,long,time,speed,rpm,throttle,load\n", &fil);
    6660:	be 01       	movw	r22, r28
    6662:	61 5d       	subi	r22, 0xD1	; 209
    6664:	7d 4f       	sbci	r23, 0xFD	; 253
    6666:	85 e2       	ldi	r24, 0x25	; 37
    6668:	91 e2       	ldi	r25, 0x21	; 33
    666a:	0e 94 c3 26 	call	0x4d86	; 0x4d86 <f_puts>
	}
	f_close(&fil);
    666e:	ce 01       	movw	r24, r28
    6670:	81 5d       	subi	r24, 0xD1	; 209
    6672:	9d 4f       	sbci	r25, 0xFD	; 253
    6674:	0e 94 d4 23 	call	0x47a8	; 0x47a8 <f_close>


	// LCD setup
	LCD_Driver LCD;
    6678:	8e 01       	movw	r16, r28
    667a:	07 5d       	subi	r16, 0xD7	; 215
    667c:	1a 4f       	sbci	r17, 0xFA	; 250
    667e:	c8 01       	movw	r24, r16
    6680:	0e 94 fa 29 	call	0x53f4	; 0x53f4 <_ZN10LCD_DriverC1Ev>
	LCDref = &LCD;
    6684:	00 93 69 21 	sts	0x2169, r16
    6688:	10 93 6a 21 	sts	0x216A, r17
	LCD.begin();
    668c:	c8 01       	movw	r24, r16
    668e:	0e 94 57 2a 	call	0x54ae	; 0x54ae <_ZN10LCD_Driver5beginEv>
	LCD.fillScreen(0x0000);
    6692:	60 e0       	ldi	r22, 0x00	; 0
    6694:	70 e0       	ldi	r23, 0x00	; 0
    6696:	c8 01       	movw	r24, r16
    6698:	59 d9       	rcall	.-3406   	; 0x594c <_ZN10LCD_Driver10fillScreenEj>
	LCD.setRotation(3);
    669a:	63 e0       	ldi	r22, 0x03	; 3
    669c:	c8 01       	movw	r24, r16
    669e:	be d8       	rcall	.-3716   	; 0x581c <_ZN10LCD_Driver11setRotationEh>
	LCD.setCursor(0,0);
    66a0:	40 e0       	ldi	r20, 0x00	; 0
    66a2:	50 e0       	ldi	r21, 0x00	; 0
    66a4:	60 e0       	ldi	r22, 0x00	; 0
    66a6:	70 e0       	ldi	r23, 0x00	; 0
    66a8:	c8 01       	movw	r24, r16
    66aa:	0e 94 03 07 	call	0xe06	; 0xe06 <_ZN12Adafruit_GFX9setCursorEii>
	LCD.setTextColor(0xFFFF, 0x0000);
    66ae:	40 e0       	ldi	r20, 0x00	; 0
    66b0:	50 e0       	ldi	r21, 0x00	; 0
    66b2:	6f ef       	ldi	r22, 0xFF	; 255
    66b4:	7f ef       	ldi	r23, 0xFF	; 255
    66b6:	c8 01       	movw	r24, r16
    66b8:	0e 94 11 07 	call	0xe22	; 0xe22 <_ZN12Adafruit_GFX12setTextColorEjj>
	LCD.setTextSize(2);
    66bc:	62 e0       	ldi	r22, 0x02	; 2
    66be:	c8 01       	movw	r24, r16
    66c0:	0e 94 0b 07 	call	0xe16	; 0xe16 <_ZN12Adafruit_GFX11setTextSizeEh>
	LCD.setTextWrap(true);
    66c4:	61 e0       	ldi	r22, 0x01	; 1
    66c6:	c8 01       	movw	r24, r16
    66c8:	0e 94 17 07 	call	0xe2e	; 0xe2e <_ZN12Adafruit_GFX11setTextWrapEb>

	OBDConversion::init();
    66cc:	f2 dc       	rcall	.-1564   	; 0x60b2 <_ZN13OBDConversion4initEv>
	//Touch toucj;
	//Touchref = &toucj;
	//_delay_ms(1000);
	
	// GPS setup
	GPS GPSModule;
    66ce:	0a 5d       	subi	r16, 0xDA	; 218
    66d0:	11 09       	sbc	r17, r1
    66d2:	c8 01       	movw	r24, r16
    66d4:	0e 94 0e 27 	call	0x4e1c	; 0x4e1c <_ZN3GPSC1Ev>
	GPSref = &GPSModule;
    66d8:	00 93 67 21 	sts	0x2167, r16
    66dc:	10 93 68 21 	sts	0x2168, r17

	// BT setup
	BTOBD OBDModule;
    66e0:	02 59       	subi	r16, 0x92	; 146
    66e2:	1f 4f       	sbci	r17, 0xFF	; 255
    66e4:	c8 01       	movw	r24, r16
    66e6:	0e 94 37 07 	call	0xe6e	; 0xe6e <_ZN5BTOBDC1Ev>
	OBDref = &OBDModule;
    66ea:	00 93 6b 21 	sts	0x216B, r16
    66ee:	10 93 6c 21 	sts	0x216C, r17

	PMIC.CTRL |= 0x07;
    66f2:	e0 ea       	ldi	r30, 0xA0	; 160
    66f4:	f0 e0       	ldi	r31, 0x00	; 0
    66f6:	82 81       	ldd	r24, Z+2	; 0x02
    66f8:	87 60       	ori	r24, 0x07	; 7
    66fa:	82 83       	std	Z+2, r24	; 0x02
	asm("sei");
    66fc:	78 94       	sei


	bool send = true;
	//OBDModule.initialize("000666643F8F", LCDref);
	OBDModule.initialize("00195DE8057A", LCDref);
    66fe:	40 91 69 21 	lds	r20, 0x2169
    6702:	50 91 6a 21 	lds	r21, 0x216A
    6706:	6c e4       	ldi	r22, 0x4C	; 76
    6708:	71 e2       	ldi	r23, 0x21	; 33
    670a:	ce 01       	movw	r24, r28
    670c:	83 54       	subi	r24, 0x43	; 67
    670e:	9b 4f       	sbci	r25, 0xFB	; 251
    6710:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <_ZN5BTOBD10initializeEPcP10LCD_Driver>
	GPSModule.init();
    6714:	ce 01       	movw	r24, r28
    6716:	81 5b       	subi	r24, 0xB1	; 177
    6718:	9b 4f       	sbci	r25, 0xFB	; 251
    671a:	0e 94 04 28 	call	0x5008	; 0x5008 <_ZN3GPS4initEv>
	MainScreen ms(LCDref);
    671e:	60 91 69 21 	lds	r22, 0x2169
    6722:	70 91 6a 21 	lds	r23, 0x216A
    6726:	ce 01       	movw	r24, r28
    6728:	80 5c       	subi	r24, 0xC0	; 192
    672a:	9a 4f       	sbci	r25, 0xFA	; 250
    672c:	4f d9       	rcall	.-3426   	; 0x59cc <_ZN10MainScreenC1EP10LCD_Driver>
	ms.clear();
    672e:	ce 01       	movw	r24, r28
    6730:	80 5c       	subi	r24, 0xC0	; 192
    6732:	9a 4f       	sbci	r25, 0xFA	; 250
    6734:	4d d9       	rcall	.-3430   	; 0x59d0 <_ZN10MainScreen5clearEv>
	GPSModule.startReceiving();
    6736:	ce 01       	movw	r24, r28
    6738:	81 5b       	subi	r24, 0xB1	; 177
    673a:	9b 4f       	sbci	r25, 0xFB	; 251
    673c:	0e 94 ad 29 	call	0x535a	; 0x535a <_ZN3GPS14startReceivingEv>
	while(1) {
		GPSModule.updateRegisters();
    6740:	ce 01       	movw	r24, r28
    6742:	81 5b       	subi	r24, 0xB1	; 177
    6744:	9b 4f       	sbci	r25, 0xFB	; 251
    6746:	0e 94 94 28 	call	0x5128	; 0x5128 <_ZN3GPS15updateRegistersEv>
		if (GPSModule.getStatus()) break;
    674a:	ce 01       	movw	r24, r28
    674c:	81 5b       	subi	r24, 0xB1	; 177
    674e:	9b 4f       	sbci	r25, 0xFB	; 251
    6750:	0e 94 35 29 	call	0x526a	; 0x526a <_ZN3GPS9getStatusEv>
    6754:	89 2b       	or	r24, r25
    6756:	a1 f3       	breq	.-24     	; 0x6740 <main+0x13e>
    6758:	11 e0       	ldi	r17, 0x01	; 1
	}
	while (1) {
		if (send) {
    675a:	11 23       	and	r17, r17
    675c:	29 f0       	breq	.+10     	; 0x6768 <main+0x166>
			OBDModule.sendCmd();
    675e:	ce 01       	movw	r24, r28
    6760:	83 54       	subi	r24, 0x43	; 67
    6762:	9b 4f       	sbci	r25, 0xFB	; 251
    6764:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <_ZN5BTOBD7sendCmdEv>
		}
		send = OBDModule.rcvResp();
    6768:	ce 01       	movw	r24, r28
    676a:	83 54       	subi	r24, 0x43	; 67
    676c:	9b 4f       	sbci	r25, 0xFB	; 251
    676e:	0e 94 7c 0c 	call	0x18f8	; 0x18f8 <_ZN5BTOBD7rcvRespEv>
    6772:	18 2f       	mov	r17, r24
		GPSModule.updateRegisters();
    6774:	ce 01       	movw	r24, r28
    6776:	81 5b       	subi	r24, 0xB1	; 177
    6778:	9b 4f       	sbci	r25, 0xFB	; 251
    677a:	0e 94 94 28 	call	0x5128	; 0x5128 <_ZN3GPS15updateRegistersEv>

		//GPSModule.vomit(LCDref);
		ms.update(OBDref, GPSref);
    677e:	40 91 67 21 	lds	r20, 0x2167
    6782:	50 91 68 21 	lds	r21, 0x2168
    6786:	60 91 6b 21 	lds	r22, 0x216B
    678a:	70 91 6c 21 	lds	r23, 0x216C
    678e:	ce 01       	movw	r24, r28
    6790:	80 5c       	subi	r24, 0xC0	; 192
    6792:	9a 4f       	sbci	r25, 0xFA	; 250
    6794:	50 dc       	rcall	.-1888   	; 0x6036 <_ZN10MainScreen6updateEP5BTOBDP3GPS>
		writeDP(&fil);
    6796:	ce 01       	movw	r24, r28
    6798:	81 5d       	subi	r24, 0xD1	; 209
    679a:	9d 4f       	sbci	r25, 0xFD	; 253
    679c:	7e de       	rcall	.-772    	; 0x649a <_Z7writeDPP3FIL>
    679e:	dd cf       	rjmp	.-70     	; 0x675a <main+0x158>

000067a0 <_ZN6ScreenC1EP10LCD_Driver>:
 *  Author: ee63pc3-user
 */ 

 #include "Screen.h"

 Screen::Screen(LCD_Driver * lcdscreen) {lcd = lcdscreen;}
    67a0:	fc 01       	movw	r30, r24
    67a2:	60 83       	st	Z, r22
    67a4:	71 83       	std	Z+1, r23	; 0x01
    67a6:	08 95       	ret

000067a8 <get_fattime>:
	if (SPI_PORT.IN & SPI_CD_BM) Stat |= STA_NODISK;
	spi.enable();
 }
 DSTATUS SDCard::getStatus() {
	return Stat;
 }
    67a8:	62 e6       	ldi	r22, 0x62	; 98
    67aa:	77 ea       	ldi	r23, 0xA7	; 167
    67ac:	8b e9       	ldi	r24, 0x9B	; 155
    67ae:	90 e0       	ldi	r25, 0x00	; 0
    67b0:	08 95       	ret

000067b2 <disk_status>:
    67b2:	cf 93       	push	r28
    67b4:	df 93       	push	r29
    67b6:	1f 92       	push	r1
    67b8:	cd b7       	in	r28, 0x3d	; 61
    67ba:	de b7       	in	r29, 0x3e	; 62
    67bc:	89 83       	std	Y+1, r24	; 0x01
    67be:	89 81       	ldd	r24, Y+1	; 0x01
    67c0:	90 91 6f 21 	lds	r25, 0x216F
    67c4:	98 13       	cpse	r25, r24
    67c6:	03 c0       	rjmp	.+6      	; 0x67ce <disk_status+0x1c>
    67c8:	80 91 71 21 	lds	r24, 0x2171
    67cc:	01 c0       	rjmp	.+2      	; 0x67d0 <disk_status+0x1e>
    67ce:	81 e0       	ldi	r24, 0x01	; 1
    67d0:	0f 90       	pop	r0
    67d2:	df 91       	pop	r29
    67d4:	cf 91       	pop	r28
    67d6:	08 95       	ret

000067d8 <_ZN6SDCardC1EP10SPI_struct>:
    67d8:	cf 93       	push	r28
    67da:	df 93       	push	r29
    67dc:	ec 01       	movw	r28, r24
    67de:	03 d6       	rcall	.+3078   	; 0x73e6 <_ZN10SPI_DriverC1EP10SPI_struct>
    67e0:	81 e0       	ldi	r24, 0x01	; 1
    67e2:	8c 83       	std	Y+4, r24	; 0x04
    67e4:	e0 e8       	ldi	r30, 0x80	; 128
    67e6:	f6 e0       	ldi	r31, 0x06	; 6
    67e8:	80 81       	ld	r24, Z
    67ea:	83 7f       	andi	r24, 0xF3	; 243
    67ec:	80 83       	st	Z, r24
    67ee:	80 85       	ldd	r24, Z+8	; 0x08
    67f0:	83 ff       	sbrs	r24, 3
    67f2:	03 c0       	rjmp	.+6      	; 0x67fa <_ZN6SDCardC1EP10SPI_struct+0x22>
    67f4:	8c 81       	ldd	r24, Y+4	; 0x04
    67f6:	82 60       	ori	r24, 0x02	; 2
    67f8:	8c 83       	std	Y+4, r24	; 0x04
    67fa:	ce 01       	movw	r24, r28
    67fc:	0c d6       	rcall	.+3096   	; 0x7416 <_ZN10SPI_Driver6enableEv>
    67fe:	df 91       	pop	r29
    6800:	cf 91       	pop	r28
    6802:	08 95       	ret

00006804 <_ZN6SDCard13rcv_dataBlockEPVhj>:
		res = spi.get();
	} while ((res & 0x80) && --n);

	return res;
}
int SDCard::rcv_dataBlock(BYTE * buff, UINT btr){
    6804:	cf 92       	push	r12
    6806:	df 92       	push	r13
    6808:	ef 92       	push	r14
    680a:	ff 92       	push	r15
    680c:	0f 93       	push	r16
    680e:	1f 93       	push	r17
    6810:	cf 93       	push	r28
    6812:	df 93       	push	r29
    6814:	00 d0       	rcall	.+0      	; 0x6816 <_ZN6SDCard13rcv_dataBlockEPVhj+0x12>
    6816:	cd b7       	in	r28, 0x3d	; 61
    6818:	de b7       	in	r29, 0x3e	; 62
    681a:	8b 01       	movw	r16, r22
    681c:	4a 83       	std	Y+2, r20	; 0x02
    681e:	5b 83       	std	Y+3, r21	; 0x03
	BYTE token;
	do {
		token = spi.get();
    6820:	c8 2e       	mov	r12, r24
    6822:	d9 2e       	mov	r13, r25
    6824:	ec 2c       	mov	r14, r12
    6826:	fd 2c       	mov	r15, r13
    6828:	8c 2d       	mov	r24, r12
    682a:	9d 2d       	mov	r25, r13
    682c:	10 d6       	rcall	.+3104   	; 0x744e <_ZN10SPI_Driver3getEv>
    682e:	89 83       	std	Y+1, r24	; 0x01
	} while((token == 0xFF));
    6830:	89 81       	ldd	r24, Y+1	; 0x01

	return res;
}
int SDCard::rcv_dataBlock(BYTE * buff, UINT btr){
	BYTE token;
	do {
    6832:	8f 3f       	cpi	r24, 0xFF	; 255
    6834:	b9 f3       	breq	.-18     	; 0x6824 <_ZN6SDCard13rcv_dataBlockEPVhj+0x20>
		token = spi.get();
	} while((token == 0xFF));
	if (token != 0xFE) return 0;
    6836:	89 81       	ldd	r24, Y+1	; 0x01
    6838:	8e 3f       	cpi	r24, 0xFE	; 254
    683a:	49 f5       	brne	.+82     	; 0x688e <_ZN6SDCard13rcv_dataBlockEPVhj+0x8a>

	do {
		spi.get_buffered(buff++);
    683c:	b8 01       	movw	r22, r16
    683e:	8e 2d       	mov	r24, r14
    6840:	9f 2d       	mov	r25, r15
    6842:	12 d6       	rcall	.+3108   	; 0x7468 <_ZN10SPI_Driver12get_bufferedEPVh>
    6844:	b8 01       	movw	r22, r16
    6846:	6f 5f       	subi	r22, 0xFF	; 255
    6848:	7f 4f       	sbci	r23, 0xFF	; 255
		spi.get_buffered(buff++);
    684a:	8e 2d       	mov	r24, r14
    684c:	9f 2d       	mov	r25, r15
    684e:	0c d6       	rcall	.+3096   	; 0x7468 <_ZN10SPI_Driver12get_bufferedEPVh>
    6850:	b8 01       	movw	r22, r16
    6852:	6e 5f       	subi	r22, 0xFE	; 254
    6854:	7f 4f       	sbci	r23, 0xFF	; 255
		spi.get_buffered(buff++);
    6856:	8e 2d       	mov	r24, r14
    6858:	9f 2d       	mov	r25, r15
    685a:	06 d6       	rcall	.+3084   	; 0x7468 <_ZN10SPI_Driver12get_bufferedEPVh>
		spi.get_buffered(buff++);
    685c:	b8 01       	movw	r22, r16
    685e:	6d 5f       	subi	r22, 0xFD	; 253
    6860:	7f 4f       	sbci	r23, 0xFF	; 255
    6862:	0c 5f       	subi	r16, 0xFC	; 252
    6864:	1f 4f       	sbci	r17, 0xFF	; 255
    6866:	8e 2d       	mov	r24, r14
    6868:	9f 2d       	mov	r25, r15
    686a:	fe d5       	rcall	.+3068   	; 0x7468 <_ZN10SPI_Driver12get_bufferedEPVh>
	do {
		token = spi.get();
	} while((token == 0xFF));
	if (token != 0xFE) return 0;

	do {
    686c:	2a 81       	ldd	r18, Y+2	; 0x02
    686e:	3b 81       	ldd	r19, Y+3	; 0x03
    6870:	24 50       	subi	r18, 0x04	; 4
    6872:	31 09       	sbc	r19, r1
    6874:	2a 83       	std	Y+2, r18	; 0x02
    6876:	3b 83       	std	Y+3, r19	; 0x03
    6878:	23 2b       	or	r18, r19
    687a:	01 f7       	brne	.-64     	; 0x683c <_ZN6SDCard13rcv_dataBlockEPVhj+0x38>
		spi.get_buffered(buff++);
		spi.get_buffered(buff++);
		spi.get_buffered(buff++);
		spi.get_buffered(buff++);
	} while (btr -= 4);
	spi.get();
    687c:	8e 2d       	mov	r24, r14
    687e:	9f 2d       	mov	r25, r15
    6880:	e6 d5       	rcall	.+3020   	; 0x744e <_ZN10SPI_Driver3getEv>
	spi.get();
    6882:	8e 2d       	mov	r24, r14
    6884:	9f 2d       	mov	r25, r15
    6886:	e3 d5       	rcall	.+3014   	; 0x744e <_ZN10SPI_Driver3getEv>

	return 1;
    6888:	81 e0       	ldi	r24, 0x01	; 1
    688a:	90 e0       	ldi	r25, 0x00	; 0
    688c:	02 c0       	rjmp	.+4      	; 0x6892 <_ZN6SDCard13rcv_dataBlockEPVhj+0x8e>
int SDCard::rcv_dataBlock(BYTE * buff, UINT btr){
	BYTE token;
	do {
		token = spi.get();
	} while((token == 0xFF));
	if (token != 0xFE) return 0;
    688e:	80 e0       	ldi	r24, 0x00	; 0
    6890:	90 e0       	ldi	r25, 0x00	; 0
	} while (btr -= 4);
	spi.get();
	spi.get();

	return 1;
}
    6892:	23 96       	adiw	r28, 0x03	; 3
    6894:	cd bf       	out	0x3d, r28	; 61
    6896:	de bf       	out	0x3e, r29	; 62
    6898:	df 91       	pop	r29
    689a:	cf 91       	pop	r28
    689c:	1f 91       	pop	r17
    689e:	0f 91       	pop	r16
    68a0:	ff 90       	pop	r15
    68a2:	ef 90       	pop	r14
    68a4:	df 90       	pop	r13
    68a6:	cf 90       	pop	r12
    68a8:	08 95       	ret

000068aa <_ZN6SDCard10wait_readyEv>:
		if ((resp & 0x1F) != 0x05) return 0;
	}
	return 1;
}

int SDCard::wait_ready() {
    68aa:	0f 93       	push	r16
    68ac:	1f 93       	push	r17
    68ae:	cf 93       	push	r28
    68b0:	df 93       	push	r29
    68b2:	1f 92       	push	r1
    68b4:	cd b7       	in	r28, 0x3d	; 61
    68b6:	de b7       	in	r29, 0x3e	; 62
	BYTE n = 0xFF;
    68b8:	2f ef       	ldi	r18, 0xFF	; 255
    68ba:	29 83       	std	Y+1, r18	; 0x01
	spi.get();
    68bc:	08 2f       	mov	r16, r24
    68be:	19 2f       	mov	r17, r25
    68c0:	c6 d5       	rcall	.+2956   	; 0x744e <_ZN10SPI_Driver3getEv>
	for (;n;n--) {
    68c2:	89 81       	ldd	r24, Y+1	; 0x01
    68c4:	88 23       	and	r24, r24
    68c6:	61 f0       	breq	.+24     	; 0x68e0 <_ZN6SDCard10wait_readyEv+0x36>
		if (spi.get() == 0xFF) return 1;
    68c8:	80 2f       	mov	r24, r16
    68ca:	91 2f       	mov	r25, r17
    68cc:	c0 d5       	rcall	.+2944   	; 0x744e <_ZN10SPI_Driver3getEv>
    68ce:	8f 3f       	cpi	r24, 0xFF	; 255
    68d0:	51 f0       	breq	.+20     	; 0x68e6 <_ZN6SDCard10wait_readyEv+0x3c>
}

int SDCard::wait_ready() {
	BYTE n = 0xFF;
	spi.get();
	for (;n;n--) {
    68d2:	29 81       	ldd	r18, Y+1	; 0x01
    68d4:	21 50       	subi	r18, 0x01	; 1
    68d6:	29 83       	std	Y+1, r18	; 0x01
    68d8:	29 81       	ldd	r18, Y+1	; 0x01
    68da:	21 11       	cpse	r18, r1
    68dc:	f5 cf       	rjmp	.-22     	; 0x68c8 <_ZN6SDCard10wait_readyEv+0x1e>
    68de:	06 c0       	rjmp	.+12     	; 0x68ec <_ZN6SDCard10wait_readyEv+0x42>
		if (spi.get() == 0xFF) return 1;
	}
	return 0;
    68e0:	80 e0       	ldi	r24, 0x00	; 0
    68e2:	90 e0       	ldi	r25, 0x00	; 0
    68e4:	05 c0       	rjmp	.+10     	; 0x68f0 <_ZN6SDCard10wait_readyEv+0x46>

int SDCard::wait_ready() {
	BYTE n = 0xFF;
	spi.get();
	for (;n;n--) {
		if (spi.get() == 0xFF) return 1;
    68e6:	81 e0       	ldi	r24, 0x01	; 1
    68e8:	90 e0       	ldi	r25, 0x00	; 0
    68ea:	02 c0       	rjmp	.+4      	; 0x68f0 <_ZN6SDCard10wait_readyEv+0x46>
	}
	return 0;
    68ec:	80 e0       	ldi	r24, 0x00	; 0
    68ee:	90 e0       	ldi	r25, 0x00	; 0
}
    68f0:	0f 90       	pop	r0
    68f2:	df 91       	pop	r29
    68f4:	cf 91       	pop	r28
    68f6:	1f 91       	pop	r17
    68f8:	0f 91       	pop	r16
    68fa:	08 95       	ret

000068fc <_ZN6SDCard14send_dataBlockEPVKhh>:
	spi.get();

	return 1;
}

int SDCard::send_dataBlock(const BYTE * buff, BYTE token) {
    68fc:	af 92       	push	r10
    68fe:	bf 92       	push	r11
    6900:	cf 92       	push	r12
    6902:	df 92       	push	r13
    6904:	ef 92       	push	r14
    6906:	ff 92       	push	r15
    6908:	0f 93       	push	r16
    690a:	1f 93       	push	r17
    690c:	cf 93       	push	r28
    690e:	df 93       	push	r29
    6910:	00 d0       	rcall	.+0      	; 0x6912 <_ZN6SDCard14send_dataBlockEPVKhh+0x16>
    6912:	cd b7       	in	r28, 0x3d	; 61
    6914:	de b7       	in	r29, 0x3e	; 62
    6916:	a8 2e       	mov	r10, r24
    6918:	b9 2e       	mov	r11, r25
    691a:	8b 01       	movw	r16, r22
    691c:	4b 83       	std	Y+3, r20	; 0x03
	BYTE resp,wc;

	if (!wait_ready()) return 0;
    691e:	c5 df       	rcall	.-118    	; 0x68aa <_ZN6SDCard10wait_readyEv>
    6920:	00 97       	sbiw	r24, 0x00	; 0
    6922:	b9 f1       	breq	.+110    	; 0x6992 <_ZN6SDCard14send_dataBlockEPVKhh+0x96>

	spi.put(token);
    6924:	6b 81       	ldd	r22, Y+3	; 0x03
    6926:	da 2c       	mov	r13, r10
    6928:	cb 2c       	mov	r12, r11
    692a:	8a 2d       	mov	r24, r10
    692c:	9b 2d       	mov	r25, r11
    692e:	7a d5       	rcall	.+2804   	; 0x7424 <_ZN10SPI_Driver3putEh>
	if (token != 0xFD) {
    6930:	8b 81       	ldd	r24, Y+3	; 0x03
    6932:	8d 3f       	cpi	r24, 0xFD	; 253
    6934:	61 f1       	breq	.+88     	; 0x698e <_ZN6SDCard14send_dataBlockEPVKhh+0x92>
		wc = 0;
    6936:	19 82       	std	Y+1, r1	; 0x01
		do {
			spi.put(*buff++);
    6938:	f8 01       	movw	r30, r16
    693a:	60 81       	ld	r22, Z
    693c:	8d 2d       	mov	r24, r13
    693e:	9c 2d       	mov	r25, r12
    6940:	71 d5       	rcall	.+2786   	; 0x7424 <_ZN10SPI_Driver3putEh>
    6942:	78 01       	movw	r14, r16
    6944:	f2 e0       	ldi	r31, 0x02	; 2
    6946:	ef 0e       	add	r14, r31
    6948:	f1 1c       	adc	r15, r1
			spi.put(*buff++);
    694a:	f8 01       	movw	r30, r16
    694c:	61 81       	ldd	r22, Z+1	; 0x01
    694e:	8d 2d       	mov	r24, r13
    6950:	9c 2d       	mov	r25, r12
    6952:	68 d5       	rcall	.+2768   	; 0x7424 <_ZN10SPI_Driver3putEh>
	if (!wait_ready()) return 0;

	spi.put(token);
	if (token != 0xFD) {
		wc = 0;
		do {
    6954:	29 81       	ldd	r18, Y+1	; 0x01
    6956:	21 50       	subi	r18, 0x01	; 1
    6958:	29 83       	std	Y+1, r18	; 0x01
    695a:	22 23       	and	r18, r18
    695c:	11 f0       	breq	.+4      	; 0x6962 <_ZN6SDCard14send_dataBlockEPVKhh+0x66>
			spi.put(*buff++);
			spi.put(*buff++);
    695e:	87 01       	movw	r16, r14
    6960:	eb cf       	rjmp	.-42     	; 0x6938 <_ZN6SDCard14send_dataBlockEPVKhh+0x3c>
		} while (--wc);
		spi.put(0xFF);
    6962:	6f ef       	ldi	r22, 0xFF	; 255
    6964:	8a 2d       	mov	r24, r10
    6966:	9b 2d       	mov	r25, r11
    6968:	5d d5       	rcall	.+2746   	; 0x7424 <_ZN10SPI_Driver3putEh>
		spi.put(0xFF);
    696a:	6f ef       	ldi	r22, 0xFF	; 255
    696c:	8a 2d       	mov	r24, r10
    696e:	9b 2d       	mov	r25, r11
    6970:	59 d5       	rcall	.+2738   	; 0x7424 <_ZN10SPI_Driver3putEh>
		resp = spi.get();
    6972:	8a 2d       	mov	r24, r10
    6974:	9b 2d       	mov	r25, r11
    6976:	6b d5       	rcall	.+2774   	; 0x744e <_ZN10SPI_Driver3getEv>
    6978:	8a 83       	std	Y+2, r24	; 0x02
		if ((resp & 0x1F) != 0x05) return 0;
    697a:	2a 81       	ldd	r18, Y+2	; 0x02
    697c:	2f 71       	andi	r18, 0x1F	; 31
    697e:	41 e0       	ldi	r20, 0x01	; 1
    6980:	30 e0       	ldi	r19, 0x00	; 0
    6982:	25 30       	cpi	r18, 0x05	; 5
    6984:	09 f0       	breq	.+2      	; 0x6988 <_ZN6SDCard14send_dataBlockEPVKhh+0x8c>
    6986:	40 e0       	ldi	r20, 0x00	; 0
}

int SDCard::send_dataBlock(const BYTE * buff, BYTE token) {
	BYTE resp,wc;

	if (!wait_ready()) return 0;
    6988:	84 2f       	mov	r24, r20
    698a:	93 2f       	mov	r25, r19
    698c:	02 c0       	rjmp	.+4      	; 0x6992 <_ZN6SDCard14send_dataBlockEPVKhh+0x96>
		spi.put(0xFF);
		spi.put(0xFF);
		resp = spi.get();
		if ((resp & 0x1F) != 0x05) return 0;
	}
	return 1;
    698e:	81 e0       	ldi	r24, 0x01	; 1
    6990:	90 e0       	ldi	r25, 0x00	; 0
}
    6992:	23 96       	adiw	r28, 0x03	; 3
    6994:	cd bf       	out	0x3d, r28	; 61
    6996:	de bf       	out	0x3e, r29	; 62
    6998:	df 91       	pop	r29
    699a:	cf 91       	pop	r28
    699c:	1f 91       	pop	r17
    699e:	0f 91       	pop	r16
    69a0:	ff 90       	pop	r15
    69a2:	ef 90       	pop	r14
    69a4:	df 90       	pop	r13
    69a6:	cf 90       	pop	r12
    69a8:	bf 90       	pop	r11
    69aa:	af 90       	pop	r10
    69ac:	08 95       	ret

000069ae <_ZN6SDCard6selectEv>:
		if (spi.get() == 0xFF) return 1;
	}
	return 0;
}

int SDCard::select() {
    69ae:	0f 93       	push	r16
    69b0:	1f 93       	push	r17
    69b2:	cf 93       	push	r28
    69b4:	df 93       	push	r29
    69b6:	8c 01       	movw	r16, r24
	SPI_SELECT;
    69b8:	80 e1       	ldi	r24, 0x10	; 16
    69ba:	e0 e8       	ldi	r30, 0x80	; 128
    69bc:	f6 e0       	ldi	r31, 0x06	; 6
    69be:	86 83       	std	Z+6, r24	; 0x06
	if (!wait_ready()) {
    69c0:	c8 01       	movw	r24, r16
    69c2:	73 df       	rcall	.-282    	; 0x68aa <_ZN6SDCard10wait_readyEv>
    69c4:	ec 01       	movw	r28, r24
    69c6:	00 97       	sbiw	r24, 0x00	; 0
    69c8:	39 f4       	brne	.+14     	; 0x69d8 <_ZN6SDCard6selectEv+0x2a>
		deselect();
    69ca:	80 e1       	ldi	r24, 0x10	; 16
    69cc:	e0 e8       	ldi	r30, 0x80	; 128
    69ce:	f6 e0       	ldi	r31, 0x06	; 6
    69d0:	85 83       	std	Z+5, r24	; 0x05
    69d2:	c8 01       	movw	r24, r16
    69d4:	3c d5       	rcall	.+2680   	; 0x744e <_ZN10SPI_Driver3getEv>
		return 0;
    69d6:	02 c0       	rjmp	.+4      	; 0x69dc <_ZN6SDCard6selectEv+0x2e>
	}
	return 1;
    69d8:	c1 e0       	ldi	r28, 0x01	; 1
    69da:	d0 e0       	ldi	r29, 0x00	; 0
    69dc:	ce 01       	movw	r24, r28
    69de:	df 91       	pop	r29
    69e0:	cf 91       	pop	r28
    69e2:	1f 91       	pop	r17
    69e4:	0f 91       	pop	r16
    69e6:	08 95       	ret

000069e8 <_ZN6SDCard8send_cmdEhm>:
		return res;
 }
 #endif

//SD Helper Functions
BYTE SDCard::send_cmd(BYTE cmd, DWORD arg) {
    69e8:	ef 92       	push	r14
    69ea:	ff 92       	push	r15
    69ec:	0f 93       	push	r16
    69ee:	1f 93       	push	r17
    69f0:	cf 93       	push	r28
    69f2:	df 93       	push	r29
    69f4:	cd b7       	in	r28, 0x3d	; 61
    69f6:	de b7       	in	r29, 0x3e	; 62
    69f8:	27 97       	sbiw	r28, 0x07	; 7
    69fa:	cd bf       	out	0x3d, r28	; 61
    69fc:	de bf       	out	0x3e, r29	; 62
    69fe:	e8 2e       	mov	r14, r24
    6a00:	f9 2e       	mov	r15, r25
    6a02:	6b 83       	std	Y+3, r22	; 0x03
    6a04:	2c 83       	std	Y+4, r18	; 0x04
    6a06:	3d 83       	std	Y+5, r19	; 0x05
    6a08:	4e 83       	std	Y+6, r20	; 0x06
    6a0a:	5f 83       	std	Y+7, r21	; 0x07
	BYTE n, res;
	//spi.get();
	//spi.get();
	
	if (cmd & 0x80) {
    6a0c:	8b 81       	ldd	r24, Y+3	; 0x03
    6a0e:	88 23       	and	r24, r24
    6a10:	7c f4       	brge	.+30     	; 0x6a30 <_ZN6SDCard8send_cmdEhm+0x48>
		cmd &= 0x7F;
    6a12:	8b 81       	ldd	r24, Y+3	; 0x03
    6a14:	8f 77       	andi	r24, 0x7F	; 127
    6a16:	8b 83       	std	Y+3, r24	; 0x03
		res = send_cmd(CMD55, 0);
    6a18:	20 e0       	ldi	r18, 0x00	; 0
    6a1a:	30 e0       	ldi	r19, 0x00	; 0
    6a1c:	a9 01       	movw	r20, r18
    6a1e:	67 e7       	ldi	r22, 0x77	; 119
    6a20:	8e 2d       	mov	r24, r14
    6a22:	e2 df       	rcall	.-60     	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6a24:	89 83       	std	Y+1, r24	; 0x01
		if (res > 1) return res;
    6a26:	89 81       	ldd	r24, Y+1	; 0x01
    6a28:	82 30       	cpi	r24, 0x02	; 2
    6a2a:	10 f0       	brcs	.+4      	; 0x6a30 <_ZN6SDCard8send_cmdEhm+0x48>
    6a2c:	89 81       	ldd	r24, Y+1	; 0x01
    6a2e:	6b c0       	rjmp	.+214    	; 0x6b06 <_ZN6SDCard8send_cmdEhm+0x11e>
	}

	
	if (cmd != CMD0) {
    6a30:	8b 81       	ldd	r24, Y+3	; 0x03
    6a32:	80 34       	cpi	r24, 0x40	; 64
    6a34:	71 f0       	breq	.+28     	; 0x6a52 <_ZN6SDCard8send_cmdEhm+0x6a>
		deselect();
    6a36:	80 e1       	ldi	r24, 0x10	; 16
    6a38:	e0 e8       	ldi	r30, 0x80	; 128
    6a3a:	f6 e0       	ldi	r31, 0x06	; 6
    6a3c:	85 83       	std	Z+5, r24	; 0x05
    6a3e:	8e 2d       	mov	r24, r14
    6a40:	9f 2d       	mov	r25, r15
    6a42:	05 d5       	rcall	.+2570   	; 0x744e <_ZN10SPI_Driver3getEv>
		if (!select()) return 0xFF;
    6a44:	8e 2d       	mov	r24, r14
    6a46:	9f 2d       	mov	r25, r15
    6a48:	b2 df       	rcall	.-156    	; 0x69ae <_ZN6SDCard6selectEv>
    6a4a:	89 2b       	or	r24, r25
    6a4c:	09 f4       	brne	.+2      	; 0x6a50 <_ZN6SDCard8send_cmdEhm+0x68>
    6a4e:	5a c0       	rjmp	.+180    	; 0x6b04 <_ZN6SDCard8send_cmdEhm+0x11c>
    6a50:	05 c0       	rjmp	.+10     	; 0x6a5c <_ZN6SDCard8send_cmdEhm+0x74>
	} else {
		SPI_DESELECT;
    6a52:	e0 e8       	ldi	r30, 0x80	; 128
    6a54:	f6 e0       	ldi	r31, 0x06	; 6
    6a56:	80 e1       	ldi	r24, 0x10	; 16
    6a58:	85 83       	std	Z+5, r24	; 0x05
		SPI_SELECT;
    6a5a:	86 83       	std	Z+6, r24	; 0x06
	}
	spi.put(0x40 | cmd);
    6a5c:	6b 81       	ldd	r22, Y+3	; 0x03
    6a5e:	1e 2d       	mov	r17, r14
    6a60:	0f 2d       	mov	r16, r15
    6a62:	60 64       	ori	r22, 0x40	; 64
    6a64:	8e 2d       	mov	r24, r14
    6a66:	9f 2d       	mov	r25, r15
    6a68:	dd d4       	rcall	.+2490   	; 0x7424 <_ZN10SPI_Driver3putEh>
	spi.put((BYTE)(arg >> 24));
    6a6a:	8c 81       	ldd	r24, Y+4	; 0x04
    6a6c:	9d 81       	ldd	r25, Y+5	; 0x05
    6a6e:	ae 81       	ldd	r26, Y+6	; 0x06
    6a70:	bf 81       	ldd	r27, Y+7	; 0x07
    6a72:	6b 2f       	mov	r22, r27
    6a74:	77 27       	eor	r23, r23
    6a76:	88 27       	eor	r24, r24
    6a78:	99 27       	eor	r25, r25
    6a7a:	8e 2d       	mov	r24, r14
    6a7c:	9f 2d       	mov	r25, r15
    6a7e:	d2 d4       	rcall	.+2468   	; 0x7424 <_ZN10SPI_Driver3putEh>
	spi.put((BYTE)(arg >> 16));
    6a80:	8c 81       	ldd	r24, Y+4	; 0x04
    6a82:	9d 81       	ldd	r25, Y+5	; 0x05
    6a84:	ae 81       	ldd	r26, Y+6	; 0x06
    6a86:	bf 81       	ldd	r27, Y+7	; 0x07
    6a88:	bd 01       	movw	r22, r26
    6a8a:	88 27       	eor	r24, r24
    6a8c:	99 27       	eor	r25, r25
    6a8e:	8e 2d       	mov	r24, r14
    6a90:	9f 2d       	mov	r25, r15
    6a92:	c8 d4       	rcall	.+2448   	; 0x7424 <_ZN10SPI_Driver3putEh>
	spi.put((BYTE)(arg >> 8));
    6a94:	8c 81       	ldd	r24, Y+4	; 0x04
    6a96:	9d 81       	ldd	r25, Y+5	; 0x05
    6a98:	ae 81       	ldd	r26, Y+6	; 0x06
    6a9a:	bf 81       	ldd	r27, Y+7	; 0x07
    6a9c:	69 2f       	mov	r22, r25
    6a9e:	7a 2f       	mov	r23, r26
    6aa0:	8b 2f       	mov	r24, r27
    6aa2:	99 27       	eor	r25, r25
    6aa4:	8e 2d       	mov	r24, r14
    6aa6:	9f 2d       	mov	r25, r15
    6aa8:	bd d4       	rcall	.+2426   	; 0x7424 <_ZN10SPI_Driver3putEh>
	spi.put((BYTE)arg);
    6aaa:	6c 81       	ldd	r22, Y+4	; 0x04
    6aac:	7d 81       	ldd	r23, Y+5	; 0x05
    6aae:	8e 81       	ldd	r24, Y+6	; 0x06
    6ab0:	9f 81       	ldd	r25, Y+7	; 0x07
    6ab2:	8e 2d       	mov	r24, r14
    6ab4:	9f 2d       	mov	r25, r15
    6ab6:	b6 d4       	rcall	.+2412   	; 0x7424 <_ZN10SPI_Driver3putEh>
	n = 0x01;
    6ab8:	81 e0       	ldi	r24, 0x01	; 1
    6aba:	8a 83       	std	Y+2, r24	; 0x02
	if (cmd == CMD0) n = 0x95;
    6abc:	8b 81       	ldd	r24, Y+3	; 0x03
    6abe:	80 34       	cpi	r24, 0x40	; 64
    6ac0:	11 f4       	brne	.+4      	; 0x6ac6 <_ZN6SDCard8send_cmdEhm+0xde>
    6ac2:	85 e9       	ldi	r24, 0x95	; 149
    6ac4:	8a 83       	std	Y+2, r24	; 0x02
	if (cmd == CMD8) n = 0x87;
    6ac6:	8b 81       	ldd	r24, Y+3	; 0x03
    6ac8:	88 34       	cpi	r24, 0x48	; 72
    6aca:	11 f4       	brne	.+4      	; 0x6ad0 <_ZN6SDCard8send_cmdEhm+0xe8>
    6acc:	87 e8       	ldi	r24, 0x87	; 135
    6ace:	8a 83       	std	Y+2, r24	; 0x02
	spi.put(n);
    6ad0:	6a 81       	ldd	r22, Y+2	; 0x02
    6ad2:	8e 2d       	mov	r24, r14
    6ad4:	9f 2d       	mov	r25, r15
    6ad6:	a6 d4       	rcall	.+2380   	; 0x7424 <_ZN10SPI_Driver3putEh>

	if (cmd == CMD12) spi.get();
    6ad8:	8b 81       	ldd	r24, Y+3	; 0x03
    6ada:	8c 34       	cpi	r24, 0x4C	; 76
    6adc:	19 f4       	brne	.+6      	; 0x6ae4 <_ZN6SDCard8send_cmdEhm+0xfc>
    6ade:	8e 2d       	mov	r24, r14
    6ae0:	9f 2d       	mov	r25, r15
    6ae2:	b5 d4       	rcall	.+2410   	; 0x744e <_ZN10SPI_Driver3getEv>
	n = 10;
    6ae4:	8a e0       	ldi	r24, 0x0A	; 10
    6ae6:	8a 83       	std	Y+2, r24	; 0x02
	do 
	{
		res = spi.get();
    6ae8:	81 2f       	mov	r24, r17
    6aea:	90 2f       	mov	r25, r16
    6aec:	b0 d4       	rcall	.+2400   	; 0x744e <_ZN10SPI_Driver3getEv>
    6aee:	89 83       	std	Y+1, r24	; 0x01
	} while ((res & 0x80) && --n);
    6af0:	89 81       	ldd	r24, Y+1	; 0x01
    6af2:	88 23       	and	r24, r24
    6af4:	2c f4       	brge	.+10     	; 0x6b00 <_ZN6SDCard8send_cmdEhm+0x118>
    6af6:	8a 81       	ldd	r24, Y+2	; 0x02
    6af8:	81 50       	subi	r24, 0x01	; 1
    6afa:	8a 83       	std	Y+2, r24	; 0x02
	if (cmd == CMD8) n = 0x87;
	spi.put(n);

	if (cmd == CMD12) spi.get();
	n = 10;
	do 
    6afc:	81 11       	cpse	r24, r1
    6afe:	f4 cf       	rjmp	.-24     	; 0x6ae8 <_ZN6SDCard8send_cmdEhm+0x100>
	{
		res = spi.get();
	} while ((res & 0x80) && --n);

	return res;
    6b00:	89 81       	ldd	r24, Y+1	; 0x01
    6b02:	01 c0       	rjmp	.+2      	; 0x6b06 <_ZN6SDCard8send_cmdEhm+0x11e>
	}

	
	if (cmd != CMD0) {
		deselect();
		if (!select()) return 0xFF;
    6b04:	8f ef       	ldi	r24, 0xFF	; 255
	{
		res = spi.get();
	} while ((res & 0x80) && --n);

	return res;
}
    6b06:	27 96       	adiw	r28, 0x07	; 7
    6b08:	cd bf       	out	0x3d, r28	; 61
    6b0a:	de bf       	out	0x3e, r29	; 62
    6b0c:	df 91       	pop	r29
    6b0e:	cf 91       	pop	r28
    6b10:	1f 91       	pop	r17
    6b12:	0f 91       	pop	r16
    6b14:	ff 90       	pop	r15
    6b16:	ef 90       	pop	r14
    6b18:	08 95       	ret

00006b1a <_ZN6SDCard4initEh>:
	spi.enable();
 }
 DSTATUS SDCard::getStatus() {
	return Stat;
 }
 DSTATUS SDCard::init(BYTE pdrv) {
    6b1a:	cf 92       	push	r12
    6b1c:	df 92       	push	r13
    6b1e:	ef 92       	push	r14
    6b20:	ff 92       	push	r15
    6b22:	0f 93       	push	r16
    6b24:	1f 93       	push	r17
    6b26:	cf 93       	push	r28
    6b28:	df 93       	push	r29
    6b2a:	cd b7       	in	r28, 0x3d	; 61
    6b2c:	de b7       	in	r29, 0x3e	; 62
    6b2e:	28 97       	sbiw	r28, 0x08	; 8
    6b30:	cd bf       	out	0x3d, r28	; 61
    6b32:	de bf       	out	0x3e, r29	; 62
    6b34:	8c 01       	movw	r16, r24
    6b36:	68 87       	std	Y+8, r22	; 0x08
	BYTE n, cmd, ty, ocr[4];

	drvID = pdrv;
    6b38:	88 85       	ldd	r24, Y+8	; 0x08
    6b3a:	f8 01       	movw	r30, r16
    6b3c:	82 83       	std	Z+2, r24	; 0x02
	if (Stat & STA_NODISK) return Stat;
    6b3e:	84 81       	ldd	r24, Z+4	; 0x04
    6b40:	81 ff       	sbrs	r24, 1
    6b42:	02 c0       	rjmp	.+4      	; 0x6b48 <_ZN6SDCard4initEh+0x2e>
    6b44:	84 81       	ldd	r24, Z+4	; 0x04
    6b46:	bc c0       	rjmp	.+376    	; 0x6cc0 <_ZN6SDCard4initEh+0x1a6>

	spi.clockRate(0x03); // 250 kHz
    6b48:	d0 2e       	mov	r13, r16
    6b4a:	c1 2e       	mov	r12, r17
    6b4c:	63 e0       	ldi	r22, 0x03	; 3
    6b4e:	c8 01       	movw	r24, r16
    6b50:	55 d4       	rcall	.+2218   	; 0x73fc <_ZN10SPI_Driver9clockRateEc>
	deselect();
    6b52:	80 e1       	ldi	r24, 0x10	; 16
    6b54:	e0 e8       	ldi	r30, 0x80	; 128
    6b56:	f6 e0       	ldi	r31, 0x06	; 6
    6b58:	85 83       	std	Z+5, r24	; 0x05
    6b5a:	c8 01       	movw	r24, r16
    6b5c:	78 d4       	rcall	.+2288   	; 0x744e <_ZN10SPI_Driver3getEv>
	for (n = 10; n; n--) spi.get(); //80 clock cycles
    6b5e:	8a e0       	ldi	r24, 0x0A	; 10
    6b60:	8f 83       	std	Y+7, r24	; 0x07
    6b62:	8f 81       	ldd	r24, Y+7	; 0x07
    6b64:	88 23       	and	r24, r24
    6b66:	49 f0       	breq	.+18     	; 0x6b7a <_ZN6SDCard4initEh+0x60>
    6b68:	8d 2d       	mov	r24, r13
    6b6a:	9c 2d       	mov	r25, r12
    6b6c:	70 d4       	rcall	.+2272   	; 0x744e <_ZN10SPI_Driver3getEv>
    6b6e:	8f 81       	ldd	r24, Y+7	; 0x07
    6b70:	81 50       	subi	r24, 0x01	; 1
    6b72:	8f 83       	std	Y+7, r24	; 0x07
    6b74:	8f 81       	ldd	r24, Y+7	; 0x07
    6b76:	81 11       	cpse	r24, r1
    6b78:	f7 cf       	rjmp	.-18     	; 0x6b68 <_ZN6SDCard4initEh+0x4e>
	ty = 0;
    6b7a:	1d 82       	std	Y+5, r1	; 0x05
	for (n = 16; n; n--) {
    6b7c:	80 e1       	ldi	r24, 0x10	; 16
    6b7e:	8f 83       	std	Y+7, r24	; 0x07
    6b80:	8f 81       	ldd	r24, Y+7	; 0x07
    6b82:	88 23       	and	r24, r24
    6b84:	09 f4       	brne	.+2      	; 0x6b88 <_ZN6SDCard4initEh+0x6e>
    6b86:	8a c0       	rjmp	.+276    	; 0x6c9c <_ZN6SDCard4initEh+0x182>
		if (send_cmd(CMD0, 0) == 1) {
    6b88:	20 e0       	ldi	r18, 0x00	; 0
    6b8a:	30 e0       	ldi	r19, 0x00	; 0
    6b8c:	a9 01       	movw	r20, r18
    6b8e:	60 e4       	ldi	r22, 0x40	; 64
    6b90:	c8 01       	movw	r24, r16
    6b92:	2a df       	rcall	.-428    	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6b94:	81 30       	cpi	r24, 0x01	; 1
    6b96:	09 f0       	breq	.+2      	; 0x6b9a <_ZN6SDCard4initEh+0x80>
    6b98:	7b c0       	rjmp	.+246    	; 0x6c90 <_ZN6SDCard4initEh+0x176>
			if (send_cmd(CMD8, 0x1AA) == 1) {
    6b9a:	2a ea       	ldi	r18, 0xAA	; 170
    6b9c:	31 e0       	ldi	r19, 0x01	; 1
    6b9e:	40 e0       	ldi	r20, 0x00	; 0
    6ba0:	50 e0       	ldi	r21, 0x00	; 0
    6ba2:	68 e4       	ldi	r22, 0x48	; 72
    6ba4:	c8 01       	movw	r24, r16
    6ba6:	20 df       	rcall	.-448    	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6ba8:	81 30       	cpi	r24, 0x01	; 1
    6baa:	09 f0       	breq	.+2      	; 0x6bae <_ZN6SDCard4initEh+0x94>
    6bac:	4d c0       	rjmp	.+154    	; 0x6c48 <_ZN6SDCard4initEh+0x12e>
				for (n = 0; n<4; n++) ocr[n] = spi.get();
    6bae:	1f 82       	std	Y+7, r1	; 0x07
    6bb0:	8f 81       	ldd	r24, Y+7	; 0x07
    6bb2:	84 30       	cpi	r24, 0x04	; 4
    6bb4:	90 f4       	brcc	.+36     	; 0x6bda <_ZN6SDCard4initEh+0xc0>
    6bb6:	ef 80       	ldd	r14, Y+7	; 0x07
    6bb8:	f1 2c       	mov	r15, r1
    6bba:	8d 2d       	mov	r24, r13
    6bbc:	9c 2d       	mov	r25, r12
    6bbe:	47 d4       	rcall	.+2190   	; 0x744e <_ZN10SPI_Driver3getEv>
    6bc0:	e1 e0       	ldi	r30, 0x01	; 1
    6bc2:	f0 e0       	ldi	r31, 0x00	; 0
    6bc4:	ec 0f       	add	r30, r28
    6bc6:	fd 1f       	adc	r31, r29
    6bc8:	ee 0d       	add	r30, r14
    6bca:	ff 1d       	adc	r31, r15
    6bcc:	80 83       	st	Z, r24
    6bce:	8f 81       	ldd	r24, Y+7	; 0x07
    6bd0:	8f 5f       	subi	r24, 0xFF	; 255
    6bd2:	8f 83       	std	Y+7, r24	; 0x07
    6bd4:	8f 81       	ldd	r24, Y+7	; 0x07
    6bd6:	84 30       	cpi	r24, 0x04	; 4
    6bd8:	70 f3       	brcs	.-36     	; 0x6bb6 <_ZN6SDCard4initEh+0x9c>
				if (ocr[2] == 0x01 && ocr[3] == 0xAA) {
    6bda:	8b 81       	ldd	r24, Y+3	; 0x03
    6bdc:	81 30       	cpi	r24, 0x01	; 1
    6bde:	09 f0       	breq	.+2      	; 0x6be2 <_ZN6SDCard4initEh+0xc8>
    6be0:	5d c0       	rjmp	.+186    	; 0x6c9c <_ZN6SDCard4initEh+0x182>
    6be2:	8c 81       	ldd	r24, Y+4	; 0x04
    6be4:	8a 3a       	cpi	r24, 0xAA	; 170
    6be6:	09 f0       	breq	.+2      	; 0x6bea <_ZN6SDCard4initEh+0xd0>
    6be8:	59 c0       	rjmp	.+178    	; 0x6c9c <_ZN6SDCard4initEh+0x182>
					while(send_cmd(ACMD41, (DWORD)0x40000000));
    6bea:	20 e0       	ldi	r18, 0x00	; 0
    6bec:	30 e0       	ldi	r19, 0x00	; 0
    6bee:	40 e0       	ldi	r20, 0x00	; 0
    6bf0:	50 e4       	ldi	r21, 0x40	; 64
    6bf2:	69 ee       	ldi	r22, 0xE9	; 233
    6bf4:	c8 01       	movw	r24, r16
    6bf6:	f8 de       	rcall	.-528    	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6bf8:	81 11       	cpse	r24, r1
    6bfa:	f7 cf       	rjmp	.-18     	; 0x6bea <_ZN6SDCard4initEh+0xd0>
					if (send_cmd(CMD58, 0) == 0) {
    6bfc:	20 e0       	ldi	r18, 0x00	; 0
    6bfe:	30 e0       	ldi	r19, 0x00	; 0
    6c00:	a9 01       	movw	r20, r18
    6c02:	6a e7       	ldi	r22, 0x7A	; 122
    6c04:	c8 01       	movw	r24, r16
    6c06:	f0 de       	rcall	.-544    	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6c08:	81 11       	cpse	r24, r1
    6c0a:	48 c0       	rjmp	.+144    	; 0x6c9c <_ZN6SDCard4initEh+0x182>
						for (n=0; n<4; n++) ocr[n] = spi.get();
    6c0c:	1f 82       	std	Y+7, r1	; 0x07
    6c0e:	8f 81       	ldd	r24, Y+7	; 0x07
    6c10:	84 30       	cpi	r24, 0x04	; 4
    6c12:	90 f4       	brcc	.+36     	; 0x6c38 <_ZN6SDCard4initEh+0x11e>
    6c14:	ef 80       	ldd	r14, Y+7	; 0x07
    6c16:	f1 2c       	mov	r15, r1
    6c18:	8d 2d       	mov	r24, r13
    6c1a:	9c 2d       	mov	r25, r12
    6c1c:	18 d4       	rcall	.+2096   	; 0x744e <_ZN10SPI_Driver3getEv>
    6c1e:	e1 e0       	ldi	r30, 0x01	; 1
    6c20:	f0 e0       	ldi	r31, 0x00	; 0
    6c22:	ec 0f       	add	r30, r28
    6c24:	fd 1f       	adc	r31, r29
    6c26:	ee 0d       	add	r30, r14
    6c28:	ff 1d       	adc	r31, r15
    6c2a:	80 83       	st	Z, r24
    6c2c:	8f 81       	ldd	r24, Y+7	; 0x07
    6c2e:	8f 5f       	subi	r24, 0xFF	; 255
    6c30:	8f 83       	std	Y+7, r24	; 0x07
    6c32:	8f 81       	ldd	r24, Y+7	; 0x07
    6c34:	84 30       	cpi	r24, 0x04	; 4
    6c36:	70 f3       	brcs	.-36     	; 0x6c14 <_ZN6SDCard4initEh+0xfa>
						ty = (ocr[0] & 0x40) ? CT_SD2 | CT_BLOCK : CT_SD2;
    6c38:	89 81       	ldd	r24, Y+1	; 0x01
    6c3a:	86 ff       	sbrs	r24, 6
    6c3c:	02 c0       	rjmp	.+4      	; 0x6c42 <_ZN6SDCard4initEh+0x128>
    6c3e:	8c e0       	ldi	r24, 0x0C	; 12
    6c40:	01 c0       	rjmp	.+2      	; 0x6c44 <_ZN6SDCard4initEh+0x12a>
    6c42:	84 e0       	ldi	r24, 0x04	; 4
    6c44:	8d 83       	std	Y+5, r24	; 0x05
    6c46:	2a c0       	rjmp	.+84     	; 0x6c9c <_ZN6SDCard4initEh+0x182>
					}
				}
			} else {
				if (send_cmd(ACMD41, 0) <= 1) {
    6c48:	20 e0       	ldi	r18, 0x00	; 0
    6c4a:	30 e0       	ldi	r19, 0x00	; 0
    6c4c:	a9 01       	movw	r20, r18
    6c4e:	69 ee       	ldi	r22, 0xE9	; 233
    6c50:	c8 01       	movw	r24, r16
    6c52:	ca de       	rcall	.-620    	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6c54:	82 30       	cpi	r24, 0x02	; 2
    6c56:	28 f4       	brcc	.+10     	; 0x6c62 <_ZN6SDCard4initEh+0x148>
					ty = CT_SD1; cmd = ACMD41;
    6c58:	82 e0       	ldi	r24, 0x02	; 2
    6c5a:	8d 83       	std	Y+5, r24	; 0x05
    6c5c:	89 ee       	ldi	r24, 0xE9	; 233
    6c5e:	8e 83       	std	Y+6, r24	; 0x06
    6c60:	04 c0       	rjmp	.+8      	; 0x6c6a <_ZN6SDCard4initEh+0x150>
				} else {
					ty = CT_MMC; cmd = CMD1;
    6c62:	81 e0       	ldi	r24, 0x01	; 1
    6c64:	8d 83       	std	Y+5, r24	; 0x05
    6c66:	81 e4       	ldi	r24, 0x41	; 65
    6c68:	8e 83       	std	Y+6, r24	; 0x06
				}
				while (send_cmd(cmd, 0));
    6c6a:	6e 81       	ldd	r22, Y+6	; 0x06
    6c6c:	20 e0       	ldi	r18, 0x00	; 0
    6c6e:	30 e0       	ldi	r19, 0x00	; 0
    6c70:	a9 01       	movw	r20, r18
    6c72:	c8 01       	movw	r24, r16
    6c74:	b9 de       	rcall	.-654    	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6c76:	81 11       	cpse	r24, r1
    6c78:	f8 cf       	rjmp	.-16     	; 0x6c6a <_ZN6SDCard4initEh+0x150>
				if (send_cmd(CMD16, (DWORD)512) != 0) ty = 0;
    6c7a:	20 e0       	ldi	r18, 0x00	; 0
    6c7c:	32 e0       	ldi	r19, 0x02	; 2
    6c7e:	40 e0       	ldi	r20, 0x00	; 0
    6c80:	50 e0       	ldi	r21, 0x00	; 0
    6c82:	60 e5       	ldi	r22, 0x50	; 80
    6c84:	c8 01       	movw	r24, r16
    6c86:	b0 de       	rcall	.-672    	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6c88:	88 23       	and	r24, r24
    6c8a:	41 f0       	breq	.+16     	; 0x6c9c <_ZN6SDCard4initEh+0x182>
    6c8c:	1d 82       	std	Y+5, r1	; 0x05
    6c8e:	06 c0       	rjmp	.+12     	; 0x6c9c <_ZN6SDCard4initEh+0x182>

	spi.clockRate(0x03); // 250 kHz
	deselect();
	for (n = 10; n; n--) spi.get(); //80 clock cycles
	ty = 0;
	for (n = 16; n; n--) {
    6c90:	2f 81       	ldd	r18, Y+7	; 0x07
    6c92:	21 50       	subi	r18, 0x01	; 1
    6c94:	2f 83       	std	Y+7, r18	; 0x07
    6c96:	2f 81       	ldd	r18, Y+7	; 0x07
    6c98:	21 11       	cpse	r18, r1
    6c9a:	76 cf       	rjmp	.-276    	; 0x6b88 <_ZN6SDCard4initEh+0x6e>
			}
			break;
		}
		
	}
	CardType = ty;
    6c9c:	8d 81       	ldd	r24, Y+5	; 0x05
    6c9e:	f8 01       	movw	r30, r16
    6ca0:	83 83       	std	Z+3, r24	; 0x03
	deselect();
    6ca2:	80 e1       	ldi	r24, 0x10	; 16
    6ca4:	e0 e8       	ldi	r30, 0x80	; 128
    6ca6:	f6 e0       	ldi	r31, 0x06	; 6
    6ca8:	85 83       	std	Z+5, r24	; 0x05
    6caa:	c8 01       	movw	r24, r16
    6cac:	d0 d3       	rcall	.+1952   	; 0x744e <_ZN10SPI_Driver3getEv>

	if (ty) {
    6cae:	8d 81       	ldd	r24, Y+5	; 0x05
    6cb0:	88 23       	and	r24, r24
    6cb2:	21 f0       	breq	.+8      	; 0x6cbc <_ZN6SDCard4initEh+0x1a2>
		Stat &= ~STA_NOINIT;
    6cb4:	f8 01       	movw	r30, r16
    6cb6:	84 81       	ldd	r24, Z+4	; 0x04
    6cb8:	8e 7f       	andi	r24, 0xFE	; 254
    6cba:	84 83       	std	Z+4, r24	; 0x04
		//spi.clockRate(0x81); //4MHz
	}
	return Stat;
    6cbc:	f8 01       	movw	r30, r16
    6cbe:	84 81       	ldd	r24, Z+4	; 0x04


}
    6cc0:	28 96       	adiw	r28, 0x08	; 8
    6cc2:	cd bf       	out	0x3d, r28	; 61
    6cc4:	de bf       	out	0x3e, r29	; 62
    6cc6:	df 91       	pop	r29
    6cc8:	cf 91       	pop	r28
    6cca:	1f 91       	pop	r17
    6ccc:	0f 91       	pop	r16
    6cce:	ff 90       	pop	r15
    6cd0:	ef 90       	pop	r14
    6cd2:	df 90       	pop	r13
    6cd4:	cf 90       	pop	r12
    6cd6:	08 95       	ret

00006cd8 <disk_initialize>:
 #include "SDCard.h"

 DWORD get_fattime() {
	return 10200930;
 }
 DSTATUS disk_initialize (BYTE pdrv) {
    6cd8:	cf 93       	push	r28
    6cda:	df 93       	push	r29
    6cdc:	1f 92       	push	r1
    6cde:	cd b7       	in	r28, 0x3d	; 61
    6ce0:	de b7       	in	r29, 0x3e	; 62
    6ce2:	89 83       	std	Y+1, r24	; 0x01
	return sdcard.init(pdrv);
    6ce4:	69 81       	ldd	r22, Y+1	; 0x01
    6ce6:	8d e6       	ldi	r24, 0x6D	; 109
    6ce8:	91 e2       	ldi	r25, 0x21	; 33
    6cea:	17 df       	rcall	.-466    	; 0x6b1a <_ZN6SDCard4initEh>
 }
    6cec:	0f 90       	pop	r0
    6cee:	df 91       	pop	r29
    6cf0:	cf 91       	pop	r28
    6cf2:	08 95       	ret

00006cf4 <_ZN6SDCard4readEPVhmj>:
	}
	return Stat;


}
 DRESULT SDCard::read(BYTE* buff, DWORD sector, UINT count) {
    6cf4:	cf 92       	push	r12
    6cf6:	df 92       	push	r13
    6cf8:	ef 92       	push	r14
    6cfa:	ff 92       	push	r15
    6cfc:	0f 93       	push	r16
    6cfe:	1f 93       	push	r17
    6d00:	cf 93       	push	r28
    6d02:	df 93       	push	r29
    6d04:	00 d0       	rcall	.+0      	; 0x6d06 <_ZN6SDCard4readEPVhmj+0x12>
    6d06:	00 d0       	rcall	.+0      	; 0x6d08 <_ZN6SDCard4readEPVhmj+0x14>
    6d08:	cd b7       	in	r28, 0x3d	; 61
    6d0a:	de b7       	in	r29, 0x3e	; 62
    6d0c:	6c 01       	movw	r12, r24
    6d0e:	7b 01       	movw	r14, r22
    6d10:	29 83       	std	Y+1, r18	; 0x01
    6d12:	3a 83       	std	Y+2, r19	; 0x02
    6d14:	4b 83       	std	Y+3, r20	; 0x03
    6d16:	5c 83       	std	Y+4, r21	; 0x04
    6d18:	0d 83       	std	Y+5, r16	; 0x05
    6d1a:	1e 83       	std	Y+6, r17	; 0x06
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    6d1c:	fc 01       	movw	r30, r24
    6d1e:	84 81       	ldd	r24, Z+4	; 0x04
    6d20:	80 fd       	sbrc	r24, 0
    6d22:	57 c0       	rjmp	.+174    	; 0x6dd2 <_ZN6SDCard4readEPVhmj+0xde>

	if (!(CardType & CT_BLOCK)) sector *= 512;
    6d24:	83 81       	ldd	r24, Z+3	; 0x03
    6d26:	83 fd       	sbrc	r24, 3
    6d28:	11 c0       	rjmp	.+34     	; 0x6d4c <_ZN6SDCard4readEPVhmj+0x58>
    6d2a:	89 81       	ldd	r24, Y+1	; 0x01
    6d2c:	9a 81       	ldd	r25, Y+2	; 0x02
    6d2e:	ab 81       	ldd	r26, Y+3	; 0x03
    6d30:	bc 81       	ldd	r27, Y+4	; 0x04
    6d32:	07 2e       	mov	r0, r23
    6d34:	79 e0       	ldi	r23, 0x09	; 9
    6d36:	88 0f       	add	r24, r24
    6d38:	99 1f       	adc	r25, r25
    6d3a:	aa 1f       	adc	r26, r26
    6d3c:	bb 1f       	adc	r27, r27
    6d3e:	7a 95       	dec	r23
    6d40:	d1 f7       	brne	.-12     	; 0x6d36 <_ZN6SDCard4readEPVhmj+0x42>
    6d42:	70 2d       	mov	r23, r0
    6d44:	89 83       	std	Y+1, r24	; 0x01
    6d46:	9a 83       	std	Y+2, r25	; 0x02
    6d48:	ab 83       	std	Y+3, r26	; 0x03
    6d4a:	bc 83       	std	Y+4, r27	; 0x04

	if (count == 1) {
    6d4c:	8d 81       	ldd	r24, Y+5	; 0x05
    6d4e:	9e 81       	ldd	r25, Y+6	; 0x06
    6d50:	01 97       	sbiw	r24, 0x01	; 1
    6d52:	99 f4       	brne	.+38     	; 0x6d7a <_ZN6SDCard4readEPVhmj+0x86>
		if ((send_cmd(CMD17, sector) == 0) && rcv_dataBlock(buff, 512)) count = 0;
    6d54:	29 81       	ldd	r18, Y+1	; 0x01
    6d56:	3a 81       	ldd	r19, Y+2	; 0x02
    6d58:	4b 81       	ldd	r20, Y+3	; 0x03
    6d5a:	5c 81       	ldd	r21, Y+4	; 0x04
    6d5c:	61 e5       	ldi	r22, 0x51	; 81
    6d5e:	c6 01       	movw	r24, r12
    6d60:	43 de       	rcall	.-890    	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6d62:	81 11       	cpse	r24, r1
    6d64:	29 c0       	rjmp	.+82     	; 0x6db8 <_ZN6SDCard4readEPVhmj+0xc4>
    6d66:	40 e0       	ldi	r20, 0x00	; 0
    6d68:	52 e0       	ldi	r21, 0x02	; 2
    6d6a:	b7 01       	movw	r22, r14
    6d6c:	c6 01       	movw	r24, r12
    6d6e:	4a dd       	rcall	.-1388   	; 0x6804 <_ZN6SDCard13rcv_dataBlockEPVhj>
    6d70:	89 2b       	or	r24, r25
    6d72:	11 f1       	breq	.+68     	; 0x6db8 <_ZN6SDCard4readEPVhmj+0xc4>
    6d74:	1d 82       	std	Y+5, r1	; 0x05
    6d76:	1e 82       	std	Y+6, r1	; 0x06
    6d78:	1f c0       	rjmp	.+62     	; 0x6db8 <_ZN6SDCard4readEPVhmj+0xc4>
	}
	else {
		if (send_cmd(CMD18, sector) == 0) {
    6d7a:	29 81       	ldd	r18, Y+1	; 0x01
    6d7c:	3a 81       	ldd	r19, Y+2	; 0x02
    6d7e:	4b 81       	ldd	r20, Y+3	; 0x03
    6d80:	5c 81       	ldd	r21, Y+4	; 0x04
    6d82:	62 e5       	ldi	r22, 0x52	; 82
    6d84:	c6 01       	movw	r24, r12
    6d86:	30 de       	rcall	.-928    	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6d88:	81 11       	cpse	r24, r1
    6d8a:	16 c0       	rjmp	.+44     	; 0x6db8 <_ZN6SDCard4readEPVhmj+0xc4>
			do {
				if (!rcv_dataBlock(buff, 512)) break;
    6d8c:	40 e0       	ldi	r20, 0x00	; 0
    6d8e:	52 e0       	ldi	r21, 0x02	; 2
    6d90:	b7 01       	movw	r22, r14
    6d92:	c6 01       	movw	r24, r12
    6d94:	37 dd       	rcall	.-1426   	; 0x6804 <_ZN6SDCard13rcv_dataBlockEPVhj>
    6d96:	89 2b       	or	r24, r25
    6d98:	49 f0       	breq	.+18     	; 0x6dac <_ZN6SDCard4readEPVhmj+0xb8>
				buff += 512;
    6d9a:	fe ef       	ldi	r31, 0xFE	; 254
    6d9c:	ff 1a       	sub	r15, r31
	if (count == 1) {
		if ((send_cmd(CMD17, sector) == 0) && rcv_dataBlock(buff, 512)) count = 0;
	}
	else {
		if (send_cmd(CMD18, sector) == 0) {
			do {
    6d9e:	8d 81       	ldd	r24, Y+5	; 0x05
    6da0:	9e 81       	ldd	r25, Y+6	; 0x06
    6da2:	01 97       	sbiw	r24, 0x01	; 1
    6da4:	8d 83       	std	Y+5, r24	; 0x05
    6da6:	9e 83       	std	Y+6, r25	; 0x06
    6da8:	89 2b       	or	r24, r25
    6daa:	81 f7       	brne	.-32     	; 0x6d8c <_ZN6SDCard4readEPVhmj+0x98>
				if (!rcv_dataBlock(buff, 512)) break;
				buff += 512;
			} while (--count);
			send_cmd(CMD12, 0);
    6dac:	20 e0       	ldi	r18, 0x00	; 0
    6dae:	30 e0       	ldi	r19, 0x00	; 0
    6db0:	a9 01       	movw	r20, r18
    6db2:	6c e4       	ldi	r22, 0x4C	; 76
    6db4:	c6 01       	movw	r24, r12
    6db6:	18 de       	rcall	.-976    	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
		}
	}
	deselect();
    6db8:	80 e1       	ldi	r24, 0x10	; 16
    6dba:	e0 e8       	ldi	r30, 0x80	; 128
    6dbc:	f6 e0       	ldi	r31, 0x06	; 6
    6dbe:	85 83       	std	Z+5, r24	; 0x05
    6dc0:	c6 01       	movw	r24, r12
    6dc2:	45 d3       	rcall	.+1674   	; 0x744e <_ZN10SPI_Driver3getEv>
	return count ? RES_ERROR : RES_OK;
    6dc4:	2d 81       	ldd	r18, Y+5	; 0x05
    6dc6:	3e 81       	ldd	r19, Y+6	; 0x06
    6dc8:	81 e0       	ldi	r24, 0x01	; 1
    6dca:	23 2b       	or	r18, r19
    6dcc:	19 f4       	brne	.+6      	; 0x6dd4 <_ZN6SDCard4readEPVhmj+0xe0>
    6dce:	80 e0       	ldi	r24, 0x00	; 0
    6dd0:	01 c0       	rjmp	.+2      	; 0x6dd4 <_ZN6SDCard4readEPVhmj+0xe0>
	return Stat;


}
 DRESULT SDCard::read(BYTE* buff, DWORD sector, UINT count) {
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    6dd2:	83 e0       	ldi	r24, 0x03	; 3
			send_cmd(CMD12, 0);
		}
	}
	deselect();
	return count ? RES_ERROR : RES_OK;
 }
    6dd4:	26 96       	adiw	r28, 0x06	; 6
    6dd6:	cd bf       	out	0x3d, r28	; 61
    6dd8:	de bf       	out	0x3e, r29	; 62
    6dda:	df 91       	pop	r29
    6ddc:	cf 91       	pop	r28
    6dde:	1f 91       	pop	r17
    6de0:	0f 91       	pop	r16
    6de2:	ff 90       	pop	r15
    6de4:	ef 90       	pop	r14
    6de6:	df 90       	pop	r13
    6de8:	cf 90       	pop	r12
    6dea:	08 95       	ret

00006dec <disk_read>:
 DSTATUS disk_status (BYTE pdrv){
	if (sdcard.IDMatch(pdrv))
		return sdcard.getStatus();
	return STA_NOINIT;
 }
 DRESULT disk_read (BYTE pdrv, BYTE* buff, DWORD sector, UINT count){
    6dec:	0f 93       	push	r16
    6dee:	1f 93       	push	r17
    6df0:	cf 93       	push	r28
    6df2:	df 93       	push	r29
    6df4:	cd b7       	in	r28, 0x3d	; 61
    6df6:	de b7       	in	r29, 0x3e	; 62
    6df8:	27 97       	sbiw	r28, 0x07	; 7
    6dfa:	cd bf       	out	0x3d, r28	; 61
    6dfc:	de bf       	out	0x3e, r29	; 62
    6dfe:	89 83       	std	Y+1, r24	; 0x01
    6e00:	2a 83       	std	Y+2, r18	; 0x02
    6e02:	3b 83       	std	Y+3, r19	; 0x03
    6e04:	4c 83       	std	Y+4, r20	; 0x04
    6e06:	5d 83       	std	Y+5, r21	; 0x05
    6e08:	0e 83       	std	Y+6, r16	; 0x06
    6e0a:	1f 83       	std	Y+7, r17	; 0x07
	if (!sdcard.IDMatch(pdrv) || !count) return RES_PARERR;
    6e0c:	89 81       	ldd	r24, Y+1	; 0x01
 DRESULT disk_ioctl (BYTE pdrv, BYTE cmd, void* buff){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
	return sdcard.IOctl(cmd, buff);
 }

 bool SDCard::IDMatch(BYTE pdrv) {return pdrv == drvID;}
    6e0e:	90 91 6f 21 	lds	r25, 0x216F
	if (sdcard.IDMatch(pdrv))
		return sdcard.getStatus();
	return STA_NOINIT;
 }
 DRESULT disk_read (BYTE pdrv, BYTE* buff, DWORD sector, UINT count){
	if (!sdcard.IDMatch(pdrv) || !count) return RES_PARERR;
    6e12:	98 13       	cpse	r25, r24
    6e14:	0e c0       	rjmp	.+28     	; 0x6e32 <disk_read+0x46>
    6e16:	8e 81       	ldd	r24, Y+6	; 0x06
    6e18:	9f 81       	ldd	r25, Y+7	; 0x07
    6e1a:	89 2b       	or	r24, r25
    6e1c:	61 f0       	breq	.+24     	; 0x6e36 <disk_read+0x4a>
	return sdcard.read(buff, sector, count);
    6e1e:	0e 81       	ldd	r16, Y+6	; 0x06
    6e20:	1f 81       	ldd	r17, Y+7	; 0x07
    6e22:	2a 81       	ldd	r18, Y+2	; 0x02
    6e24:	3b 81       	ldd	r19, Y+3	; 0x03
    6e26:	4c 81       	ldd	r20, Y+4	; 0x04
    6e28:	5d 81       	ldd	r21, Y+5	; 0x05
    6e2a:	8d e6       	ldi	r24, 0x6D	; 109
    6e2c:	91 e2       	ldi	r25, 0x21	; 33
    6e2e:	62 df       	rcall	.-316    	; 0x6cf4 <_ZN6SDCard4readEPVhmj>
    6e30:	03 c0       	rjmp	.+6      	; 0x6e38 <disk_read+0x4c>
	if (sdcard.IDMatch(pdrv))
		return sdcard.getStatus();
	return STA_NOINIT;
 }
 DRESULT disk_read (BYTE pdrv, BYTE* buff, DWORD sector, UINT count){
	if (!sdcard.IDMatch(pdrv) || !count) return RES_PARERR;
    6e32:	84 e0       	ldi	r24, 0x04	; 4
    6e34:	01 c0       	rjmp	.+2      	; 0x6e38 <disk_read+0x4c>
    6e36:	84 e0       	ldi	r24, 0x04	; 4
	return sdcard.read(buff, sector, count);
 }
    6e38:	27 96       	adiw	r28, 0x07	; 7
    6e3a:	cd bf       	out	0x3d, r28	; 61
    6e3c:	de bf       	out	0x3e, r29	; 62
    6e3e:	df 91       	pop	r29
    6e40:	cf 91       	pop	r28
    6e42:	1f 91       	pop	r17
    6e44:	0f 91       	pop	r16
    6e46:	08 95       	ret

00006e48 <_ZN6SDCard5writeEPVKhmj>:
	}
	deselect();
	return count ? RES_ERROR : RES_OK;
 }
 #if _FS_READONLY == 0
 DRESULT SDCard::write(const BYTE* buff, DWORD sector, UINT count) {
    6e48:	cf 92       	push	r12
    6e4a:	df 92       	push	r13
    6e4c:	ef 92       	push	r14
    6e4e:	ff 92       	push	r15
    6e50:	0f 93       	push	r16
    6e52:	1f 93       	push	r17
    6e54:	cf 93       	push	r28
    6e56:	df 93       	push	r29
    6e58:	00 d0       	rcall	.+0      	; 0x6e5a <_ZN6SDCard5writeEPVKhmj+0x12>
    6e5a:	00 d0       	rcall	.+0      	; 0x6e5c <_ZN6SDCard5writeEPVKhmj+0x14>
    6e5c:	cd b7       	in	r28, 0x3d	; 61
    6e5e:	de b7       	in	r29, 0x3e	; 62
    6e60:	7c 01       	movw	r14, r24
    6e62:	6b 01       	movw	r12, r22
    6e64:	29 83       	std	Y+1, r18	; 0x01
    6e66:	3a 83       	std	Y+2, r19	; 0x02
    6e68:	4b 83       	std	Y+3, r20	; 0x03
    6e6a:	5c 83       	std	Y+4, r21	; 0x04
    6e6c:	0d 83       	std	Y+5, r16	; 0x05
    6e6e:	1e 83       	std	Y+6, r17	; 0x06
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    6e70:	fc 01       	movw	r30, r24
    6e72:	84 81       	ldd	r24, Z+4	; 0x04
    6e74:	80 fd       	sbrc	r24, 0
    6e76:	68 c0       	rjmp	.+208    	; 0x6f48 <_ZN6SDCard5writeEPVKhmj+0x100>
	if (Stat & STA_PROTECT) return RES_WRPRT;
    6e78:	84 81       	ldd	r24, Z+4	; 0x04
    6e7a:	82 fd       	sbrc	r24, 2
    6e7c:	67 c0       	rjmp	.+206    	; 0x6f4c <_ZN6SDCard5writeEPVKhmj+0x104>

	if (!(CardType & CT_BLOCK)) sector *= 512;
    6e7e:	83 81       	ldd	r24, Z+3	; 0x03
    6e80:	83 fd       	sbrc	r24, 3
    6e82:	11 c0       	rjmp	.+34     	; 0x6ea6 <_ZN6SDCard5writeEPVKhmj+0x5e>
    6e84:	89 81       	ldd	r24, Y+1	; 0x01
    6e86:	9a 81       	ldd	r25, Y+2	; 0x02
    6e88:	ab 81       	ldd	r26, Y+3	; 0x03
    6e8a:	bc 81       	ldd	r27, Y+4	; 0x04
    6e8c:	07 2e       	mov	r0, r23
    6e8e:	79 e0       	ldi	r23, 0x09	; 9
    6e90:	88 0f       	add	r24, r24
    6e92:	99 1f       	adc	r25, r25
    6e94:	aa 1f       	adc	r26, r26
    6e96:	bb 1f       	adc	r27, r27
    6e98:	7a 95       	dec	r23
    6e9a:	d1 f7       	brne	.-12     	; 0x6e90 <_ZN6SDCard5writeEPVKhmj+0x48>
    6e9c:	70 2d       	mov	r23, r0
    6e9e:	89 83       	std	Y+1, r24	; 0x01
    6ea0:	9a 83       	std	Y+2, r25	; 0x02
    6ea2:	ab 83       	std	Y+3, r26	; 0x03
    6ea4:	bc 83       	std	Y+4, r27	; 0x04

	if (count == 1) {
    6ea6:	8d 81       	ldd	r24, Y+5	; 0x05
    6ea8:	9e 81       	ldd	r25, Y+6	; 0x06
    6eaa:	01 97       	sbiw	r24, 0x01	; 1
    6eac:	91 f4       	brne	.+36     	; 0x6ed2 <_ZN6SDCard5writeEPVKhmj+0x8a>
		if ((send_cmd(CMD24, sector) == 0) && send_dataBlock(buff, 0xFE)) count = 0;
    6eae:	29 81       	ldd	r18, Y+1	; 0x01
    6eb0:	3a 81       	ldd	r19, Y+2	; 0x02
    6eb2:	4b 81       	ldd	r20, Y+3	; 0x03
    6eb4:	5c 81       	ldd	r21, Y+4	; 0x04
    6eb6:	68 e5       	ldi	r22, 0x58	; 88
    6eb8:	c7 01       	movw	r24, r14
    6eba:	96 dd       	rcall	.-1236   	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6ebc:	81 11       	cpse	r24, r1
    6ebe:	37 c0       	rjmp	.+110    	; 0x6f2e <_ZN6SDCard5writeEPVKhmj+0xe6>
    6ec0:	4e ef       	ldi	r20, 0xFE	; 254
    6ec2:	b6 01       	movw	r22, r12
    6ec4:	c7 01       	movw	r24, r14
    6ec6:	1a dd       	rcall	.-1484   	; 0x68fc <_ZN6SDCard14send_dataBlockEPVKhh>
    6ec8:	89 2b       	or	r24, r25
    6eca:	89 f1       	breq	.+98     	; 0x6f2e <_ZN6SDCard5writeEPVKhmj+0xe6>
    6ecc:	1d 82       	std	Y+5, r1	; 0x05
    6ece:	1e 82       	std	Y+6, r1	; 0x06
    6ed0:	2e c0       	rjmp	.+92     	; 0x6f2e <_ZN6SDCard5writeEPVKhmj+0xe6>
	} else {
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
    6ed2:	f7 01       	movw	r30, r14
    6ed4:	83 81       	ldd	r24, Z+3	; 0x03
    6ed6:	86 70       	andi	r24, 0x06	; 6
    6ed8:	39 f0       	breq	.+14     	; 0x6ee8 <_ZN6SDCard5writeEPVKhmj+0xa0>
    6eda:	2d 81       	ldd	r18, Y+5	; 0x05
    6edc:	3e 81       	ldd	r19, Y+6	; 0x06
    6ede:	40 e0       	ldi	r20, 0x00	; 0
    6ee0:	50 e0       	ldi	r21, 0x00	; 0
    6ee2:	67 ed       	ldi	r22, 0xD7	; 215
    6ee4:	c7 01       	movw	r24, r14
    6ee6:	80 dd       	rcall	.-1280   	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
		if (send_cmd(CMD25, sector) == 0) {
    6ee8:	29 81       	ldd	r18, Y+1	; 0x01
    6eea:	3a 81       	ldd	r19, Y+2	; 0x02
    6eec:	4b 81       	ldd	r20, Y+3	; 0x03
    6eee:	5c 81       	ldd	r21, Y+4	; 0x04
    6ef0:	69 e5       	ldi	r22, 0x59	; 89
    6ef2:	c7 01       	movw	r24, r14
    6ef4:	79 dd       	rcall	.-1294   	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    6ef6:	81 11       	cpse	r24, r1
    6ef8:	1a c0       	rjmp	.+52     	; 0x6f2e <_ZN6SDCard5writeEPVKhmj+0xe6>
			do {
				if (!send_dataBlock(buff, 0xFC)) break;
    6efa:	4c ef       	ldi	r20, 0xFC	; 252
    6efc:	b6 01       	movw	r22, r12
    6efe:	c7 01       	movw	r24, r14
    6f00:	fd dc       	rcall	.-1542   	; 0x68fc <_ZN6SDCard14send_dataBlockEPVKhh>
    6f02:	89 2b       	or	r24, r25
    6f04:	49 f0       	breq	.+18     	; 0x6f18 <_ZN6SDCard5writeEPVKhmj+0xd0>
				buff += 512;
    6f06:	fe ef       	ldi	r31, 0xFE	; 254
    6f08:	df 1a       	sub	r13, r31
	if (count == 1) {
		if ((send_cmd(CMD24, sector) == 0) && send_dataBlock(buff, 0xFE)) count = 0;
	} else {
		if (CardType & CT_SDC) send_cmd(ACMD23, count);
		if (send_cmd(CMD25, sector) == 0) {
			do {
    6f0a:	8d 81       	ldd	r24, Y+5	; 0x05
    6f0c:	9e 81       	ldd	r25, Y+6	; 0x06
    6f0e:	01 97       	sbiw	r24, 0x01	; 1
    6f10:	8d 83       	std	Y+5, r24	; 0x05
    6f12:	9e 83       	std	Y+6, r25	; 0x06
    6f14:	89 2b       	or	r24, r25
    6f16:	89 f7       	brne	.-30     	; 0x6efa <_ZN6SDCard5writeEPVKhmj+0xb2>
				if (!send_dataBlock(buff, 0xFC)) break;
				buff += 512;
			} while (--count);
			if (!send_dataBlock(0, 0xFD)) count = 1;
    6f18:	4d ef       	ldi	r20, 0xFD	; 253
    6f1a:	60 e0       	ldi	r22, 0x00	; 0
    6f1c:	70 e0       	ldi	r23, 0x00	; 0
    6f1e:	c7 01       	movw	r24, r14
    6f20:	ed dc       	rcall	.-1574   	; 0x68fc <_ZN6SDCard14send_dataBlockEPVKhh>
    6f22:	89 2b       	or	r24, r25
    6f24:	21 f4       	brne	.+8      	; 0x6f2e <_ZN6SDCard5writeEPVKhmj+0xe6>
    6f26:	81 e0       	ldi	r24, 0x01	; 1
    6f28:	90 e0       	ldi	r25, 0x00	; 0
    6f2a:	8d 83       	std	Y+5, r24	; 0x05
    6f2c:	9e 83       	std	Y+6, r25	; 0x06
		}
	}

	deselect();
    6f2e:	80 e1       	ldi	r24, 0x10	; 16
    6f30:	e0 e8       	ldi	r30, 0x80	; 128
    6f32:	f6 e0       	ldi	r31, 0x06	; 6
    6f34:	85 83       	std	Z+5, r24	; 0x05
    6f36:	c7 01       	movw	r24, r14
    6f38:	8a d2       	rcall	.+1300   	; 0x744e <_ZN10SPI_Driver3getEv>
	return count ? RES_ERROR:RES_OK;
    6f3a:	2d 81       	ldd	r18, Y+5	; 0x05
    6f3c:	3e 81       	ldd	r19, Y+6	; 0x06
    6f3e:	81 e0       	ldi	r24, 0x01	; 1
    6f40:	23 2b       	or	r18, r19
    6f42:	29 f4       	brne	.+10     	; 0x6f4e <_ZN6SDCard5writeEPVKhmj+0x106>
    6f44:	80 e0       	ldi	r24, 0x00	; 0
    6f46:	03 c0       	rjmp	.+6      	; 0x6f4e <_ZN6SDCard5writeEPVKhmj+0x106>
	deselect();
	return count ? RES_ERROR : RES_OK;
 }
 #if _FS_READONLY == 0
 DRESULT SDCard::write(const BYTE* buff, DWORD sector, UINT count) {
	if (Stat & STA_NOINIT) return RES_NOTRDY;
    6f48:	83 e0       	ldi	r24, 0x03	; 3
    6f4a:	01 c0       	rjmp	.+2      	; 0x6f4e <_ZN6SDCard5writeEPVKhmj+0x106>
	if (Stat & STA_PROTECT) return RES_WRPRT;
    6f4c:	82 e0       	ldi	r24, 0x02	; 2
		}
	}

	deselect();
	return count ? RES_ERROR:RES_OK;
 }
    6f4e:	26 96       	adiw	r28, 0x06	; 6
    6f50:	cd bf       	out	0x3d, r28	; 61
    6f52:	de bf       	out	0x3e, r29	; 62
    6f54:	df 91       	pop	r29
    6f56:	cf 91       	pop	r28
    6f58:	1f 91       	pop	r17
    6f5a:	0f 91       	pop	r16
    6f5c:	ff 90       	pop	r15
    6f5e:	ef 90       	pop	r14
    6f60:	df 90       	pop	r13
    6f62:	cf 90       	pop	r12
    6f64:	08 95       	ret

00006f66 <disk_write>:
 }
 DRESULT disk_read (BYTE pdrv, BYTE* buff, DWORD sector, UINT count){
	if (!sdcard.IDMatch(pdrv) || !count) return RES_PARERR;
	return sdcard.read(buff, sector, count);
 }
 DRESULT disk_write (BYTE pdrv, const BYTE* buff, DWORD sector, UINT count){
    6f66:	0f 93       	push	r16
    6f68:	1f 93       	push	r17
    6f6a:	cf 93       	push	r28
    6f6c:	df 93       	push	r29
    6f6e:	cd b7       	in	r28, 0x3d	; 61
    6f70:	de b7       	in	r29, 0x3e	; 62
    6f72:	27 97       	sbiw	r28, 0x07	; 7
    6f74:	cd bf       	out	0x3d, r28	; 61
    6f76:	de bf       	out	0x3e, r29	; 62
    6f78:	89 83       	std	Y+1, r24	; 0x01
    6f7a:	2a 83       	std	Y+2, r18	; 0x02
    6f7c:	3b 83       	std	Y+3, r19	; 0x03
    6f7e:	4c 83       	std	Y+4, r20	; 0x04
    6f80:	5d 83       	std	Y+5, r21	; 0x05
    6f82:	0e 83       	std	Y+6, r16	; 0x06
    6f84:	1f 83       	std	Y+7, r17	; 0x07
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
    6f86:	89 81       	ldd	r24, Y+1	; 0x01
 DRESULT disk_ioctl (BYTE pdrv, BYTE cmd, void* buff){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
	return sdcard.IOctl(cmd, buff);
 }

 bool SDCard::IDMatch(BYTE pdrv) {return pdrv == drvID;}
    6f88:	90 91 6f 21 	lds	r25, 0x216F
 DRESULT disk_read (BYTE pdrv, BYTE* buff, DWORD sector, UINT count){
	if (!sdcard.IDMatch(pdrv) || !count) return RES_PARERR;
	return sdcard.read(buff, sector, count);
 }
 DRESULT disk_write (BYTE pdrv, const BYTE* buff, DWORD sector, UINT count){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
    6f8c:	98 13       	cpse	r25, r24
    6f8e:	0a c0       	rjmp	.+20     	; 0x6fa4 <disk_write+0x3e>
	return sdcard.write(buff, sector, count);
    6f90:	0e 81       	ldd	r16, Y+6	; 0x06
    6f92:	1f 81       	ldd	r17, Y+7	; 0x07
    6f94:	2a 81       	ldd	r18, Y+2	; 0x02
    6f96:	3b 81       	ldd	r19, Y+3	; 0x03
    6f98:	4c 81       	ldd	r20, Y+4	; 0x04
    6f9a:	5d 81       	ldd	r21, Y+5	; 0x05
    6f9c:	8d e6       	ldi	r24, 0x6D	; 109
    6f9e:	91 e2       	ldi	r25, 0x21	; 33
    6fa0:	53 df       	rcall	.-346    	; 0x6e48 <_ZN6SDCard5writeEPVKhmj>
    6fa2:	01 c0       	rjmp	.+2      	; 0x6fa6 <disk_write+0x40>
 DRESULT disk_read (BYTE pdrv, BYTE* buff, DWORD sector, UINT count){
	if (!sdcard.IDMatch(pdrv) || !count) return RES_PARERR;
	return sdcard.read(buff, sector, count);
 }
 DRESULT disk_write (BYTE pdrv, const BYTE* buff, DWORD sector, UINT count){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
    6fa4:	84 e0       	ldi	r24, 0x04	; 4
	return sdcard.write(buff, sector, count);
 }
    6fa6:	27 96       	adiw	r28, 0x07	; 7
    6fa8:	cd bf       	out	0x3d, r28	; 61
    6faa:	de bf       	out	0x3e, r29	; 62
    6fac:	df 91       	pop	r29
    6fae:	cf 91       	pop	r28
    6fb0:	1f 91       	pop	r17
    6fb2:	0f 91       	pop	r16
    6fb4:	08 95       	ret

00006fb6 <_ZN6SDCard5IOctlEhPv>:
	deselect();
	return count ? RES_ERROR:RES_OK;
 }
 #endif
 #if _USE_IOCTL != 0
 DRESULT SDCard::IOctl(BYTE ctrl, void* buff){
    6fb6:	cf 92       	push	r12
    6fb8:	df 92       	push	r13
    6fba:	ef 92       	push	r14
    6fbc:	ff 92       	push	r15
    6fbe:	0f 93       	push	r16
    6fc0:	1f 93       	push	r17
    6fc2:	cf 93       	push	r28
    6fc4:	df 93       	push	r29
    6fc6:	cd b7       	in	r28, 0x3d	; 61
    6fc8:	de b7       	in	r29, 0x3e	; 62
    6fca:	64 97       	sbiw	r28, 0x14	; 20
    6fcc:	cd bf       	out	0x3d, r28	; 61
    6fce:	de bf       	out	0x3e, r29	; 62
    6fd0:	7c 01       	movw	r14, r24
    6fd2:	6c 8b       	std	Y+20, r22	; 0x14
    6fd4:	6a 01       	movw	r12, r20
	BYTE n, csd[16];
	BYTE *ptr = (BYTE *)buff;
	WORD csize;

	res = RES_ERROR;
	if (ctrl == CTRL_POWER) {
    6fd6:	8c 89       	ldd	r24, Y+20	; 0x14
    6fd8:	85 30       	cpi	r24, 0x05	; 5
    6fda:	71 f4       	brne	.+28     	; 0x6ff8 <_ZN6SDCard5IOctlEhPv+0x42>
		switch(*ptr) {
    6fdc:	fa 01       	movw	r30, r20
    6fde:	80 81       	ld	r24, Z
    6fe0:	82 30       	cpi	r24, 0x02	; 2
    6fe2:	18 f0       	brcs	.+6      	; 0x6fea <_ZN6SDCard5IOctlEhPv+0x34>
    6fe4:	82 30       	cpi	r24, 0x02	; 2
    6fe6:	19 f0       	breq	.+6      	; 0x6fee <_ZN6SDCard5IOctlEhPv+0x38>
    6fe8:	d1 c1       	rjmp	.+930    	; 0x738c <_ZN6SDCard5IOctlEhPv+0x3d6>
		case 0:
			res = RES_OK;
    6fea:	80 e0       	ldi	r24, 0x00	; 0
    6fec:	d2 c1       	rjmp	.+932    	; 0x7392 <_ZN6SDCard5IOctlEhPv+0x3dc>
			break;
		case 1:
			res = RES_OK;
			break;
		case 2:
			*(ptr + 1) = (BYTE) 1;
    6fee:	81 e0       	ldi	r24, 0x01	; 1
    6ff0:	fa 01       	movw	r30, r20
    6ff2:	81 83       	std	Z+1, r24	; 0x01
			res = RES_OK;
    6ff4:	80 e0       	ldi	r24, 0x00	; 0
			break;
    6ff6:	cd c1       	rjmp	.+922    	; 0x7392 <_ZN6SDCard5IOctlEhPv+0x3dc>
		default:
			res = RES_PARERR;
		}
	} else {
		if (Stat & STA_NOINIT) return RES_NOTRDY;
    6ff8:	f7 01       	movw	r30, r14
    6ffa:	84 81       	ldd	r24, Z+4	; 0x04
    6ffc:	80 fd       	sbrc	r24, 0
    6ffe:	c8 c1       	rjmp	.+912    	; 0x7390 <_ZN6SDCard5IOctlEhPv+0x3da>

		switch(ctrl) {
    7000:	0c 89       	ldd	r16, Y+20	; 0x14
    7002:	10 e0       	ldi	r17, 0x00	; 0
    7004:	0f 30       	cpi	r16, 0x0F	; 15
    7006:	11 05       	cpc	r17, r1
    7008:	08 f0       	brcs	.+2      	; 0x700c <_ZN6SDCard5IOctlEhPv+0x56>
    700a:	a1 c1       	rjmp	.+834    	; 0x734e <_ZN6SDCard5IOctlEhPv+0x398>
    700c:	f8 01       	movw	r30, r16
    700e:	eb 5d       	subi	r30, 0xDB	; 219
    7010:	fe 4f       	sbci	r31, 0xFE	; 254
    7012:	a8 c4       	rjmp	.+2384   	; 0x7964 <__tablejump2__>
			case CTRL_SYNC:
				if (select()) {
    7014:	c7 01       	movw	r24, r14
    7016:	cb dc       	rcall	.-1642   	; 0x69ae <_ZN6SDCard6selectEv>
    7018:	89 2b       	or	r24, r25
    701a:	09 f4       	brne	.+2      	; 0x701e <_ZN6SDCard5IOctlEhPv+0x68>
    701c:	9a c1       	rjmp	.+820    	; 0x7352 <_ZN6SDCard5IOctlEhPv+0x39c>
					deselect();
    701e:	80 e1       	ldi	r24, 0x10	; 16
    7020:	e0 e8       	ldi	r30, 0x80	; 128
    7022:	f6 e0       	ldi	r31, 0x06	; 6
    7024:	85 83       	std	Z+5, r24	; 0x05
    7026:	c7 01       	movw	r24, r14
    7028:	12 d2       	rcall	.+1060   	; 0x744e <_ZN10SPI_Driver3getEv>
					res = RES_OK;
    702a:	10 e0       	ldi	r17, 0x00	; 0
    702c:	a7 c1       	rjmp	.+846    	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
				}
				break;
			case GET_SECTOR_COUNT:
				if ((send_cmd(CMD9, 0) == 0) && rcv_dataBlock(csd, 16)) {
    702e:	20 e0       	ldi	r18, 0x00	; 0
    7030:	30 e0       	ldi	r19, 0x00	; 0
    7032:	a9 01       	movw	r20, r18
    7034:	69 e4       	ldi	r22, 0x49	; 73
    7036:	c7 01       	movw	r24, r14
    7038:	d7 dc       	rcall	.-1618   	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    703a:	81 11       	cpse	r24, r1
    703c:	8c c1       	rjmp	.+792    	; 0x7356 <_ZN6SDCard5IOctlEhPv+0x3a0>
    703e:	40 e1       	ldi	r20, 0x10	; 16
    7040:	50 e0       	ldi	r21, 0x00	; 0
    7042:	be 01       	movw	r22, r28
    7044:	6f 5f       	subi	r22, 0xFF	; 255
    7046:	7f 4f       	sbci	r23, 0xFF	; 255
    7048:	c7 01       	movw	r24, r14
    704a:	dc db       	rcall	.-2120   	; 0x6804 <_ZN6SDCard13rcv_dataBlockEPVhj>
    704c:	89 2b       	or	r24, r25
    704e:	09 f4       	brne	.+2      	; 0x7052 <_ZN6SDCard5IOctlEhPv+0x9c>
    7050:	84 c1       	rjmp	.+776    	; 0x735a <_ZN6SDCard5IOctlEhPv+0x3a4>
					if ((csd[0] >> 6) == 1) {
    7052:	89 81       	ldd	r24, Y+1	; 0x01
    7054:	90 e0       	ldi	r25, 0x00	; 0
    7056:	08 2e       	mov	r0, r24
    7058:	89 2f       	mov	r24, r25
    705a:	00 0c       	add	r0, r0
    705c:	88 1f       	adc	r24, r24
    705e:	99 0b       	sbc	r25, r25
    7060:	00 0c       	add	r0, r0
    7062:	88 1f       	adc	r24, r24
    7064:	99 1f       	adc	r25, r25
    7066:	01 97       	sbiw	r24, 0x01	; 1
    7068:	01 f5       	brne	.+64     	; 0x70aa <_ZN6SDCard5IOctlEhPv+0xf4>
						csize = csd[9] + ((WORD) csd[8] << 8) + 1;
    706a:	2a 85       	ldd	r18, Y+10	; 0x0a
    706c:	89 85       	ldd	r24, Y+9	; 0x09
    706e:	30 e0       	ldi	r19, 0x00	; 0
    7070:	2f 5f       	subi	r18, 0xFF	; 255
    7072:	3f 4f       	sbci	r19, 0xFF	; 255
    7074:	90 e0       	ldi	r25, 0x00	; 0
    7076:	98 2f       	mov	r25, r24
    7078:	88 27       	eor	r24, r24
    707a:	82 0f       	add	r24, r18
    707c:	93 1f       	adc	r25, r19
    707e:	89 8b       	std	Y+17, r24	; 0x11
    7080:	9a 8b       	std	Y+18, r25	; 0x12
						*(DWORD*)buff = (DWORD)csize << 10;
    7082:	89 89       	ldd	r24, Y+17	; 0x11
    7084:	9a 89       	ldd	r25, Y+18	; 0x12
    7086:	a0 e0       	ldi	r26, 0x00	; 0
    7088:	b0 e0       	ldi	r27, 0x00	; 0
    708a:	07 2e       	mov	r0, r23
    708c:	7a e0       	ldi	r23, 0x0A	; 10
    708e:	88 0f       	add	r24, r24
    7090:	99 1f       	adc	r25, r25
    7092:	aa 1f       	adc	r26, r26
    7094:	bb 1f       	adc	r27, r27
    7096:	7a 95       	dec	r23
    7098:	d1 f7       	brne	.-12     	; 0x708e <_ZN6SDCard5IOctlEhPv+0xd8>
    709a:	70 2d       	mov	r23, r0
    709c:	f6 01       	movw	r30, r12
    709e:	80 83       	st	Z, r24
    70a0:	91 83       	std	Z+1, r25	; 0x01
    70a2:	a2 83       	std	Z+2, r26	; 0x02
    70a4:	b3 83       	std	Z+3, r27	; 0x03
					} else {
						n=(csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
						csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
						*(DWORD*)buff = (DWORD)csize << (n-9);
					}
					res = RES_OK;
    70a6:	10 e0       	ldi	r17, 0x00	; 0
    70a8:	69 c1       	rjmp	.+722    	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
				if ((send_cmd(CMD9, 0) == 0) && rcv_dataBlock(csd, 16)) {
					if ((csd[0] >> 6) == 1) {
						csize = csd[9] + ((WORD) csd[8] << 8) + 1;
						*(DWORD*)buff = (DWORD)csize << 10;
					} else {
						n=(csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
    70aa:	2e 81       	ldd	r18, Y+6	; 0x06
    70ac:	9b 85       	ldd	r25, Y+11	; 0x0b
    70ae:	8a 85       	ldd	r24, Y+10	; 0x0a
    70b0:	2f 70       	andi	r18, 0x0F	; 15
    70b2:	99 1f       	adc	r25, r25
    70b4:	99 27       	eor	r25, r25
    70b6:	99 1f       	adc	r25, r25
    70b8:	92 0f       	add	r25, r18
    70ba:	9e 5f       	subi	r25, 0xFE	; 254
    70bc:	83 70       	andi	r24, 0x03	; 3
    70be:	88 0f       	add	r24, r24
    70c0:	89 0f       	add	r24, r25
    70c2:	8b 8b       	std	Y+19, r24	; 0x13
						csize = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
    70c4:	49 85       	ldd	r20, Y+9	; 0x09
    70c6:	88 85       	ldd	r24, Y+8	; 0x08
    70c8:	2f 81       	ldd	r18, Y+7	; 0x07
    70ca:	90 e0       	ldi	r25, 0x00	; 0
    70cc:	88 0f       	add	r24, r24
    70ce:	99 1f       	adc	r25, r25
    70d0:	88 0f       	add	r24, r24
    70d2:	99 1f       	adc	r25, r25
    70d4:	01 96       	adiw	r24, 0x01	; 1
    70d6:	50 e0       	ldi	r21, 0x00	; 0
    70d8:	04 2e       	mov	r0, r20
    70da:	45 2f       	mov	r20, r21
    70dc:	00 0c       	add	r0, r0
    70de:	44 1f       	adc	r20, r20
    70e0:	55 0b       	sbc	r21, r21
    70e2:	00 0c       	add	r0, r0
    70e4:	44 1f       	adc	r20, r20
    70e6:	55 1f       	adc	r21, r21
    70e8:	84 0f       	add	r24, r20
    70ea:	95 1f       	adc	r25, r21
    70ec:	23 70       	andi	r18, 0x03	; 3
    70ee:	30 e0       	ldi	r19, 0x00	; 0
    70f0:	32 2f       	mov	r19, r18
    70f2:	22 27       	eor	r18, r18
    70f4:	33 0f       	add	r19, r19
    70f6:	33 0f       	add	r19, r19
    70f8:	82 0f       	add	r24, r18
    70fa:	93 1f       	adc	r25, r19
    70fc:	89 8b       	std	Y+17, r24	; 0x11
    70fe:	9a 8b       	std	Y+18, r25	; 0x12
						*(DWORD*)buff = (DWORD)csize << (n-9);
    7100:	49 89       	ldd	r20, Y+17	; 0x11
    7102:	5a 89       	ldd	r21, Y+18	; 0x12
    7104:	8b 89       	ldd	r24, Y+19	; 0x13
    7106:	60 e0       	ldi	r22, 0x00	; 0
    7108:	70 e0       	ldi	r23, 0x00	; 0
    710a:	89 50       	subi	r24, 0x09	; 9
    710c:	8a 01       	movw	r16, r20
    710e:	9b 01       	movw	r18, r22
    7110:	04 c0       	rjmp	.+8      	; 0x711a <_ZN6SDCard5IOctlEhPv+0x164>
    7112:	00 0f       	add	r16, r16
    7114:	11 1f       	adc	r17, r17
    7116:	22 1f       	adc	r18, r18
    7118:	33 1f       	adc	r19, r19
    711a:	8a 95       	dec	r24
    711c:	d2 f7       	brpl	.-12     	; 0x7112 <_ZN6SDCard5IOctlEhPv+0x15c>
    711e:	f6 01       	movw	r30, r12
    7120:	00 83       	st	Z, r16
    7122:	11 83       	std	Z+1, r17	; 0x01
    7124:	22 83       	std	Z+2, r18	; 0x02
    7126:	33 83       	std	Z+3, r19	; 0x03
					}
					res = RES_OK;
    7128:	10 e0       	ldi	r17, 0x00	; 0
    712a:	28 c1       	rjmp	.+592    	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
				}
				break;
			case GET_SECTOR_SIZE:
				*(WORD*)buff = 512;
    712c:	80 e0       	ldi	r24, 0x00	; 0
    712e:	92 e0       	ldi	r25, 0x02	; 2
    7130:	fa 01       	movw	r30, r20
    7132:	80 83       	st	Z, r24
    7134:	91 83       	std	Z+1, r25	; 0x01
				res = RES_OK;
    7136:	10 e0       	ldi	r17, 0x00	; 0
				break;
    7138:	21 c1       	rjmp	.+578    	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
			case GET_BLOCK_SIZE:
				if (CardType & CT_SD2) {
    713a:	f7 01       	movw	r30, r14
    713c:	83 81       	ldd	r24, Z+3	; 0x03
    713e:	82 ff       	sbrs	r24, 2
    7140:	3b c0       	rjmp	.+118    	; 0x71b8 <_ZN6SDCard5IOctlEhPv+0x202>
					if (send_cmd(ACMD13, 0) == 0) {
    7142:	20 e0       	ldi	r18, 0x00	; 0
    7144:	30 e0       	ldi	r19, 0x00	; 0
    7146:	a9 01       	movw	r20, r18
    7148:	6d ec       	ldi	r22, 0xCD	; 205
    714a:	c7 01       	movw	r24, r14
    714c:	4d dc       	rcall	.-1894   	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    714e:	81 11       	cpse	r24, r1
    7150:	06 c1       	rjmp	.+524    	; 0x735e <_ZN6SDCard5IOctlEhPv+0x3a8>
						spi.get();
    7152:	1e 2d       	mov	r17, r14
    7154:	0f 2d       	mov	r16, r15
    7156:	c7 01       	movw	r24, r14
    7158:	7a d1       	rcall	.+756    	; 0x744e <_ZN10SPI_Driver3getEv>
						if (rcv_dataBlock(csd,16)) {
    715a:	40 e1       	ldi	r20, 0x10	; 16
    715c:	50 e0       	ldi	r21, 0x00	; 0
    715e:	be 01       	movw	r22, r28
    7160:	6f 5f       	subi	r22, 0xFF	; 255
    7162:	7f 4f       	sbci	r23, 0xFF	; 255
    7164:	c7 01       	movw	r24, r14
    7166:	4e db       	rcall	.-2404   	; 0x6804 <_ZN6SDCard13rcv_dataBlockEPVhj>
    7168:	89 2b       	or	r24, r25
    716a:	09 f4       	brne	.+2      	; 0x716e <_ZN6SDCard5IOctlEhPv+0x1b8>
    716c:	fa c0       	rjmp	.+500    	; 0x7362 <_ZN6SDCard5IOctlEhPv+0x3ac>
							for (n = 64 - 16; n; n--) spi.get();
    716e:	80 e3       	ldi	r24, 0x30	; 48
    7170:	8b 8b       	std	Y+19, r24	; 0x13
    7172:	8b 89       	ldd	r24, Y+19	; 0x13
    7174:	88 23       	and	r24, r24
    7176:	49 f0       	breq	.+18     	; 0x718a <_ZN6SDCard5IOctlEhPv+0x1d4>
    7178:	81 2f       	mov	r24, r17
    717a:	90 2f       	mov	r25, r16
    717c:	68 d1       	rcall	.+720    	; 0x744e <_ZN10SPI_Driver3getEv>
    717e:	2b 89       	ldd	r18, Y+19	; 0x13
    7180:	21 50       	subi	r18, 0x01	; 1
    7182:	2b 8b       	std	Y+19, r18	; 0x13
    7184:	2b 89       	ldd	r18, Y+19	; 0x13
    7186:	21 11       	cpse	r18, r1
    7188:	f7 cf       	rjmp	.-18     	; 0x7178 <_ZN6SDCard5IOctlEhPv+0x1c2>
							*(DWORD*) buff = (DWORD)0x00000010 << (csd[10] >> 4);
    718a:	8b 85       	ldd	r24, Y+11	; 0x0b
    718c:	82 95       	swap	r24
    718e:	8f 70       	andi	r24, 0x0F	; 15
    7190:	40 e1       	ldi	r20, 0x10	; 16
    7192:	50 e0       	ldi	r21, 0x00	; 0
    7194:	60 e0       	ldi	r22, 0x00	; 0
    7196:	70 e0       	ldi	r23, 0x00	; 0
    7198:	8a 01       	movw	r16, r20
    719a:	9b 01       	movw	r18, r22
    719c:	04 c0       	rjmp	.+8      	; 0x71a6 <_ZN6SDCard5IOctlEhPv+0x1f0>
    719e:	00 0f       	add	r16, r16
    71a0:	11 1f       	adc	r17, r17
    71a2:	22 1f       	adc	r18, r18
    71a4:	33 1f       	adc	r19, r19
    71a6:	8a 95       	dec	r24
    71a8:	d2 f7       	brpl	.-12     	; 0x719e <_ZN6SDCard5IOctlEhPv+0x1e8>
    71aa:	f6 01       	movw	r30, r12
    71ac:	00 83       	st	Z, r16
    71ae:	11 83       	std	Z+1, r17	; 0x01
    71b0:	22 83       	std	Z+2, r18	; 0x02
    71b2:	33 83       	std	Z+3, r19	; 0x03
							res = RES_OK;
    71b4:	10 e0       	ldi	r17, 0x00	; 0
    71b6:	e2 c0       	rjmp	.+452    	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
						}
					}
				} else {
					if ((send_cmd(CMD9, 0) == 0) && rcv_dataBlock(csd,16)) {
    71b8:	20 e0       	ldi	r18, 0x00	; 0
    71ba:	30 e0       	ldi	r19, 0x00	; 0
    71bc:	a9 01       	movw	r20, r18
    71be:	69 e4       	ldi	r22, 0x49	; 73
    71c0:	c7 01       	movw	r24, r14
    71c2:	12 dc       	rcall	.-2012   	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    71c4:	81 11       	cpse	r24, r1
    71c6:	cf c0       	rjmp	.+414    	; 0x7366 <_ZN6SDCard5IOctlEhPv+0x3b0>
    71c8:	40 e1       	ldi	r20, 0x10	; 16
    71ca:	50 e0       	ldi	r21, 0x00	; 0
    71cc:	be 01       	movw	r22, r28
    71ce:	6f 5f       	subi	r22, 0xFF	; 255
    71d0:	7f 4f       	sbci	r23, 0xFF	; 255
    71d2:	c7 01       	movw	r24, r14
    71d4:	17 db       	rcall	.-2514   	; 0x6804 <_ZN6SDCard13rcv_dataBlockEPVhj>
    71d6:	89 2b       	or	r24, r25
    71d8:	09 f4       	brne	.+2      	; 0x71dc <_ZN6SDCard5IOctlEhPv+0x226>
    71da:	c7 c0       	rjmp	.+398    	; 0x736a <_ZN6SDCard5IOctlEhPv+0x3b4>
						if (CardType & CT_SD1) {
    71dc:	f7 01       	movw	r30, r14
    71de:	83 81       	ldd	r24, Z+3	; 0x03
    71e0:	81 ff       	sbrs	r24, 1
    71e2:	29 c0       	rjmp	.+82     	; 0x7236 <_ZN6SDCard5IOctlEhPv+0x280>
							*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
    71e4:	2b 85       	ldd	r18, Y+11	; 0x0b
    71e6:	4c 85       	ldd	r20, Y+12	; 0x0c
    71e8:	8e 85       	ldd	r24, Y+14	; 0x0e
    71ea:	44 1f       	adc	r20, r20
    71ec:	44 27       	eor	r20, r20
    71ee:	44 1f       	adc	r20, r20
    71f0:	50 e0       	ldi	r21, 0x00	; 0
    71f2:	4f 5f       	subi	r20, 0xFF	; 255
    71f4:	5f 4f       	sbci	r21, 0xFF	; 255
    71f6:	2f 73       	andi	r18, 0x3F	; 63
    71f8:	30 e0       	ldi	r19, 0x00	; 0
    71fa:	22 0f       	add	r18, r18
    71fc:	33 1f       	adc	r19, r19
    71fe:	24 0f       	add	r18, r20
    7200:	35 1f       	adc	r19, r21
    7202:	90 e0       	ldi	r25, 0x00	; 0
    7204:	08 2e       	mov	r0, r24
    7206:	89 2f       	mov	r24, r25
    7208:	00 0c       	add	r0, r0
    720a:	88 1f       	adc	r24, r24
    720c:	99 0b       	sbc	r25, r25
    720e:	00 0c       	add	r0, r0
    7210:	88 1f       	adc	r24, r24
    7212:	99 1f       	adc	r25, r25
    7214:	01 97       	sbiw	r24, 0x01	; 1
    7216:	89 01       	movw	r16, r18
    7218:	02 c0       	rjmp	.+4      	; 0x721e <_ZN6SDCard5IOctlEhPv+0x268>
    721a:	00 0f       	add	r16, r16
    721c:	11 1f       	adc	r17, r17
    721e:	8a 95       	dec	r24
    7220:	e2 f7       	brpl	.-8      	; 0x721a <_ZN6SDCard5IOctlEhPv+0x264>
    7222:	c8 01       	movw	r24, r16
    7224:	a0 e0       	ldi	r26, 0x00	; 0
    7226:	b0 e0       	ldi	r27, 0x00	; 0
    7228:	f6 01       	movw	r30, r12
    722a:	80 83       	st	Z, r24
    722c:	91 83       	std	Z+1, r25	; 0x01
    722e:	a2 83       	std	Z+2, r26	; 0x02
    7230:	b3 83       	std	Z+3, r27	; 0x03
						} else {
							*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
						}
						res = RES_OK;
    7232:	10 e0       	ldi	r17, 0x00	; 0
    7234:	a3 c0       	rjmp	.+326    	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
				} else {
					if ((send_cmd(CMD9, 0) == 0) && rcv_dataBlock(csd,16)) {
						if (CardType & CT_SD1) {
							*(DWORD*)buff = (((csd[10] & 63) << 1) + ((WORD)(csd[11] & 128) >> 7) + 1) << ((csd[13] >> 6) - 1);
						} else {
							*(DWORD*)buff = ((WORD)((csd[10] & 124) >> 2) + 1) * (((csd[11] & 3) << 3) + ((csd[11] & 224) >> 5) + 1);
    7236:	2b 85       	ldd	r18, Y+11	; 0x0b
    7238:	4c 85       	ldd	r20, Y+12	; 0x0c
    723a:	8c 85       	ldd	r24, Y+12	; 0x0c
    723c:	43 70       	andi	r20, 0x03	; 3
    723e:	50 e0       	ldi	r21, 0x00	; 0
    7240:	44 0f       	add	r20, r20
    7242:	55 1f       	adc	r21, r21
    7244:	44 0f       	add	r20, r20
    7246:	55 1f       	adc	r21, r21
    7248:	44 0f       	add	r20, r20
    724a:	55 1f       	adc	r21, r21
    724c:	82 95       	swap	r24
    724e:	86 95       	lsr	r24
    7250:	87 70       	andi	r24, 0x07	; 7
    7252:	48 0f       	add	r20, r24
    7254:	51 1d       	adc	r21, r1
    7256:	4f 5f       	subi	r20, 0xFF	; 255
    7258:	5f 4f       	sbci	r21, 0xFF	; 255
    725a:	2c 77       	andi	r18, 0x7C	; 124
    725c:	30 e0       	ldi	r19, 0x00	; 0
    725e:	35 95       	asr	r19
    7260:	27 95       	ror	r18
    7262:	35 95       	asr	r19
    7264:	27 95       	ror	r18
    7266:	2f 5f       	subi	r18, 0xFF	; 255
    7268:	3f 4f       	sbci	r19, 0xFF	; 255
    726a:	42 9f       	mul	r20, r18
    726c:	c0 01       	movw	r24, r0
    726e:	43 9f       	mul	r20, r19
    7270:	90 0d       	add	r25, r0
    7272:	52 9f       	mul	r21, r18
    7274:	90 0d       	add	r25, r0
    7276:	11 24       	eor	r1, r1
    7278:	a0 e0       	ldi	r26, 0x00	; 0
    727a:	b0 e0       	ldi	r27, 0x00	; 0
    727c:	f6 01       	movw	r30, r12
    727e:	80 83       	st	Z, r24
    7280:	91 83       	std	Z+1, r25	; 0x01
    7282:	a2 83       	std	Z+2, r26	; 0x02
    7284:	b3 83       	std	Z+3, r27	; 0x03
						}
						res = RES_OK;
    7286:	10 e0       	ldi	r17, 0x00	; 0
    7288:	79 c0       	rjmp	.+242    	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
					}
				}
				break;
			case MMC_GET_TYPE:
				*ptr = CardType;
    728a:	f7 01       	movw	r30, r14
    728c:	83 81       	ldd	r24, Z+3	; 0x03
    728e:	fa 01       	movw	r30, r20
    7290:	80 83       	st	Z, r24
				res = RES_OK;
    7292:	10 e0       	ldi	r17, 0x00	; 0
				break;
    7294:	73 c0       	rjmp	.+230    	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
			case MMC_GET_CSD:
				if (send_cmd(CMD9, 0) == 0 && rcv_dataBlock(ptr, 16)) res = RES_OK;
    7296:	20 e0       	ldi	r18, 0x00	; 0
    7298:	30 e0       	ldi	r19, 0x00	; 0
    729a:	a9 01       	movw	r20, r18
    729c:	69 e4       	ldi	r22, 0x49	; 73
    729e:	c7 01       	movw	r24, r14
    72a0:	a3 db       	rcall	.-2234   	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    72a2:	81 11       	cpse	r24, r1
    72a4:	0a c0       	rjmp	.+20     	; 0x72ba <_ZN6SDCard5IOctlEhPv+0x304>
    72a6:	40 e1       	ldi	r20, 0x10	; 16
    72a8:	50 e0       	ldi	r21, 0x00	; 0
    72aa:	b6 01       	movw	r22, r12
    72ac:	c7 01       	movw	r24, r14
    72ae:	aa da       	rcall	.-2732   	; 0x6804 <_ZN6SDCard13rcv_dataBlockEPVhj>
    72b0:	11 e0       	ldi	r17, 0x01	; 1
    72b2:	89 2b       	or	r24, r25
    72b4:	19 f4       	brne	.+6      	; 0x72bc <_ZN6SDCard5IOctlEhPv+0x306>
    72b6:	10 e0       	ldi	r17, 0x00	; 0
    72b8:	01 c0       	rjmp	.+2      	; 0x72bc <_ZN6SDCard5IOctlEhPv+0x306>
    72ba:	10 e0       	ldi	r17, 0x00	; 0
    72bc:	81 e0       	ldi	r24, 0x01	; 1
    72be:	18 27       	eor	r17, r24
    72c0:	5d c0       	rjmp	.+186    	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
				break;
			case MMC_GET_CID:
				if (send_cmd(CMD10, 0) == 0 && rcv_dataBlock(ptr, 16)) res = RES_OK;
    72c2:	20 e0       	ldi	r18, 0x00	; 0
    72c4:	30 e0       	ldi	r19, 0x00	; 0
    72c6:	a9 01       	movw	r20, r18
    72c8:	6a e4       	ldi	r22, 0x4A	; 74
    72ca:	c7 01       	movw	r24, r14
    72cc:	8d db       	rcall	.-2278   	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    72ce:	81 11       	cpse	r24, r1
    72d0:	0a c0       	rjmp	.+20     	; 0x72e6 <_ZN6SDCard5IOctlEhPv+0x330>
    72d2:	40 e1       	ldi	r20, 0x10	; 16
    72d4:	50 e0       	ldi	r21, 0x00	; 0
    72d6:	b6 01       	movw	r22, r12
    72d8:	c7 01       	movw	r24, r14
    72da:	94 da       	rcall	.-2776   	; 0x6804 <_ZN6SDCard13rcv_dataBlockEPVhj>
    72dc:	11 e0       	ldi	r17, 0x01	; 1
    72de:	89 2b       	or	r24, r25
    72e0:	19 f4       	brne	.+6      	; 0x72e8 <_ZN6SDCard5IOctlEhPv+0x332>
    72e2:	10 e0       	ldi	r17, 0x00	; 0
    72e4:	01 c0       	rjmp	.+2      	; 0x72e8 <_ZN6SDCard5IOctlEhPv+0x332>
    72e6:	10 e0       	ldi	r17, 0x00	; 0
    72e8:	81 e0       	ldi	r24, 0x01	; 1
    72ea:	18 27       	eor	r17, r24
    72ec:	47 c0       	rjmp	.+142    	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
				break;
			case MMC_GET_OCR:
				if (send_cmd(CMD58, 0) == 0) {
    72ee:	20 e0       	ldi	r18, 0x00	; 0
    72f0:	30 e0       	ldi	r19, 0x00	; 0
    72f2:	a9 01       	movw	r20, r18
    72f4:	6a e7       	ldi	r22, 0x7A	; 122
    72f6:	c7 01       	movw	r24, r14
    72f8:	77 db       	rcall	.-2322   	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    72fa:	81 11       	cpse	r24, r1
    72fc:	38 c0       	rjmp	.+112    	; 0x736e <_ZN6SDCard5IOctlEhPv+0x3b8>
					for (n=4; n; n--) *ptr++ = spi.get();
    72fe:	84 e0       	ldi	r24, 0x04	; 4
    7300:	8b 8b       	std	Y+19, r24	; 0x13
    7302:	8b 89       	ldd	r24, Y+19	; 0x13
    7304:	88 23       	and	r24, r24
    7306:	a9 f1       	breq	.+106    	; 0x7372 <_ZN6SDCard5IOctlEhPv+0x3bc>
    7308:	86 01       	movw	r16, r12
    730a:	0f 5f       	subi	r16, 0xFF	; 255
    730c:	1f 4f       	sbci	r17, 0xFF	; 255
    730e:	c7 01       	movw	r24, r14
    7310:	9e d0       	rcall	.+316    	; 0x744e <_ZN10SPI_Driver3getEv>
    7312:	f6 01       	movw	r30, r12
    7314:	80 83       	st	Z, r24
    7316:	8b 89       	ldd	r24, Y+19	; 0x13
    7318:	81 50       	subi	r24, 0x01	; 1
    731a:	8b 8b       	std	Y+19, r24	; 0x13
    731c:	8b 89       	ldd	r24, Y+19	; 0x13
    731e:	88 23       	and	r24, r24
    7320:	51 f1       	breq	.+84     	; 0x7376 <_ZN6SDCard5IOctlEhPv+0x3c0>
    7322:	68 01       	movw	r12, r16
    7324:	f1 cf       	rjmp	.-30     	; 0x7308 <_ZN6SDCard5IOctlEhPv+0x352>
					res = RES_OK;
				}
				break;
			case MMC_GET_SDSTAT:
				if (send_cmd(ACMD13, 0) == 0) {
    7326:	20 e0       	ldi	r18, 0x00	; 0
    7328:	30 e0       	ldi	r19, 0x00	; 0
    732a:	a9 01       	movw	r20, r18
    732c:	6d ec       	ldi	r22, 0xCD	; 205
    732e:	c7 01       	movw	r24, r14
    7330:	5b db       	rcall	.-2378   	; 0x69e8 <_ZN6SDCard8send_cmdEhm>
    7332:	81 11       	cpse	r24, r1
    7334:	22 c0       	rjmp	.+68     	; 0x737a <_ZN6SDCard5IOctlEhPv+0x3c4>
					spi.get();
    7336:	c7 01       	movw	r24, r14
    7338:	8a d0       	rcall	.+276    	; 0x744e <_ZN10SPI_Driver3getEv>
					if (rcv_dataBlock(ptr, 64)) res = RES_OK;
    733a:	40 e4       	ldi	r20, 0x40	; 64
    733c:	50 e0       	ldi	r21, 0x00	; 0
    733e:	b6 01       	movw	r22, r12
    7340:	c7 01       	movw	r24, r14
    7342:	60 da       	rcall	.-2880   	; 0x6804 <_ZN6SDCard13rcv_dataBlockEPVhj>
    7344:	11 e0       	ldi	r17, 0x01	; 1
    7346:	89 2b       	or	r24, r25
    7348:	c9 f0       	breq	.+50     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
    734a:	10 e0       	ldi	r17, 0x00	; 0
    734c:	17 c0       	rjmp	.+46     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
				}
				break;
			default:
				res = RES_PARERR;
    734e:	14 e0       	ldi	r17, 0x04	; 4
    7350:	15 c0       	rjmp	.+42     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
	DRESULT res;
	BYTE n, csd[16];
	BYTE *ptr = (BYTE *)buff;
	WORD csize;

	res = RES_ERROR;
    7352:	11 e0       	ldi	r17, 0x01	; 1
    7354:	13 c0       	rjmp	.+38     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
    7356:	11 e0       	ldi	r17, 0x01	; 1
    7358:	11 c0       	rjmp	.+34     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
    735a:	11 e0       	ldi	r17, 0x01	; 1
    735c:	0f c0       	rjmp	.+30     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
    735e:	11 e0       	ldi	r17, 0x01	; 1
    7360:	0d c0       	rjmp	.+26     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
    7362:	11 e0       	ldi	r17, 0x01	; 1
    7364:	0b c0       	rjmp	.+22     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
    7366:	11 e0       	ldi	r17, 0x01	; 1
    7368:	09 c0       	rjmp	.+18     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
    736a:	11 e0       	ldi	r17, 0x01	; 1
    736c:	07 c0       	rjmp	.+14     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
    736e:	11 e0       	ldi	r17, 0x01	; 1
    7370:	05 c0       	rjmp	.+10     	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
				if (send_cmd(CMD10, 0) == 0 && rcv_dataBlock(ptr, 16)) res = RES_OK;
				break;
			case MMC_GET_OCR:
				if (send_cmd(CMD58, 0) == 0) {
					for (n=4; n; n--) *ptr++ = spi.get();
					res = RES_OK;
    7372:	10 e0       	ldi	r17, 0x00	; 0
    7374:	03 c0       	rjmp	.+6      	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
    7376:	10 e0       	ldi	r17, 0x00	; 0
    7378:	01 c0       	rjmp	.+2      	; 0x737c <_ZN6SDCard5IOctlEhPv+0x3c6>
	DRESULT res;
	BYTE n, csd[16];
	BYTE *ptr = (BYTE *)buff;
	WORD csize;

	res = RES_ERROR;
    737a:	11 e0       	ldi	r17, 0x01	; 1
				}
				break;
			default:
				res = RES_PARERR;
			}
			deselect();
    737c:	90 e1       	ldi	r25, 0x10	; 16
    737e:	e0 e8       	ldi	r30, 0x80	; 128
    7380:	f6 e0       	ldi	r31, 0x06	; 6
    7382:	95 83       	std	Z+5, r25	; 0x05
    7384:	c7 01       	movw	r24, r14
    7386:	63 d0       	rcall	.+198    	; 0x744e <_ZN10SPI_Driver3getEv>
    7388:	81 2f       	mov	r24, r17
    738a:	03 c0       	rjmp	.+6      	; 0x7392 <_ZN6SDCard5IOctlEhPv+0x3dc>
		case 2:
			*(ptr + 1) = (BYTE) 1;
			res = RES_OK;
			break;
		default:
			res = RES_PARERR;
    738c:	84 e0       	ldi	r24, 0x04	; 4
    738e:	01 c0       	rjmp	.+2      	; 0x7392 <_ZN6SDCard5IOctlEhPv+0x3dc>
		}
	} else {
		if (Stat & STA_NOINIT) return RES_NOTRDY;
    7390:	83 e0       	ldi	r24, 0x03	; 3
			}
			deselect();
		}

		return res;
 }
    7392:	64 96       	adiw	r28, 0x14	; 20
    7394:	cd bf       	out	0x3d, r28	; 61
    7396:	de bf       	out	0x3e, r29	; 62
    7398:	df 91       	pop	r29
    739a:	cf 91       	pop	r28
    739c:	1f 91       	pop	r17
    739e:	0f 91       	pop	r16
    73a0:	ff 90       	pop	r15
    73a2:	ef 90       	pop	r14
    73a4:	df 90       	pop	r13
    73a6:	cf 90       	pop	r12
    73a8:	08 95       	ret

000073aa <disk_ioctl>:
 }
 DRESULT disk_write (BYTE pdrv, const BYTE* buff, DWORD sector, UINT count){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
	return sdcard.write(buff, sector, count);
 }
 DRESULT disk_ioctl (BYTE pdrv, BYTE cmd, void* buff){
    73aa:	cf 93       	push	r28
    73ac:	df 93       	push	r29
    73ae:	1f 92       	push	r1
    73b0:	1f 92       	push	r1
    73b2:	cd b7       	in	r28, 0x3d	; 61
    73b4:	de b7       	in	r29, 0x3e	; 62
    73b6:	89 83       	std	Y+1, r24	; 0x01
    73b8:	6a 83       	std	Y+2, r22	; 0x02
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
    73ba:	89 81       	ldd	r24, Y+1	; 0x01
	return sdcard.IOctl(cmd, buff);
 }

 bool SDCard::IDMatch(BYTE pdrv) {return pdrv == drvID;}
    73bc:	90 91 6f 21 	lds	r25, 0x216F
 DRESULT disk_write (BYTE pdrv, const BYTE* buff, DWORD sector, UINT count){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
	return sdcard.write(buff, sector, count);
 }
 DRESULT disk_ioctl (BYTE pdrv, BYTE cmd, void* buff){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
    73c0:	98 13       	cpse	r25, r24
    73c2:	05 c0       	rjmp	.+10     	; 0x73ce <disk_ioctl+0x24>
	return sdcard.IOctl(cmd, buff);
    73c4:	6a 81       	ldd	r22, Y+2	; 0x02
    73c6:	8d e6       	ldi	r24, 0x6D	; 109
    73c8:	91 e2       	ldi	r25, 0x21	; 33
    73ca:	f5 dd       	rcall	.-1046   	; 0x6fb6 <_ZN6SDCard5IOctlEhPv>
    73cc:	01 c0       	rjmp	.+2      	; 0x73d0 <disk_ioctl+0x26>
 DRESULT disk_write (BYTE pdrv, const BYTE* buff, DWORD sector, UINT count){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
	return sdcard.write(buff, sector, count);
 }
 DRESULT disk_ioctl (BYTE pdrv, BYTE cmd, void* buff){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
    73ce:	84 e0       	ldi	r24, 0x04	; 4
	return sdcard.IOctl(cmd, buff);
 }
    73d0:	0f 90       	pop	r0
    73d2:	0f 90       	pop	r0
    73d4:	df 91       	pop	r29
    73d6:	cf 91       	pop	r28
    73d8:	08 95       	ret

000073da <_GLOBAL__sub_I_sdcard>:
	DSTATUS getStatus();
	DRESULT read(BYTE* buff, DWORD sector, UINT count);
	DRESULT write(const BYTE* buff, DWORD sector, UINT count);
	DRESULT IOctl(BYTE ctrl, void* buff);
};
SDCard sdcard(&SPIE);
    73da:	60 ec       	ldi	r22, 0xC0	; 192
    73dc:	7a e0       	ldi	r23, 0x0A	; 10
    73de:	8d e6       	ldi	r24, 0x6D	; 109
    73e0:	91 e2       	ldi	r25, 0x21	; 33
    73e2:	fa c9       	rjmp	.-3084   	; 0x67d8 <_ZN6SDCardC1EP10SPI_struct>
    73e4:	08 95       	ret

000073e6 <_ZN10SPI_DriverC1EP10SPI_struct>:
 void SPI_Driver::disable() {
	spi->CTRL &= ~0x40;
 }
 bool SPI_Driver::txOK() {
	return spi->STATUS & 0x80 ? true : false;
 }
    73e6:	dc 01       	movw	r26, r24
    73e8:	6d 93       	st	X+, r22
    73ea:	7c 93       	st	X, r23
    73ec:	11 97       	sbiw	r26, 0x01	; 1
    73ee:	23 e9       	ldi	r18, 0x93	; 147
    73f0:	fb 01       	movw	r30, r22
    73f2:	20 83       	st	Z, r18
    73f4:	ed 91       	ld	r30, X+
    73f6:	fc 91       	ld	r31, X
    73f8:	11 82       	std	Z+1, r1	; 0x01
    73fa:	08 95       	ret

000073fc <_ZN10SPI_Driver9clockRateEc>:
    73fc:	dc 01       	movw	r26, r24
    73fe:	ed 91       	ld	r30, X+
    7400:	fc 91       	ld	r31, X
    7402:	11 97       	sbiw	r26, 0x01	; 1
    7404:	20 81       	ld	r18, Z
    7406:	2c 77       	andi	r18, 0x7C	; 124
    7408:	20 83       	st	Z, r18
    740a:	ed 91       	ld	r30, X+
    740c:	fc 91       	ld	r31, X
    740e:	80 81       	ld	r24, Z
    7410:	68 2b       	or	r22, r24
    7412:	60 83       	st	Z, r22
    7414:	08 95       	ret

00007416 <_ZN10SPI_Driver6enableEv>:
    7416:	dc 01       	movw	r26, r24
    7418:	ed 91       	ld	r30, X+
    741a:	fc 91       	ld	r31, X
    741c:	80 81       	ld	r24, Z
    741e:	80 64       	ori	r24, 0x40	; 64
    7420:	80 83       	st	Z, r24
    7422:	08 95       	ret

00007424 <_ZN10SPI_Driver3putEh>:
 void SPI_Driver::put(BYTE c) {
    7424:	cf 93       	push	r28
    7426:	df 93       	push	r29
    7428:	1f 92       	push	r1
    742a:	cd b7       	in	r28, 0x3d	; 61
    742c:	de b7       	in	r29, 0x3e	; 62
    742e:	69 83       	std	Y+1, r22	; 0x01
		spi->DATA = c;
		tx_in_prog = true;
	}else {
		MOQueue.enqueue(c);
	}*/
	spi->DATA = c;
    7430:	dc 01       	movw	r26, r24
    7432:	ed 91       	ld	r30, X+
    7434:	fc 91       	ld	r31, X
    7436:	11 97       	sbiw	r26, 0x01	; 1
    7438:	29 81       	ldd	r18, Y+1	; 0x01
    743a:	23 83       	std	Z+3, r18	; 0x03
	while(!(spi->STATUS & SPI_IF_bm)){}
    743c:	ed 91       	ld	r30, X+
    743e:	fc 91       	ld	r31, X
    7440:	82 81       	ldd	r24, Z+2	; 0x02
    7442:	88 23       	and	r24, r24
    7444:	ec f7       	brge	.-6      	; 0x7440 <_ZN10SPI_Driver3putEh+0x1c>
 }
    7446:	0f 90       	pop	r0
    7448:	df 91       	pop	r29
    744a:	cf 91       	pop	r28
    744c:	08 95       	ret

0000744e <_ZN10SPI_Driver3getEv>:
 BYTE SPI_Driver::get() {
	spi->DATA = 0xFF;
    744e:	dc 01       	movw	r26, r24
    7450:	ed 91       	ld	r30, X+
    7452:	fc 91       	ld	r31, X
    7454:	11 97       	sbiw	r26, 0x01	; 1
    7456:	2f ef       	ldi	r18, 0xFF	; 255
    7458:	23 83       	std	Z+3, r18	; 0x03
	while(!(spi->STATUS & SPI_IF_bm)){}
    745a:	ed 91       	ld	r30, X+
    745c:	fc 91       	ld	r31, X
    745e:	82 81       	ldd	r24, Z+2	; 0x02
    7460:	88 23       	and	r24, r24
    7462:	ec f7       	brge	.-6      	; 0x745e <_ZN10SPI_Driver3getEv+0x10>
	return spi->DATA;
    7464:	83 81       	ldd	r24, Z+3	; 0x03
 }
    7466:	08 95       	ret

00007468 <_ZN10SPI_Driver12get_bufferedEPVh>:
 void SPI_Driver::get_buffered(BYTE * dst) {
	spi->DATA = 0xFF;
    7468:	dc 01       	movw	r26, r24
    746a:	ed 91       	ld	r30, X+
    746c:	fc 91       	ld	r31, X
    746e:	11 97       	sbiw	r26, 0x01	; 1
    7470:	2f ef       	ldi	r18, 0xFF	; 255
    7472:	23 83       	std	Z+3, r18	; 0x03
	while (!(spi->STATUS & SPI_IF_bm)) {}
    7474:	ed 91       	ld	r30, X+
    7476:	fc 91       	ld	r31, X
    7478:	82 81       	ldd	r24, Z+2	; 0x02
    747a:	88 23       	and	r24, r24
    747c:	ec f7       	brge	.-6      	; 0x7478 <_ZN10SPI_Driver12get_bufferedEPVh+0x10>
	*(dst)=spi->DATA;
    747e:	83 81       	ldd	r24, Z+3	; 0x03
    7480:	fb 01       	movw	r30, r22
    7482:	80 83       	st	Z, r24
    7484:	08 95       	ret

00007486 <_ZN5Touch8getCycleEv>:

void Touch::startY() {

	// Start ADC
	ADCA.CH0.MUXCTRL = 0x2F;
	ADCA.CH0.CTRL = 0x82;
    7486:	fc 01       	movw	r30, r24
    7488:	20 81       	ld	r18, Z
    748a:	31 81       	ldd	r19, Z+1	; 0x01
    748c:	2f 5f       	subi	r18, 0xFF	; 255
    748e:	3f 4f       	sbci	r19, 0xFF	; 255
    7490:	24 30       	cpi	r18, 0x04	; 4
    7492:	31 05       	cpc	r19, r1
    7494:	19 f4       	brne	.+6      	; 0x749c <_ZN5Touch8getCycleEv+0x16>
    7496:	80 e0       	ldi	r24, 0x00	; 0
    7498:	90 e0       	ldi	r25, 0x00	; 0
    749a:	02 c0       	rjmp	.+4      	; 0x74a0 <_ZN5Touch8getCycleEv+0x1a>
    749c:	82 2f       	mov	r24, r18
    749e:	93 2f       	mov	r25, r19
    74a0:	80 83       	st	Z, r24
    74a2:	91 83       	std	Z+1, r25	; 0x01
    74a4:	08 95       	ret

000074a6 <_ZN5Touch6setupXEv>:

	//return ADCA.CH0.RES;
}

void Touch::setupX()
{
    74a6:	dc 01       	movw	r26, r24
    while(!(ADCA.CH0.INTFLAGS & 0x01));
    74a8:	e0 e0       	ldi	r30, 0x00	; 0
    74aa:	f2 e0       	ldi	r31, 0x02	; 2
    74ac:	83 a1       	ldd	r24, Z+35	; 0x23
    74ae:	80 ff       	sbrs	r24, 0
    74b0:	fd cf       	rjmp	.-6      	; 0x74ac <_ZN5Touch6setupXEv+0x6>
	xout = xin;
    74b2:	16 96       	adiw	r26, 0x06	; 6
    74b4:	8d 91       	ld	r24, X+
    74b6:	9c 91       	ld	r25, X
    74b8:	17 97       	sbiw	r26, 0x07	; 7
    74ba:	12 96       	adiw	r26, 0x02	; 2
    74bc:	8d 93       	st	X+, r24
    74be:	9c 93       	st	X, r25
    74c0:	13 97       	sbiw	r26, 0x03	; 3
	yout = ADCA.CH0.RES;
    74c2:	e0 e0       	ldi	r30, 0x00	; 0
    74c4:	f2 e0       	ldi	r31, 0x02	; 2
    74c6:	84 a1       	ldd	r24, Z+36	; 0x24
    74c8:	95 a1       	ldd	r25, Z+37	; 0x25
    74ca:	14 96       	adiw	r26, 0x04	; 4
    74cc:	8d 93       	st	X+, r24
    74ce:	9c 93       	st	X, r25
    74d0:	15 97       	sbiw	r26, 0x05	; 5

    //// Set yp high, set xp input
	TFT_CTRL_PORT.DIRCLR = 0x50;
    74d2:	e0 e0       	ldi	r30, 0x00	; 0
    74d4:	f6 e0       	ldi	r31, 0x06	; 6
    74d6:	80 e5       	ldi	r24, 0x50	; 80
    74d8:	82 83       	std	Z+2, r24	; 0x02
	TFT_CTRL_PORT.DIRSET = 0xA0;
    74da:	80 ea       	ldi	r24, 0xA0	; 160
    74dc:	81 83       	std	Z+1, r24	; 0x01
	TFT_Y_P_SET;
    74de:	84 81       	ldd	r24, Z+4	; 0x04
    74e0:	80 62       	ori	r24, 0x20	; 32
    74e2:	84 83       	std	Z+4, r24	; 0x04
	TFT_Y_M_CLR;
    74e4:	84 81       	ldd	r24, Z+4	; 0x04
    74e6:	8f 77       	andi	r24, 0x7F	; 127
    74e8:	84 83       	std	Z+4, r24	; 0x04
    74ea:	08 95       	ret

000074ec <_ZN5Touch6setupYEv>:
}

void Touch::setupY()
{
    while(!(ADCA.CH0.INTFLAGS & 0x01));
    74ec:	e0 e0       	ldi	r30, 0x00	; 0
    74ee:	f2 e0       	ldi	r31, 0x02	; 2
    74f0:	23 a1       	ldd	r18, Z+35	; 0x23
    74f2:	20 ff       	sbrs	r18, 0
    74f4:	fd cf       	rjmp	.-6      	; 0x74f0 <_ZN5Touch6setupYEv+0x4>
	xin = ADCA.CH0.RES;
    74f6:	e0 e0       	ldi	r30, 0x00	; 0
    74f8:	f2 e0       	ldi	r31, 0x02	; 2
    74fa:	24 a1       	ldd	r18, Z+36	; 0x24
    74fc:	35 a1       	ldd	r19, Z+37	; 0x25
    74fe:	fc 01       	movw	r30, r24
    7500:	26 83       	std	Z+6, r18	; 0x06
    7502:	37 83       	std	Z+7, r19	; 0x07

    // Set xp high, set yp input
	TFT_CTRL_PORT.DIRCLR = 0xA0;
    7504:	e0 e0       	ldi	r30, 0x00	; 0
    7506:	f6 e0       	ldi	r31, 0x06	; 6
    7508:	80 ea       	ldi	r24, 0xA0	; 160
    750a:	82 83       	std	Z+2, r24	; 0x02
	TFT_CTRL_PORT.DIRSET = 0x50;
    750c:	80 e5       	ldi	r24, 0x50	; 80
    750e:	81 83       	std	Z+1, r24	; 0x01
	TFT_X_P_SET;
    7510:	84 81       	ldd	r24, Z+4	; 0x04
    7512:	80 61       	ori	r24, 0x10	; 16
    7514:	84 83       	std	Z+4, r24	; 0x04
	TFT_X_M_CLR;
    7516:	84 81       	ldd	r24, Z+4	; 0x04
    7518:	8f 7b       	andi	r24, 0xBF	; 191
    751a:	84 83       	std	Z+4, r24	; 0x04
    751c:	08 95       	ret

0000751e <_ZN5Touch7processEv>:
}

void Touch::process()
{
    751e:	cf 93       	push	r28
    7520:	df 93       	push	r29
    7522:	ec 01       	movw	r28, r24
    switch (this->getCycle())
    7524:	b0 df       	rcall	.-160    	; 0x7486 <_ZN5Touch8getCycleEv>
    7526:	81 30       	cpi	r24, 0x01	; 1
    7528:	91 05       	cpc	r25, r1
    752a:	69 f0       	breq	.+26     	; 0x7546 <_ZN5Touch7processEv+0x28>
    752c:	1c f4       	brge	.+6      	; 0x7534 <_ZN5Touch7processEv+0x16>
    752e:	89 2b       	or	r24, r25
    7530:	39 f0       	breq	.+14     	; 0x7540 <_ZN5Touch7processEv+0x22>
    7532:	1a c0       	rjmp	.+52     	; 0x7568 <_ZN5Touch7processEv+0x4a>
    7534:	82 30       	cpi	r24, 0x02	; 2
    7536:	91 05       	cpc	r25, r1
    7538:	69 f0       	breq	.+26     	; 0x7554 <_ZN5Touch7processEv+0x36>
    753a:	03 97       	sbiw	r24, 0x03	; 3
    753c:	71 f0       	breq	.+28     	; 0x755a <_ZN5Touch7processEv+0x3c>
    753e:	14 c0       	rjmp	.+40     	; 0x7568 <_ZN5Touch7processEv+0x4a>
	{
	    case 0: setupX(); break;
    7540:	ce 01       	movw	r24, r28
    7542:	b1 df       	rcall	.-158    	; 0x74a6 <_ZN5Touch6setupXEv>
    7544:	12 c0       	rjmp	.+36     	; 0x756a <_ZN5Touch7processEv+0x4c>
}

void Touch::startX() {

	// Start ADC
	ADCA.CH0.MUXCTRL = 0x27;
    7546:	e0 e0       	ldi	r30, 0x00	; 0
    7548:	f2 e0       	ldi	r31, 0x02	; 2
    754a:	87 e2       	ldi	r24, 0x27	; 39
    754c:	81 a3       	std	Z+33, r24	; 0x21
	ADCA.CH0.CTRL = 0x82;
    754e:	82 e8       	ldi	r24, 0x82	; 130
    7550:	80 a3       	std	Z+32, r24	; 0x20
    7552:	0b c0       	rjmp	.+22     	; 0x756a <_ZN5Touch7processEv+0x4c>
{
    switch (this->getCycle())
	{
	    case 0: setupX(); break;
		case 1: startX(); break;
		case 2: setupY(); break;
    7554:	ce 01       	movw	r24, r28
    7556:	ca df       	rcall	.-108    	; 0x74ec <_ZN5Touch6setupYEv>
    7558:	08 c0       	rjmp	.+16     	; 0x756a <_ZN5Touch7processEv+0x4c>
}

void Touch::startY() {

	// Start ADC
	ADCA.CH0.MUXCTRL = 0x2F;
    755a:	e0 e0       	ldi	r30, 0x00	; 0
    755c:	f2 e0       	ldi	r31, 0x02	; 2
    755e:	8f e2       	ldi	r24, 0x2F	; 47
    7560:	81 a3       	std	Z+33, r24	; 0x21
	ADCA.CH0.CTRL = 0x82;
    7562:	82 e8       	ldi	r24, 0x82	; 130
    7564:	80 a3       	std	Z+32, r24	; 0x20
    7566:	01 c0       	rjmp	.+2      	; 0x756a <_ZN5Touch7processEv+0x4c>
	{
	    case 0: setupX(); break;
		case 1: startX(); break;
		case 2: setupY(); break;
		case 3: startY(); break;
		default: asm("nop");
    7568:	00 00       	nop
	}
}
    756a:	df 91       	pop	r29
    756c:	cf 91       	pop	r28
    756e:	08 95       	ret

00007570 <_ZN5Touch4getXEv>:

int Touch::getX()
{
    return this->xout;
}
    7570:	fc 01       	movw	r30, r24
    7572:	82 81       	ldd	r24, Z+2	; 0x02
    7574:	93 81       	ldd	r25, Z+3	; 0x03
    7576:	08 95       	ret

00007578 <_ZN5Touch4getYEv>:

int Touch::getY()
{
    return this->yout;
    7578:	fc 01       	movw	r30, r24
    757a:	84 81       	ldd	r24, Z+4	; 0x04
    757c:	95 81       	ldd	r25, Z+5	; 0x05
    757e:	08 95       	ret

00007580 <_ZN10UartDriverC1Eii>:
 *  Author: ee63pc3-user
 */ 

#include "uart_driver.h"

UartDriver::UartDriver(int rx_buffer_size, int tx_buffer_size) : rxQueue(rx_buffer_size), txQueue(tx_buffer_size) {}
    7580:	0f 93       	push	r16
    7582:	1f 93       	push	r17
    7584:	cf 93       	push	r28
    7586:	df 93       	push	r29
    7588:	ec 01       	movw	r28, r24
    758a:	8a 01       	movw	r16, r20
    758c:	02 96       	adiw	r24, 0x02	; 2
    758e:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_ZN9ByteQueueC1Ei>
    7592:	b8 01       	movw	r22, r16
    7594:	ce 01       	movw	r24, r28
    7596:	0e 96       	adiw	r24, 0x0e	; 14
    7598:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <_ZN9ByteQueueC1Ei>
    759c:	df 91       	pop	r29
    759e:	cf 91       	pop	r28
    75a0:	1f 91       	pop	r17
    75a2:	0f 91       	pop	r16
    75a4:	08 95       	ret

000075a6 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc>:

void UartDriver::init(USART_t * uval, ParityMode::PMODE pmode, CharSize::CHSIZE chsize, bool stopbit, char baudctrla, char baudctrlb)
{
    75a6:	cf 92       	push	r12
    75a8:	ef 92       	push	r14
    75aa:	0f 93       	push	r16
    75ac:	fc 01       	movw	r30, r24
	this->uval = uval;
    75ae:	60 83       	st	Z, r22
    75b0:	71 83       	std	Z+1, r23	; 0x01
	this->uval->CTRLC = 0x00;
    75b2:	db 01       	movw	r26, r22
    75b4:	15 96       	adiw	r26, 0x05	; 5
    75b6:	1c 92       	st	X, r1
	this->uval->BAUDCTRLA = baudctrla;
    75b8:	a0 81       	ld	r26, Z
    75ba:	b1 81       	ldd	r27, Z+1	; 0x01
    75bc:	16 96       	adiw	r26, 0x06	; 6
    75be:	ec 92       	st	X, r14
	this->uval->BAUDCTRLB = baudctrlb;
    75c0:	a0 81       	ld	r26, Z
    75c2:	b1 81       	ldd	r27, Z+1	; 0x01
    75c4:	17 96       	adiw	r26, 0x07	; 7
    75c6:	cc 92       	st	X, r12

	if (pmode == ParityMode::EVEN) this->uval->CTRLC |= 0x20;
    75c8:	41 30       	cpi	r20, 0x01	; 1
    75ca:	49 f4       	brne	.+18     	; 0x75de <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x38>
    75cc:	a0 81       	ld	r26, Z
    75ce:	b1 81       	ldd	r27, Z+1	; 0x01
    75d0:	15 96       	adiw	r26, 0x05	; 5
    75d2:	8c 91       	ld	r24, X
    75d4:	15 97       	sbiw	r26, 0x05	; 5
    75d6:	80 62       	ori	r24, 0x20	; 32
    75d8:	15 96       	adiw	r26, 0x05	; 5
    75da:	8c 93       	st	X, r24
    75dc:	0a c0       	rjmp	.+20     	; 0x75f2 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x4c>
	else if (pmode == ParityMode::ODD) this->uval->CTRLC |= 0x30;
    75de:	42 30       	cpi	r20, 0x02	; 2
    75e0:	41 f4       	brne	.+16     	; 0x75f2 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x4c>
    75e2:	a0 81       	ld	r26, Z
    75e4:	b1 81       	ldd	r27, Z+1	; 0x01
    75e6:	15 96       	adiw	r26, 0x05	; 5
    75e8:	8c 91       	ld	r24, X
    75ea:	15 97       	sbiw	r26, 0x05	; 5
    75ec:	80 63       	ori	r24, 0x30	; 48
    75ee:	15 96       	adiw	r26, 0x05	; 5
    75f0:	8c 93       	st	X, r24
	
	if (chsize == CharSize::SIX) this->uval->CTRLC |= 0x01;
    75f2:	21 30       	cpi	r18, 0x01	; 1
    75f4:	49 f4       	brne	.+18     	; 0x7608 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x62>
    75f6:	a0 81       	ld	r26, Z
    75f8:	b1 81       	ldd	r27, Z+1	; 0x01
    75fa:	15 96       	adiw	r26, 0x05	; 5
    75fc:	8c 91       	ld	r24, X
    75fe:	15 97       	sbiw	r26, 0x05	; 5
    7600:	81 60       	ori	r24, 0x01	; 1
    7602:	15 96       	adiw	r26, 0x05	; 5
    7604:	8c 93       	st	X, r24
    7606:	20 c0       	rjmp	.+64     	; 0x7648 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
	else if (chsize == CharSize::SEVEN) this->uval->CTRLC |= 0x02;
    7608:	22 30       	cpi	r18, 0x02	; 2
    760a:	49 f4       	brne	.+18     	; 0x761e <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x78>
    760c:	a0 81       	ld	r26, Z
    760e:	b1 81       	ldd	r27, Z+1	; 0x01
    7610:	15 96       	adiw	r26, 0x05	; 5
    7612:	8c 91       	ld	r24, X
    7614:	15 97       	sbiw	r26, 0x05	; 5
    7616:	82 60       	ori	r24, 0x02	; 2
    7618:	15 96       	adiw	r26, 0x05	; 5
    761a:	8c 93       	st	X, r24
    761c:	15 c0       	rjmp	.+42     	; 0x7648 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
	else if (chsize == CharSize::EIGHT) this->uval->CTRLC |= 0x03;
    761e:	23 30       	cpi	r18, 0x03	; 3
    7620:	49 f4       	brne	.+18     	; 0x7634 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x8e>
    7622:	a0 81       	ld	r26, Z
    7624:	b1 81       	ldd	r27, Z+1	; 0x01
    7626:	15 96       	adiw	r26, 0x05	; 5
    7628:	8c 91       	ld	r24, X
    762a:	15 97       	sbiw	r26, 0x05	; 5
    762c:	83 60       	ori	r24, 0x03	; 3
    762e:	15 96       	adiw	r26, 0x05	; 5
    7630:	8c 93       	st	X, r24
    7632:	0a c0       	rjmp	.+20     	; 0x7648 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
	else if (chsize == CharSize::NINE) this->uval->CTRLC |= 0x07;
    7634:	24 30       	cpi	r18, 0x04	; 4
    7636:	41 f4       	brne	.+16     	; 0x7648 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
    7638:	a0 81       	ld	r26, Z
    763a:	b1 81       	ldd	r27, Z+1	; 0x01
    763c:	15 96       	adiw	r26, 0x05	; 5
    763e:	8c 91       	ld	r24, X
    7640:	15 97       	sbiw	r26, 0x05	; 5
    7642:	87 60       	ori	r24, 0x07	; 7
    7644:	15 96       	adiw	r26, 0x05	; 5
    7646:	8c 93       	st	X, r24
	
	if (stopbit) this->uval->CTRLC |= 0x08;
    7648:	00 23       	and	r16, r16
    764a:	41 f0       	breq	.+16     	; 0x765c <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xb6>
    764c:	a0 81       	ld	r26, Z
    764e:	b1 81       	ldd	r27, Z+1	; 0x01
    7650:	15 96       	adiw	r26, 0x05	; 5
    7652:	8c 91       	ld	r24, X
    7654:	15 97       	sbiw	r26, 0x05	; 5
    7656:	88 60       	ori	r24, 0x08	; 8
    7658:	15 96       	adiw	r26, 0x05	; 5
    765a:	8c 93       	st	X, r24

	this->uval->CTRLA = 0x3F; //set receive and transmit interrupt to high priority
    765c:	a0 81       	ld	r26, Z
    765e:	b1 81       	ldd	r27, Z+1	; 0x01
    7660:	8f e3       	ldi	r24, 0x3F	; 63
    7662:	13 96       	adiw	r26, 0x03	; 3
    7664:	8c 93       	st	X, r24
	this->uval->CTRLB = 0x18; //set rxen, txen
    7666:	01 90       	ld	r0, Z+
    7668:	f0 81       	ld	r31, Z
    766a:	e0 2d       	mov	r30, r0
    766c:	88 e1       	ldi	r24, 0x18	; 24
    766e:	84 83       	std	Z+4, r24	; 0x04
}
    7670:	0f 91       	pop	r16
    7672:	ef 90       	pop	r14
    7674:	cf 90       	pop	r12
    7676:	08 95       	ret

00007678 <_ZN10UartDriver8sendByteEc>:

void UartDriver::sendByte(char c) {
    7678:	cf 93       	push	r28
    767a:	df 93       	push	r29
    767c:	ec 01       	movw	r28, r24
	if (this->uval->STATUS & USART_DREIF_bm) {
    767e:	e8 81       	ld	r30, Y
    7680:	f9 81       	ldd	r31, Y+1	; 0x01
    7682:	81 81       	ldd	r24, Z+1	; 0x01
    7684:	85 ff       	sbrs	r24, 5
    7686:	02 c0       	rjmp	.+4      	; 0x768c <_ZN10UartDriver8sendByteEc+0x14>
		//IF data register is empty, transmit the next character
		this->uval->DATA = c;
    7688:	60 83       	st	Z, r22
    768a:	04 c0       	rjmp	.+8      	; 0x7694 <_ZN10UartDriver8sendByteEc+0x1c>
	}else {
		//try to add to the queue if it is not empty (not guaranteed)
		txQueue.enqueue(c);
    768c:	ce 01       	movw	r24, r28
    768e:	0e 96       	adiw	r24, 0x0e	; 14
    7690:	0e 94 ee 0d 	call	0x1bdc	; 0x1bdc <_ZN9ByteQueue7enqueueEc>
	}
	uval->CTRLA |= (0x03);
    7694:	e8 81       	ld	r30, Y
    7696:	f9 81       	ldd	r31, Y+1	; 0x01
    7698:	83 81       	ldd	r24, Z+3	; 0x03
    769a:	83 60       	ori	r24, 0x03	; 3
    769c:	83 83       	std	Z+3, r24	; 0x03
}
    769e:	df 91       	pop	r29
    76a0:	cf 91       	pop	r28
    76a2:	08 95       	ret

000076a4 <_ZN10UartDriver7rcvByteEc>:
void UartDriver::rcvByte(char c) {
	rxQueue.enqueue(c);
    76a4:	02 96       	adiw	r24, 0x02	; 2
    76a6:	0c 94 ee 0d 	jmp	0x1bdc	; 0x1bdc <_ZN9ByteQueue7enqueueEc>
    76aa:	08 95       	ret

000076ac <_ZN10UartDriver9rxDequeueEv>:
}

char UartDriver::rxDequeue() {
	return rxQueue.dequeue();
    76ac:	02 96       	adiw	r24, 0x02	; 2
    76ae:	0c 94 17 0e 	jmp	0x1c2e	; 0x1c2e <_ZN9ByteQueue7dequeueEv>
}
    76b2:	08 95       	ret

000076b4 <_ZN10UartDriver9rxIsEmptyEv>:
bool UartDriver::rxIsEmpty() {
	return rxQueue.isEmpty();
    76b4:	02 96       	adiw	r24, 0x02	; 2
    76b6:	0c 94 4a 0e 	jmp	0x1c94	; 0x1c94 <_ZN9ByteQueue7isEmptyEv>
}
    76ba:	08 95       	ret

000076bc <_ZN10UartDriver9txIsEmptyEv>:
bool UartDriver::txIsEmpty() {
	return txQueue.isEmpty();
    76bc:	0e 96       	adiw	r24, 0x0e	; 14
    76be:	0c 94 4a 0e 	jmp	0x1c94	; 0x1c94 <_ZN9ByteQueue7isEmptyEv>
}
    76c2:	08 95       	ret

000076c4 <_ZN10UartDriver9txDequeueEv>:
char UartDriver::txDequeue() {
	return txQueue.dequeue();
    76c4:	0e 96       	adiw	r24, 0x0e	; 14
    76c6:	0c 94 17 0e 	jmp	0x1c2e	; 0x1c2e <_ZN9ByteQueue7dequeueEv>
}
    76ca:	08 95       	ret

000076cc <_ZN10UartDriver11getUARTPortEv>:
USART_t * UartDriver::getUARTPort() {
	return uval;
}
    76cc:	fc 01       	movw	r30, r24
    76ce:	80 81       	ld	r24, Z
    76d0:	91 81       	ldd	r25, Z+1	; 0x01
    76d2:	08 95       	ret

000076d4 <_ZN10UartDriver10sendStringEPKcih>:

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
    76d4:	af 92       	push	r10
    76d6:	bf 92       	push	r11
    76d8:	cf 92       	push	r12
    76da:	df 92       	push	r13
    76dc:	ef 92       	push	r14
    76de:	ff 92       	push	r15
    76e0:	0f 93       	push	r16
    76e2:	1f 93       	push	r17
    76e4:	cf 93       	push	r28
    76e6:	df 93       	push	r29
    76e8:	00 d0       	rcall	.+0      	; 0x76ea <_ZN10UartDriver10sendStringEPKcih+0x16>
    76ea:	cd b7       	in	r28, 0x3d	; 61
    76ec:	de b7       	in	r29, 0x3e	; 62
    76ee:	5c 01       	movw	r10, r24
    76f0:	7b 01       	movw	r14, r22
    76f2:	6a 01       	movw	r12, r20
    76f4:	2b 83       	std	Y+3, r18	; 0x03
	 for (volatile int i = 0; i < numchars; i++) {
    76f6:	19 82       	std	Y+1, r1	; 0x01
    76f8:	1a 82       	std	Y+2, r1	; 0x02
    76fa:	89 81       	ldd	r24, Y+1	; 0x01
    76fc:	9a 81       	ldd	r25, Y+2	; 0x02
    76fe:	84 17       	cp	r24, r20
    7700:	95 07       	cpc	r25, r21
    7702:	b4 f5       	brge	.+108    	; 0x7770 <_ZN10UartDriver10sendStringEPKcih+0x9c>
		if (str[i] == '\0') break;
    7704:	e9 81       	ldd	r30, Y+1	; 0x01
    7706:	fa 81       	ldd	r31, Y+2	; 0x02
    7708:	e6 0f       	add	r30, r22
    770a:	f7 1f       	adc	r31, r23
    770c:	80 81       	ld	r24, Z
    770e:	88 23       	and	r24, r24
    7710:	79 f1       	breq	.+94     	; 0x7770 <_ZN10UartDriver10sendStringEPKcih+0x9c>
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
		while (txQueue.isFull()) {}
    7712:	85 01       	movw	r16, r10
    7714:	02 5f       	subi	r16, 0xF2	; 242
    7716:	1f 4f       	sbci	r17, 0xFF	; 255
    7718:	07 c0       	rjmp	.+14     	; 0x7728 <_ZN10UartDriver10sendStringEPKcih+0x54>
	return uval;
}

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
	 for (volatile int i = 0; i < numchars; i++) {
		if (str[i] == '\0') break;
    771a:	e9 81       	ldd	r30, Y+1	; 0x01
    771c:	fa 81       	ldd	r31, Y+2	; 0x02
    771e:	ee 0d       	add	r30, r14
    7720:	ff 1d       	adc	r31, r15
    7722:	80 81       	ld	r24, Z
    7724:	88 23       	and	r24, r24
    7726:	21 f1       	breq	.+72     	; 0x7770 <_ZN10UartDriver10sendStringEPKcih+0x9c>
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
    7728:	e9 81       	ldd	r30, Y+1	; 0x01
    772a:	fa 81       	ldd	r31, Y+2	; 0x02
    772c:	ee 0d       	add	r30, r14
    772e:	ff 1d       	adc	r31, r15
    7730:	80 81       	ld	r24, Z
    7732:	84 32       	cpi	r24, 0x24	; 36
    7734:	39 f0       	breq	.+14     	; 0x7744 <_ZN10UartDriver10sendStringEPKcih+0x70>
    7736:	e9 81       	ldd	r30, Y+1	; 0x01
    7738:	fa 81       	ldd	r31, Y+2	; 0x02
    773a:	ee 0d       	add	r30, r14
    773c:	ff 1d       	adc	r31, r15
    773e:	80 81       	ld	r24, Z
    7740:	8a 32       	cpi	r24, 0x2A	; 42
    7742:	c1 f4       	brne	.+48     	; 0x7774 <_ZN10UartDriver10sendStringEPKcih+0xa0>
		while (txQueue.isFull()) {}
    7744:	c8 01       	movw	r24, r16
    7746:	0e 94 3f 0e 	call	0x1c7e	; 0x1c7e <_ZN9ByteQueue6isFullEv>
    774a:	81 11       	cpse	r24, r1
    774c:	fb cf       	rjmp	.-10     	; 0x7744 <_ZN10UartDriver10sendStringEPKcih+0x70>
		this->sendByte(str[i]);
    774e:	e9 81       	ldd	r30, Y+1	; 0x01
    7750:	fa 81       	ldd	r31, Y+2	; 0x02
    7752:	ee 0d       	add	r30, r14
    7754:	ff 1d       	adc	r31, r15
    7756:	60 81       	ld	r22, Z
    7758:	c5 01       	movw	r24, r10
    775a:	8e df       	rcall	.-228    	; 0x7678 <_ZN10UartDriver8sendByteEc>
USART_t * UartDriver::getUARTPort() {
	return uval;
}

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
	 for (volatile int i = 0; i < numchars; i++) {
    775c:	89 81       	ldd	r24, Y+1	; 0x01
    775e:	9a 81       	ldd	r25, Y+2	; 0x02
    7760:	01 96       	adiw	r24, 0x01	; 1
    7762:	89 83       	std	Y+1, r24	; 0x01
    7764:	9a 83       	std	Y+2, r25	; 0x02
    7766:	29 81       	ldd	r18, Y+1	; 0x01
    7768:	3a 81       	ldd	r19, Y+2	; 0x02
    776a:	2c 15       	cp	r18, r12
    776c:	3d 05       	cpc	r19, r13
    776e:	ac f2       	brlt	.-86     	; 0x771a <_ZN10UartDriver10sendStringEPKcih+0x46>
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
		while (txQueue.isFull()) {}
		this->sendByte(str[i]);
	 }

	 return checksum;
    7770:	8b 81       	ldd	r24, Y+3	; 0x03
    7772:	09 c0       	rjmp	.+18     	; 0x7786 <_ZN10UartDriver10sendStringEPKcih+0xb2>
}

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
	 for (volatile int i = 0; i < numchars; i++) {
		if (str[i] == '\0') break;
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
    7774:	e9 81       	ldd	r30, Y+1	; 0x01
    7776:	fa 81       	ldd	r31, Y+2	; 0x02
    7778:	9b 81       	ldd	r25, Y+3	; 0x03
    777a:	ee 0d       	add	r30, r14
    777c:	ff 1d       	adc	r31, r15
    777e:	80 81       	ld	r24, Z
    7780:	89 27       	eor	r24, r25
    7782:	8b 83       	std	Y+3, r24	; 0x03
    7784:	df cf       	rjmp	.-66     	; 0x7744 <_ZN10UartDriver10sendStringEPKcih+0x70>
		while (txQueue.isFull()) {}
		this->sendByte(str[i]);
	 }

	 return checksum;
    7786:	23 96       	adiw	r28, 0x03	; 3
    7788:	cd bf       	out	0x3d, r28	; 61
    778a:	de bf       	out	0x3e, r29	; 62
    778c:	df 91       	pop	r29
    778e:	cf 91       	pop	r28
    7790:	1f 91       	pop	r17
    7792:	0f 91       	pop	r16
    7794:	ff 90       	pop	r15
    7796:	ef 90       	pop	r14
    7798:	df 90       	pop	r13
    779a:	cf 90       	pop	r12
    779c:	bf 90       	pop	r11
    779e:	af 90       	pop	r10
    77a0:	08 95       	ret

000077a2 <__fixsfsi>:
    77a2:	04 d0       	rcall	.+8      	; 0x77ac <__fixunssfsi>
    77a4:	68 94       	set
    77a6:	b1 11       	cpse	r27, r1
    77a8:	8d c0       	rjmp	.+282    	; 0x78c4 <__fp_szero>
    77aa:	08 95       	ret

000077ac <__fixunssfsi>:
    77ac:	70 d0       	rcall	.+224    	; 0x788e <__fp_splitA>
    77ae:	88 f0       	brcs	.+34     	; 0x77d2 <__fixunssfsi+0x26>
    77b0:	9f 57       	subi	r25, 0x7F	; 127
    77b2:	90 f0       	brcs	.+36     	; 0x77d8 <__fixunssfsi+0x2c>
    77b4:	b9 2f       	mov	r27, r25
    77b6:	99 27       	eor	r25, r25
    77b8:	b7 51       	subi	r27, 0x17	; 23
    77ba:	a0 f0       	brcs	.+40     	; 0x77e4 <__fixunssfsi+0x38>
    77bc:	d1 f0       	breq	.+52     	; 0x77f2 <__fixunssfsi+0x46>
    77be:	66 0f       	add	r22, r22
    77c0:	77 1f       	adc	r23, r23
    77c2:	88 1f       	adc	r24, r24
    77c4:	99 1f       	adc	r25, r25
    77c6:	1a f0       	brmi	.+6      	; 0x77ce <__fixunssfsi+0x22>
    77c8:	ba 95       	dec	r27
    77ca:	c9 f7       	brne	.-14     	; 0x77be <__fixunssfsi+0x12>
    77cc:	12 c0       	rjmp	.+36     	; 0x77f2 <__fixunssfsi+0x46>
    77ce:	b1 30       	cpi	r27, 0x01	; 1
    77d0:	81 f0       	breq	.+32     	; 0x77f2 <__fixunssfsi+0x46>
    77d2:	77 d0       	rcall	.+238    	; 0x78c2 <__fp_zero>
    77d4:	b1 e0       	ldi	r27, 0x01	; 1
    77d6:	08 95       	ret
    77d8:	74 c0       	rjmp	.+232    	; 0x78c2 <__fp_zero>
    77da:	67 2f       	mov	r22, r23
    77dc:	78 2f       	mov	r23, r24
    77de:	88 27       	eor	r24, r24
    77e0:	b8 5f       	subi	r27, 0xF8	; 248
    77e2:	39 f0       	breq	.+14     	; 0x77f2 <__fixunssfsi+0x46>
    77e4:	b9 3f       	cpi	r27, 0xF9	; 249
    77e6:	cc f3       	brlt	.-14     	; 0x77da <__fixunssfsi+0x2e>
    77e8:	86 95       	lsr	r24
    77ea:	77 95       	ror	r23
    77ec:	67 95       	ror	r22
    77ee:	b3 95       	inc	r27
    77f0:	d9 f7       	brne	.-10     	; 0x77e8 <__fixunssfsi+0x3c>
    77f2:	3e f4       	brtc	.+14     	; 0x7802 <__fixunssfsi+0x56>
    77f4:	90 95       	com	r25
    77f6:	80 95       	com	r24
    77f8:	70 95       	com	r23
    77fa:	61 95       	neg	r22
    77fc:	7f 4f       	sbci	r23, 0xFF	; 255
    77fe:	8f 4f       	sbci	r24, 0xFF	; 255
    7800:	9f 4f       	sbci	r25, 0xFF	; 255
    7802:	08 95       	ret

00007804 <__floatunsisf>:
    7804:	e8 94       	clt
    7806:	09 c0       	rjmp	.+18     	; 0x781a <__floatsisf+0x12>

00007808 <__floatsisf>:
    7808:	97 fb       	bst	r25, 7
    780a:	3e f4       	brtc	.+14     	; 0x781a <__floatsisf+0x12>
    780c:	90 95       	com	r25
    780e:	80 95       	com	r24
    7810:	70 95       	com	r23
    7812:	61 95       	neg	r22
    7814:	7f 4f       	sbci	r23, 0xFF	; 255
    7816:	8f 4f       	sbci	r24, 0xFF	; 255
    7818:	9f 4f       	sbci	r25, 0xFF	; 255
    781a:	99 23       	and	r25, r25
    781c:	a9 f0       	breq	.+42     	; 0x7848 <__floatsisf+0x40>
    781e:	f9 2f       	mov	r31, r25
    7820:	96 e9       	ldi	r25, 0x96	; 150
    7822:	bb 27       	eor	r27, r27
    7824:	93 95       	inc	r25
    7826:	f6 95       	lsr	r31
    7828:	87 95       	ror	r24
    782a:	77 95       	ror	r23
    782c:	67 95       	ror	r22
    782e:	b7 95       	ror	r27
    7830:	f1 11       	cpse	r31, r1
    7832:	f8 cf       	rjmp	.-16     	; 0x7824 <__floatsisf+0x1c>
    7834:	fa f4       	brpl	.+62     	; 0x7874 <__floatsisf+0x6c>
    7836:	bb 0f       	add	r27, r27
    7838:	11 f4       	brne	.+4      	; 0x783e <__floatsisf+0x36>
    783a:	60 ff       	sbrs	r22, 0
    783c:	1b c0       	rjmp	.+54     	; 0x7874 <__floatsisf+0x6c>
    783e:	6f 5f       	subi	r22, 0xFF	; 255
    7840:	7f 4f       	sbci	r23, 0xFF	; 255
    7842:	8f 4f       	sbci	r24, 0xFF	; 255
    7844:	9f 4f       	sbci	r25, 0xFF	; 255
    7846:	16 c0       	rjmp	.+44     	; 0x7874 <__floatsisf+0x6c>
    7848:	88 23       	and	r24, r24
    784a:	11 f0       	breq	.+4      	; 0x7850 <__floatsisf+0x48>
    784c:	96 e9       	ldi	r25, 0x96	; 150
    784e:	11 c0       	rjmp	.+34     	; 0x7872 <__floatsisf+0x6a>
    7850:	77 23       	and	r23, r23
    7852:	21 f0       	breq	.+8      	; 0x785c <__floatsisf+0x54>
    7854:	9e e8       	ldi	r25, 0x8E	; 142
    7856:	87 2f       	mov	r24, r23
    7858:	76 2f       	mov	r23, r22
    785a:	05 c0       	rjmp	.+10     	; 0x7866 <__floatsisf+0x5e>
    785c:	66 23       	and	r22, r22
    785e:	71 f0       	breq	.+28     	; 0x787c <__floatsisf+0x74>
    7860:	96 e8       	ldi	r25, 0x86	; 134
    7862:	86 2f       	mov	r24, r22
    7864:	70 e0       	ldi	r23, 0x00	; 0
    7866:	60 e0       	ldi	r22, 0x00	; 0
    7868:	2a f0       	brmi	.+10     	; 0x7874 <__floatsisf+0x6c>
    786a:	9a 95       	dec	r25
    786c:	66 0f       	add	r22, r22
    786e:	77 1f       	adc	r23, r23
    7870:	88 1f       	adc	r24, r24
    7872:	da f7       	brpl	.-10     	; 0x786a <__floatsisf+0x62>
    7874:	88 0f       	add	r24, r24
    7876:	96 95       	lsr	r25
    7878:	87 95       	ror	r24
    787a:	97 f9       	bld	r25, 7
    787c:	08 95       	ret

0000787e <__fp_split3>:
    787e:	57 fd       	sbrc	r21, 7
    7880:	90 58       	subi	r25, 0x80	; 128
    7882:	44 0f       	add	r20, r20
    7884:	55 1f       	adc	r21, r21
    7886:	59 f0       	breq	.+22     	; 0x789e <__fp_splitA+0x10>
    7888:	5f 3f       	cpi	r21, 0xFF	; 255
    788a:	71 f0       	breq	.+28     	; 0x78a8 <__fp_splitA+0x1a>
    788c:	47 95       	ror	r20

0000788e <__fp_splitA>:
    788e:	88 0f       	add	r24, r24
    7890:	97 fb       	bst	r25, 7
    7892:	99 1f       	adc	r25, r25
    7894:	61 f0       	breq	.+24     	; 0x78ae <__fp_splitA+0x20>
    7896:	9f 3f       	cpi	r25, 0xFF	; 255
    7898:	79 f0       	breq	.+30     	; 0x78b8 <__fp_splitA+0x2a>
    789a:	87 95       	ror	r24
    789c:	08 95       	ret
    789e:	12 16       	cp	r1, r18
    78a0:	13 06       	cpc	r1, r19
    78a2:	14 06       	cpc	r1, r20
    78a4:	55 1f       	adc	r21, r21
    78a6:	f2 cf       	rjmp	.-28     	; 0x788c <__fp_split3+0xe>
    78a8:	46 95       	lsr	r20
    78aa:	f1 df       	rcall	.-30     	; 0x788e <__fp_splitA>
    78ac:	08 c0       	rjmp	.+16     	; 0x78be <__fp_splitA+0x30>
    78ae:	16 16       	cp	r1, r22
    78b0:	17 06       	cpc	r1, r23
    78b2:	18 06       	cpc	r1, r24
    78b4:	99 1f       	adc	r25, r25
    78b6:	f1 cf       	rjmp	.-30     	; 0x789a <__fp_splitA+0xc>
    78b8:	86 95       	lsr	r24
    78ba:	71 05       	cpc	r23, r1
    78bc:	61 05       	cpc	r22, r1
    78be:	08 94       	sec
    78c0:	08 95       	ret

000078c2 <__fp_zero>:
    78c2:	e8 94       	clt

000078c4 <__fp_szero>:
    78c4:	bb 27       	eor	r27, r27
    78c6:	66 27       	eor	r22, r22
    78c8:	77 27       	eor	r23, r23
    78ca:	cb 01       	movw	r24, r22
    78cc:	97 f9       	bld	r25, 7
    78ce:	08 95       	ret

000078d0 <__gesf2>:
    78d0:	03 d0       	rcall	.+6      	; 0x78d8 <__fp_cmp>
    78d2:	08 f4       	brcc	.+2      	; 0x78d6 <__gesf2+0x6>
    78d4:	8f ef       	ldi	r24, 0xFF	; 255
    78d6:	08 95       	ret

000078d8 <__fp_cmp>:
    78d8:	99 0f       	add	r25, r25
    78da:	00 08       	sbc	r0, r0
    78dc:	55 0f       	add	r21, r21
    78de:	aa 0b       	sbc	r26, r26
    78e0:	e0 e8       	ldi	r30, 0x80	; 128
    78e2:	fe ef       	ldi	r31, 0xFE	; 254
    78e4:	16 16       	cp	r1, r22
    78e6:	17 06       	cpc	r1, r23
    78e8:	e8 07       	cpc	r30, r24
    78ea:	f9 07       	cpc	r31, r25
    78ec:	c0 f0       	brcs	.+48     	; 0x791e <__fp_cmp+0x46>
    78ee:	12 16       	cp	r1, r18
    78f0:	13 06       	cpc	r1, r19
    78f2:	e4 07       	cpc	r30, r20
    78f4:	f5 07       	cpc	r31, r21
    78f6:	98 f0       	brcs	.+38     	; 0x791e <__fp_cmp+0x46>
    78f8:	62 1b       	sub	r22, r18
    78fa:	73 0b       	sbc	r23, r19
    78fc:	84 0b       	sbc	r24, r20
    78fe:	95 0b       	sbc	r25, r21
    7900:	39 f4       	brne	.+14     	; 0x7910 <__fp_cmp+0x38>
    7902:	0a 26       	eor	r0, r26
    7904:	61 f0       	breq	.+24     	; 0x791e <__fp_cmp+0x46>
    7906:	23 2b       	or	r18, r19
    7908:	24 2b       	or	r18, r20
    790a:	25 2b       	or	r18, r21
    790c:	21 f4       	brne	.+8      	; 0x7916 <__fp_cmp+0x3e>
    790e:	08 95       	ret
    7910:	0a 26       	eor	r0, r26
    7912:	09 f4       	brne	.+2      	; 0x7916 <__fp_cmp+0x3e>
    7914:	a1 40       	sbci	r26, 0x01	; 1
    7916:	a6 95       	lsr	r26
    7918:	8f ef       	ldi	r24, 0xFF	; 255
    791a:	81 1d       	adc	r24, r1
    791c:	81 1d       	adc	r24, r1
    791e:	08 95       	ret

00007920 <__udivmodsi4>:
    7920:	a1 e2       	ldi	r26, 0x21	; 33
    7922:	1a 2e       	mov	r1, r26
    7924:	aa 1b       	sub	r26, r26
    7926:	bb 1b       	sub	r27, r27
    7928:	fd 01       	movw	r30, r26
    792a:	0d c0       	rjmp	.+26     	; 0x7946 <__udivmodsi4_ep>

0000792c <__udivmodsi4_loop>:
    792c:	aa 1f       	adc	r26, r26
    792e:	bb 1f       	adc	r27, r27
    7930:	ee 1f       	adc	r30, r30
    7932:	ff 1f       	adc	r31, r31
    7934:	a2 17       	cp	r26, r18
    7936:	b3 07       	cpc	r27, r19
    7938:	e4 07       	cpc	r30, r20
    793a:	f5 07       	cpc	r31, r21
    793c:	20 f0       	brcs	.+8      	; 0x7946 <__udivmodsi4_ep>
    793e:	a2 1b       	sub	r26, r18
    7940:	b3 0b       	sbc	r27, r19
    7942:	e4 0b       	sbc	r30, r20
    7944:	f5 0b       	sbc	r31, r21

00007946 <__udivmodsi4_ep>:
    7946:	66 1f       	adc	r22, r22
    7948:	77 1f       	adc	r23, r23
    794a:	88 1f       	adc	r24, r24
    794c:	99 1f       	adc	r25, r25
    794e:	1a 94       	dec	r1
    7950:	69 f7       	brne	.-38     	; 0x792c <__udivmodsi4_loop>
    7952:	60 95       	com	r22
    7954:	70 95       	com	r23
    7956:	80 95       	com	r24
    7958:	90 95       	com	r25
    795a:	9b 01       	movw	r18, r22
    795c:	ac 01       	movw	r20, r24
    795e:	bd 01       	movw	r22, r26
    7960:	cf 01       	movw	r24, r30
    7962:	08 95       	ret

00007964 <__tablejump2__>:
    7964:	ee 0f       	add	r30, r30
    7966:	ff 1f       	adc	r31, r31

00007968 <__tablejump__>:
    7968:	05 90       	lpm	r0, Z+
    796a:	f4 91       	lpm	r31, Z
    796c:	e0 2d       	mov	r30, r0
    796e:	19 94       	eijmp

00007970 <__umulhisi3>:
    7970:	a2 9f       	mul	r26, r18
    7972:	b0 01       	movw	r22, r0
    7974:	b3 9f       	mul	r27, r19
    7976:	c0 01       	movw	r24, r0
    7978:	a3 9f       	mul	r26, r19
    797a:	70 0d       	add	r23, r0
    797c:	81 1d       	adc	r24, r1
    797e:	11 24       	eor	r1, r1
    7980:	91 1d       	adc	r25, r1
    7982:	b2 9f       	mul	r27, r18
    7984:	70 0d       	add	r23, r0
    7986:	81 1d       	adc	r24, r1
    7988:	11 24       	eor	r1, r1
    798a:	91 1d       	adc	r25, r1
    798c:	08 95       	ret

0000798e <__muluhisi3>:
    798e:	f0 df       	rcall	.-32     	; 0x7970 <__umulhisi3>
    7990:	a5 9f       	mul	r26, r21
    7992:	90 0d       	add	r25, r0
    7994:	b4 9f       	mul	r27, r20
    7996:	90 0d       	add	r25, r0
    7998:	a4 9f       	mul	r26, r20
    799a:	80 0d       	add	r24, r0
    799c:	91 1d       	adc	r25, r1
    799e:	11 24       	eor	r1, r1
    79a0:	08 95       	ret

000079a2 <__tablejump_elpm__>:
    79a2:	07 90       	elpm	r0, Z+
    79a4:	f6 91       	elpm	r31, Z
    79a6:	e0 2d       	mov	r30, r0
    79a8:	19 94       	eijmp

000079aa <malloc>:
    79aa:	cf 93       	push	r28
    79ac:	df 93       	push	r29
    79ae:	82 30       	cpi	r24, 0x02	; 2
    79b0:	91 05       	cpc	r25, r1
    79b2:	10 f4       	brcc	.+4      	; 0x79b8 <malloc+0xe>
    79b4:	82 e0       	ldi	r24, 0x02	; 2
    79b6:	90 e0       	ldi	r25, 0x00	; 0
    79b8:	e0 91 74 21 	lds	r30, 0x2174
    79bc:	f0 91 75 21 	lds	r31, 0x2175
    79c0:	20 e0       	ldi	r18, 0x00	; 0
    79c2:	30 e0       	ldi	r19, 0x00	; 0
    79c4:	a0 e0       	ldi	r26, 0x00	; 0
    79c6:	b0 e0       	ldi	r27, 0x00	; 0
    79c8:	30 97       	sbiw	r30, 0x00	; 0
    79ca:	39 f1       	breq	.+78     	; 0x7a1a <malloc+0x70>
    79cc:	40 81       	ld	r20, Z
    79ce:	51 81       	ldd	r21, Z+1	; 0x01
    79d0:	48 17       	cp	r20, r24
    79d2:	59 07       	cpc	r21, r25
    79d4:	b8 f0       	brcs	.+46     	; 0x7a04 <malloc+0x5a>
    79d6:	48 17       	cp	r20, r24
    79d8:	59 07       	cpc	r21, r25
    79da:	71 f4       	brne	.+28     	; 0x79f8 <malloc+0x4e>
    79dc:	82 81       	ldd	r24, Z+2	; 0x02
    79de:	93 81       	ldd	r25, Z+3	; 0x03
    79e0:	10 97       	sbiw	r26, 0x00	; 0
    79e2:	29 f0       	breq	.+10     	; 0x79ee <malloc+0x44>
    79e4:	12 96       	adiw	r26, 0x02	; 2
    79e6:	8d 93       	st	X+, r24
    79e8:	9c 93       	st	X, r25
    79ea:	13 97       	sbiw	r26, 0x03	; 3
    79ec:	2c c0       	rjmp	.+88     	; 0x7a46 <malloc+0x9c>
    79ee:	80 93 74 21 	sts	0x2174, r24
    79f2:	90 93 75 21 	sts	0x2175, r25
    79f6:	27 c0       	rjmp	.+78     	; 0x7a46 <malloc+0x9c>
    79f8:	21 15       	cp	r18, r1
    79fa:	31 05       	cpc	r19, r1
    79fc:	31 f0       	breq	.+12     	; 0x7a0a <malloc+0x60>
    79fe:	42 17       	cp	r20, r18
    7a00:	53 07       	cpc	r21, r19
    7a02:	18 f0       	brcs	.+6      	; 0x7a0a <malloc+0x60>
    7a04:	a9 01       	movw	r20, r18
    7a06:	db 01       	movw	r26, r22
    7a08:	01 c0       	rjmp	.+2      	; 0x7a0c <malloc+0x62>
    7a0a:	ef 01       	movw	r28, r30
    7a0c:	9a 01       	movw	r18, r20
    7a0e:	bd 01       	movw	r22, r26
    7a10:	df 01       	movw	r26, r30
    7a12:	02 80       	ldd	r0, Z+2	; 0x02
    7a14:	f3 81       	ldd	r31, Z+3	; 0x03
    7a16:	e0 2d       	mov	r30, r0
    7a18:	d7 cf       	rjmp	.-82     	; 0x79c8 <malloc+0x1e>
    7a1a:	21 15       	cp	r18, r1
    7a1c:	31 05       	cpc	r19, r1
    7a1e:	f9 f0       	breq	.+62     	; 0x7a5e <malloc+0xb4>
    7a20:	28 1b       	sub	r18, r24
    7a22:	39 0b       	sbc	r19, r25
    7a24:	24 30       	cpi	r18, 0x04	; 4
    7a26:	31 05       	cpc	r19, r1
    7a28:	80 f4       	brcc	.+32     	; 0x7a4a <malloc+0xa0>
    7a2a:	8a 81       	ldd	r24, Y+2	; 0x02
    7a2c:	9b 81       	ldd	r25, Y+3	; 0x03
    7a2e:	61 15       	cp	r22, r1
    7a30:	71 05       	cpc	r23, r1
    7a32:	21 f0       	breq	.+8      	; 0x7a3c <malloc+0x92>
    7a34:	fb 01       	movw	r30, r22
    7a36:	82 83       	std	Z+2, r24	; 0x02
    7a38:	93 83       	std	Z+3, r25	; 0x03
    7a3a:	04 c0       	rjmp	.+8      	; 0x7a44 <malloc+0x9a>
    7a3c:	80 93 74 21 	sts	0x2174, r24
    7a40:	90 93 75 21 	sts	0x2175, r25
    7a44:	fe 01       	movw	r30, r28
    7a46:	32 96       	adiw	r30, 0x02	; 2
    7a48:	44 c0       	rjmp	.+136    	; 0x7ad2 <malloc+0x128>
    7a4a:	fe 01       	movw	r30, r28
    7a4c:	e2 0f       	add	r30, r18
    7a4e:	f3 1f       	adc	r31, r19
    7a50:	81 93       	st	Z+, r24
    7a52:	91 93       	st	Z+, r25
    7a54:	22 50       	subi	r18, 0x02	; 2
    7a56:	31 09       	sbc	r19, r1
    7a58:	28 83       	st	Y, r18
    7a5a:	39 83       	std	Y+1, r19	; 0x01
    7a5c:	3a c0       	rjmp	.+116    	; 0x7ad2 <malloc+0x128>
    7a5e:	20 91 72 21 	lds	r18, 0x2172
    7a62:	30 91 73 21 	lds	r19, 0x2173
    7a66:	23 2b       	or	r18, r19
    7a68:	41 f4       	brne	.+16     	; 0x7a7a <malloc+0xd0>
    7a6a:	20 91 02 20 	lds	r18, 0x2002
    7a6e:	30 91 03 20 	lds	r19, 0x2003
    7a72:	20 93 72 21 	sts	0x2172, r18
    7a76:	30 93 73 21 	sts	0x2173, r19
    7a7a:	20 91 00 20 	lds	r18, 0x2000
    7a7e:	30 91 01 20 	lds	r19, 0x2001
    7a82:	21 15       	cp	r18, r1
    7a84:	31 05       	cpc	r19, r1
    7a86:	41 f4       	brne	.+16     	; 0x7a98 <malloc+0xee>
    7a88:	2d b7       	in	r18, 0x3d	; 61
    7a8a:	3e b7       	in	r19, 0x3e	; 62
    7a8c:	40 91 04 20 	lds	r20, 0x2004
    7a90:	50 91 05 20 	lds	r21, 0x2005
    7a94:	24 1b       	sub	r18, r20
    7a96:	35 0b       	sbc	r19, r21
    7a98:	e0 91 72 21 	lds	r30, 0x2172
    7a9c:	f0 91 73 21 	lds	r31, 0x2173
    7aa0:	e2 17       	cp	r30, r18
    7aa2:	f3 07       	cpc	r31, r19
    7aa4:	a0 f4       	brcc	.+40     	; 0x7ace <malloc+0x124>
    7aa6:	2e 1b       	sub	r18, r30
    7aa8:	3f 0b       	sbc	r19, r31
    7aaa:	28 17       	cp	r18, r24
    7aac:	39 07       	cpc	r19, r25
    7aae:	78 f0       	brcs	.+30     	; 0x7ace <malloc+0x124>
    7ab0:	ac 01       	movw	r20, r24
    7ab2:	4e 5f       	subi	r20, 0xFE	; 254
    7ab4:	5f 4f       	sbci	r21, 0xFF	; 255
    7ab6:	24 17       	cp	r18, r20
    7ab8:	35 07       	cpc	r19, r21
    7aba:	48 f0       	brcs	.+18     	; 0x7ace <malloc+0x124>
    7abc:	4e 0f       	add	r20, r30
    7abe:	5f 1f       	adc	r21, r31
    7ac0:	40 93 72 21 	sts	0x2172, r20
    7ac4:	50 93 73 21 	sts	0x2173, r21
    7ac8:	81 93       	st	Z+, r24
    7aca:	91 93       	st	Z+, r25
    7acc:	02 c0       	rjmp	.+4      	; 0x7ad2 <malloc+0x128>
    7ace:	e0 e0       	ldi	r30, 0x00	; 0
    7ad0:	f0 e0       	ldi	r31, 0x00	; 0
    7ad2:	cf 01       	movw	r24, r30
    7ad4:	df 91       	pop	r29
    7ad6:	cf 91       	pop	r28
    7ad8:	08 95       	ret

00007ada <free>:
    7ada:	cf 93       	push	r28
    7adc:	df 93       	push	r29
    7ade:	00 97       	sbiw	r24, 0x00	; 0
    7ae0:	09 f4       	brne	.+2      	; 0x7ae4 <free+0xa>
    7ae2:	87 c0       	rjmp	.+270    	; 0x7bf2 <free+0x118>
    7ae4:	fc 01       	movw	r30, r24
    7ae6:	32 97       	sbiw	r30, 0x02	; 2
    7ae8:	12 82       	std	Z+2, r1	; 0x02
    7aea:	13 82       	std	Z+3, r1	; 0x03
    7aec:	c0 91 74 21 	lds	r28, 0x2174
    7af0:	d0 91 75 21 	lds	r29, 0x2175
    7af4:	20 97       	sbiw	r28, 0x00	; 0
    7af6:	81 f4       	brne	.+32     	; 0x7b18 <free+0x3e>
    7af8:	20 81       	ld	r18, Z
    7afa:	31 81       	ldd	r19, Z+1	; 0x01
    7afc:	28 0f       	add	r18, r24
    7afe:	39 1f       	adc	r19, r25
    7b00:	80 91 72 21 	lds	r24, 0x2172
    7b04:	90 91 73 21 	lds	r25, 0x2173
    7b08:	82 17       	cp	r24, r18
    7b0a:	93 07       	cpc	r25, r19
    7b0c:	79 f5       	brne	.+94     	; 0x7b6c <free+0x92>
    7b0e:	e0 93 72 21 	sts	0x2172, r30
    7b12:	f0 93 73 21 	sts	0x2173, r31
    7b16:	6d c0       	rjmp	.+218    	; 0x7bf2 <free+0x118>
    7b18:	de 01       	movw	r26, r28
    7b1a:	20 e0       	ldi	r18, 0x00	; 0
    7b1c:	30 e0       	ldi	r19, 0x00	; 0
    7b1e:	ae 17       	cp	r26, r30
    7b20:	bf 07       	cpc	r27, r31
    7b22:	50 f4       	brcc	.+20     	; 0x7b38 <free+0x5e>
    7b24:	12 96       	adiw	r26, 0x02	; 2
    7b26:	4d 91       	ld	r20, X+
    7b28:	5c 91       	ld	r21, X
    7b2a:	13 97       	sbiw	r26, 0x03	; 3
    7b2c:	9d 01       	movw	r18, r26
    7b2e:	41 15       	cp	r20, r1
    7b30:	51 05       	cpc	r21, r1
    7b32:	09 f1       	breq	.+66     	; 0x7b76 <free+0x9c>
    7b34:	da 01       	movw	r26, r20
    7b36:	f3 cf       	rjmp	.-26     	; 0x7b1e <free+0x44>
    7b38:	a2 83       	std	Z+2, r26	; 0x02
    7b3a:	b3 83       	std	Z+3, r27	; 0x03
    7b3c:	40 81       	ld	r20, Z
    7b3e:	51 81       	ldd	r21, Z+1	; 0x01
    7b40:	84 0f       	add	r24, r20
    7b42:	95 1f       	adc	r25, r21
    7b44:	8a 17       	cp	r24, r26
    7b46:	9b 07       	cpc	r25, r27
    7b48:	71 f4       	brne	.+28     	; 0x7b66 <free+0x8c>
    7b4a:	8d 91       	ld	r24, X+
    7b4c:	9c 91       	ld	r25, X
    7b4e:	11 97       	sbiw	r26, 0x01	; 1
    7b50:	84 0f       	add	r24, r20
    7b52:	95 1f       	adc	r25, r21
    7b54:	02 96       	adiw	r24, 0x02	; 2
    7b56:	80 83       	st	Z, r24
    7b58:	91 83       	std	Z+1, r25	; 0x01
    7b5a:	12 96       	adiw	r26, 0x02	; 2
    7b5c:	8d 91       	ld	r24, X+
    7b5e:	9c 91       	ld	r25, X
    7b60:	13 97       	sbiw	r26, 0x03	; 3
    7b62:	82 83       	std	Z+2, r24	; 0x02
    7b64:	93 83       	std	Z+3, r25	; 0x03
    7b66:	21 15       	cp	r18, r1
    7b68:	31 05       	cpc	r19, r1
    7b6a:	29 f4       	brne	.+10     	; 0x7b76 <free+0x9c>
    7b6c:	e0 93 74 21 	sts	0x2174, r30
    7b70:	f0 93 75 21 	sts	0x2175, r31
    7b74:	3e c0       	rjmp	.+124    	; 0x7bf2 <free+0x118>
    7b76:	d9 01       	movw	r26, r18
    7b78:	12 96       	adiw	r26, 0x02	; 2
    7b7a:	ed 93       	st	X+, r30
    7b7c:	fc 93       	st	X, r31
    7b7e:	13 97       	sbiw	r26, 0x03	; 3
    7b80:	4d 91       	ld	r20, X+
    7b82:	5d 91       	ld	r21, X+
    7b84:	a4 0f       	add	r26, r20
    7b86:	b5 1f       	adc	r27, r21
    7b88:	ea 17       	cp	r30, r26
    7b8a:	fb 07       	cpc	r31, r27
    7b8c:	79 f4       	brne	.+30     	; 0x7bac <free+0xd2>
    7b8e:	80 81       	ld	r24, Z
    7b90:	91 81       	ldd	r25, Z+1	; 0x01
    7b92:	84 0f       	add	r24, r20
    7b94:	95 1f       	adc	r25, r21
    7b96:	02 96       	adiw	r24, 0x02	; 2
    7b98:	d9 01       	movw	r26, r18
    7b9a:	8d 93       	st	X+, r24
    7b9c:	9c 93       	st	X, r25
    7b9e:	11 97       	sbiw	r26, 0x01	; 1
    7ba0:	82 81       	ldd	r24, Z+2	; 0x02
    7ba2:	93 81       	ldd	r25, Z+3	; 0x03
    7ba4:	12 96       	adiw	r26, 0x02	; 2
    7ba6:	8d 93       	st	X+, r24
    7ba8:	9c 93       	st	X, r25
    7baa:	13 97       	sbiw	r26, 0x03	; 3
    7bac:	e0 e0       	ldi	r30, 0x00	; 0
    7bae:	f0 e0       	ldi	r31, 0x00	; 0
    7bb0:	8a 81       	ldd	r24, Y+2	; 0x02
    7bb2:	9b 81       	ldd	r25, Y+3	; 0x03
    7bb4:	00 97       	sbiw	r24, 0x00	; 0
    7bb6:	19 f0       	breq	.+6      	; 0x7bbe <free+0xe4>
    7bb8:	fe 01       	movw	r30, r28
    7bba:	ec 01       	movw	r28, r24
    7bbc:	f9 cf       	rjmp	.-14     	; 0x7bb0 <free+0xd6>
    7bbe:	ce 01       	movw	r24, r28
    7bc0:	02 96       	adiw	r24, 0x02	; 2
    7bc2:	28 81       	ld	r18, Y
    7bc4:	39 81       	ldd	r19, Y+1	; 0x01
    7bc6:	82 0f       	add	r24, r18
    7bc8:	93 1f       	adc	r25, r19
    7bca:	20 91 72 21 	lds	r18, 0x2172
    7bce:	30 91 73 21 	lds	r19, 0x2173
    7bd2:	28 17       	cp	r18, r24
    7bd4:	39 07       	cpc	r19, r25
    7bd6:	69 f4       	brne	.+26     	; 0x7bf2 <free+0x118>
    7bd8:	30 97       	sbiw	r30, 0x00	; 0
    7bda:	29 f4       	brne	.+10     	; 0x7be6 <free+0x10c>
    7bdc:	10 92 74 21 	sts	0x2174, r1
    7be0:	10 92 75 21 	sts	0x2175, r1
    7be4:	02 c0       	rjmp	.+4      	; 0x7bea <free+0x110>
    7be6:	12 82       	std	Z+2, r1	; 0x02
    7be8:	13 82       	std	Z+3, r1	; 0x03
    7bea:	c0 93 72 21 	sts	0x2172, r28
    7bee:	d0 93 73 21 	sts	0x2173, r29
    7bf2:	df 91       	pop	r29
    7bf4:	cf 91       	pop	r28
    7bf6:	08 95       	ret

00007bf8 <__itoa_ncheck>:
    7bf8:	bb 27       	eor	r27, r27
    7bfa:	4a 30       	cpi	r20, 0x0A	; 10
    7bfc:	31 f4       	brne	.+12     	; 0x7c0a <__itoa_ncheck+0x12>
    7bfe:	99 23       	and	r25, r25
    7c00:	22 f4       	brpl	.+8      	; 0x7c0a <__itoa_ncheck+0x12>
    7c02:	bd e2       	ldi	r27, 0x2D	; 45
    7c04:	90 95       	com	r25
    7c06:	81 95       	neg	r24
    7c08:	9f 4f       	sbci	r25, 0xFF	; 255
    7c0a:	01 c0       	rjmp	.+2      	; 0x7c0e <__utoa_common>

00007c0c <__utoa_ncheck>:
    7c0c:	bb 27       	eor	r27, r27

00007c0e <__utoa_common>:
    7c0e:	fb 01       	movw	r30, r22
    7c10:	55 27       	eor	r21, r21
    7c12:	aa 27       	eor	r26, r26
    7c14:	88 0f       	add	r24, r24
    7c16:	99 1f       	adc	r25, r25
    7c18:	aa 1f       	adc	r26, r26
    7c1a:	a4 17       	cp	r26, r20
    7c1c:	10 f0       	brcs	.+4      	; 0x7c22 <__utoa_common+0x14>
    7c1e:	a4 1b       	sub	r26, r20
    7c20:	83 95       	inc	r24
    7c22:	50 51       	subi	r21, 0x10	; 16
    7c24:	b9 f7       	brne	.-18     	; 0x7c14 <__utoa_common+0x6>
    7c26:	a0 5d       	subi	r26, 0xD0	; 208
    7c28:	aa 33       	cpi	r26, 0x3A	; 58
    7c2a:	08 f0       	brcs	.+2      	; 0x7c2e <__utoa_common+0x20>
    7c2c:	a9 5d       	subi	r26, 0xD9	; 217
    7c2e:	a1 93       	st	Z+, r26
    7c30:	00 97       	sbiw	r24, 0x00	; 0
    7c32:	79 f7       	brne	.-34     	; 0x7c12 <__utoa_common+0x4>
    7c34:	b1 11       	cpse	r27, r1
    7c36:	b1 93       	st	Z+, r27
    7c38:	11 92       	st	Z+, r1
    7c3a:	cb 01       	movw	r24, r22
    7c3c:	26 c2       	rjmp	.+1100   	; 0x808a <strrev>

00007c3e <sprintf>:
    7c3e:	0f 93       	push	r16
    7c40:	1f 93       	push	r17
    7c42:	cf 93       	push	r28
    7c44:	df 93       	push	r29
    7c46:	cd b7       	in	r28, 0x3d	; 61
    7c48:	de b7       	in	r29, 0x3e	; 62
    7c4a:	2e 97       	sbiw	r28, 0x0e	; 14
    7c4c:	cd bf       	out	0x3d, r28	; 61
    7c4e:	de bf       	out	0x3e, r29	; 62
    7c50:	0e 89       	ldd	r16, Y+22	; 0x16
    7c52:	1f 89       	ldd	r17, Y+23	; 0x17
    7c54:	86 e0       	ldi	r24, 0x06	; 6
    7c56:	8c 83       	std	Y+4, r24	; 0x04
    7c58:	09 83       	std	Y+1, r16	; 0x01
    7c5a:	1a 83       	std	Y+2, r17	; 0x02
    7c5c:	8f ef       	ldi	r24, 0xFF	; 255
    7c5e:	9f e7       	ldi	r25, 0x7F	; 127
    7c60:	8d 83       	std	Y+5, r24	; 0x05
    7c62:	9e 83       	std	Y+6, r25	; 0x06
    7c64:	ae 01       	movw	r20, r28
    7c66:	46 5e       	subi	r20, 0xE6	; 230
    7c68:	5f 4f       	sbci	r21, 0xFF	; 255
    7c6a:	68 8d       	ldd	r22, Y+24	; 0x18
    7c6c:	79 8d       	ldd	r23, Y+25	; 0x19
    7c6e:	ce 01       	movw	r24, r28
    7c70:	01 96       	adiw	r24, 0x01	; 1
    7c72:	0d d0       	rcall	.+26     	; 0x7c8e <vfprintf>
    7c74:	ef 81       	ldd	r30, Y+7	; 0x07
    7c76:	f8 85       	ldd	r31, Y+8	; 0x08
    7c78:	e0 0f       	add	r30, r16
    7c7a:	f1 1f       	adc	r31, r17
    7c7c:	10 82       	st	Z, r1
    7c7e:	2e 96       	adiw	r28, 0x0e	; 14
    7c80:	cd bf       	out	0x3d, r28	; 61
    7c82:	de bf       	out	0x3e, r29	; 62
    7c84:	df 91       	pop	r29
    7c86:	cf 91       	pop	r28
    7c88:	1f 91       	pop	r17
    7c8a:	0f 91       	pop	r16
    7c8c:	08 95       	ret

00007c8e <vfprintf>:
    7c8e:	2f 92       	push	r2
    7c90:	3f 92       	push	r3
    7c92:	4f 92       	push	r4
    7c94:	5f 92       	push	r5
    7c96:	6f 92       	push	r6
    7c98:	7f 92       	push	r7
    7c9a:	8f 92       	push	r8
    7c9c:	9f 92       	push	r9
    7c9e:	af 92       	push	r10
    7ca0:	bf 92       	push	r11
    7ca2:	cf 92       	push	r12
    7ca4:	df 92       	push	r13
    7ca6:	ef 92       	push	r14
    7ca8:	ff 92       	push	r15
    7caa:	0f 93       	push	r16
    7cac:	1f 93       	push	r17
    7cae:	cf 93       	push	r28
    7cb0:	df 93       	push	r29
    7cb2:	cd b7       	in	r28, 0x3d	; 61
    7cb4:	de b7       	in	r29, 0x3e	; 62
    7cb6:	2c 97       	sbiw	r28, 0x0c	; 12
    7cb8:	cd bf       	out	0x3d, r28	; 61
    7cba:	de bf       	out	0x3e, r29	; 62
    7cbc:	7c 01       	movw	r14, r24
    7cbe:	6b 01       	movw	r12, r22
    7cc0:	8a 01       	movw	r16, r20
    7cc2:	fc 01       	movw	r30, r24
    7cc4:	16 82       	std	Z+6, r1	; 0x06
    7cc6:	17 82       	std	Z+7, r1	; 0x07
    7cc8:	83 81       	ldd	r24, Z+3	; 0x03
    7cca:	81 ff       	sbrs	r24, 1
    7ccc:	b0 c1       	rjmp	.+864    	; 0x802e <vfprintf+0x3a0>
    7cce:	ce 01       	movw	r24, r28
    7cd0:	01 96       	adiw	r24, 0x01	; 1
    7cd2:	4c 01       	movw	r8, r24
    7cd4:	f7 01       	movw	r30, r14
    7cd6:	93 81       	ldd	r25, Z+3	; 0x03
    7cd8:	f6 01       	movw	r30, r12
    7cda:	93 fd       	sbrc	r25, 3
    7cdc:	85 91       	lpm	r24, Z+
    7cde:	93 ff       	sbrs	r25, 3
    7ce0:	81 91       	ld	r24, Z+
    7ce2:	6f 01       	movw	r12, r30
    7ce4:	88 23       	and	r24, r24
    7ce6:	09 f4       	brne	.+2      	; 0x7cea <vfprintf+0x5c>
    7ce8:	9e c1       	rjmp	.+828    	; 0x8026 <vfprintf+0x398>
    7cea:	85 32       	cpi	r24, 0x25	; 37
    7cec:	39 f4       	brne	.+14     	; 0x7cfc <vfprintf+0x6e>
    7cee:	93 fd       	sbrc	r25, 3
    7cf0:	85 91       	lpm	r24, Z+
    7cf2:	93 ff       	sbrs	r25, 3
    7cf4:	81 91       	ld	r24, Z+
    7cf6:	6f 01       	movw	r12, r30
    7cf8:	85 32       	cpi	r24, 0x25	; 37
    7cfa:	21 f4       	brne	.+8      	; 0x7d04 <vfprintf+0x76>
    7cfc:	b7 01       	movw	r22, r14
    7cfe:	90 e0       	ldi	r25, 0x00	; 0
    7d00:	d4 d1       	rcall	.+936    	; 0x80aa <fputc>
    7d02:	e8 cf       	rjmp	.-48     	; 0x7cd4 <vfprintf+0x46>
    7d04:	51 2c       	mov	r5, r1
    7d06:	31 2c       	mov	r3, r1
    7d08:	20 e0       	ldi	r18, 0x00	; 0
    7d0a:	20 32       	cpi	r18, 0x20	; 32
    7d0c:	a0 f4       	brcc	.+40     	; 0x7d36 <vfprintf+0xa8>
    7d0e:	8b 32       	cpi	r24, 0x2B	; 43
    7d10:	69 f0       	breq	.+26     	; 0x7d2c <vfprintf+0x9e>
    7d12:	30 f4       	brcc	.+12     	; 0x7d20 <vfprintf+0x92>
    7d14:	80 32       	cpi	r24, 0x20	; 32
    7d16:	59 f0       	breq	.+22     	; 0x7d2e <vfprintf+0xa0>
    7d18:	83 32       	cpi	r24, 0x23	; 35
    7d1a:	69 f4       	brne	.+26     	; 0x7d36 <vfprintf+0xa8>
    7d1c:	20 61       	ori	r18, 0x10	; 16
    7d1e:	2c c0       	rjmp	.+88     	; 0x7d78 <vfprintf+0xea>
    7d20:	8d 32       	cpi	r24, 0x2D	; 45
    7d22:	39 f0       	breq	.+14     	; 0x7d32 <vfprintf+0xa4>
    7d24:	80 33       	cpi	r24, 0x30	; 48
    7d26:	39 f4       	brne	.+14     	; 0x7d36 <vfprintf+0xa8>
    7d28:	21 60       	ori	r18, 0x01	; 1
    7d2a:	26 c0       	rjmp	.+76     	; 0x7d78 <vfprintf+0xea>
    7d2c:	22 60       	ori	r18, 0x02	; 2
    7d2e:	24 60       	ori	r18, 0x04	; 4
    7d30:	23 c0       	rjmp	.+70     	; 0x7d78 <vfprintf+0xea>
    7d32:	28 60       	ori	r18, 0x08	; 8
    7d34:	21 c0       	rjmp	.+66     	; 0x7d78 <vfprintf+0xea>
    7d36:	27 fd       	sbrc	r18, 7
    7d38:	27 c0       	rjmp	.+78     	; 0x7d88 <vfprintf+0xfa>
    7d3a:	30 ed       	ldi	r19, 0xD0	; 208
    7d3c:	38 0f       	add	r19, r24
    7d3e:	3a 30       	cpi	r19, 0x0A	; 10
    7d40:	78 f4       	brcc	.+30     	; 0x7d60 <vfprintf+0xd2>
    7d42:	26 ff       	sbrs	r18, 6
    7d44:	06 c0       	rjmp	.+12     	; 0x7d52 <vfprintf+0xc4>
    7d46:	fa e0       	ldi	r31, 0x0A	; 10
    7d48:	5f 9e       	mul	r5, r31
    7d4a:	30 0d       	add	r19, r0
    7d4c:	11 24       	eor	r1, r1
    7d4e:	53 2e       	mov	r5, r19
    7d50:	13 c0       	rjmp	.+38     	; 0x7d78 <vfprintf+0xea>
    7d52:	8a e0       	ldi	r24, 0x0A	; 10
    7d54:	38 9e       	mul	r3, r24
    7d56:	30 0d       	add	r19, r0
    7d58:	11 24       	eor	r1, r1
    7d5a:	33 2e       	mov	r3, r19
    7d5c:	20 62       	ori	r18, 0x20	; 32
    7d5e:	0c c0       	rjmp	.+24     	; 0x7d78 <vfprintf+0xea>
    7d60:	8e 32       	cpi	r24, 0x2E	; 46
    7d62:	21 f4       	brne	.+8      	; 0x7d6c <vfprintf+0xde>
    7d64:	26 fd       	sbrc	r18, 6
    7d66:	5f c1       	rjmp	.+702    	; 0x8026 <vfprintf+0x398>
    7d68:	20 64       	ori	r18, 0x40	; 64
    7d6a:	06 c0       	rjmp	.+12     	; 0x7d78 <vfprintf+0xea>
    7d6c:	8c 36       	cpi	r24, 0x6C	; 108
    7d6e:	11 f4       	brne	.+4      	; 0x7d74 <vfprintf+0xe6>
    7d70:	20 68       	ori	r18, 0x80	; 128
    7d72:	02 c0       	rjmp	.+4      	; 0x7d78 <vfprintf+0xea>
    7d74:	88 36       	cpi	r24, 0x68	; 104
    7d76:	41 f4       	brne	.+16     	; 0x7d88 <vfprintf+0xfa>
    7d78:	f6 01       	movw	r30, r12
    7d7a:	93 fd       	sbrc	r25, 3
    7d7c:	85 91       	lpm	r24, Z+
    7d7e:	93 ff       	sbrs	r25, 3
    7d80:	81 91       	ld	r24, Z+
    7d82:	6f 01       	movw	r12, r30
    7d84:	81 11       	cpse	r24, r1
    7d86:	c1 cf       	rjmp	.-126    	; 0x7d0a <vfprintf+0x7c>
    7d88:	98 2f       	mov	r25, r24
    7d8a:	9f 7d       	andi	r25, 0xDF	; 223
    7d8c:	95 54       	subi	r25, 0x45	; 69
    7d8e:	93 30       	cpi	r25, 0x03	; 3
    7d90:	28 f4       	brcc	.+10     	; 0x7d9c <vfprintf+0x10e>
    7d92:	0c 5f       	subi	r16, 0xFC	; 252
    7d94:	1f 4f       	sbci	r17, 0xFF	; 255
    7d96:	ff e3       	ldi	r31, 0x3F	; 63
    7d98:	f9 83       	std	Y+1, r31	; 0x01
    7d9a:	0d c0       	rjmp	.+26     	; 0x7db6 <vfprintf+0x128>
    7d9c:	83 36       	cpi	r24, 0x63	; 99
    7d9e:	31 f0       	breq	.+12     	; 0x7dac <vfprintf+0x11e>
    7da0:	83 37       	cpi	r24, 0x73	; 115
    7da2:	71 f0       	breq	.+28     	; 0x7dc0 <vfprintf+0x132>
    7da4:	83 35       	cpi	r24, 0x53	; 83
    7da6:	09 f0       	breq	.+2      	; 0x7daa <vfprintf+0x11c>
    7da8:	57 c0       	rjmp	.+174    	; 0x7e58 <vfprintf+0x1ca>
    7daa:	21 c0       	rjmp	.+66     	; 0x7dee <vfprintf+0x160>
    7dac:	f8 01       	movw	r30, r16
    7dae:	80 81       	ld	r24, Z
    7db0:	89 83       	std	Y+1, r24	; 0x01
    7db2:	0e 5f       	subi	r16, 0xFE	; 254
    7db4:	1f 4f       	sbci	r17, 0xFF	; 255
    7db6:	44 24       	eor	r4, r4
    7db8:	43 94       	inc	r4
    7dba:	51 2c       	mov	r5, r1
    7dbc:	54 01       	movw	r10, r8
    7dbe:	14 c0       	rjmp	.+40     	; 0x7de8 <vfprintf+0x15a>
    7dc0:	38 01       	movw	r6, r16
    7dc2:	f2 e0       	ldi	r31, 0x02	; 2
    7dc4:	6f 0e       	add	r6, r31
    7dc6:	71 1c       	adc	r7, r1
    7dc8:	f8 01       	movw	r30, r16
    7dca:	a0 80       	ld	r10, Z
    7dcc:	b1 80       	ldd	r11, Z+1	; 0x01
    7dce:	26 ff       	sbrs	r18, 6
    7dd0:	03 c0       	rjmp	.+6      	; 0x7dd8 <vfprintf+0x14a>
    7dd2:	65 2d       	mov	r22, r5
    7dd4:	70 e0       	ldi	r23, 0x00	; 0
    7dd6:	02 c0       	rjmp	.+4      	; 0x7ddc <vfprintf+0x14e>
    7dd8:	6f ef       	ldi	r22, 0xFF	; 255
    7dda:	7f ef       	ldi	r23, 0xFF	; 255
    7ddc:	c5 01       	movw	r24, r10
    7dde:	2c 87       	std	Y+12, r18	; 0x0c
    7de0:	49 d1       	rcall	.+658    	; 0x8074 <strnlen>
    7de2:	2c 01       	movw	r4, r24
    7de4:	83 01       	movw	r16, r6
    7de6:	2c 85       	ldd	r18, Y+12	; 0x0c
    7de8:	2f 77       	andi	r18, 0x7F	; 127
    7dea:	22 2e       	mov	r2, r18
    7dec:	16 c0       	rjmp	.+44     	; 0x7e1a <vfprintf+0x18c>
    7dee:	38 01       	movw	r6, r16
    7df0:	f2 e0       	ldi	r31, 0x02	; 2
    7df2:	6f 0e       	add	r6, r31
    7df4:	71 1c       	adc	r7, r1
    7df6:	f8 01       	movw	r30, r16
    7df8:	a0 80       	ld	r10, Z
    7dfa:	b1 80       	ldd	r11, Z+1	; 0x01
    7dfc:	26 ff       	sbrs	r18, 6
    7dfe:	03 c0       	rjmp	.+6      	; 0x7e06 <vfprintf+0x178>
    7e00:	65 2d       	mov	r22, r5
    7e02:	70 e0       	ldi	r23, 0x00	; 0
    7e04:	02 c0       	rjmp	.+4      	; 0x7e0a <vfprintf+0x17c>
    7e06:	6f ef       	ldi	r22, 0xFF	; 255
    7e08:	7f ef       	ldi	r23, 0xFF	; 255
    7e0a:	c5 01       	movw	r24, r10
    7e0c:	2c 87       	std	Y+12, r18	; 0x0c
    7e0e:	27 d1       	rcall	.+590    	; 0x805e <strnlen_P>
    7e10:	2c 01       	movw	r4, r24
    7e12:	2c 85       	ldd	r18, Y+12	; 0x0c
    7e14:	20 68       	ori	r18, 0x80	; 128
    7e16:	22 2e       	mov	r2, r18
    7e18:	83 01       	movw	r16, r6
    7e1a:	23 fc       	sbrc	r2, 3
    7e1c:	19 c0       	rjmp	.+50     	; 0x7e50 <vfprintf+0x1c2>
    7e1e:	83 2d       	mov	r24, r3
    7e20:	90 e0       	ldi	r25, 0x00	; 0
    7e22:	48 16       	cp	r4, r24
    7e24:	59 06       	cpc	r5, r25
    7e26:	a0 f4       	brcc	.+40     	; 0x7e50 <vfprintf+0x1c2>
    7e28:	b7 01       	movw	r22, r14
    7e2a:	80 e2       	ldi	r24, 0x20	; 32
    7e2c:	90 e0       	ldi	r25, 0x00	; 0
    7e2e:	3d d1       	rcall	.+634    	; 0x80aa <fputc>
    7e30:	3a 94       	dec	r3
    7e32:	f5 cf       	rjmp	.-22     	; 0x7e1e <vfprintf+0x190>
    7e34:	f5 01       	movw	r30, r10
    7e36:	27 fc       	sbrc	r2, 7
    7e38:	85 91       	lpm	r24, Z+
    7e3a:	27 fe       	sbrs	r2, 7
    7e3c:	81 91       	ld	r24, Z+
    7e3e:	5f 01       	movw	r10, r30
    7e40:	b7 01       	movw	r22, r14
    7e42:	90 e0       	ldi	r25, 0x00	; 0
    7e44:	32 d1       	rcall	.+612    	; 0x80aa <fputc>
    7e46:	31 10       	cpse	r3, r1
    7e48:	3a 94       	dec	r3
    7e4a:	f1 e0       	ldi	r31, 0x01	; 1
    7e4c:	4f 1a       	sub	r4, r31
    7e4e:	51 08       	sbc	r5, r1
    7e50:	41 14       	cp	r4, r1
    7e52:	51 04       	cpc	r5, r1
    7e54:	79 f7       	brne	.-34     	; 0x7e34 <vfprintf+0x1a6>
    7e56:	de c0       	rjmp	.+444    	; 0x8014 <vfprintf+0x386>
    7e58:	84 36       	cpi	r24, 0x64	; 100
    7e5a:	11 f0       	breq	.+4      	; 0x7e60 <vfprintf+0x1d2>
    7e5c:	89 36       	cpi	r24, 0x69	; 105
    7e5e:	31 f5       	brne	.+76     	; 0x7eac <vfprintf+0x21e>
    7e60:	f8 01       	movw	r30, r16
    7e62:	27 ff       	sbrs	r18, 7
    7e64:	07 c0       	rjmp	.+14     	; 0x7e74 <vfprintf+0x1e6>
    7e66:	60 81       	ld	r22, Z
    7e68:	71 81       	ldd	r23, Z+1	; 0x01
    7e6a:	82 81       	ldd	r24, Z+2	; 0x02
    7e6c:	93 81       	ldd	r25, Z+3	; 0x03
    7e6e:	0c 5f       	subi	r16, 0xFC	; 252
    7e70:	1f 4f       	sbci	r17, 0xFF	; 255
    7e72:	08 c0       	rjmp	.+16     	; 0x7e84 <vfprintf+0x1f6>
    7e74:	60 81       	ld	r22, Z
    7e76:	71 81       	ldd	r23, Z+1	; 0x01
    7e78:	88 27       	eor	r24, r24
    7e7a:	77 fd       	sbrc	r23, 7
    7e7c:	80 95       	com	r24
    7e7e:	98 2f       	mov	r25, r24
    7e80:	0e 5f       	subi	r16, 0xFE	; 254
    7e82:	1f 4f       	sbci	r17, 0xFF	; 255
    7e84:	2f 76       	andi	r18, 0x6F	; 111
    7e86:	b2 2e       	mov	r11, r18
    7e88:	97 ff       	sbrs	r25, 7
    7e8a:	09 c0       	rjmp	.+18     	; 0x7e9e <vfprintf+0x210>
    7e8c:	90 95       	com	r25
    7e8e:	80 95       	com	r24
    7e90:	70 95       	com	r23
    7e92:	61 95       	neg	r22
    7e94:	7f 4f       	sbci	r23, 0xFF	; 255
    7e96:	8f 4f       	sbci	r24, 0xFF	; 255
    7e98:	9f 4f       	sbci	r25, 0xFF	; 255
    7e9a:	20 68       	ori	r18, 0x80	; 128
    7e9c:	b2 2e       	mov	r11, r18
    7e9e:	2a e0       	ldi	r18, 0x0A	; 10
    7ea0:	30 e0       	ldi	r19, 0x00	; 0
    7ea2:	a4 01       	movw	r20, r8
    7ea4:	34 d1       	rcall	.+616    	; 0x810e <__ultoa_invert>
    7ea6:	a8 2e       	mov	r10, r24
    7ea8:	a8 18       	sub	r10, r8
    7eaa:	43 c0       	rjmp	.+134    	; 0x7f32 <vfprintf+0x2a4>
    7eac:	85 37       	cpi	r24, 0x75	; 117
    7eae:	29 f4       	brne	.+10     	; 0x7eba <vfprintf+0x22c>
    7eb0:	2f 7e       	andi	r18, 0xEF	; 239
    7eb2:	b2 2e       	mov	r11, r18
    7eb4:	2a e0       	ldi	r18, 0x0A	; 10
    7eb6:	30 e0       	ldi	r19, 0x00	; 0
    7eb8:	25 c0       	rjmp	.+74     	; 0x7f04 <vfprintf+0x276>
    7eba:	f2 2f       	mov	r31, r18
    7ebc:	f9 7f       	andi	r31, 0xF9	; 249
    7ebe:	bf 2e       	mov	r11, r31
    7ec0:	8f 36       	cpi	r24, 0x6F	; 111
    7ec2:	c1 f0       	breq	.+48     	; 0x7ef4 <vfprintf+0x266>
    7ec4:	18 f4       	brcc	.+6      	; 0x7ecc <vfprintf+0x23e>
    7ec6:	88 35       	cpi	r24, 0x58	; 88
    7ec8:	79 f0       	breq	.+30     	; 0x7ee8 <vfprintf+0x25a>
    7eca:	ad c0       	rjmp	.+346    	; 0x8026 <vfprintf+0x398>
    7ecc:	80 37       	cpi	r24, 0x70	; 112
    7ece:	19 f0       	breq	.+6      	; 0x7ed6 <vfprintf+0x248>
    7ed0:	88 37       	cpi	r24, 0x78	; 120
    7ed2:	21 f0       	breq	.+8      	; 0x7edc <vfprintf+0x24e>
    7ed4:	a8 c0       	rjmp	.+336    	; 0x8026 <vfprintf+0x398>
    7ed6:	2f 2f       	mov	r18, r31
    7ed8:	20 61       	ori	r18, 0x10	; 16
    7eda:	b2 2e       	mov	r11, r18
    7edc:	b4 fe       	sbrs	r11, 4
    7ede:	0d c0       	rjmp	.+26     	; 0x7efa <vfprintf+0x26c>
    7ee0:	8b 2d       	mov	r24, r11
    7ee2:	84 60       	ori	r24, 0x04	; 4
    7ee4:	b8 2e       	mov	r11, r24
    7ee6:	09 c0       	rjmp	.+18     	; 0x7efa <vfprintf+0x26c>
    7ee8:	24 ff       	sbrs	r18, 4
    7eea:	0a c0       	rjmp	.+20     	; 0x7f00 <vfprintf+0x272>
    7eec:	9f 2f       	mov	r25, r31
    7eee:	96 60       	ori	r25, 0x06	; 6
    7ef0:	b9 2e       	mov	r11, r25
    7ef2:	06 c0       	rjmp	.+12     	; 0x7f00 <vfprintf+0x272>
    7ef4:	28 e0       	ldi	r18, 0x08	; 8
    7ef6:	30 e0       	ldi	r19, 0x00	; 0
    7ef8:	05 c0       	rjmp	.+10     	; 0x7f04 <vfprintf+0x276>
    7efa:	20 e1       	ldi	r18, 0x10	; 16
    7efc:	30 e0       	ldi	r19, 0x00	; 0
    7efe:	02 c0       	rjmp	.+4      	; 0x7f04 <vfprintf+0x276>
    7f00:	20 e1       	ldi	r18, 0x10	; 16
    7f02:	32 e0       	ldi	r19, 0x02	; 2
    7f04:	f8 01       	movw	r30, r16
    7f06:	b7 fe       	sbrs	r11, 7
    7f08:	07 c0       	rjmp	.+14     	; 0x7f18 <vfprintf+0x28a>
    7f0a:	60 81       	ld	r22, Z
    7f0c:	71 81       	ldd	r23, Z+1	; 0x01
    7f0e:	82 81       	ldd	r24, Z+2	; 0x02
    7f10:	93 81       	ldd	r25, Z+3	; 0x03
    7f12:	0c 5f       	subi	r16, 0xFC	; 252
    7f14:	1f 4f       	sbci	r17, 0xFF	; 255
    7f16:	06 c0       	rjmp	.+12     	; 0x7f24 <vfprintf+0x296>
    7f18:	60 81       	ld	r22, Z
    7f1a:	71 81       	ldd	r23, Z+1	; 0x01
    7f1c:	80 e0       	ldi	r24, 0x00	; 0
    7f1e:	90 e0       	ldi	r25, 0x00	; 0
    7f20:	0e 5f       	subi	r16, 0xFE	; 254
    7f22:	1f 4f       	sbci	r17, 0xFF	; 255
    7f24:	a4 01       	movw	r20, r8
    7f26:	f3 d0       	rcall	.+486    	; 0x810e <__ultoa_invert>
    7f28:	a8 2e       	mov	r10, r24
    7f2a:	a8 18       	sub	r10, r8
    7f2c:	fb 2d       	mov	r31, r11
    7f2e:	ff 77       	andi	r31, 0x7F	; 127
    7f30:	bf 2e       	mov	r11, r31
    7f32:	b6 fe       	sbrs	r11, 6
    7f34:	0b c0       	rjmp	.+22     	; 0x7f4c <vfprintf+0x2be>
    7f36:	2b 2d       	mov	r18, r11
    7f38:	2e 7f       	andi	r18, 0xFE	; 254
    7f3a:	a5 14       	cp	r10, r5
    7f3c:	50 f4       	brcc	.+20     	; 0x7f52 <vfprintf+0x2c4>
    7f3e:	b4 fe       	sbrs	r11, 4
    7f40:	0a c0       	rjmp	.+20     	; 0x7f56 <vfprintf+0x2c8>
    7f42:	b2 fc       	sbrc	r11, 2
    7f44:	08 c0       	rjmp	.+16     	; 0x7f56 <vfprintf+0x2c8>
    7f46:	2b 2d       	mov	r18, r11
    7f48:	2e 7e       	andi	r18, 0xEE	; 238
    7f4a:	05 c0       	rjmp	.+10     	; 0x7f56 <vfprintf+0x2c8>
    7f4c:	7a 2c       	mov	r7, r10
    7f4e:	2b 2d       	mov	r18, r11
    7f50:	03 c0       	rjmp	.+6      	; 0x7f58 <vfprintf+0x2ca>
    7f52:	7a 2c       	mov	r7, r10
    7f54:	01 c0       	rjmp	.+2      	; 0x7f58 <vfprintf+0x2ca>
    7f56:	75 2c       	mov	r7, r5
    7f58:	24 ff       	sbrs	r18, 4
    7f5a:	0d c0       	rjmp	.+26     	; 0x7f76 <vfprintf+0x2e8>
    7f5c:	fe 01       	movw	r30, r28
    7f5e:	ea 0d       	add	r30, r10
    7f60:	f1 1d       	adc	r31, r1
    7f62:	80 81       	ld	r24, Z
    7f64:	80 33       	cpi	r24, 0x30	; 48
    7f66:	11 f4       	brne	.+4      	; 0x7f6c <vfprintf+0x2de>
    7f68:	29 7e       	andi	r18, 0xE9	; 233
    7f6a:	09 c0       	rjmp	.+18     	; 0x7f7e <vfprintf+0x2f0>
    7f6c:	22 ff       	sbrs	r18, 2
    7f6e:	06 c0       	rjmp	.+12     	; 0x7f7c <vfprintf+0x2ee>
    7f70:	73 94       	inc	r7
    7f72:	73 94       	inc	r7
    7f74:	04 c0       	rjmp	.+8      	; 0x7f7e <vfprintf+0x2f0>
    7f76:	82 2f       	mov	r24, r18
    7f78:	86 78       	andi	r24, 0x86	; 134
    7f7a:	09 f0       	breq	.+2      	; 0x7f7e <vfprintf+0x2f0>
    7f7c:	73 94       	inc	r7
    7f7e:	23 fd       	sbrc	r18, 3
    7f80:	12 c0       	rjmp	.+36     	; 0x7fa6 <vfprintf+0x318>
    7f82:	20 ff       	sbrs	r18, 0
    7f84:	06 c0       	rjmp	.+12     	; 0x7f92 <vfprintf+0x304>
    7f86:	5a 2c       	mov	r5, r10
    7f88:	73 14       	cp	r7, r3
    7f8a:	18 f4       	brcc	.+6      	; 0x7f92 <vfprintf+0x304>
    7f8c:	53 0c       	add	r5, r3
    7f8e:	57 18       	sub	r5, r7
    7f90:	73 2c       	mov	r7, r3
    7f92:	73 14       	cp	r7, r3
    7f94:	60 f4       	brcc	.+24     	; 0x7fae <vfprintf+0x320>
    7f96:	b7 01       	movw	r22, r14
    7f98:	80 e2       	ldi	r24, 0x20	; 32
    7f9a:	90 e0       	ldi	r25, 0x00	; 0
    7f9c:	2c 87       	std	Y+12, r18	; 0x0c
    7f9e:	85 d0       	rcall	.+266    	; 0x80aa <fputc>
    7fa0:	73 94       	inc	r7
    7fa2:	2c 85       	ldd	r18, Y+12	; 0x0c
    7fa4:	f6 cf       	rjmp	.-20     	; 0x7f92 <vfprintf+0x304>
    7fa6:	73 14       	cp	r7, r3
    7fa8:	10 f4       	brcc	.+4      	; 0x7fae <vfprintf+0x320>
    7faa:	37 18       	sub	r3, r7
    7fac:	01 c0       	rjmp	.+2      	; 0x7fb0 <vfprintf+0x322>
    7fae:	31 2c       	mov	r3, r1
    7fb0:	24 ff       	sbrs	r18, 4
    7fb2:	11 c0       	rjmp	.+34     	; 0x7fd6 <vfprintf+0x348>
    7fb4:	b7 01       	movw	r22, r14
    7fb6:	80 e3       	ldi	r24, 0x30	; 48
    7fb8:	90 e0       	ldi	r25, 0x00	; 0
    7fba:	2c 87       	std	Y+12, r18	; 0x0c
    7fbc:	76 d0       	rcall	.+236    	; 0x80aa <fputc>
    7fbe:	2c 85       	ldd	r18, Y+12	; 0x0c
    7fc0:	22 ff       	sbrs	r18, 2
    7fc2:	16 c0       	rjmp	.+44     	; 0x7ff0 <vfprintf+0x362>
    7fc4:	21 ff       	sbrs	r18, 1
    7fc6:	03 c0       	rjmp	.+6      	; 0x7fce <vfprintf+0x340>
    7fc8:	88 e5       	ldi	r24, 0x58	; 88
    7fca:	90 e0       	ldi	r25, 0x00	; 0
    7fcc:	02 c0       	rjmp	.+4      	; 0x7fd2 <vfprintf+0x344>
    7fce:	88 e7       	ldi	r24, 0x78	; 120
    7fd0:	90 e0       	ldi	r25, 0x00	; 0
    7fd2:	b7 01       	movw	r22, r14
    7fd4:	0c c0       	rjmp	.+24     	; 0x7fee <vfprintf+0x360>
    7fd6:	82 2f       	mov	r24, r18
    7fd8:	86 78       	andi	r24, 0x86	; 134
    7fda:	51 f0       	breq	.+20     	; 0x7ff0 <vfprintf+0x362>
    7fdc:	21 fd       	sbrc	r18, 1
    7fde:	02 c0       	rjmp	.+4      	; 0x7fe4 <vfprintf+0x356>
    7fe0:	80 e2       	ldi	r24, 0x20	; 32
    7fe2:	01 c0       	rjmp	.+2      	; 0x7fe6 <vfprintf+0x358>
    7fe4:	8b e2       	ldi	r24, 0x2B	; 43
    7fe6:	27 fd       	sbrc	r18, 7
    7fe8:	8d e2       	ldi	r24, 0x2D	; 45
    7fea:	b7 01       	movw	r22, r14
    7fec:	90 e0       	ldi	r25, 0x00	; 0
    7fee:	5d d0       	rcall	.+186    	; 0x80aa <fputc>
    7ff0:	a5 14       	cp	r10, r5
    7ff2:	30 f4       	brcc	.+12     	; 0x8000 <vfprintf+0x372>
    7ff4:	b7 01       	movw	r22, r14
    7ff6:	80 e3       	ldi	r24, 0x30	; 48
    7ff8:	90 e0       	ldi	r25, 0x00	; 0
    7ffa:	57 d0       	rcall	.+174    	; 0x80aa <fputc>
    7ffc:	5a 94       	dec	r5
    7ffe:	f8 cf       	rjmp	.-16     	; 0x7ff0 <vfprintf+0x362>
    8000:	aa 94       	dec	r10
    8002:	f4 01       	movw	r30, r8
    8004:	ea 0d       	add	r30, r10
    8006:	f1 1d       	adc	r31, r1
    8008:	80 81       	ld	r24, Z
    800a:	b7 01       	movw	r22, r14
    800c:	90 e0       	ldi	r25, 0x00	; 0
    800e:	4d d0       	rcall	.+154    	; 0x80aa <fputc>
    8010:	a1 10       	cpse	r10, r1
    8012:	f6 cf       	rjmp	.-20     	; 0x8000 <vfprintf+0x372>
    8014:	33 20       	and	r3, r3
    8016:	09 f4       	brne	.+2      	; 0x801a <vfprintf+0x38c>
    8018:	5d ce       	rjmp	.-838    	; 0x7cd4 <vfprintf+0x46>
    801a:	b7 01       	movw	r22, r14
    801c:	80 e2       	ldi	r24, 0x20	; 32
    801e:	90 e0       	ldi	r25, 0x00	; 0
    8020:	44 d0       	rcall	.+136    	; 0x80aa <fputc>
    8022:	3a 94       	dec	r3
    8024:	f7 cf       	rjmp	.-18     	; 0x8014 <vfprintf+0x386>
    8026:	f7 01       	movw	r30, r14
    8028:	86 81       	ldd	r24, Z+6	; 0x06
    802a:	97 81       	ldd	r25, Z+7	; 0x07
    802c:	02 c0       	rjmp	.+4      	; 0x8032 <vfprintf+0x3a4>
    802e:	8f ef       	ldi	r24, 0xFF	; 255
    8030:	9f ef       	ldi	r25, 0xFF	; 255
    8032:	2c 96       	adiw	r28, 0x0c	; 12
    8034:	cd bf       	out	0x3d, r28	; 61
    8036:	de bf       	out	0x3e, r29	; 62
    8038:	df 91       	pop	r29
    803a:	cf 91       	pop	r28
    803c:	1f 91       	pop	r17
    803e:	0f 91       	pop	r16
    8040:	ff 90       	pop	r15
    8042:	ef 90       	pop	r14
    8044:	df 90       	pop	r13
    8046:	cf 90       	pop	r12
    8048:	bf 90       	pop	r11
    804a:	af 90       	pop	r10
    804c:	9f 90       	pop	r9
    804e:	8f 90       	pop	r8
    8050:	7f 90       	pop	r7
    8052:	6f 90       	pop	r6
    8054:	5f 90       	pop	r5
    8056:	4f 90       	pop	r4
    8058:	3f 90       	pop	r3
    805a:	2f 90       	pop	r2
    805c:	08 95       	ret

0000805e <strnlen_P>:
    805e:	fc 01       	movw	r30, r24
    8060:	05 90       	lpm	r0, Z+
    8062:	61 50       	subi	r22, 0x01	; 1
    8064:	70 40       	sbci	r23, 0x00	; 0
    8066:	01 10       	cpse	r0, r1
    8068:	d8 f7       	brcc	.-10     	; 0x8060 <strnlen_P+0x2>
    806a:	80 95       	com	r24
    806c:	90 95       	com	r25
    806e:	8e 0f       	add	r24, r30
    8070:	9f 1f       	adc	r25, r31
    8072:	08 95       	ret

00008074 <strnlen>:
    8074:	fc 01       	movw	r30, r24
    8076:	61 50       	subi	r22, 0x01	; 1
    8078:	70 40       	sbci	r23, 0x00	; 0
    807a:	01 90       	ld	r0, Z+
    807c:	01 10       	cpse	r0, r1
    807e:	d8 f7       	brcc	.-10     	; 0x8076 <strnlen+0x2>
    8080:	80 95       	com	r24
    8082:	90 95       	com	r25
    8084:	8e 0f       	add	r24, r30
    8086:	9f 1f       	adc	r25, r31
    8088:	08 95       	ret

0000808a <strrev>:
    808a:	dc 01       	movw	r26, r24
    808c:	fc 01       	movw	r30, r24
    808e:	67 2f       	mov	r22, r23
    8090:	71 91       	ld	r23, Z+
    8092:	77 23       	and	r23, r23
    8094:	e1 f7       	brne	.-8      	; 0x808e <strrev+0x4>
    8096:	32 97       	sbiw	r30, 0x02	; 2
    8098:	04 c0       	rjmp	.+8      	; 0x80a2 <strrev+0x18>
    809a:	7c 91       	ld	r23, X
    809c:	6d 93       	st	X+, r22
    809e:	70 83       	st	Z, r23
    80a0:	62 91       	ld	r22, -Z
    80a2:	ae 17       	cp	r26, r30
    80a4:	bf 07       	cpc	r27, r31
    80a6:	c8 f3       	brcs	.-14     	; 0x809a <strrev+0x10>
    80a8:	08 95       	ret

000080aa <fputc>:
    80aa:	0f 93       	push	r16
    80ac:	1f 93       	push	r17
    80ae:	cf 93       	push	r28
    80b0:	df 93       	push	r29
    80b2:	18 2f       	mov	r17, r24
    80b4:	09 2f       	mov	r16, r25
    80b6:	eb 01       	movw	r28, r22
    80b8:	8b 81       	ldd	r24, Y+3	; 0x03
    80ba:	81 fd       	sbrc	r24, 1
    80bc:	03 c0       	rjmp	.+6      	; 0x80c4 <fputc+0x1a>
    80be:	8f ef       	ldi	r24, 0xFF	; 255
    80c0:	9f ef       	ldi	r25, 0xFF	; 255
    80c2:	20 c0       	rjmp	.+64     	; 0x8104 <fputc+0x5a>
    80c4:	82 ff       	sbrs	r24, 2
    80c6:	10 c0       	rjmp	.+32     	; 0x80e8 <fputc+0x3e>
    80c8:	4e 81       	ldd	r20, Y+6	; 0x06
    80ca:	5f 81       	ldd	r21, Y+7	; 0x07
    80cc:	2c 81       	ldd	r18, Y+4	; 0x04
    80ce:	3d 81       	ldd	r19, Y+5	; 0x05
    80d0:	42 17       	cp	r20, r18
    80d2:	53 07       	cpc	r21, r19
    80d4:	7c f4       	brge	.+30     	; 0x80f4 <fputc+0x4a>
    80d6:	e8 81       	ld	r30, Y
    80d8:	f9 81       	ldd	r31, Y+1	; 0x01
    80da:	9f 01       	movw	r18, r30
    80dc:	2f 5f       	subi	r18, 0xFF	; 255
    80de:	3f 4f       	sbci	r19, 0xFF	; 255
    80e0:	28 83       	st	Y, r18
    80e2:	39 83       	std	Y+1, r19	; 0x01
    80e4:	10 83       	st	Z, r17
    80e6:	06 c0       	rjmp	.+12     	; 0x80f4 <fputc+0x4a>
    80e8:	e8 85       	ldd	r30, Y+8	; 0x08
    80ea:	f9 85       	ldd	r31, Y+9	; 0x09
    80ec:	81 2f       	mov	r24, r17
    80ee:	19 95       	eicall
    80f0:	89 2b       	or	r24, r25
    80f2:	29 f7       	brne	.-54     	; 0x80be <fputc+0x14>
    80f4:	2e 81       	ldd	r18, Y+6	; 0x06
    80f6:	3f 81       	ldd	r19, Y+7	; 0x07
    80f8:	2f 5f       	subi	r18, 0xFF	; 255
    80fa:	3f 4f       	sbci	r19, 0xFF	; 255
    80fc:	2e 83       	std	Y+6, r18	; 0x06
    80fe:	3f 83       	std	Y+7, r19	; 0x07
    8100:	81 2f       	mov	r24, r17
    8102:	90 2f       	mov	r25, r16
    8104:	df 91       	pop	r29
    8106:	cf 91       	pop	r28
    8108:	1f 91       	pop	r17
    810a:	0f 91       	pop	r16
    810c:	08 95       	ret

0000810e <__ultoa_invert>:
    810e:	fa 01       	movw	r30, r20
    8110:	aa 27       	eor	r26, r26
    8112:	28 30       	cpi	r18, 0x08	; 8
    8114:	51 f1       	breq	.+84     	; 0x816a <__ultoa_invert+0x5c>
    8116:	20 31       	cpi	r18, 0x10	; 16
    8118:	81 f1       	breq	.+96     	; 0x817a <__ultoa_invert+0x6c>
    811a:	e8 94       	clt
    811c:	6f 93       	push	r22
    811e:	6e 7f       	andi	r22, 0xFE	; 254
    8120:	6e 5f       	subi	r22, 0xFE	; 254
    8122:	7f 4f       	sbci	r23, 0xFF	; 255
    8124:	8f 4f       	sbci	r24, 0xFF	; 255
    8126:	9f 4f       	sbci	r25, 0xFF	; 255
    8128:	af 4f       	sbci	r26, 0xFF	; 255
    812a:	b1 e0       	ldi	r27, 0x01	; 1
    812c:	3e d0       	rcall	.+124    	; 0x81aa <__ultoa_invert+0x9c>
    812e:	b4 e0       	ldi	r27, 0x04	; 4
    8130:	3c d0       	rcall	.+120    	; 0x81aa <__ultoa_invert+0x9c>
    8132:	67 0f       	add	r22, r23
    8134:	78 1f       	adc	r23, r24
    8136:	89 1f       	adc	r24, r25
    8138:	9a 1f       	adc	r25, r26
    813a:	a1 1d       	adc	r26, r1
    813c:	68 0f       	add	r22, r24
    813e:	79 1f       	adc	r23, r25
    8140:	8a 1f       	adc	r24, r26
    8142:	91 1d       	adc	r25, r1
    8144:	a1 1d       	adc	r26, r1
    8146:	6a 0f       	add	r22, r26
    8148:	71 1d       	adc	r23, r1
    814a:	81 1d       	adc	r24, r1
    814c:	91 1d       	adc	r25, r1
    814e:	a1 1d       	adc	r26, r1
    8150:	20 d0       	rcall	.+64     	; 0x8192 <__ultoa_invert+0x84>
    8152:	09 f4       	brne	.+2      	; 0x8156 <__ultoa_invert+0x48>
    8154:	68 94       	set
    8156:	3f 91       	pop	r19
    8158:	2a e0       	ldi	r18, 0x0A	; 10
    815a:	26 9f       	mul	r18, r22
    815c:	11 24       	eor	r1, r1
    815e:	30 19       	sub	r19, r0
    8160:	30 5d       	subi	r19, 0xD0	; 208
    8162:	31 93       	st	Z+, r19
    8164:	de f6       	brtc	.-74     	; 0x811c <__ultoa_invert+0xe>
    8166:	cf 01       	movw	r24, r30
    8168:	08 95       	ret
    816a:	46 2f       	mov	r20, r22
    816c:	47 70       	andi	r20, 0x07	; 7
    816e:	40 5d       	subi	r20, 0xD0	; 208
    8170:	41 93       	st	Z+, r20
    8172:	b3 e0       	ldi	r27, 0x03	; 3
    8174:	0f d0       	rcall	.+30     	; 0x8194 <__ultoa_invert+0x86>
    8176:	c9 f7       	brne	.-14     	; 0x816a <__ultoa_invert+0x5c>
    8178:	f6 cf       	rjmp	.-20     	; 0x8166 <__ultoa_invert+0x58>
    817a:	46 2f       	mov	r20, r22
    817c:	4f 70       	andi	r20, 0x0F	; 15
    817e:	40 5d       	subi	r20, 0xD0	; 208
    8180:	4a 33       	cpi	r20, 0x3A	; 58
    8182:	18 f0       	brcs	.+6      	; 0x818a <__ultoa_invert+0x7c>
    8184:	49 5d       	subi	r20, 0xD9	; 217
    8186:	31 fd       	sbrc	r19, 1
    8188:	40 52       	subi	r20, 0x20	; 32
    818a:	41 93       	st	Z+, r20
    818c:	02 d0       	rcall	.+4      	; 0x8192 <__ultoa_invert+0x84>
    818e:	a9 f7       	brne	.-22     	; 0x817a <__ultoa_invert+0x6c>
    8190:	ea cf       	rjmp	.-44     	; 0x8166 <__ultoa_invert+0x58>
    8192:	b4 e0       	ldi	r27, 0x04	; 4
    8194:	a6 95       	lsr	r26
    8196:	97 95       	ror	r25
    8198:	87 95       	ror	r24
    819a:	77 95       	ror	r23
    819c:	67 95       	ror	r22
    819e:	ba 95       	dec	r27
    81a0:	c9 f7       	brne	.-14     	; 0x8194 <__ultoa_invert+0x86>
    81a2:	00 97       	sbiw	r24, 0x00	; 0
    81a4:	61 05       	cpc	r22, r1
    81a6:	71 05       	cpc	r23, r1
    81a8:	08 95       	ret
    81aa:	9b 01       	movw	r18, r22
    81ac:	ac 01       	movw	r20, r24
    81ae:	0a 2e       	mov	r0, r26
    81b0:	06 94       	lsr	r0
    81b2:	57 95       	ror	r21
    81b4:	47 95       	ror	r20
    81b6:	37 95       	ror	r19
    81b8:	27 95       	ror	r18
    81ba:	ba 95       	dec	r27
    81bc:	c9 f7       	brne	.-14     	; 0x81b0 <__ultoa_invert+0xa2>
    81be:	62 0f       	add	r22, r18
    81c0:	73 1f       	adc	r23, r19
    81c2:	84 1f       	adc	r24, r20
    81c4:	95 1f       	adc	r25, r21
    81c6:	a0 1d       	adc	r26, r0
    81c8:	08 95       	ret

000081ca <_exit>:
    81ca:	f8 94       	cli

000081cc <__stop_program>:
    81cc:	ff cf       	rjmp	.-2      	; 0x81cc <__stop_program>
