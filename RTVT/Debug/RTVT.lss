
RTVT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002674  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000a2  00802000  00002674  00002708  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000f  008020a2  008020a2  000027aa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000027aa  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000638  00000000  00000000  00002806  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000d4b9  00000000  00000000  00002e3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000020b3  00000000  00000000  000102f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00005628  00000000  00000000  000123aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00001e24  00000000  00000000  000179d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0001d037  00000000  00000000  000197f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000aac6  00000000  00000000  0003682f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000698  00000000  00000000  000412f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  00007673  00000000  00000000  0004198d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	83 c3       	rjmp	.+1798   	; 0x708 <__ctors_end>
       2:	00 00       	nop
       4:	b2 c3       	rjmp	.+1892   	; 0x76a <__bad_interrupt>
       6:	00 00       	nop
       8:	b0 c3       	rjmp	.+1888   	; 0x76a <__bad_interrupt>
       a:	00 00       	nop
       c:	ae c3       	rjmp	.+1884   	; 0x76a <__bad_interrupt>
       e:	00 00       	nop
      10:	ac c3       	rjmp	.+1880   	; 0x76a <__bad_interrupt>
      12:	00 00       	nop
      14:	aa c3       	rjmp	.+1876   	; 0x76a <__bad_interrupt>
      16:	00 00       	nop
      18:	a8 c3       	rjmp	.+1872   	; 0x76a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	a6 c3       	rjmp	.+1868   	; 0x76a <__bad_interrupt>
      1e:	00 00       	nop
      20:	a4 c3       	rjmp	.+1864   	; 0x76a <__bad_interrupt>
      22:	00 00       	nop
      24:	a2 c3       	rjmp	.+1860   	; 0x76a <__bad_interrupt>
      26:	00 00       	nop
      28:	a0 c3       	rjmp	.+1856   	; 0x76a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	9e c3       	rjmp	.+1852   	; 0x76a <__bad_interrupt>
      2e:	00 00       	nop
      30:	9c c3       	rjmp	.+1848   	; 0x76a <__bad_interrupt>
      32:	00 00       	nop
      34:	9a c3       	rjmp	.+1844   	; 0x76a <__bad_interrupt>
      36:	00 00       	nop
      38:	98 c3       	rjmp	.+1840   	; 0x76a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	96 c3       	rjmp	.+1836   	; 0x76a <__bad_interrupt>
      3e:	00 00       	nop
      40:	94 c3       	rjmp	.+1832   	; 0x76a <__bad_interrupt>
      42:	00 00       	nop
      44:	92 c3       	rjmp	.+1828   	; 0x76a <__bad_interrupt>
      46:	00 00       	nop
      48:	90 c3       	rjmp	.+1824   	; 0x76a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	8e c3       	rjmp	.+1820   	; 0x76a <__bad_interrupt>
      4e:	00 00       	nop
      50:	8c c3       	rjmp	.+1816   	; 0x76a <__bad_interrupt>
      52:	00 00       	nop
      54:	8a c3       	rjmp	.+1812   	; 0x76a <__bad_interrupt>
      56:	00 00       	nop
      58:	88 c3       	rjmp	.+1808   	; 0x76a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	86 c3       	rjmp	.+1804   	; 0x76a <__bad_interrupt>
      5e:	00 00       	nop
      60:	84 c3       	rjmp	.+1800   	; 0x76a <__bad_interrupt>
      62:	00 00       	nop
      64:	82 c3       	rjmp	.+1796   	; 0x76a <__bad_interrupt>
      66:	00 00       	nop
      68:	80 c3       	rjmp	.+1792   	; 0x76a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	7e c3       	rjmp	.+1788   	; 0x76a <__bad_interrupt>
      6e:	00 00       	nop
      70:	7c c3       	rjmp	.+1784   	; 0x76a <__bad_interrupt>
      72:	00 00       	nop
      74:	7a c3       	rjmp	.+1780   	; 0x76a <__bad_interrupt>
      76:	00 00       	nop
      78:	78 c3       	rjmp	.+1776   	; 0x76a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	76 c3       	rjmp	.+1772   	; 0x76a <__bad_interrupt>
      7e:	00 00       	nop
      80:	74 c3       	rjmp	.+1768   	; 0x76a <__bad_interrupt>
      82:	00 00       	nop
      84:	72 c3       	rjmp	.+1764   	; 0x76a <__bad_interrupt>
      86:	00 00       	nop
      88:	70 c3       	rjmp	.+1760   	; 0x76a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	6e c3       	rjmp	.+1756   	; 0x76a <__bad_interrupt>
      8e:	00 00       	nop
      90:	6c c3       	rjmp	.+1752   	; 0x76a <__bad_interrupt>
      92:	00 00       	nop
      94:	6a c3       	rjmp	.+1748   	; 0x76a <__bad_interrupt>
      96:	00 00       	nop
      98:	68 c3       	rjmp	.+1744   	; 0x76a <__bad_interrupt>
      9a:	00 00       	nop
      9c:	66 c3       	rjmp	.+1740   	; 0x76a <__bad_interrupt>
      9e:	00 00       	nop
      a0:	64 c3       	rjmp	.+1736   	; 0x76a <__bad_interrupt>
      a2:	00 00       	nop
      a4:	62 c3       	rjmp	.+1732   	; 0x76a <__bad_interrupt>
      a6:	00 00       	nop
      a8:	60 c3       	rjmp	.+1728   	; 0x76a <__bad_interrupt>
      aa:	00 00       	nop
      ac:	5e c3       	rjmp	.+1724   	; 0x76a <__bad_interrupt>
      ae:	00 00       	nop
      b0:	5c c3       	rjmp	.+1720   	; 0x76a <__bad_interrupt>
      b2:	00 00       	nop
      b4:	5a c3       	rjmp	.+1716   	; 0x76a <__bad_interrupt>
      b6:	00 00       	nop
      b8:	58 c3       	rjmp	.+1712   	; 0x76a <__bad_interrupt>
      ba:	00 00       	nop
      bc:	56 c3       	rjmp	.+1708   	; 0x76a <__bad_interrupt>
      be:	00 00       	nop
      c0:	54 c3       	rjmp	.+1704   	; 0x76a <__bad_interrupt>
      c2:	00 00       	nop
      c4:	52 c3       	rjmp	.+1700   	; 0x76a <__bad_interrupt>
      c6:	00 00       	nop
      c8:	50 c3       	rjmp	.+1696   	; 0x76a <__bad_interrupt>
      ca:	00 00       	nop
      cc:	4e c3       	rjmp	.+1692   	; 0x76a <__bad_interrupt>
      ce:	00 00       	nop
      d0:	4c c3       	rjmp	.+1688   	; 0x76a <__bad_interrupt>
      d2:	00 00       	nop
      d4:	4a c3       	rjmp	.+1684   	; 0x76a <__bad_interrupt>
      d6:	00 00       	nop
      d8:	48 c3       	rjmp	.+1680   	; 0x76a <__bad_interrupt>
      da:	00 00       	nop
      dc:	46 c3       	rjmp	.+1676   	; 0x76a <__bad_interrupt>
      de:	00 00       	nop
      e0:	44 c3       	rjmp	.+1672   	; 0x76a <__bad_interrupt>
      e2:	00 00       	nop
      e4:	0c 94 be 0c 	jmp	0x197c	; 0x197c <__vector_57>
      e8:	40 c3       	rjmp	.+1664   	; 0x76a <__bad_interrupt>
      ea:	00 00       	nop
      ec:	3e c3       	rjmp	.+1660   	; 0x76a <__bad_interrupt>
      ee:	00 00       	nop
      f0:	3c c3       	rjmp	.+1656   	; 0x76a <__bad_interrupt>
      f2:	00 00       	nop
      f4:	3a c3       	rjmp	.+1652   	; 0x76a <__bad_interrupt>
      f6:	00 00       	nop
      f8:	38 c3       	rjmp	.+1648   	; 0x76a <__bad_interrupt>
      fa:	00 00       	nop
      fc:	36 c3       	rjmp	.+1644   	; 0x76a <__bad_interrupt>
      fe:	00 00       	nop
     100:	34 c3       	rjmp	.+1640   	; 0x76a <__bad_interrupt>
     102:	00 00       	nop
     104:	32 c3       	rjmp	.+1636   	; 0x76a <__bad_interrupt>
     106:	00 00       	nop
     108:	30 c3       	rjmp	.+1632   	; 0x76a <__bad_interrupt>
     10a:	00 00       	nop
     10c:	2e c3       	rjmp	.+1628   	; 0x76a <__bad_interrupt>
     10e:	00 00       	nop
     110:	2c c3       	rjmp	.+1624   	; 0x76a <__bad_interrupt>
     112:	00 00       	nop
     114:	2a c3       	rjmp	.+1620   	; 0x76a <__bad_interrupt>
     116:	00 00       	nop
     118:	28 c3       	rjmp	.+1616   	; 0x76a <__bad_interrupt>
     11a:	00 00       	nop
     11c:	26 c3       	rjmp	.+1612   	; 0x76a <__bad_interrupt>
     11e:	00 00       	nop
     120:	24 c3       	rjmp	.+1608   	; 0x76a <__bad_interrupt>
     122:	00 00       	nop
     124:	22 c3       	rjmp	.+1604   	; 0x76a <__bad_interrupt>
     126:	00 00       	nop
     128:	20 c3       	rjmp	.+1600   	; 0x76a <__bad_interrupt>
     12a:	00 00       	nop
     12c:	1e c3       	rjmp	.+1596   	; 0x76a <__bad_interrupt>
     12e:	00 00       	nop
     130:	1c c3       	rjmp	.+1592   	; 0x76a <__bad_interrupt>
     132:	00 00       	nop
     134:	1a c3       	rjmp	.+1588   	; 0x76a <__bad_interrupt>
     136:	00 00       	nop
     138:	18 c3       	rjmp	.+1584   	; 0x76a <__bad_interrupt>
     13a:	00 00       	nop
     13c:	16 c3       	rjmp	.+1580   	; 0x76a <__bad_interrupt>
     13e:	00 00       	nop
     140:	14 c3       	rjmp	.+1576   	; 0x76a <__bad_interrupt>
     142:	00 00       	nop
     144:	12 c3       	rjmp	.+1572   	; 0x76a <__bad_interrupt>
     146:	00 00       	nop
     148:	10 c3       	rjmp	.+1568   	; 0x76a <__bad_interrupt>
     14a:	00 00       	nop
     14c:	0e c3       	rjmp	.+1564   	; 0x76a <__bad_interrupt>
     14e:	00 00       	nop
     150:	0c c3       	rjmp	.+1560   	; 0x76a <__bad_interrupt>
     152:	00 00       	nop
     154:	0a c3       	rjmp	.+1556   	; 0x76a <__bad_interrupt>
     156:	00 00       	nop
     158:	08 c3       	rjmp	.+1552   	; 0x76a <__bad_interrupt>
     15a:	00 00       	nop
     15c:	06 c3       	rjmp	.+1548   	; 0x76a <__bad_interrupt>
     15e:	00 00       	nop
     160:	0c 94 f3 0b 	jmp	0x17e6	; 0x17e6 <__vector_88>
     164:	0c 94 5d 0c 	jmp	0x18ba	; 0x18ba <__vector_89>
     168:	0c 94 49 0c 	jmp	0x1892	; 0x1892 <__vector_90>
     16c:	0c 94 1e 0c 	jmp	0x183c	; 0x183c <__vector_91>
     170:	0c 94 88 0c 	jmp	0x1910	; 0x1910 <__vector_92>
     174:	0c 94 53 0c 	jmp	0x18a6	; 0x18a6 <__vector_93>
     178:	f8 c2       	rjmp	.+1520   	; 0x76a <__bad_interrupt>
     17a:	00 00       	nop
     17c:	f6 c2       	rjmp	.+1516   	; 0x76a <__bad_interrupt>
     17e:	00 00       	nop
     180:	f4 c2       	rjmp	.+1512   	; 0x76a <__bad_interrupt>
     182:	00 00       	nop
     184:	f2 c2       	rjmp	.+1508   	; 0x76a <__bad_interrupt>
     186:	00 00       	nop
     188:	f0 c2       	rjmp	.+1504   	; 0x76a <__bad_interrupt>
     18a:	00 00       	nop
     18c:	ee c2       	rjmp	.+1500   	; 0x76a <__bad_interrupt>
     18e:	00 00       	nop
     190:	ec c2       	rjmp	.+1496   	; 0x76a <__bad_interrupt>
     192:	00 00       	nop
     194:	ea c2       	rjmp	.+1492   	; 0x76a <__bad_interrupt>
     196:	00 00       	nop
     198:	e8 c2       	rjmp	.+1488   	; 0x76a <__bad_interrupt>
     19a:	00 00       	nop
     19c:	e6 c2       	rjmp	.+1484   	; 0x76a <__bad_interrupt>
     19e:	00 00       	nop
     1a0:	e4 c2       	rjmp	.+1480   	; 0x76a <__bad_interrupt>
     1a2:	00 00       	nop
     1a4:	e2 c2       	rjmp	.+1476   	; 0x76a <__bad_interrupt>
     1a6:	00 00       	nop
     1a8:	e0 c2       	rjmp	.+1472   	; 0x76a <__bad_interrupt>
     1aa:	00 00       	nop
     1ac:	de c2       	rjmp	.+1468   	; 0x76a <__bad_interrupt>
     1ae:	00 00       	nop
     1b0:	dc c2       	rjmp	.+1464   	; 0x76a <__bad_interrupt>
     1b2:	00 00       	nop
     1b4:	da c2       	rjmp	.+1460   	; 0x76a <__bad_interrupt>
     1b6:	00 00       	nop
     1b8:	d8 c2       	rjmp	.+1456   	; 0x76a <__bad_interrupt>
     1ba:	00 00       	nop
     1bc:	d6 c2       	rjmp	.+1452   	; 0x76a <__bad_interrupt>
     1be:	00 00       	nop
     1c0:	d4 c2       	rjmp	.+1448   	; 0x76a <__bad_interrupt>
     1c2:	00 00       	nop
     1c4:	d2 c2       	rjmp	.+1444   	; 0x76a <__bad_interrupt>
     1c6:	00 00       	nop
     1c8:	d0 c2       	rjmp	.+1440   	; 0x76a <__bad_interrupt>
     1ca:	00 00       	nop
     1cc:	ce c2       	rjmp	.+1436   	; 0x76a <__bad_interrupt>
     1ce:	00 00       	nop
     1d0:	cc c2       	rjmp	.+1432   	; 0x76a <__bad_interrupt>
     1d2:	00 00       	nop
     1d4:	ca c2       	rjmp	.+1428   	; 0x76a <__bad_interrupt>
     1d6:	00 00       	nop
     1d8:	c8 c2       	rjmp	.+1424   	; 0x76a <__bad_interrupt>
     1da:	00 00       	nop
     1dc:	c6 c2       	rjmp	.+1420   	; 0x76a <__bad_interrupt>
     1de:	00 00       	nop
     1e0:	c4 c2       	rjmp	.+1416   	; 0x76a <__bad_interrupt>
     1e2:	00 00       	nop
     1e4:	c2 c2       	rjmp	.+1412   	; 0x76a <__bad_interrupt>
     1e6:	00 00       	nop
     1e8:	c0 c2       	rjmp	.+1408   	; 0x76a <__bad_interrupt>
     1ea:	00 00       	nop
     1ec:	be c2       	rjmp	.+1404   	; 0x76a <__bad_interrupt>
     1ee:	00 00       	nop
     1f0:	bc c2       	rjmp	.+1400   	; 0x76a <__bad_interrupt>
     1f2:	00 00       	nop
     1f4:	ba c2       	rjmp	.+1396   	; 0x76a <__bad_interrupt>
     1f6:	00 00       	nop
     1f8:	b8 c2       	rjmp	.+1392   	; 0x76a <__bad_interrupt>
     1fa:	00 00       	nop
     1fc:	e0 07       	cpc	r30, r16
     1fe:	e8 07       	cpc	r30, r24
     200:	ec 07       	cpc	r30, r28
     202:	f0 07       	cpc	r31, r16
     204:	f4 07       	cpc	r31, r20
     206:	e4 07       	cpc	r30, r20
     208:	f8 07       	cpc	r31, r24

0000020a <__trampolines_end>:
     20a:	00 00       	nop
     20c:	00 00       	nop
     20e:	00 3e       	cpi	r16, 0xE0	; 224
     210:	5b 4f       	sbci	r21, 0xFB	; 251
     212:	5b 3e       	cpi	r21, 0xEB	; 235
     214:	3e 6b       	ori	r19, 0xBE	; 190
     216:	4f 6b       	ori	r20, 0xBF	; 191
     218:	3e 1c       	adc	r3, r14
     21a:	3e 7c       	andi	r19, 0xCE	; 206
     21c:	3e 1c       	adc	r3, r14
     21e:	18 3c       	cpi	r17, 0xC8	; 200
     220:	7e 3c       	cpi	r23, 0xCE	; 206
     222:	18 1c       	adc	r1, r8
     224:	57 7d       	andi	r21, 0xD7	; 215
     226:	57 1c       	adc	r5, r7
     228:	1c 5e       	subi	r17, 0xEC	; 236
     22a:	7f 5e       	subi	r23, 0xEF	; 239
     22c:	1c 00       	.word	0x001c	; ????
     22e:	18 3c       	cpi	r17, 0xC8	; 200
     230:	18 00       	.word	0x0018	; ????
     232:	ff e7       	ldi	r31, 0x7F	; 127
     234:	c3 e7       	ldi	r28, 0x73	; 115
     236:	ff 00       	.word	0x00ff	; ????
     238:	18 24       	eor	r1, r8
     23a:	18 00       	.word	0x0018	; ????
     23c:	ff e7       	ldi	r31, 0x7F	; 127
     23e:	db e7       	ldi	r29, 0x7B	; 123
     240:	ff 30       	cpi	r31, 0x0F	; 15
     242:	48 3a       	cpi	r20, 0xA8	; 168
     244:	06 0e       	add	r0, r22
     246:	26 29       	or	r18, r6
     248:	79 29       	or	r23, r9
     24a:	26 40       	sbci	r18, 0x06	; 6
     24c:	7f 05       	cpc	r23, r15
     24e:	05 07       	cpc	r16, r21
     250:	40 7f       	andi	r20, 0xF0	; 240
     252:	05 25       	eor	r16, r5
     254:	3f 5a       	subi	r19, 0xAF	; 175
     256:	3c e7       	ldi	r19, 0x7C	; 124
     258:	3c 5a       	subi	r19, 0xAC	; 172
     25a:	7f 3e       	cpi	r23, 0xEF	; 239
     25c:	1c 1c       	adc	r1, r12
     25e:	08 08       	sbc	r0, r8
     260:	1c 1c       	adc	r1, r12
     262:	3e 7f       	andi	r19, 0xFE	; 254
     264:	14 22       	and	r1, r20
     266:	7f 22       	and	r7, r31
     268:	14 5f       	subi	r17, 0xF4	; 244
     26a:	5f 00       	.word	0x005f	; ????
     26c:	5f 5f       	subi	r21, 0xFF	; 255
     26e:	06 09       	sbc	r16, r6
     270:	7f 01       	movw	r14, r30
     272:	7f 00       	.word	0x007f	; ????
     274:	66 89       	ldd	r22, Z+22	; 0x16
     276:	95 6a       	ori	r25, 0xA5	; 165
     278:	60 60       	ori	r22, 0x00	; 0
     27a:	60 60       	ori	r22, 0x00	; 0
     27c:	60 94       	com	r6
     27e:	a2 ff       	sbrs	r26, 2
     280:	a2 94       	swap	r10
     282:	08 04       	cpc	r0, r8
     284:	7e 04       	cpc	r7, r14
     286:	08 10       	cpse	r0, r8
     288:	20 7e       	andi	r18, 0xE0	; 224
     28a:	20 10       	cpse	r2, r0
     28c:	08 08       	sbc	r0, r8
     28e:	2a 1c       	adc	r2, r10
     290:	08 08       	sbc	r0, r8
     292:	1c 2a       	or	r1, r28
     294:	08 08       	sbc	r0, r8
     296:	1e 10       	cpse	r1, r14
     298:	10 10       	cpse	r1, r0
     29a:	10 0c       	add	r1, r0
     29c:	1e 0c       	add	r1, r14
     29e:	1e 0c       	add	r1, r14
     2a0:	30 38       	cpi	r19, 0x80	; 128
     2a2:	3e 38       	cpi	r19, 0x8E	; 142
     2a4:	30 06       	cpc	r3, r16
     2a6:	0e 3e       	cpi	r16, 0xEE	; 238
     2a8:	0e 06       	cpc	r0, r30
     2aa:	00 00       	nop
     2ac:	00 00       	nop
     2ae:	00 00       	nop
     2b0:	00 5f       	subi	r16, 0xF0	; 240
     2b2:	00 00       	nop
     2b4:	00 07       	cpc	r16, r16
     2b6:	00 07       	cpc	r16, r16
     2b8:	00 14       	cp	r0, r0
     2ba:	7f 14       	cp	r7, r15
     2bc:	7f 14       	cp	r7, r15
     2be:	24 2a       	or	r2, r20
     2c0:	7f 2a       	or	r7, r31
     2c2:	12 23       	and	r17, r18
     2c4:	13 08       	sbc	r1, r3
     2c6:	64 62       	ori	r22, 0x24	; 36
     2c8:	36 49       	sbci	r19, 0x96	; 150
     2ca:	56 20       	and	r5, r6
     2cc:	50 00       	.word	0x0050	; ????
     2ce:	08 07       	cpc	r16, r24
     2d0:	03 00       	.word	0x0003	; ????
     2d2:	00 1c       	adc	r0, r0
     2d4:	22 41       	sbci	r18, 0x12	; 18
     2d6:	00 00       	nop
     2d8:	41 22       	and	r4, r17
     2da:	1c 00       	.word	0x001c	; ????
     2dc:	2a 1c       	adc	r2, r10
     2de:	7f 1c       	adc	r7, r15
     2e0:	2a 08       	sbc	r2, r10
     2e2:	08 3e       	cpi	r16, 0xE8	; 232
     2e4:	08 08       	sbc	r0, r8
     2e6:	00 80       	ld	r0, Z
     2e8:	70 30       	cpi	r23, 0x00	; 0
     2ea:	00 08       	sbc	r0, r0
     2ec:	08 08       	sbc	r0, r8
     2ee:	08 08       	sbc	r0, r8
     2f0:	00 00       	nop
     2f2:	60 60       	ori	r22, 0x00	; 0
     2f4:	00 20       	and	r0, r0
     2f6:	10 08       	sbc	r1, r0
     2f8:	04 02       	muls	r16, r20
     2fa:	3e 51       	subi	r19, 0x1E	; 30
     2fc:	49 45       	sbci	r20, 0x59	; 89
     2fe:	3e 00       	.word	0x003e	; ????
     300:	42 7f       	andi	r20, 0xF2	; 242
     302:	40 00       	.word	0x0040	; ????
     304:	72 49       	sbci	r23, 0x92	; 146
     306:	49 49       	sbci	r20, 0x99	; 153
     308:	46 21       	and	r20, r6
     30a:	41 49       	sbci	r20, 0x91	; 145
     30c:	4d 33       	cpi	r20, 0x3D	; 61
     30e:	18 14       	cp	r1, r8
     310:	12 7f       	andi	r17, 0xF2	; 242
     312:	10 27       	eor	r17, r16
     314:	45 45       	sbci	r20, 0x55	; 85
     316:	45 39       	cpi	r20, 0x95	; 149
     318:	3c 4a       	sbci	r19, 0xAC	; 172
     31a:	49 49       	sbci	r20, 0x99	; 153
     31c:	31 41       	sbci	r19, 0x11	; 17
     31e:	21 11       	cpse	r18, r1
     320:	09 07       	cpc	r16, r25
     322:	36 49       	sbci	r19, 0x96	; 150
     324:	49 49       	sbci	r20, 0x99	; 153
     326:	36 46       	sbci	r19, 0x66	; 102
     328:	49 49       	sbci	r20, 0x99	; 153
     32a:	29 1e       	adc	r2, r25
     32c:	00 00       	nop
     32e:	14 00       	.word	0x0014	; ????
     330:	00 00       	nop
     332:	40 34       	cpi	r20, 0x40	; 64
     334:	00 00       	nop
     336:	00 08       	sbc	r0, r0
     338:	14 22       	and	r1, r20
     33a:	41 14       	cp	r4, r1
     33c:	14 14       	cp	r1, r4
     33e:	14 14       	cp	r1, r4
     340:	00 41       	sbci	r16, 0x10	; 16
     342:	22 14       	cp	r2, r2
     344:	08 02       	muls	r16, r24
     346:	01 59       	subi	r16, 0x91	; 145
     348:	09 06       	cpc	r0, r25
     34a:	3e 41       	sbci	r19, 0x1E	; 30
     34c:	5d 59       	subi	r21, 0x9D	; 157
     34e:	4e 7c       	andi	r20, 0xCE	; 206
     350:	12 11       	cpse	r17, r2
     352:	12 7c       	andi	r17, 0xC2	; 194
     354:	7f 49       	sbci	r23, 0x9F	; 159
     356:	49 49       	sbci	r20, 0x99	; 153
     358:	36 3e       	cpi	r19, 0xE6	; 230
     35a:	41 41       	sbci	r20, 0x11	; 17
     35c:	41 22       	and	r4, r17
     35e:	7f 41       	sbci	r23, 0x1F	; 31
     360:	41 41       	sbci	r20, 0x11	; 17
     362:	3e 7f       	andi	r19, 0xFE	; 254
     364:	49 49       	sbci	r20, 0x99	; 153
     366:	49 41       	sbci	r20, 0x19	; 25
     368:	7f 09       	sbc	r23, r15
     36a:	09 09       	sbc	r16, r9
     36c:	01 3e       	cpi	r16, 0xE1	; 225
     36e:	41 41       	sbci	r20, 0x11	; 17
     370:	51 73       	andi	r21, 0x31	; 49
     372:	7f 08       	sbc	r7, r15
     374:	08 08       	sbc	r0, r8
     376:	7f 00       	.word	0x007f	; ????
     378:	41 7f       	andi	r20, 0xF1	; 241
     37a:	41 00       	.word	0x0041	; ????
     37c:	20 40       	sbci	r18, 0x00	; 0
     37e:	41 3f       	cpi	r20, 0xF1	; 241
     380:	01 7f       	andi	r16, 0xF1	; 241
     382:	08 14       	cp	r0, r8
     384:	22 41       	sbci	r18, 0x12	; 18
     386:	7f 40       	sbci	r23, 0x0F	; 15
     388:	40 40       	sbci	r20, 0x00	; 0
     38a:	40 7f       	andi	r20, 0xF0	; 240
     38c:	02 1c       	adc	r0, r2
     38e:	02 7f       	andi	r16, 0xF2	; 242
     390:	7f 04       	cpc	r7, r15
     392:	08 10       	cpse	r0, r8
     394:	7f 3e       	cpi	r23, 0xEF	; 239
     396:	41 41       	sbci	r20, 0x11	; 17
     398:	41 3e       	cpi	r20, 0xE1	; 225
     39a:	7f 09       	sbc	r23, r15
     39c:	09 09       	sbc	r16, r9
     39e:	06 3e       	cpi	r16, 0xE6	; 230
     3a0:	41 51       	subi	r20, 0x11	; 17
     3a2:	21 5e       	subi	r18, 0xE1	; 225
     3a4:	7f 09       	sbc	r23, r15
     3a6:	19 29       	or	r17, r9
     3a8:	46 26       	eor	r4, r22
     3aa:	49 49       	sbci	r20, 0x99	; 153
     3ac:	49 32       	cpi	r20, 0x29	; 41
     3ae:	03 01       	movw	r0, r6
     3b0:	7f 01       	movw	r14, r30
     3b2:	03 3f       	cpi	r16, 0xF3	; 243
     3b4:	40 40       	sbci	r20, 0x00	; 0
     3b6:	40 3f       	cpi	r20, 0xF0	; 240
     3b8:	1f 20       	and	r1, r15
     3ba:	40 20       	and	r4, r0
     3bc:	1f 3f       	cpi	r17, 0xFF	; 255
     3be:	40 38       	cpi	r20, 0x80	; 128
     3c0:	40 3f       	cpi	r20, 0xF0	; 240
     3c2:	63 14       	cp	r6, r3
     3c4:	08 14       	cp	r0, r8
     3c6:	63 03       	mulsu	r22, r19
     3c8:	04 78       	andi	r16, 0x84	; 132
     3ca:	04 03       	mulsu	r16, r20
     3cc:	61 59       	subi	r22, 0x91	; 145
     3ce:	49 4d       	sbci	r20, 0xD9	; 217
     3d0:	43 00       	.word	0x0043	; ????
     3d2:	7f 41       	sbci	r23, 0x1F	; 31
     3d4:	41 41       	sbci	r20, 0x11	; 17
     3d6:	02 04       	cpc	r0, r2
     3d8:	08 10       	cpse	r0, r8
     3da:	20 00       	.word	0x0020	; ????
     3dc:	41 41       	sbci	r20, 0x11	; 17
     3de:	41 7f       	andi	r20, 0xF1	; 241
     3e0:	04 02       	muls	r16, r20
     3e2:	01 02       	muls	r16, r17
     3e4:	04 40       	sbci	r16, 0x04	; 4
     3e6:	40 40       	sbci	r20, 0x00	; 0
     3e8:	40 40       	sbci	r20, 0x00	; 0
     3ea:	00 03       	mulsu	r16, r16
     3ec:	07 08       	sbc	r0, r7
     3ee:	00 20       	and	r0, r0
     3f0:	54 54       	subi	r21, 0x44	; 68
     3f2:	78 40       	sbci	r23, 0x08	; 8
     3f4:	7f 28       	or	r7, r15
     3f6:	44 44       	sbci	r20, 0x44	; 68
     3f8:	38 38       	cpi	r19, 0x88	; 136
     3fa:	44 44       	sbci	r20, 0x44	; 68
     3fc:	44 28       	or	r4, r4
     3fe:	38 44       	sbci	r19, 0x48	; 72
     400:	44 28       	or	r4, r4
     402:	7f 38       	cpi	r23, 0x8F	; 143
     404:	54 54       	subi	r21, 0x44	; 68
     406:	54 18       	sub	r5, r4
     408:	00 08       	sbc	r0, r0
     40a:	7e 09       	sbc	r23, r14
     40c:	02 18       	sub	r0, r2
     40e:	a4 a4       	ldd	r10, Z+44	; 0x2c
     410:	9c 78       	andi	r25, 0x8C	; 140
     412:	7f 08       	sbc	r7, r15
     414:	04 04       	cpc	r0, r4
     416:	78 00       	.word	0x0078	; ????
     418:	44 7d       	andi	r20, 0xD4	; 212
     41a:	40 00       	.word	0x0040	; ????
     41c:	20 40       	sbci	r18, 0x00	; 0
     41e:	40 3d       	cpi	r20, 0xD0	; 208
     420:	00 7f       	andi	r16, 0xF0	; 240
     422:	10 28       	or	r1, r0
     424:	44 00       	.word	0x0044	; ????
     426:	00 41       	sbci	r16, 0x10	; 16
     428:	7f 40       	sbci	r23, 0x0F	; 15
     42a:	00 7c       	andi	r16, 0xC0	; 192
     42c:	04 78       	andi	r16, 0x84	; 132
     42e:	04 78       	andi	r16, 0x84	; 132
     430:	7c 08       	sbc	r7, r12
     432:	04 04       	cpc	r0, r4
     434:	78 38       	cpi	r23, 0x88	; 136
     436:	44 44       	sbci	r20, 0x44	; 68
     438:	44 38       	cpi	r20, 0x84	; 132
     43a:	fc 18       	sub	r15, r12
     43c:	24 24       	eor	r2, r4
     43e:	18 18       	sub	r1, r8
     440:	24 24       	eor	r2, r4
     442:	18 fc       	.word	0xfc18	; ????
     444:	7c 08       	sbc	r7, r12
     446:	04 04       	cpc	r0, r4
     448:	08 48       	sbci	r16, 0x88	; 136
     44a:	54 54       	subi	r21, 0x44	; 68
     44c:	54 24       	eor	r5, r4
     44e:	04 04       	cpc	r0, r4
     450:	3f 44       	sbci	r19, 0x4F	; 79
     452:	24 3c       	cpi	r18, 0xC4	; 196
     454:	40 40       	sbci	r20, 0x00	; 0
     456:	20 7c       	andi	r18, 0xC0	; 192
     458:	1c 20       	and	r1, r12
     45a:	40 20       	and	r4, r0
     45c:	1c 3c       	cpi	r17, 0xCC	; 204
     45e:	40 30       	cpi	r20, 0x00	; 0
     460:	40 3c       	cpi	r20, 0xC0	; 192
     462:	44 28       	or	r4, r4
     464:	10 28       	or	r1, r0
     466:	44 4c       	sbci	r20, 0xC4	; 196
     468:	90 90 90 7c 	lds	r9, 0x7C90
     46c:	44 64       	ori	r20, 0x44	; 68
     46e:	54 4c       	sbci	r21, 0xC4	; 196
     470:	44 00       	.word	0x0044	; ????
     472:	08 36       	cpi	r16, 0x68	; 104
     474:	41 00       	.word	0x0041	; ????
     476:	00 00       	nop
     478:	77 00       	.word	0x0077	; ????
     47a:	00 00       	nop
     47c:	41 36       	cpi	r20, 0x61	; 97
     47e:	08 00       	.word	0x0008	; ????
     480:	02 01       	movw	r0, r4
     482:	02 04       	cpc	r0, r2
     484:	02 3c       	cpi	r16, 0xC2	; 194
     486:	26 23       	and	r18, r22
     488:	26 3c       	cpi	r18, 0xC6	; 198
     48a:	1e a1       	ldd	r17, Y+38	; 0x26
     48c:	a1 61       	ori	r26, 0x11	; 17
     48e:	12 3a       	cpi	r17, 0xA2	; 162
     490:	40 40       	sbci	r20, 0x00	; 0
     492:	20 7a       	andi	r18, 0xA0	; 160
     494:	38 54       	subi	r19, 0x48	; 72
     496:	54 55       	subi	r21, 0x54	; 84
     498:	59 21       	and	r21, r9
     49a:	55 55       	subi	r21, 0x55	; 85
     49c:	79 41       	sbci	r23, 0x19	; 25
     49e:	22 54       	subi	r18, 0x42	; 66
     4a0:	54 78       	andi	r21, 0x84	; 132
     4a2:	42 21       	and	r20, r2
     4a4:	55 54       	subi	r21, 0x45	; 69
     4a6:	78 40       	sbci	r23, 0x08	; 8
     4a8:	20 54       	subi	r18, 0x40	; 64
     4aa:	55 79       	andi	r21, 0x95	; 149
     4ac:	40 0c       	add	r4, r0
     4ae:	1e 52       	subi	r17, 0x2E	; 46
     4b0:	72 12       	cpse	r7, r18
     4b2:	39 55       	subi	r19, 0x59	; 89
     4b4:	55 55       	subi	r21, 0x55	; 85
     4b6:	59 39       	cpi	r21, 0x99	; 153
     4b8:	54 54       	subi	r21, 0x44	; 68
     4ba:	54 59       	subi	r21, 0x94	; 148
     4bc:	39 55       	subi	r19, 0x59	; 89
     4be:	54 54       	subi	r21, 0x44	; 68
     4c0:	58 00       	.word	0x0058	; ????
     4c2:	00 45       	sbci	r16, 0x50	; 80
     4c4:	7c 41       	sbci	r23, 0x1C	; 28
     4c6:	00 02       	muls	r16, r16
     4c8:	45 7d       	andi	r20, 0xD5	; 213
     4ca:	42 00       	.word	0x0042	; ????
     4cc:	01 45       	sbci	r16, 0x51	; 81
     4ce:	7c 40       	sbci	r23, 0x0C	; 12
     4d0:	7d 12       	cpse	r7, r29
     4d2:	11 12       	cpse	r1, r17
     4d4:	7d f0       	brhs	.+30     	; 0x4f4 <__trampolines_end+0x2ea>
     4d6:	28 25       	eor	r18, r8
     4d8:	28 f0       	brcs	.+10     	; 0x4e4 <__trampolines_end+0x2da>
     4da:	7c 54       	subi	r23, 0x4C	; 76
     4dc:	55 45       	sbci	r21, 0x55	; 85
     4de:	00 20       	and	r0, r0
     4e0:	54 54       	subi	r21, 0x44	; 68
     4e2:	7c 54       	subi	r23, 0x4C	; 76
     4e4:	7c 0a       	sbc	r7, r28
     4e6:	09 7f       	andi	r16, 0xF9	; 249
     4e8:	49 32       	cpi	r20, 0x29	; 41
     4ea:	49 49       	sbci	r20, 0x99	; 153
     4ec:	49 32       	cpi	r20, 0x29	; 41
     4ee:	3a 44       	sbci	r19, 0x4A	; 74
     4f0:	44 44       	sbci	r20, 0x44	; 68
     4f2:	3a 32       	cpi	r19, 0x2A	; 42
     4f4:	4a 48       	sbci	r20, 0x8A	; 138
     4f6:	48 30       	cpi	r20, 0x08	; 8
     4f8:	3a 41       	sbci	r19, 0x1A	; 26
     4fa:	41 21       	and	r20, r1
     4fc:	7a 3a       	cpi	r23, 0xAA	; 170
     4fe:	42 40       	sbci	r20, 0x02	; 2
     500:	20 78       	andi	r18, 0x80	; 128
     502:	00 9d       	mul	r16, r0
     504:	a0 a0       	ldd	r10, Z+32	; 0x20
     506:	7d 3d       	cpi	r23, 0xDD	; 221
     508:	42 42       	sbci	r20, 0x22	; 34
     50a:	42 3d       	cpi	r20, 0xD2	; 210
     50c:	3d 40       	sbci	r19, 0x0D	; 13
     50e:	40 40       	sbci	r20, 0x00	; 0
     510:	3d 3c       	cpi	r19, 0xCD	; 205
     512:	24 ff       	sbrs	r18, 4
     514:	24 24       	eor	r2, r4
     516:	48 7e       	andi	r20, 0xE8	; 232
     518:	49 43       	sbci	r20, 0x39	; 57
     51a:	66 2b       	or	r22, r22
     51c:	2f fc       	.word	0xfc2f	; ????
     51e:	2f 2b       	or	r18, r31
     520:	ff 09       	sbc	r31, r15
     522:	29 f6       	brne	.-118    	; 0x4ae <__trampolines_end+0x2a4>
     524:	20 c0       	rjmp	.+64     	; 0x566 <__trampolines_end+0x35c>
     526:	88 7e       	andi	r24, 0xE8	; 232
     528:	09 03       	fmul	r16, r17
     52a:	20 54       	subi	r18, 0x40	; 64
     52c:	54 79       	andi	r21, 0x94	; 148
     52e:	41 00       	.word	0x0041	; ????
     530:	00 44       	sbci	r16, 0x40	; 64
     532:	7d 41       	sbci	r23, 0x1D	; 29
     534:	30 48       	sbci	r19, 0x80	; 128
     536:	48 4a       	sbci	r20, 0xA8	; 168
     538:	32 38       	cpi	r19, 0x82	; 130
     53a:	40 40       	sbci	r20, 0x00	; 0
     53c:	22 7a       	andi	r18, 0xA2	; 162
     53e:	00 7a       	andi	r16, 0xA0	; 160
     540:	0a 0a       	sbc	r0, r26
     542:	72 7d       	andi	r23, 0xD2	; 210
     544:	0d 19       	sub	r16, r13
     546:	31 7d       	andi	r19, 0xD1	; 209
     548:	26 29       	or	r18, r6
     54a:	29 2f       	mov	r18, r25
     54c:	28 26       	eor	r2, r24
     54e:	29 29       	or	r18, r9
     550:	29 26       	eor	r2, r25
     552:	30 48       	sbci	r19, 0x80	; 128
     554:	4d 40       	sbci	r20, 0x0D	; 13
     556:	20 38       	cpi	r18, 0x80	; 128
     558:	08 08       	sbc	r0, r8
     55a:	08 08       	sbc	r0, r8
     55c:	08 08       	sbc	r0, r8
     55e:	08 08       	sbc	r0, r8
     560:	38 2f       	mov	r19, r24
     562:	10 c8       	rjmp	.-4064   	; 0xfffff584 <__eeprom_end+0xff7ef584>
     564:	ac ba       	out	0x1c, r10	; 28
     566:	2f 10       	cpse	r2, r15
     568:	28 34       	cpi	r18, 0x48	; 72
     56a:	fa 00       	.word	0x00fa	; ????
     56c:	00 7b       	andi	r16, 0xB0	; 176
     56e:	00 00       	nop
     570:	08 14       	cp	r0, r8
     572:	2a 14       	cp	r2, r10
     574:	22 22       	and	r2, r18
     576:	14 2a       	or	r1, r20
     578:	14 08       	sbc	r1, r4
     57a:	aa 00       	.word	0x00aa	; ????
     57c:	55 00       	.word	0x0055	; ????
     57e:	aa aa       	std	Y+50, r10	; 0x32
     580:	55 aa       	std	Z+53, r5	; 0x35
     582:	55 aa       	std	Z+53, r5	; 0x35
     584:	00 00       	nop
     586:	00 ff       	sbrs	r16, 0
     588:	00 10       	cpse	r0, r0
     58a:	10 10       	cpse	r1, r0
     58c:	ff 00       	.word	0x00ff	; ????
     58e:	14 14       	cp	r1, r4
     590:	14 ff       	sbrs	r17, 4
     592:	00 10       	cpse	r0, r0
     594:	10 ff       	sbrs	r17, 0
     596:	00 ff       	sbrs	r16, 0
     598:	10 10       	cpse	r1, r0
     59a:	f0 10       	cpse	r15, r0
     59c:	f0 14       	cp	r15, r0
     59e:	14 14       	cp	r1, r4
     5a0:	fc 00       	.word	0x00fc	; ????
     5a2:	14 14       	cp	r1, r4
     5a4:	f7 00       	.word	0x00f7	; ????
     5a6:	ff 00       	.word	0x00ff	; ????
     5a8:	00 ff       	sbrs	r16, 0
     5aa:	00 ff       	sbrs	r16, 0
     5ac:	14 14       	cp	r1, r4
     5ae:	f4 04       	cpc	r15, r4
     5b0:	fc 14       	cp	r15, r12
     5b2:	14 17       	cp	r17, r20
     5b4:	10 1f       	adc	r17, r16
     5b6:	10 10       	cpse	r1, r0
     5b8:	1f 10       	cpse	r1, r15
     5ba:	1f 14       	cp	r1, r15
     5bc:	14 14       	cp	r1, r4
     5be:	1f 00       	.word	0x001f	; ????
     5c0:	10 10       	cpse	r1, r0
     5c2:	10 f0       	brcs	.+4      	; 0x5c8 <__trampolines_end+0x3be>
     5c4:	00 00       	nop
     5c6:	00 00       	nop
     5c8:	1f 10       	cpse	r1, r15
     5ca:	10 10       	cpse	r1, r0
     5cc:	10 1f       	adc	r17, r16
     5ce:	10 10       	cpse	r1, r0
     5d0:	10 10       	cpse	r1, r0
     5d2:	f0 10       	cpse	r15, r0
     5d4:	00 00       	nop
     5d6:	00 ff       	sbrs	r16, 0
     5d8:	10 10       	cpse	r1, r0
     5da:	10 10       	cpse	r1, r0
     5dc:	10 10       	cpse	r1, r0
     5de:	10 10       	cpse	r1, r0
     5e0:	10 ff       	sbrs	r17, 0
     5e2:	10 00       	.word	0x0010	; ????
     5e4:	00 00       	nop
     5e6:	ff 14       	cp	r15, r15
     5e8:	00 00       	nop
     5ea:	ff 00       	.word	0x00ff	; ????
     5ec:	ff 00       	.word	0x00ff	; ????
     5ee:	00 1f       	adc	r16, r16
     5f0:	10 17       	cp	r17, r16
     5f2:	00 00       	nop
     5f4:	fc 04       	cpc	r15, r12
     5f6:	f4 14       	cp	r15, r4
     5f8:	14 17       	cp	r17, r20
     5fa:	10 17       	cp	r17, r16
     5fc:	14 14       	cp	r1, r4
     5fe:	f4 04       	cpc	r15, r4
     600:	f4 00       	.word	0x00f4	; ????
     602:	00 ff       	sbrs	r16, 0
     604:	00 f7       	brcc	.-64     	; 0x5c6 <__trampolines_end+0x3bc>
     606:	14 14       	cp	r1, r4
     608:	14 14       	cp	r1, r4
     60a:	14 14       	cp	r1, r4
     60c:	14 f7       	brge	.-60     	; 0x5d2 <__trampolines_end+0x3c8>
     60e:	00 f7       	brcc	.-64     	; 0x5d0 <__trampolines_end+0x3c6>
     610:	14 14       	cp	r1, r4
     612:	14 17       	cp	r17, r20
     614:	14 10       	cpse	r1, r4
     616:	10 1f       	adc	r17, r16
     618:	10 1f       	adc	r17, r16
     61a:	14 14       	cp	r1, r4
     61c:	14 f4       	brge	.+4      	; 0x622 <__trampolines_end+0x418>
     61e:	14 10       	cpse	r1, r4
     620:	10 f0       	brcs	.+4      	; 0x626 <__trampolines_end+0x41c>
     622:	10 f0       	brcs	.+4      	; 0x628 <__trampolines_end+0x41e>
     624:	00 00       	nop
     626:	1f 10       	cpse	r1, r15
     628:	1f 00       	.word	0x001f	; ????
     62a:	00 00       	nop
     62c:	1f 14       	cp	r1, r15
     62e:	00 00       	nop
     630:	00 fc       	sbrc	r0, 0
     632:	14 00       	.word	0x0014	; ????
     634:	00 f0       	brcs	.+0      	; 0x636 <__trampolines_end+0x42c>
     636:	10 f0       	brcs	.+4      	; 0x63c <__trampolines_end+0x432>
     638:	10 10       	cpse	r1, r0
     63a:	ff 10       	cpse	r15, r15
     63c:	ff 14       	cp	r15, r15
     63e:	14 14       	cp	r1, r4
     640:	ff 14       	cp	r15, r15
     642:	10 10       	cpse	r1, r0
     644:	10 1f       	adc	r17, r16
     646:	00 00       	nop
     648:	00 00       	nop
     64a:	f0 10       	cpse	r15, r0
     64c:	ff ff       	.word	0xffff	; ????
     64e:	ff ff       	.word	0xffff	; ????
     650:	ff f0       	brie	.+62     	; 0x690 <__trampolines_end+0x486>
     652:	f0 f0       	brcs	.+60     	; 0x690 <__trampolines_end+0x486>
     654:	f0 f0       	brcs	.+60     	; 0x692 <__trampolines_end+0x488>
     656:	ff ff       	.word	0xffff	; ????
     658:	ff 00       	.word	0x00ff	; ????
     65a:	00 00       	nop
     65c:	00 00       	nop
     65e:	ff ff       	.word	0xffff	; ????
     660:	0f 0f       	add	r16, r31
     662:	0f 0f       	add	r16, r31
     664:	0f 38       	cpi	r16, 0x8F	; 143
     666:	44 44       	sbci	r20, 0x44	; 68
     668:	38 44       	sbci	r19, 0x48	; 72
     66a:	fc 4a       	sbci	r31, 0xAC	; 172
     66c:	4a 4a       	sbci	r20, 0xAA	; 170
     66e:	34 7e       	andi	r19, 0xE4	; 228
     670:	02 02       	muls	r16, r18
     672:	06 06       	cpc	r0, r22
     674:	02 7e       	andi	r16, 0xE2	; 226
     676:	02 7e       	andi	r16, 0xE2	; 226
     678:	02 63       	ori	r16, 0x32	; 50
     67a:	55 49       	sbci	r21, 0x95	; 149
     67c:	41 63       	ori	r20, 0x31	; 49
     67e:	38 44       	sbci	r19, 0x48	; 72
     680:	44 3c       	cpi	r20, 0xC4	; 196
     682:	04 40       	sbci	r16, 0x04	; 4
     684:	7e 20       	and	r7, r14
     686:	1e 20       	and	r1, r14
     688:	06 02       	muls	r16, r22
     68a:	7e 02       	muls	r23, r30
     68c:	02 99       	sbic	0x00, 2	; 0
     68e:	a5 e7       	ldi	r26, 0x75	; 117
     690:	a5 99       	sbic	0x14, 5	; 20
     692:	1c 2a       	or	r1, r28
     694:	49 2a       	or	r4, r25
     696:	1c 4c       	sbci	r17, 0xCC	; 204
     698:	72 01       	movw	r14, r4
     69a:	72 4c       	sbci	r23, 0xC2	; 194
     69c:	30 4a       	sbci	r19, 0xA0	; 160
     69e:	4d 4d       	sbci	r20, 0xDD	; 221
     6a0:	30 30       	cpi	r19, 0x00	; 0
     6a2:	48 78       	andi	r20, 0x88	; 136
     6a4:	48 30       	cpi	r20, 0x08	; 8
     6a6:	bc 62       	ori	r27, 0x2C	; 44
     6a8:	5a 46       	sbci	r21, 0x6A	; 106
     6aa:	3d 3e       	cpi	r19, 0xED	; 237
     6ac:	49 49       	sbci	r20, 0x99	; 153
     6ae:	49 00       	.word	0x0049	; ????
     6b0:	7e 01       	movw	r14, r28
     6b2:	01 01       	movw	r0, r2
     6b4:	7e 2a       	or	r7, r30
     6b6:	2a 2a       	or	r2, r26
     6b8:	2a 2a       	or	r2, r26
     6ba:	44 44       	sbci	r20, 0x44	; 68
     6bc:	5f 44       	sbci	r21, 0x4F	; 79
     6be:	44 40       	sbci	r20, 0x04	; 4
     6c0:	51 4a       	sbci	r21, 0xA1	; 161
     6c2:	44 40       	sbci	r20, 0x04	; 4
     6c4:	40 44       	sbci	r20, 0x40	; 64
     6c6:	4a 51       	subi	r20, 0x1A	; 26
     6c8:	40 00       	.word	0x0040	; ????
     6ca:	00 ff       	sbrs	r16, 0
     6cc:	01 03       	mulsu	r16, r17
     6ce:	e0 80       	ld	r14, Z
     6d0:	ff 00       	.word	0x00ff	; ????
     6d2:	00 08       	sbc	r0, r0
     6d4:	08 6b       	ori	r16, 0xB8	; 184
     6d6:	6b 08       	sbc	r6, r11
     6d8:	36 12       	cpse	r3, r22
     6da:	36 24       	eor	r3, r6
     6dc:	36 06       	cpc	r3, r22
     6de:	0f 09       	sbc	r16, r15
     6e0:	0f 06       	cpc	r0, r31
     6e2:	00 00       	nop
     6e4:	18 18       	sub	r1, r8
     6e6:	00 00       	nop
     6e8:	00 10       	cpse	r0, r0
     6ea:	10 00       	.word	0x0010	; ????
     6ec:	30 40       	sbci	r19, 0x00	; 0
     6ee:	ff 01       	movw	r30, r30
     6f0:	01 00       	.word	0x0001	; ????
     6f2:	1f 01       	movw	r2, r30
     6f4:	01 1e       	adc	r0, r17
     6f6:	00 19       	sub	r16, r0
     6f8:	1d 17       	cp	r17, r29
     6fa:	12 00       	.word	0x0012	; ????
     6fc:	3c 3c       	cpi	r19, 0xCC	; 204
     6fe:	3c 3c       	cpi	r19, 0xCC	; 204
     700:	00 00       	nop
     702:	00 00       	nop
	...

00000706 <__ctors_start>:
     706:	45 0d       	add	r20, r5

00000708 <__ctors_end>:
     708:	11 24       	eor	r1, r1
     70a:	1f be       	out	0x3f, r1	; 63
     70c:	cf ef       	ldi	r28, 0xFF	; 255
     70e:	cd bf       	out	0x3d, r28	; 61
     710:	df e3       	ldi	r29, 0x3F	; 63
     712:	de bf       	out	0x3e, r29	; 62
     714:	00 e0       	ldi	r16, 0x00	; 0
     716:	0c bf       	out	0x3c, r16	; 60

00000718 <__do_copy_data>:
     718:	10 e2       	ldi	r17, 0x20	; 32
     71a:	a0 e0       	ldi	r26, 0x00	; 0
     71c:	b0 e2       	ldi	r27, 0x20	; 32
     71e:	e4 e7       	ldi	r30, 0x74	; 116
     720:	f6 e2       	ldi	r31, 0x26	; 38
     722:	00 e0       	ldi	r16, 0x00	; 0
     724:	0b bf       	out	0x3b, r16	; 59
     726:	02 c0       	rjmp	.+4      	; 0x72c <__do_copy_data+0x14>
     728:	07 90       	elpm	r0, Z+
     72a:	0d 92       	st	X+, r0
     72c:	a2 3a       	cpi	r26, 0xA2	; 162
     72e:	b1 07       	cpc	r27, r17
     730:	d9 f7       	brne	.-10     	; 0x728 <__do_copy_data+0x10>

00000732 <__do_clear_bss>:
     732:	20 e2       	ldi	r18, 0x20	; 32
     734:	a2 ea       	ldi	r26, 0xA2	; 162
     736:	b0 e2       	ldi	r27, 0x20	; 32
     738:	01 c0       	rjmp	.+2      	; 0x73c <.do_clear_bss_start>

0000073a <.do_clear_bss_loop>:
     73a:	1d 92       	st	X+, r1

0000073c <.do_clear_bss_start>:
     73c:	a1 3b       	cpi	r26, 0xB1	; 177
     73e:	b2 07       	cpc	r27, r18
     740:	e1 f7       	brne	.-8      	; 0x73a <.do_clear_bss_loop>

00000742 <__do_global_ctors>:
     742:	17 e0       	ldi	r17, 0x07	; 7
     744:	c8 e0       	ldi	r28, 0x08	; 8
     746:	d7 e0       	ldi	r29, 0x07	; 7
     748:	00 e0       	ldi	r16, 0x00	; 0
     74a:	06 c0       	rjmp	.+12     	; 0x758 <__do_global_ctors+0x16>
     74c:	22 97       	sbiw	r28, 0x02	; 2
     74e:	01 09       	sbc	r16, r1
     750:	fe 01       	movw	r30, r28
     752:	0b bf       	out	0x3b, r16	; 59
     754:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <__tablejump_elpm__>
     758:	c6 30       	cpi	r28, 0x06	; 6
     75a:	d1 07       	cpc	r29, r17
     75c:	80 e0       	ldi	r24, 0x00	; 0
     75e:	08 07       	cpc	r16, r24
     760:	a9 f7       	brne	.-22     	; 0x74c <__do_global_ctors+0xa>
     762:	0e 94 d8 0c 	call	0x19b0	; 0x19b0 <main>
     766:	0c 94 38 13 	jmp	0x2670	; 0x2670 <_exit>

0000076a <__bad_interrupt>:
     76a:	0c 94 b3 0c 	jmp	0x1966	; 0x1966 <__vector_default>

0000076e <_ZN12Adafruit_GFX9drawPixelEiij>:
}

void Adafruit_GFX::setTextColor(uint16_t c) {
  // For 'transparent' background, we'll set the bg 
  // to the same as fg instead of using a flag
  textcolor = textbgcolor = c;
     76e:	08 95       	ret

00000770 <_ZN12Adafruit_GFX8drawLineEiiiij>:
     770:	2f 92       	push	r2
     772:	3f 92       	push	r3
     774:	4f 92       	push	r4
     776:	5f 92       	push	r5
     778:	6f 92       	push	r6
     77a:	7f 92       	push	r7
     77c:	8f 92       	push	r8
     77e:	9f 92       	push	r9
     780:	af 92       	push	r10
     782:	bf 92       	push	r11
     784:	cf 92       	push	r12
     786:	df 92       	push	r13
     788:	ef 92       	push	r14
     78a:	ff 92       	push	r15
     78c:	0f 93       	push	r16
     78e:	1f 93       	push	r17
     790:	cf 93       	push	r28
     792:	df 93       	push	r29
     794:	00 d0       	rcall	.+0      	; 0x796 <_ZN12Adafruit_GFX8drawLineEiiiij+0x26>
     796:	1f 92       	push	r1
     798:	cd b7       	in	r28, 0x3d	; 61
     79a:	de b7       	in	r29, 0x3e	; 62
     79c:	5c 01       	movw	r10, r24
     79e:	6b 83       	std	Y+3, r22	; 0x03
     7a0:	7c 83       	std	Y+4, r23	; 0x04
     7a2:	6a 01       	movw	r12, r20
     7a4:	49 01       	movw	r8, r18
     7a6:	18 01       	movw	r2, r16
     7a8:	b8 01       	movw	r22, r16
     7aa:	64 1b       	sub	r22, r20
     7ac:	75 0b       	sbc	r23, r21
     7ae:	88 27       	eor	r24, r24
     7b0:	77 fd       	sbrc	r23, 7
     7b2:	80 95       	com	r24
     7b4:	98 2f       	mov	r25, r24
     7b6:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__floatsisf>
     7ba:	2b 01       	movw	r4, r22
     7bc:	3c 01       	movw	r6, r24
     7be:	e8 94       	clt
     7c0:	77 f8       	bld	r7, 7
     7c2:	b4 01       	movw	r22, r8
     7c4:	2b 81       	ldd	r18, Y+3	; 0x03
     7c6:	3c 81       	ldd	r19, Y+4	; 0x04
     7c8:	62 1b       	sub	r22, r18
     7ca:	73 0b       	sbc	r23, r19
     7cc:	88 27       	eor	r24, r24
     7ce:	77 fd       	sbrc	r23, 7
     7d0:	80 95       	com	r24
     7d2:	98 2f       	mov	r25, r24
     7d4:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__floatsisf>
     7d8:	9b 01       	movw	r18, r22
     7da:	ac 01       	movw	r20, r24
     7dc:	5f 77       	andi	r21, 0x7F	; 127
     7de:	11 e0       	ldi	r17, 0x01	; 1
     7e0:	00 e0       	ldi	r16, 0x00	; 0
     7e2:	c3 01       	movw	r24, r6
     7e4:	b2 01       	movw	r22, r4
     7e6:	0e 94 f6 0e 	call	0x1dec	; 0x1dec <__gesf2>
     7ea:	18 16       	cp	r1, r24
     7ec:	0c f0       	brlt	.+2      	; 0x7f0 <_ZN12Adafruit_GFX8drawLineEiiiij+0x80>
     7ee:	10 e0       	ldi	r17, 0x00	; 0
     7f0:	61 2e       	mov	r6, r17
     7f2:	70 2e       	mov	r7, r16
     7f4:	61 14       	cp	r6, r1
     7f6:	71 04       	cpc	r7, r1
     7f8:	59 f0       	breq	.+22     	; 0x810 <_ZN12Adafruit_GFX8drawLineEiiiij+0xa0>
     7fa:	98 2d       	mov	r25, r8
     7fc:	89 2d       	mov	r24, r9
     7fe:	41 01       	movw	r8, r2
     800:	29 2e       	mov	r2, r25
     802:	38 2e       	mov	r3, r24
     804:	9b 81       	ldd	r25, Y+3	; 0x03
     806:	8c 81       	ldd	r24, Y+4	; 0x04
     808:	cb 82       	std	Y+3, r12	; 0x03
     80a:	dc 82       	std	Y+4, r13	; 0x04
     80c:	c9 2e       	mov	r12, r25
     80e:	d8 2e       	mov	r13, r24
     810:	8b 81       	ldd	r24, Y+3	; 0x03
     812:	9c 81       	ldd	r25, Y+4	; 0x04
     814:	88 16       	cp	r8, r24
     816:	99 06       	cpc	r9, r25
     818:	5c f4       	brge	.+22     	; 0x830 <_ZN12Adafruit_GFX8drawLineEiiiij+0xc0>
     81a:	9c 2d       	mov	r25, r12
     81c:	8d 2d       	mov	r24, r13
     81e:	61 01       	movw	r12, r2
     820:	29 2e       	mov	r2, r25
     822:	38 2e       	mov	r3, r24
     824:	9b 81       	ldd	r25, Y+3	; 0x03
     826:	8c 81       	ldd	r24, Y+4	; 0x04
     828:	8b 82       	std	Y+3, r8	; 0x03
     82a:	9c 82       	std	Y+4, r9	; 0x04
     82c:	89 2e       	mov	r8, r25
     82e:	98 2e       	mov	r9, r24
     830:	d4 01       	movw	r26, r8
     832:	eb 81       	ldd	r30, Y+3	; 0x03
     834:	fc 81       	ldd	r31, Y+4	; 0x04
     836:	ae 1b       	sub	r26, r30
     838:	bf 0b       	sbc	r27, r31
     83a:	a9 83       	std	Y+1, r26	; 0x01
     83c:	ba 83       	std	Y+2, r27	; 0x02
     83e:	b1 01       	movw	r22, r2
     840:	6c 19       	sub	r22, r12
     842:	7d 09       	sbc	r23, r13
     844:	88 27       	eor	r24, r24
     846:	77 fd       	sbrc	r23, 7
     848:	80 95       	com	r24
     84a:	98 2f       	mov	r25, r24
     84c:	0e 94 92 0e 	call	0x1d24	; 0x1d24 <__floatsisf>
     850:	9f 77       	andi	r25, 0x7F	; 127
     852:	0e 94 5f 0e 	call	0x1cbe	; 0x1cbe <__fixsfsi>
     856:	2b 01       	movw	r4, r22
     858:	09 81       	ldd	r16, Y+1	; 0x01
     85a:	1a 81       	ldd	r17, Y+2	; 0x02
     85c:	11 23       	and	r17, r17
     85e:	14 f4       	brge	.+4      	; 0x864 <_ZN12Adafruit_GFX8drawLineEiiiij+0xf4>
     860:	0f 5f       	subi	r16, 0xFF	; 255
     862:	1f 4f       	sbci	r17, 0xFF	; 255
     864:	15 95       	asr	r17
     866:	07 95       	ror	r16
     868:	c2 14       	cp	r12, r2
     86a:	d3 04       	cpc	r13, r3
     86c:	24 f4       	brge	.+8      	; 0x876 <_ZN12Adafruit_GFX8drawLineEiiiij+0x106>
     86e:	22 24       	eor	r2, r2
     870:	23 94       	inc	r2
     872:	31 2c       	mov	r3, r1
     874:	03 c0       	rjmp	.+6      	; 0x87c <_ZN12Adafruit_GFX8drawLineEiiiij+0x10c>
     876:	22 24       	eor	r2, r2
     878:	2a 94       	dec	r2
     87a:	32 2c       	mov	r3, r2
     87c:	2b 81       	ldd	r18, Y+3	; 0x03
     87e:	3c 81       	ldd	r19, Y+4	; 0x04
     880:	82 16       	cp	r8, r18
     882:	93 06       	cpc	r9, r19
     884:	74 f1       	brlt	.+92     	; 0x8e2 <_ZN12Adafruit_GFX8drawLineEiiiij+0x172>
     886:	61 14       	cp	r6, r1
     888:	71 04       	cpc	r7, r1
     88a:	69 f0       	breq	.+26     	; 0x8a6 <_ZN12Adafruit_GFX8drawLineEiiiij+0x136>
     88c:	d5 01       	movw	r26, r10
     88e:	ed 91       	ld	r30, X+
     890:	fc 91       	ld	r31, X
     892:	01 90       	ld	r0, Z+
     894:	f0 81       	ld	r31, Z
     896:	e0 2d       	mov	r30, r0
     898:	97 01       	movw	r18, r14
     89a:	4b 81       	ldd	r20, Y+3	; 0x03
     89c:	5c 81       	ldd	r21, Y+4	; 0x04
     89e:	b6 01       	movw	r22, r12
     8a0:	c5 01       	movw	r24, r10
     8a2:	19 95       	eicall
     8a4:	0c c0       	rjmp	.+24     	; 0x8be <_ZN12Adafruit_GFX8drawLineEiiiij+0x14e>
     8a6:	d5 01       	movw	r26, r10
     8a8:	ed 91       	ld	r30, X+
     8aa:	fc 91       	ld	r31, X
     8ac:	01 90       	ld	r0, Z+
     8ae:	f0 81       	ld	r31, Z
     8b0:	e0 2d       	mov	r30, r0
     8b2:	97 01       	movw	r18, r14
     8b4:	a6 01       	movw	r20, r12
     8b6:	6b 81       	ldd	r22, Y+3	; 0x03
     8b8:	7c 81       	ldd	r23, Y+4	; 0x04
     8ba:	c5 01       	movw	r24, r10
     8bc:	19 95       	eicall
     8be:	04 19       	sub	r16, r4
     8c0:	15 09       	sbc	r17, r5
     8c2:	32 f4       	brpl	.+12     	; 0x8d0 <_ZN12Adafruit_GFX8drawLineEiiiij+0x160>
     8c4:	c2 0c       	add	r12, r2
     8c6:	d3 1c       	adc	r13, r3
     8c8:	e9 81       	ldd	r30, Y+1	; 0x01
     8ca:	fa 81       	ldd	r31, Y+2	; 0x02
     8cc:	0e 0f       	add	r16, r30
     8ce:	1f 1f       	adc	r17, r31
     8d0:	2b 81       	ldd	r18, Y+3	; 0x03
     8d2:	3c 81       	ldd	r19, Y+4	; 0x04
     8d4:	2f 5f       	subi	r18, 0xFF	; 255
     8d6:	3f 4f       	sbci	r19, 0xFF	; 255
     8d8:	2b 83       	std	Y+3, r18	; 0x03
     8da:	3c 83       	std	Y+4, r19	; 0x04
     8dc:	82 16       	cp	r8, r18
     8de:	93 06       	cpc	r9, r19
     8e0:	94 f6       	brge	.-92     	; 0x886 <_ZN12Adafruit_GFX8drawLineEiiiij+0x116>
     8e2:	24 96       	adiw	r28, 0x04	; 4
     8e4:	cd bf       	out	0x3d, r28	; 61
     8e6:	de bf       	out	0x3e, r29	; 62
     8e8:	df 91       	pop	r29
     8ea:	cf 91       	pop	r28
     8ec:	1f 91       	pop	r17
     8ee:	0f 91       	pop	r16
     8f0:	ff 90       	pop	r15
     8f2:	ef 90       	pop	r14
     8f4:	df 90       	pop	r13
     8f6:	cf 90       	pop	r12
     8f8:	bf 90       	pop	r11
     8fa:	af 90       	pop	r10
     8fc:	9f 90       	pop	r9
     8fe:	8f 90       	pop	r8
     900:	7f 90       	pop	r7
     902:	6f 90       	pop	r6
     904:	5f 90       	pop	r5
     906:	4f 90       	pop	r4
     908:	3f 90       	pop	r3
     90a:	2f 90       	pop	r2
     90c:	08 95       	ret

0000090e <_ZN12Adafruit_GFX8drawRectEiiiij>:
     90e:	6f 92       	push	r6
     910:	7f 92       	push	r7
     912:	8f 92       	push	r8
     914:	9f 92       	push	r9
     916:	af 92       	push	r10
     918:	bf 92       	push	r11
     91a:	cf 92       	push	r12
     91c:	df 92       	push	r13
     91e:	ef 92       	push	r14
     920:	ff 92       	push	r15
     922:	0f 93       	push	r16
     924:	1f 93       	push	r17
     926:	cf 93       	push	r28
     928:	df 93       	push	r29
     92a:	ec 01       	movw	r28, r24
     92c:	5b 01       	movw	r10, r22
     92e:	6a 01       	movw	r12, r20
     930:	39 01       	movw	r6, r18
     932:	48 01       	movw	r8, r16
     934:	e8 81       	ld	r30, Y
     936:	f9 81       	ldd	r31, Y+1	; 0x01
     938:	06 80       	ldd	r0, Z+6	; 0x06
     93a:	f7 81       	ldd	r31, Z+7	; 0x07
     93c:	e0 2d       	mov	r30, r0
     93e:	87 01       	movw	r16, r14
     940:	19 95       	eicall
     942:	e8 81       	ld	r30, Y
     944:	f9 81       	ldd	r31, Y+1	; 0x01
     946:	a6 01       	movw	r20, r12
     948:	48 0d       	add	r20, r8
     94a:	59 1d       	adc	r21, r9
     94c:	41 50       	subi	r20, 0x01	; 1
     94e:	51 09       	sbc	r21, r1
     950:	06 80       	ldd	r0, Z+6	; 0x06
     952:	f7 81       	ldd	r31, Z+7	; 0x07
     954:	e0 2d       	mov	r30, r0
     956:	93 01       	movw	r18, r6
     958:	b5 01       	movw	r22, r10
     95a:	ce 01       	movw	r24, r28
     95c:	19 95       	eicall
     95e:	e8 81       	ld	r30, Y
     960:	f9 81       	ldd	r31, Y+1	; 0x01
     962:	04 80       	ldd	r0, Z+4	; 0x04
     964:	f5 81       	ldd	r31, Z+5	; 0x05
     966:	e0 2d       	mov	r30, r0
     968:	94 01       	movw	r18, r8
     96a:	a6 01       	movw	r20, r12
     96c:	b5 01       	movw	r22, r10
     96e:	ce 01       	movw	r24, r28
     970:	19 95       	eicall
     972:	e8 81       	ld	r30, Y
     974:	f9 81       	ldd	r31, Y+1	; 0x01
     976:	a6 0c       	add	r10, r6
     978:	b7 1c       	adc	r11, r7
     97a:	b5 01       	movw	r22, r10
     97c:	61 50       	subi	r22, 0x01	; 1
     97e:	71 09       	sbc	r23, r1
     980:	04 80       	ldd	r0, Z+4	; 0x04
     982:	f5 81       	ldd	r31, Z+5	; 0x05
     984:	e0 2d       	mov	r30, r0
     986:	94 01       	movw	r18, r8
     988:	a6 01       	movw	r20, r12
     98a:	ce 01       	movw	r24, r28
     98c:	19 95       	eicall
     98e:	df 91       	pop	r29
     990:	cf 91       	pop	r28
     992:	1f 91       	pop	r17
     994:	0f 91       	pop	r16
     996:	ff 90       	pop	r15
     998:	ef 90       	pop	r14
     99a:	df 90       	pop	r13
     99c:	cf 90       	pop	r12
     99e:	bf 90       	pop	r11
     9a0:	af 90       	pop	r10
     9a2:	9f 90       	pop	r9
     9a4:	8f 90       	pop	r8
     9a6:	7f 90       	pop	r7
     9a8:	6f 90       	pop	r6
     9aa:	08 95       	ret

000009ac <_ZN12Adafruit_GFX13drawFastVLineEiiij>:
     9ac:	ef 92       	push	r14
     9ae:	ff 92       	push	r15
     9b0:	0f 93       	push	r16
     9b2:	1f 93       	push	r17
     9b4:	dc 01       	movw	r26, r24
     9b6:	ed 91       	ld	r30, X+
     9b8:	fc 91       	ld	r31, X
     9ba:	24 0f       	add	r18, r20
     9bc:	35 1f       	adc	r19, r21
     9be:	21 50       	subi	r18, 0x01	; 1
     9c0:	31 09       	sbc	r19, r1
     9c2:	02 80       	ldd	r0, Z+2	; 0x02
     9c4:	f3 81       	ldd	r31, Z+3	; 0x03
     9c6:	e0 2d       	mov	r30, r0
     9c8:	78 01       	movw	r14, r16
     9ca:	89 01       	movw	r16, r18
     9cc:	9b 01       	movw	r18, r22
     9ce:	19 95       	eicall
     9d0:	1f 91       	pop	r17
     9d2:	0f 91       	pop	r16
     9d4:	ff 90       	pop	r15
     9d6:	ef 90       	pop	r14
     9d8:	08 95       	ret

000009da <_ZN12Adafruit_GFX13drawFastHLineEiiij>:
     9da:	ef 92       	push	r14
     9dc:	ff 92       	push	r15
     9de:	0f 93       	push	r16
     9e0:	1f 93       	push	r17
     9e2:	dc 01       	movw	r26, r24
     9e4:	ed 91       	ld	r30, X+
     9e6:	fc 91       	ld	r31, X
     9e8:	26 0f       	add	r18, r22
     9ea:	37 1f       	adc	r19, r23
     9ec:	21 50       	subi	r18, 0x01	; 1
     9ee:	31 09       	sbc	r19, r1
     9f0:	02 80       	ldd	r0, Z+2	; 0x02
     9f2:	f3 81       	ldd	r31, Z+3	; 0x03
     9f4:	e0 2d       	mov	r30, r0
     9f6:	78 01       	movw	r14, r16
     9f8:	8a 01       	movw	r16, r20
     9fa:	19 95       	eicall
     9fc:	1f 91       	pop	r17
     9fe:	0f 91       	pop	r16
     a00:	ff 90       	pop	r15
     a02:	ef 90       	pop	r14
     a04:	08 95       	ret

00000a06 <_ZN12Adafruit_GFX8fillRectEiiiij>:
     a06:	6f 92       	push	r6
     a08:	7f 92       	push	r7
     a0a:	8f 92       	push	r8
     a0c:	9f 92       	push	r9
     a0e:	af 92       	push	r10
     a10:	bf 92       	push	r11
     a12:	cf 92       	push	r12
     a14:	df 92       	push	r13
     a16:	ef 92       	push	r14
     a18:	ff 92       	push	r15
     a1a:	0f 93       	push	r16
     a1c:	1f 93       	push	r17
     a1e:	cf 93       	push	r28
     a20:	df 93       	push	r29
     a22:	6c 01       	movw	r12, r24
     a24:	eb 01       	movw	r28, r22
     a26:	4a 01       	movw	r8, r20
     a28:	58 01       	movw	r10, r16
     a2a:	3b 01       	movw	r6, r22
     a2c:	62 0e       	add	r6, r18
     a2e:	73 1e       	adc	r7, r19
     a30:	66 15       	cp	r22, r6
     a32:	77 05       	cpc	r23, r7
     a34:	84 f4       	brge	.+32     	; 0xa56 <_ZN12Adafruit_GFX8fillRectEiiiij+0x50>
     a36:	d6 01       	movw	r26, r12
     a38:	ed 91       	ld	r30, X+
     a3a:	fc 91       	ld	r31, X
     a3c:	04 80       	ldd	r0, Z+4	; 0x04
     a3e:	f5 81       	ldd	r31, Z+5	; 0x05
     a40:	e0 2d       	mov	r30, r0
     a42:	87 01       	movw	r16, r14
     a44:	95 01       	movw	r18, r10
     a46:	a4 01       	movw	r20, r8
     a48:	be 01       	movw	r22, r28
     a4a:	c6 01       	movw	r24, r12
     a4c:	19 95       	eicall
     a4e:	21 96       	adiw	r28, 0x01	; 1
     a50:	c6 15       	cp	r28, r6
     a52:	d7 05       	cpc	r29, r7
     a54:	84 f3       	brlt	.-32     	; 0xa36 <_ZN12Adafruit_GFX8fillRectEiiiij+0x30>
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	0f 91       	pop	r16
     a5e:	ff 90       	pop	r15
     a60:	ef 90       	pop	r14
     a62:	df 90       	pop	r13
     a64:	cf 90       	pop	r12
     a66:	bf 90       	pop	r11
     a68:	af 90       	pop	r10
     a6a:	9f 90       	pop	r9
     a6c:	8f 90       	pop	r8
     a6e:	7f 90       	pop	r7
     a70:	6f 90       	pop	r6
     a72:	08 95       	ret

00000a74 <_ZN12Adafruit_GFX10fillScreenEj>:
     a74:	ef 92       	push	r14
     a76:	ff 92       	push	r15
     a78:	0f 93       	push	r16
     a7a:	1f 93       	push	r17
     a7c:	dc 01       	movw	r26, r24
     a7e:	ed 91       	ld	r30, X+
     a80:	fc 91       	ld	r31, X
     a82:	11 97       	sbiw	r26, 0x01	; 1
     a84:	18 96       	adiw	r26, 0x08	; 8
     a86:	0d 91       	ld	r16, X+
     a88:	1c 91       	ld	r17, X
     a8a:	19 97       	sbiw	r26, 0x09	; 9
     a8c:	16 96       	adiw	r26, 0x06	; 6
     a8e:	2d 91       	ld	r18, X+
     a90:	3c 91       	ld	r19, X
     a92:	17 97       	sbiw	r26, 0x07	; 7
     a94:	02 84       	ldd	r0, Z+10	; 0x0a
     a96:	f3 85       	ldd	r31, Z+11	; 0x0b
     a98:	e0 2d       	mov	r30, r0
     a9a:	7b 01       	movw	r14, r22
     a9c:	40 e0       	ldi	r20, 0x00	; 0
     a9e:	50 e0       	ldi	r21, 0x00	; 0
     aa0:	60 e0       	ldi	r22, 0x00	; 0
     aa2:	70 e0       	ldi	r23, 0x00	; 0
     aa4:	19 95       	eicall
     aa6:	1f 91       	pop	r17
     aa8:	0f 91       	pop	r16
     aaa:	ff 90       	pop	r15
     aac:	ef 90       	pop	r14
     aae:	08 95       	ret

00000ab0 <_ZN12Adafruit_GFX13invertDisplayEb>:
     ab0:	08 95       	ret

00000ab2 <_ZN12Adafruit_GFXC1Eii>:
     ab2:	fc 01       	movw	r30, r24
     ab4:	8a e0       	ldi	r24, 0x0A	; 10
     ab6:	90 e2       	ldi	r25, 0x20	; 32
     ab8:	80 83       	st	Z, r24
     aba:	91 83       	std	Z+1, r25	; 0x01
     abc:	62 83       	std	Z+2, r22	; 0x02
     abe:	73 83       	std	Z+3, r23	; 0x03
     ac0:	44 83       	std	Z+4, r20	; 0x04
     ac2:	55 83       	std	Z+5, r21	; 0x05
     ac4:	66 83       	std	Z+6, r22	; 0x06
     ac6:	77 83       	std	Z+7, r23	; 0x07
     ac8:	40 87       	std	Z+8, r20	; 0x08
     aca:	51 87       	std	Z+9, r21	; 0x09
     acc:	13 8a       	std	Z+19, r1	; 0x13
     ace:	12 86       	std	Z+10, r1	; 0x0a
     ad0:	13 86       	std	Z+11, r1	; 0x0b
     ad2:	14 86       	std	Z+12, r1	; 0x0c
     ad4:	15 86       	std	Z+13, r1	; 0x0d
     ad6:	21 e0       	ldi	r18, 0x01	; 1
     ad8:	22 8b       	std	Z+18, r18	; 0x12
     ada:	8f ef       	ldi	r24, 0xFF	; 255
     adc:	9f ef       	ldi	r25, 0xFF	; 255
     ade:	80 8b       	std	Z+16, r24	; 0x10
     ae0:	91 8b       	std	Z+17, r25	; 0x11
     ae2:	86 87       	std	Z+14, r24	; 0x0e
     ae4:	97 87       	std	Z+15, r25	; 0x0f
     ae6:	24 8b       	std	Z+20, r18	; 0x14
     ae8:	08 95       	ret

00000aea <_ZN12Adafruit_GFX8drawCharEiihjjh>:
     aea:	2f 92       	push	r2
     aec:	3f 92       	push	r3
     aee:	4f 92       	push	r4
     af0:	5f 92       	push	r5
     af2:	6f 92       	push	r6
     af4:	7f 92       	push	r7
     af6:	8f 92       	push	r8
     af8:	9f 92       	push	r9
     afa:	af 92       	push	r10
     afc:	bf 92       	push	r11
     afe:	cf 92       	push	r12
     b00:	df 92       	push	r13
     b02:	ef 92       	push	r14
     b04:	ff 92       	push	r15
     b06:	0f 93       	push	r16
     b08:	1f 93       	push	r17
     b0a:	cf 93       	push	r28
     b0c:	df 93       	push	r29
     b0e:	cd b7       	in	r28, 0x3d	; 61
     b10:	de b7       	in	r29, 0x3e	; 62
     b12:	60 97       	sbiw	r28, 0x10	; 16
     b14:	cd bf       	out	0x3d, r28	; 61
     b16:	de bf       	out	0x3e, r29	; 62
     b18:	4c 01       	movw	r8, r24
     b1a:	09 83       	std	Y+1, r16	; 0x01
     b1c:	1a 83       	std	Y+2, r17	; 0x02
     b1e:	ec 82       	std	Y+4, r14	; 0x04
     b20:	fd 82       	std	Y+5, r15	; 0x05
     b22:	cb 82       	std	Y+3, r12	; 0x03
     b24:	dc 01       	movw	r26, r24
     b26:	16 96       	adiw	r26, 0x06	; 6
     b28:	8d 91       	ld	r24, X+
     b2a:	9c 91       	ld	r25, X
     b2c:	17 97       	sbiw	r26, 0x07	; 7
     b2e:	68 17       	cp	r22, r24
     b30:	79 07       	cpc	r23, r25
     b32:	0c f0       	brlt	.+2      	; 0xb36 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x4c>
     b34:	c6 c0       	rjmp	.+396    	; 0xcc2 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     b36:	18 96       	adiw	r26, 0x08	; 8
     b38:	8d 91       	ld	r24, X+
     b3a:	9c 91       	ld	r25, X
     b3c:	19 97       	sbiw	r26, 0x09	; 9
     b3e:	48 17       	cp	r20, r24
     b40:	59 07       	cpc	r21, r25
     b42:	0c f0       	brlt	.+2      	; 0xb46 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x5c>
     b44:	be c0       	rjmp	.+380    	; 0xcc2 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     b46:	6c 2c       	mov	r6, r12
     b48:	71 2c       	mov	r7, r1
     b4a:	c3 01       	movw	r24, r6
     b4c:	88 0f       	add	r24, r24
     b4e:	99 1f       	adc	r25, r25
     b50:	86 0d       	add	r24, r6
     b52:	97 1d       	adc	r25, r7
     b54:	88 0f       	add	r24, r24
     b56:	99 1f       	adc	r25, r25
     b58:	86 0f       	add	r24, r22
     b5a:	97 1f       	adc	r25, r23
     b5c:	01 97       	sbiw	r24, 0x01	; 1
     b5e:	99 23       	and	r25, r25
     b60:	0c f4       	brge	.+2      	; 0xb64 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x7a>
     b62:	af c0       	rjmp	.+350    	; 0xcc2 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     b64:	c3 01       	movw	r24, r6
     b66:	88 0f       	add	r24, r24
     b68:	99 1f       	adc	r25, r25
     b6a:	88 0f       	add	r24, r24
     b6c:	99 1f       	adc	r25, r25
     b6e:	88 0f       	add	r24, r24
     b70:	99 1f       	adc	r25, r25
     b72:	84 0f       	add	r24, r20
     b74:	95 1f       	adc	r25, r21
     b76:	01 97       	sbiw	r24, 0x01	; 1
     b78:	99 23       	and	r25, r25
     b7a:	0c f4       	brge	.+2      	; 0xb7e <_ZN12Adafruit_GFX8drawCharEiihjjh+0x94>
     b7c:	a2 c0       	rjmp	.+324    	; 0xcc2 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     b7e:	30 e0       	ldi	r19, 0x00	; 0
     b80:	c9 01       	movw	r24, r18
     b82:	88 0f       	add	r24, r24
     b84:	99 1f       	adc	r25, r25
     b86:	88 0f       	add	r24, r24
     b88:	99 1f       	adc	r25, r25
     b8a:	28 0f       	add	r18, r24
     b8c:	39 1f       	adc	r19, r25
     b8e:	13 01       	movw	r2, r6
     b90:	6e 83       	std	Y+6, r22	; 0x06
     b92:	7f 83       	std	Y+7, r23	; 0x07
     b94:	68 87       	std	Y+8, r22	; 0x08
     b96:	79 87       	std	Y+9, r23	; 0x09
     b98:	1a 86       	std	Y+10, r1	; 0x0a
     b9a:	26 5f       	subi	r18, 0xF6	; 246
     b9c:	3d 4f       	sbci	r19, 0xFD	; 253
     b9e:	f9 01       	movw	r30, r18
     ba0:	e6 1b       	sub	r30, r22
     ba2:	f7 0b       	sbc	r31, r23
     ba4:	ed 87       	std	Y+13, r30	; 0x0d
     ba6:	fe 87       	std	Y+14, r31	; 0x0e
     ba8:	4b 87       	std	Y+11, r20	; 0x0b
     baa:	5c 87       	std	Y+12, r21	; 0x0c
     bac:	fa 85       	ldd	r31, Y+10	; 0x0a
     bae:	f5 30       	cpi	r31, 0x05	; 5
     bb0:	09 f4       	brne	.+2      	; 0xbb4 <_ZN12Adafruit_GFX8drawCharEiihjjh+0xca>
     bb2:	77 c0       	rjmp	.+238    	; 0xca2 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1b8>
     bb4:	ed 85       	ldd	r30, Y+13	; 0x0d
     bb6:	fe 85       	ldd	r31, Y+14	; 0x0e
     bb8:	2e 81       	ldd	r18, Y+6	; 0x06
     bba:	3f 81       	ldd	r19, Y+7	; 0x07
     bbc:	e2 0f       	add	r30, r18
     bbe:	f3 1f       	adc	r31, r19
     bc0:	04 91       	lpm	r16, Z
     bc2:	70 c0       	rjmp	.+224    	; 0xca4 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1ba>
     bc4:	90 fe       	sbrs	r9, 0
     bc6:	25 c0       	rjmp	.+74     	; 0xc12 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x128>
     bc8:	3b 81       	ldd	r19, Y+3	; 0x03
     bca:	31 30       	cpi	r19, 0x01	; 1
     bcc:	81 f4       	brne	.+32     	; 0xbee <_ZN12Adafruit_GFX8drawCharEiihjjh+0x104>
     bce:	af 85       	ldd	r26, Y+15	; 0x0f
     bd0:	b8 89       	ldd	r27, Y+16	; 0x10
     bd2:	ed 91       	ld	r30, X+
     bd4:	fc 91       	ld	r31, X
     bd6:	11 97       	sbiw	r26, 0x01	; 1
     bd8:	01 90       	ld	r0, Z+
     bda:	f0 81       	ld	r31, Z
     bdc:	e0 2d       	mov	r30, r0
     bde:	29 81       	ldd	r18, Y+1	; 0x01
     be0:	3a 81       	ldd	r19, Y+2	; 0x02
     be2:	a5 01       	movw	r20, r10
     be4:	6e 81       	ldd	r22, Y+6	; 0x06
     be6:	7f 81       	ldd	r23, Y+7	; 0x07
     be8:	cd 01       	movw	r24, r26
     bea:	19 95       	eicall
     bec:	3d c0       	rjmp	.+122    	; 0xc68 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     bee:	af 85       	ldd	r26, Y+15	; 0x0f
     bf0:	b8 89       	ldd	r27, Y+16	; 0x10
     bf2:	ed 91       	ld	r30, X+
     bf4:	fc 91       	ld	r31, X
     bf6:	11 97       	sbiw	r26, 0x01	; 1
     bf8:	02 84       	ldd	r0, Z+10	; 0x0a
     bfa:	f3 85       	ldd	r31, Z+11	; 0x0b
     bfc:	e0 2d       	mov	r30, r0
     bfe:	e9 80       	ldd	r14, Y+1	; 0x01
     c00:	fa 80       	ldd	r15, Y+2	; 0x02
     c02:	83 01       	movw	r16, r6
     c04:	93 01       	movw	r18, r6
     c06:	a6 01       	movw	r20, r12
     c08:	68 2d       	mov	r22, r8
     c0a:	74 2d       	mov	r23, r4
     c0c:	cd 01       	movw	r24, r26
     c0e:	19 95       	eicall
     c10:	2b c0       	rjmp	.+86     	; 0xc68 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     c12:	ec 81       	ldd	r30, Y+4	; 0x04
     c14:	fd 81       	ldd	r31, Y+5	; 0x05
     c16:	29 81       	ldd	r18, Y+1	; 0x01
     c18:	3a 81       	ldd	r19, Y+2	; 0x02
     c1a:	e2 17       	cp	r30, r18
     c1c:	f3 07       	cpc	r31, r19
     c1e:	21 f1       	breq	.+72     	; 0xc68 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     c20:	3b 81       	ldd	r19, Y+3	; 0x03
     c22:	31 30       	cpi	r19, 0x01	; 1
     c24:	81 f4       	brne	.+32     	; 0xc46 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x15c>
     c26:	af 85       	ldd	r26, Y+15	; 0x0f
     c28:	b8 89       	ldd	r27, Y+16	; 0x10
     c2a:	ed 91       	ld	r30, X+
     c2c:	fc 91       	ld	r31, X
     c2e:	11 97       	sbiw	r26, 0x01	; 1
     c30:	01 90       	ld	r0, Z+
     c32:	f0 81       	ld	r31, Z
     c34:	e0 2d       	mov	r30, r0
     c36:	2c 81       	ldd	r18, Y+4	; 0x04
     c38:	3d 81       	ldd	r19, Y+5	; 0x05
     c3a:	a5 01       	movw	r20, r10
     c3c:	6e 81       	ldd	r22, Y+6	; 0x06
     c3e:	7f 81       	ldd	r23, Y+7	; 0x07
     c40:	cd 01       	movw	r24, r26
     c42:	19 95       	eicall
     c44:	11 c0       	rjmp	.+34     	; 0xc68 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x17e>
     c46:	af 85       	ldd	r26, Y+15	; 0x0f
     c48:	b8 89       	ldd	r27, Y+16	; 0x10
     c4a:	ed 91       	ld	r30, X+
     c4c:	fc 91       	ld	r31, X
     c4e:	11 97       	sbiw	r26, 0x01	; 1
     c50:	02 84       	ldd	r0, Z+10	; 0x0a
     c52:	f3 85       	ldd	r31, Z+11	; 0x0b
     c54:	e0 2d       	mov	r30, r0
     c56:	ec 80       	ldd	r14, Y+4	; 0x04
     c58:	fd 80       	ldd	r15, Y+5	; 0x05
     c5a:	83 01       	movw	r16, r6
     c5c:	93 01       	movw	r18, r6
     c5e:	a6 01       	movw	r20, r12
     c60:	68 2d       	mov	r22, r8
     c62:	74 2d       	mov	r23, r4
     c64:	cd 01       	movw	r24, r26
     c66:	19 95       	eicall
     c68:	96 94       	lsr	r9
     c6a:	5a 94       	dec	r5
     c6c:	c2 0c       	add	r12, r2
     c6e:	d3 1c       	adc	r13, r3
     c70:	bf ef       	ldi	r27, 0xFF	; 255
     c72:	ab 1a       	sub	r10, r27
     c74:	bb 0a       	sbc	r11, r27
     c76:	51 10       	cpse	r5, r1
     c78:	a5 cf       	rjmp	.-182    	; 0xbc4 <_ZN12Adafruit_GFX8drawCharEiihjjh+0xda>
     c7a:	8f 84       	ldd	r8, Y+15	; 0x0f
     c7c:	98 88       	ldd	r9, Y+16	; 0x10
     c7e:	ea 85       	ldd	r30, Y+10	; 0x0a
     c80:	ef 5f       	subi	r30, 0xFF	; 255
     c82:	ea 87       	std	Y+10, r30	; 0x0a
     c84:	28 85       	ldd	r18, Y+8	; 0x08
     c86:	39 85       	ldd	r19, Y+9	; 0x09
     c88:	22 0d       	add	r18, r2
     c8a:	33 1d       	adc	r19, r3
     c8c:	28 87       	std	Y+8, r18	; 0x08
     c8e:	39 87       	std	Y+9, r19	; 0x09
     c90:	8e 81       	ldd	r24, Y+6	; 0x06
     c92:	9f 81       	ldd	r25, Y+7	; 0x07
     c94:	01 96       	adiw	r24, 0x01	; 1
     c96:	8e 83       	std	Y+6, r24	; 0x06
     c98:	9f 83       	std	Y+7, r25	; 0x07
     c9a:	e6 30       	cpi	r30, 0x06	; 6
     c9c:	09 f0       	breq	.+2      	; 0xca0 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1b6>
     c9e:	86 cf       	rjmp	.-244    	; 0xbac <_ZN12Adafruit_GFX8drawCharEiihjjh+0xc2>
     ca0:	10 c0       	rjmp	.+32     	; 0xcc2 <_ZN12Adafruit_GFX8drawCharEiihjjh+0x1d8>
     ca2:	00 e0       	ldi	r16, 0x00	; 0
     ca4:	18 85       	ldd	r17, Y+8	; 0x08
     ca6:	49 84       	ldd	r4, Y+9	; 0x09
     ca8:	cb 84       	ldd	r12, Y+11	; 0x0b
     caa:	dc 84       	ldd	r13, Y+12	; 0x0c
     cac:	ac 2c       	mov	r10, r12
     cae:	bd 2c       	mov	r11, r13
     cb0:	68 94       	set
     cb2:	55 24       	eor	r5, r5
     cb4:	53 f8       	bld	r5, 3
     cb6:	c4 01       	movw	r24, r8
     cb8:	90 2e       	mov	r9, r16
     cba:	81 2e       	mov	r8, r17
     cbc:	8f 87       	std	Y+15, r24	; 0x0f
     cbe:	98 8b       	std	Y+16, r25	; 0x10
     cc0:	81 cf       	rjmp	.-254    	; 0xbc4 <_ZN12Adafruit_GFX8drawCharEiihjjh+0xda>
     cc2:	60 96       	adiw	r28, 0x10	; 16
     cc4:	cd bf       	out	0x3d, r28	; 61
     cc6:	de bf       	out	0x3e, r29	; 62
     cc8:	df 91       	pop	r29
     cca:	cf 91       	pop	r28
     ccc:	1f 91       	pop	r17
     cce:	0f 91       	pop	r16
     cd0:	ff 90       	pop	r15
     cd2:	ef 90       	pop	r14
     cd4:	df 90       	pop	r13
     cd6:	cf 90       	pop	r12
     cd8:	bf 90       	pop	r11
     cda:	af 90       	pop	r10
     cdc:	9f 90       	pop	r9
     cde:	8f 90       	pop	r8
     ce0:	7f 90       	pop	r7
     ce2:	6f 90       	pop	r6
     ce4:	5f 90       	pop	r5
     ce6:	4f 90       	pop	r4
     ce8:	3f 90       	pop	r3
     cea:	2f 90       	pop	r2
     cec:	08 95       	ret

00000cee <_ZN12Adafruit_GFX5writeEh>:
     cee:	cf 92       	push	r12
     cf0:	ef 92       	push	r14
     cf2:	ff 92       	push	r15
     cf4:	0f 93       	push	r16
     cf6:	1f 93       	push	r17
     cf8:	cf 93       	push	r28
     cfa:	df 93       	push	r29
     cfc:	ec 01       	movw	r28, r24
     cfe:	6a 30       	cpi	r22, 0x0A	; 10
     d00:	69 f4       	brne	.+26     	; 0xd1c <_ZN12Adafruit_GFX5writeEh+0x2e>
     d02:	2a 89       	ldd	r18, Y+18	; 0x12
     d04:	8c 85       	ldd	r24, Y+12	; 0x0c
     d06:	9d 85       	ldd	r25, Y+13	; 0x0d
     d08:	38 e0       	ldi	r19, 0x08	; 8
     d0a:	23 9f       	mul	r18, r19
     d0c:	80 0d       	add	r24, r0
     d0e:	91 1d       	adc	r25, r1
     d10:	11 24       	eor	r1, r1
     d12:	8c 87       	std	Y+12, r24	; 0x0c
     d14:	9d 87       	std	Y+13, r25	; 0x0d
     d16:	1a 86       	std	Y+10, r1	; 0x0a
     d18:	1b 86       	std	Y+11, r1	; 0x0b
     d1a:	3c c0       	rjmp	.+120    	; 0xd94 <_ZN12Adafruit_GFX5writeEh+0xa6>
     d1c:	6d 30       	cpi	r22, 0x0D	; 13
     d1e:	d1 f1       	breq	.+116    	; 0xd94 <_ZN12Adafruit_GFX5writeEh+0xa6>
     d20:	e8 88       	ldd	r14, Y+16	; 0x10
     d22:	f9 88       	ldd	r15, Y+17	; 0x11
     d24:	0e 85       	ldd	r16, Y+14	; 0x0e
     d26:	1f 85       	ldd	r17, Y+15	; 0x0f
     d28:	4c 85       	ldd	r20, Y+12	; 0x0c
     d2a:	5d 85       	ldd	r21, Y+13	; 0x0d
     d2c:	8a 85       	ldd	r24, Y+10	; 0x0a
     d2e:	9b 85       	ldd	r25, Y+11	; 0x0b
     d30:	ca 88       	ldd	r12, Y+18	; 0x12
     d32:	26 2f       	mov	r18, r22
     d34:	bc 01       	movw	r22, r24
     d36:	ce 01       	movw	r24, r28
     d38:	d8 de       	rcall	.-592    	; 0xaea <_ZN12Adafruit_GFX8drawCharEiihjjh>
     d3a:	2a 89       	ldd	r18, Y+18	; 0x12
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	c9 01       	movw	r24, r18
     d40:	88 0f       	add	r24, r24
     d42:	99 1f       	adc	r25, r25
     d44:	82 0f       	add	r24, r18
     d46:	93 1f       	adc	r25, r19
     d48:	88 0f       	add	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	4a 85       	ldd	r20, Y+10	; 0x0a
     d4e:	5b 85       	ldd	r21, Y+11	; 0x0b
     d50:	84 0f       	add	r24, r20
     d52:	95 1f       	adc	r25, r21
     d54:	8a 87       	std	Y+10, r24	; 0x0a
     d56:	9b 87       	std	Y+11, r25	; 0x0b
     d58:	4c 89       	ldd	r20, Y+20	; 0x14
     d5a:	44 23       	and	r20, r20
     d5c:	d9 f0       	breq	.+54     	; 0xd94 <_ZN12Adafruit_GFX5writeEh+0xa6>
     d5e:	4a ef       	ldi	r20, 0xFA	; 250
     d60:	42 03       	mulsu	r20, r18
     d62:	b0 01       	movw	r22, r0
     d64:	43 9f       	mul	r20, r19
     d66:	70 0d       	add	r23, r0
     d68:	11 24       	eor	r1, r1
     d6a:	4e 81       	ldd	r20, Y+6	; 0x06
     d6c:	5f 81       	ldd	r21, Y+7	; 0x07
     d6e:	46 0f       	add	r20, r22
     d70:	57 1f       	adc	r21, r23
     d72:	48 17       	cp	r20, r24
     d74:	59 07       	cpc	r21, r25
     d76:	74 f4       	brge	.+28     	; 0xd94 <_ZN12Adafruit_GFX5writeEh+0xa6>
     d78:	22 0f       	add	r18, r18
     d7a:	33 1f       	adc	r19, r19
     d7c:	22 0f       	add	r18, r18
     d7e:	33 1f       	adc	r19, r19
     d80:	22 0f       	add	r18, r18
     d82:	33 1f       	adc	r19, r19
     d84:	8c 85       	ldd	r24, Y+12	; 0x0c
     d86:	9d 85       	ldd	r25, Y+13	; 0x0d
     d88:	28 0f       	add	r18, r24
     d8a:	39 1f       	adc	r19, r25
     d8c:	2c 87       	std	Y+12, r18	; 0x0c
     d8e:	3d 87       	std	Y+13, r19	; 0x0d
     d90:	1a 86       	std	Y+10, r1	; 0x0a
     d92:	1b 86       	std	Y+11, r1	; 0x0b
     d94:	df 91       	pop	r29
     d96:	cf 91       	pop	r28
     d98:	1f 91       	pop	r17
     d9a:	0f 91       	pop	r16
     d9c:	ff 90       	pop	r15
     d9e:	ef 90       	pop	r14
     da0:	cf 90       	pop	r12
     da2:	08 95       	ret

00000da4 <_ZN12Adafruit_GFX9setCursorEii>:
     da4:	fc 01       	movw	r30, r24
     da6:	62 87       	std	Z+10, r22	; 0x0a
     da8:	73 87       	std	Z+11, r23	; 0x0b
     daa:	44 87       	std	Z+12, r20	; 0x0c
     dac:	55 87       	std	Z+13, r21	; 0x0d
     dae:	08 95       	ret

00000db0 <_ZN12Adafruit_GFX11setTextSizeEh>:
     db0:	61 11       	cpse	r22, r1
     db2:	01 c0       	rjmp	.+2      	; 0xdb6 <_ZN12Adafruit_GFX11setTextSizeEh+0x6>
     db4:	61 e0       	ldi	r22, 0x01	; 1
     db6:	fc 01       	movw	r30, r24
     db8:	62 8b       	std	Z+18, r22	; 0x12
     dba:	08 95       	ret

00000dbc <_ZN12Adafruit_GFX12setTextColorEjj>:
}

void Adafruit_GFX::setTextColor(uint16_t c, uint16_t b) {
  textcolor   = c;
     dbc:	fc 01       	movw	r30, r24
     dbe:	66 87       	std	Z+14, r22	; 0x0e
     dc0:	77 87       	std	Z+15, r23	; 0x0f
  textbgcolor = b; 
     dc2:	40 8b       	std	Z+16, r20	; 0x10
     dc4:	51 8b       	std	Z+17, r21	; 0x11
     dc6:	08 95       	ret

00000dc8 <_ZN12Adafruit_GFX11setTextWrapEb>:
}

void Adafruit_GFX::setTextWrap(bool w) {
  wrap = w;
     dc8:	fc 01       	movw	r30, r24
     dca:	64 8b       	std	Z+20, r22	; 0x14
     dcc:	08 95       	ret

00000dce <_ZN5BTOBD13interceptByteEv>:
	cmd_resp_size[1] = 15;
	cmd_resp_size[2] = 3;
	cmd_resp_size[3] = 5;*/

} //BTOBD
char BTOBD::interceptByte() {
     dce:	1f 93       	push	r17
     dd0:	cf 93       	push	r28
     dd2:	df 93       	push	r29
     dd4:	ec 01       	movw	r28, r24
	char c = driver.getUARTPort()->DATA;
     dd6:	09 d7       	rcall	.+3602   	; 0x1bea <_ZN10UartDriver11getUARTPortEv>
     dd8:	fc 01       	movw	r30, r24
     dda:	10 81       	ld	r17, Z
	driver.rcvByte(c);
     ddc:	61 2f       	mov	r22, r17
     dde:	ce 01       	movw	r24, r28
     de0:	fb d6       	rcall	.+3574   	; 0x1bd8 <_ZN10UartDriver7rcvByteEc>
	return c;
}
     de2:	81 2f       	mov	r24, r17
     de4:	df 91       	pop	r29
     de6:	cf 91       	pop	r28
     de8:	1f 91       	pop	r17
     dea:	08 95       	ret

00000dec <_ZN5BTOBD9handleDREEv>:

void BTOBD::handleDRE() {
     dec:	0f 93       	push	r16
     dee:	1f 93       	push	r17
     df0:	cf 93       	push	r28
     df2:	df 93       	push	r29
     df4:	ec 01       	movw	r28, r24
	if (!driver.txIsEmpty()) {
     df6:	f3 d6       	rcall	.+3558   	; 0x1bde <_ZN10UartDriver9txIsEmptyEv>
     df8:	81 11       	cpse	r24, r1
     dfa:	08 c0       	rjmp	.+16     	; 0xe0c <_ZN5BTOBD9handleDREEv+0x20>
		driver.getUARTPort()->DATA = driver.txDequeue();
     dfc:	ce 01       	movw	r24, r28
     dfe:	f5 d6       	rcall	.+3562   	; 0x1bea <_ZN10UartDriver11getUARTPortEv>
     e00:	8c 01       	movw	r16, r24
     e02:	ce 01       	movw	r24, r28
     e04:	ef d6       	rcall	.+3550   	; 0x1be4 <_ZN10UartDriver9txDequeueEv>
     e06:	f8 01       	movw	r30, r16
     e08:	80 83       	st	Z, r24
     e0a:	06 c0       	rjmp	.+12     	; 0xe18 <_ZN5BTOBD9handleDREEv+0x2c>
		} else {
		driver.getUARTPort()->CTRLA &= ~(0x03); //Disable DREint
     e0c:	ce 01       	movw	r24, r28
     e0e:	ed d6       	rcall	.+3546   	; 0x1bea <_ZN10UartDriver11getUARTPortEv>
     e10:	fc 01       	movw	r30, r24
     e12:	23 81       	ldd	r18, Z+3	; 0x03
     e14:	2c 7f       	andi	r18, 0xFC	; 252
     e16:	23 83       	std	Z+3, r18	; 0x03
	}
}
     e18:	df 91       	pop	r29
     e1a:	cf 91       	pop	r28
     e1c:	1f 91       	pop	r17
     e1e:	0f 91       	pop	r16
     e20:	08 95       	ret

00000e22 <_ZN9ByteArrayC1Ei>:
	this->_size = size;
	array = (char *) malloc(sizeof(char) * size);
 }

 ByteArray::~ByteArray() {
	free(array);
     e22:	cf 93       	push	r28
     e24:	df 93       	push	r29
     e26:	ec 01       	movw	r28, r24
     e28:	cb 01       	movw	r24, r22
     e2a:	68 83       	st	Y, r22
     e2c:	79 83       	std	Y+1, r23	; 0x01
     e2e:	0e 94 28 0f 	call	0x1e50	; 0x1e50 <malloc>
     e32:	8a 83       	std	Y+2, r24	; 0x02
     e34:	9b 83       	std	Y+3, r25	; 0x03
     e36:	df 91       	pop	r29
     e38:	cf 91       	pop	r28
     e3a:	08 95       	ret

00000e3c <_ZN9ByteArray2atEi>:
 }

char ByteArray::at(int i) {
	return array[i];
     e3c:	fc 01       	movw	r30, r24
     e3e:	82 81       	ldd	r24, Z+2	; 0x02
     e40:	93 81       	ldd	r25, Z+3	; 0x03
     e42:	fc 01       	movw	r30, r24
     e44:	e6 0f       	add	r30, r22
     e46:	f7 1f       	adc	r31, r23
 }
     e48:	80 81       	ld	r24, Z
     e4a:	08 95       	ret

00000e4c <_ZN9ByteArray3setEic>:
 void ByteArray::set(int i, char c) {
	array[i] = c;
     e4c:	fc 01       	movw	r30, r24
     e4e:	82 81       	ldd	r24, Z+2	; 0x02
     e50:	93 81       	ldd	r25, Z+3	; 0x03
     e52:	fc 01       	movw	r30, r24
     e54:	e6 0f       	add	r30, r22
     e56:	f7 1f       	adc	r31, r23
     e58:	40 83       	st	Z, r20
     e5a:	08 95       	ret

00000e5c <_ZN9ByteQueueC1Ei>:
 *  Author: ee63pc3-user
 */ 

 #include "ByteQueue.h"

 ByteQueue::ByteQueue(int bufferSize) : queue(bufferSize){
     e5c:	0f 93       	push	r16
     e5e:	1f 93       	push	r17
     e60:	cf 93       	push	r28
     e62:	df 93       	push	r29
     e64:	ec 01       	movw	r28, r24
     e66:	8b 01       	movw	r16, r22
     e68:	08 96       	adiw	r24, 0x08	; 8
     e6a:	db df       	rcall	.-74     	; 0xe22 <_ZN9ByteArrayC1Ei>
	max_size = bufferSize;
     e6c:	08 83       	st	Y, r16
     e6e:	19 83       	std	Y+1, r17	; 0x01
	wptr = 0;
     e70:	1c 82       	std	Y+4, r1	; 0x04
     e72:	1d 82       	std	Y+5, r1	; 0x05
	rptr = 0;
     e74:	1e 82       	std	Y+6, r1	; 0x06
     e76:	1f 82       	std	Y+7, r1	; 0x07
	numitems = 0;
     e78:	1a 82       	std	Y+2, r1	; 0x02
     e7a:	1b 82       	std	Y+3, r1	; 0x03
 }
     e7c:	df 91       	pop	r29
     e7e:	cf 91       	pop	r28
     e80:	1f 91       	pop	r17
     e82:	0f 91       	pop	r16
     e84:	08 95       	ret

00000e86 <_ZN9ByteQueue7enqueueEc>:



 void ByteQueue::enqueue(char element){
     e86:	cf 93       	push	r28
     e88:	df 93       	push	r29
     e8a:	ec 01       	movw	r28, r24
	 	numitems--;
 	}
	return element;
 }

 bool ByteQueue::isFull() {return numitems == max_size;}
     e8c:	2a 81       	ldd	r18, Y+2	; 0x02
     e8e:	3b 81       	ldd	r19, Y+3	; 0x03
 }



 void ByteQueue::enqueue(char element){
	if (!isFull()) {
     e90:	88 81       	ld	r24, Y
     e92:	99 81       	ldd	r25, Y+1	; 0x01
     e94:	28 17       	cp	r18, r24
     e96:	39 07       	cpc	r19, r25
     e98:	e1 f0       	breq	.+56     	; 0xed2 <_ZN9ByteQueue7enqueueEc+0x4c>
		queue.set(wptr, element);
     e9a:	8c 81       	ldd	r24, Y+4	; 0x04
     e9c:	9d 81       	ldd	r25, Y+5	; 0x05
     e9e:	46 2f       	mov	r20, r22
     ea0:	bc 01       	movw	r22, r24
     ea2:	ce 01       	movw	r24, r28
     ea4:	08 96       	adiw	r24, 0x08	; 8
     ea6:	d2 df       	rcall	.-92     	; 0xe4c <_ZN9ByteArray3setEic>
		//Took this out because modulus is very expensive on micro
		//(Since we're incrementing by one every time, we don't have to deal with any cases where our
		// pointer is over 2*max_size - 1, this should be more efficient)
		//wptr = (wptr + 1) % (max_size-1);
		if ((++wptr) >= max_size) wptr = wptr - max_size;
     ea8:	8c 81       	ldd	r24, Y+4	; 0x04
     eaa:	9d 81       	ldd	r25, Y+5	; 0x05
     eac:	01 96       	adiw	r24, 0x01	; 1
     eae:	8c 83       	std	Y+4, r24	; 0x04
     eb0:	9d 83       	std	Y+5, r25	; 0x05
     eb2:	28 81       	ld	r18, Y
     eb4:	39 81       	ldd	r19, Y+1	; 0x01
     eb6:	82 17       	cp	r24, r18
     eb8:	93 07       	cpc	r25, r19
     eba:	34 f0       	brlt	.+12     	; 0xec8 <_ZN9ByteQueue7enqueueEc+0x42>
     ebc:	8c 81       	ldd	r24, Y+4	; 0x04
     ebe:	9d 81       	ldd	r25, Y+5	; 0x05
     ec0:	82 1b       	sub	r24, r18
     ec2:	93 0b       	sbc	r25, r19
     ec4:	8c 83       	std	Y+4, r24	; 0x04
     ec6:	9d 83       	std	Y+5, r25	; 0x05
		numitems++;
     ec8:	8a 81       	ldd	r24, Y+2	; 0x02
     eca:	9b 81       	ldd	r25, Y+3	; 0x03
     ecc:	01 96       	adiw	r24, 0x01	; 1
     ece:	8a 83       	std	Y+2, r24	; 0x02
     ed0:	9b 83       	std	Y+3, r25	; 0x03
	}
 }
     ed2:	df 91       	pop	r29
     ed4:	cf 91       	pop	r28
     ed6:	08 95       	ret

00000ed8 <_ZN9ByteQueue7dequeueEv>:

 char ByteQueue::dequeue(){
     ed8:	cf 93       	push	r28
     eda:	df 93       	push	r29
     edc:	ec 01       	movw	r28, r24
 	}
	return element;
 }

 bool ByteQueue::isFull() {return numitems == max_size;}
 bool ByteQueue::isEmpty(){return numitems == 0;}
     ede:	8a 81       	ldd	r24, Y+2	; 0x02
     ee0:	9b 81       	ldd	r25, Y+3	; 0x03
	}
 }

 char ByteQueue::dequeue(){
 	char element = '\0';
	if (!isEmpty()) {
     ee2:	89 2b       	or	r24, r25
     ee4:	e9 f0       	breq	.+58     	; 0xf20 <_ZN9ByteQueue7dequeueEv+0x48>
	 	element = queue.at(rptr);
     ee6:	6e 81       	ldd	r22, Y+6	; 0x06
     ee8:	7f 81       	ldd	r23, Y+7	; 0x07
     eea:	ce 01       	movw	r24, r28
     eec:	08 96       	adiw	r24, 0x08	; 8
     eee:	a6 df       	rcall	.-180    	; 0xe3c <_ZN9ByteArray2atEi>
		//Read comment in enqueue()
	 	//rptr = (rptr + 1) % (max_size-1)
		if ((++rptr) >= max_size) rptr = rptr - max_size;
     ef0:	2e 81       	ldd	r18, Y+6	; 0x06
     ef2:	3f 81       	ldd	r19, Y+7	; 0x07
     ef4:	2f 5f       	subi	r18, 0xFF	; 255
     ef6:	3f 4f       	sbci	r19, 0xFF	; 255
     ef8:	2e 83       	std	Y+6, r18	; 0x06
     efa:	3f 83       	std	Y+7, r19	; 0x07
     efc:	48 81       	ld	r20, Y
     efe:	59 81       	ldd	r21, Y+1	; 0x01
     f00:	24 17       	cp	r18, r20
     f02:	35 07       	cpc	r19, r21
     f04:	34 f0       	brlt	.+12     	; 0xf12 <_ZN9ByteQueue7dequeueEv+0x3a>
     f06:	2e 81       	ldd	r18, Y+6	; 0x06
     f08:	3f 81       	ldd	r19, Y+7	; 0x07
     f0a:	24 1b       	sub	r18, r20
     f0c:	35 0b       	sbc	r19, r21
     f0e:	2e 83       	std	Y+6, r18	; 0x06
     f10:	3f 83       	std	Y+7, r19	; 0x07
	 	numitems--;
     f12:	2a 81       	ldd	r18, Y+2	; 0x02
     f14:	3b 81       	ldd	r19, Y+3	; 0x03
     f16:	21 50       	subi	r18, 0x01	; 1
     f18:	31 09       	sbc	r19, r1
     f1a:	2a 83       	std	Y+2, r18	; 0x02
     f1c:	3b 83       	std	Y+3, r19	; 0x03
     f1e:	01 c0       	rjmp	.+2      	; 0xf22 <_ZN9ByteQueue7dequeueEv+0x4a>
		numitems++;
	}
 }

 char ByteQueue::dequeue(){
 	char element = '\0';
     f20:	80 e0       	ldi	r24, 0x00	; 0
	 	//rptr = (rptr + 1) % (max_size-1)
		if ((++rptr) >= max_size) rptr = rptr - max_size;
	 	numitems--;
 	}
	return element;
 }
     f22:	df 91       	pop	r29
     f24:	cf 91       	pop	r28
     f26:	08 95       	ret

00000f28 <_ZN9ByteQueue6isFullEv>:

 bool ByteQueue::isFull() {return numitems == max_size;}
     f28:	fc 01       	movw	r30, r24
     f2a:	42 81       	ldd	r20, Z+2	; 0x02
     f2c:	53 81       	ldd	r21, Z+3	; 0x03
     f2e:	81 e0       	ldi	r24, 0x01	; 1
     f30:	20 81       	ld	r18, Z
     f32:	31 81       	ldd	r19, Z+1	; 0x01
     f34:	42 17       	cp	r20, r18
     f36:	53 07       	cpc	r21, r19
     f38:	09 f0       	breq	.+2      	; 0xf3c <_ZN9ByteQueue6isFullEv+0x14>
     f3a:	80 e0       	ldi	r24, 0x00	; 0
     f3c:	08 95       	ret

00000f3e <_ZN9ByteQueue7isEmptyEv>:
 bool ByteQueue::isEmpty(){return numitems == 0;}
     f3e:	fc 01       	movw	r30, r24
     f40:	22 81       	ldd	r18, Z+2	; 0x02
     f42:	33 81       	ldd	r19, Z+3	; 0x03
     f44:	81 e0       	ldi	r24, 0x01	; 1
     f46:	23 2b       	or	r18, r19
     f48:	09 f0       	breq	.+2      	; 0xf4c <_ZN9ByteQueue7isEmptyEv+0xe>
     f4a:	80 e0       	ldi	r24, 0x00	; 0
     f4c:	08 95       	ret

00000f4e <_ZN3GPSC1Ev>:
 * Created: 11/5/2014 3:17:12 PM
 *  Author: ee63pc3-user
 */ 
 #include "GPS.h"

 GPS::GPS() : uart(128, 8) {
     f4e:	cf 92       	push	r12
     f50:	ef 92       	push	r14
     f52:	0f 93       	push	r16
     f54:	cf 93       	push	r28
     f56:	df 93       	push	r29
     f58:	fc 01       	movw	r30, r24
     f5a:	f3 95       	inc	r31
     f5c:	10 82       	st	Z, r1
     f5e:	31 96       	adiw	r30, 0x01	; 1
     f60:	10 82       	st	Z, r1
     f62:	31 96       	adiw	r30, 0x01	; 1
     f64:	10 82       	st	Z, r1
     f66:	ec 01       	movw	r28, r24
     f68:	cd 5f       	subi	r28, 0xFD	; 253
     f6a:	de 4f       	sbci	r29, 0xFE	; 254
     f6c:	48 e0       	ldi	r20, 0x08	; 8
     f6e:	50 e0       	ldi	r21, 0x00	; 0
     f70:	60 e8       	ldi	r22, 0x80	; 128
     f72:	70 e0       	ldi	r23, 0x00	; 0
     f74:	ce 01       	movw	r24, r28
     f76:	a1 d5       	rcall	.+2882   	; 0x1aba <_ZN10UartDriverC1Eii>
 	uart.init(&USARTD1, ParityMode::DISABLED, CharSize::EIGHT, false, 12, 0x50);//4800 baud
     f78:	0f 2e       	mov	r0, r31
     f7a:	f0 e5       	ldi	r31, 0x50	; 80
     f7c:	cf 2e       	mov	r12, r31
     f7e:	f0 2d       	mov	r31, r0
     f80:	0f 2e       	mov	r0, r31
     f82:	fc e0       	ldi	r31, 0x0C	; 12
     f84:	ef 2e       	mov	r14, r31
     f86:	f0 2d       	mov	r31, r0
     f88:	00 e0       	ldi	r16, 0x00	; 0
     f8a:	23 e0       	ldi	r18, 0x03	; 3
     f8c:	40 e0       	ldi	r20, 0x00	; 0
     f8e:	60 eb       	ldi	r22, 0xB0	; 176
     f90:	79 e0       	ldi	r23, 0x09	; 9
     f92:	ce 01       	movw	r24, r28
     f94:	a3 d5       	rcall	.+2886   	; 0x1adc <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc>
 };
     f96:	df 91       	pop	r29
     f98:	cf 91       	pop	r28
     f9a:	0f 91       	pop	r16
     f9c:	ef 90       	pop	r14
     f9e:	cf 90       	pop	r12
     fa0:	08 95       	ret

00000fa2 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc>:
	checksum = uart.sendString(",01*", 4, checksum);
	uart.sendString(itoa(checksum, itoabuff, 16), 2, checksum);
	uart.sendString("\r\n", 2, checksum);
 }

 char * GPS::cmdToString(NMEA::CMD cmd, char * buff3) {
     fa2:	0f 93       	push	r16
     fa4:	1f 93       	push	r17
     fa6:	ca 01       	movw	r24, r20
	buff3[0] = '0';
     fa8:	20 e3       	ldi	r18, 0x30	; 48
     faa:	fa 01       	movw	r30, r20
     fac:	20 83       	st	Z, r18
	switch(cmd) {
     fae:	06 2f       	mov	r16, r22
     fb0:	10 e0       	ldi	r17, 0x00	; 0
     fb2:	07 30       	cpi	r16, 0x07	; 7
     fb4:	11 05       	cpc	r17, r1
     fb6:	f8 f4       	brcc	.+62     	; 0xff6 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x54>
     fb8:	f8 01       	movw	r30, r16
     fba:	e2 50       	subi	r30, 0x02	; 2
     fbc:	ff 4f       	sbci	r31, 0xFF	; 255
     fbe:	3e c7       	rjmp	.+3708   	; 0x1e3c <__tablejump2__>
	case NMEA::GGA_FIX_INFO:
		buff3[1] = '0';
     fc0:	20 e3       	ldi	r18, 0x30	; 48
     fc2:	fa 01       	movw	r30, r20
     fc4:	21 83       	std	Z+1, r18	; 0x01
		break;
     fc6:	17 c0       	rjmp	.+46     	; 0xff6 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x54>
	case NMEA::GLL_LAT_LON:
		buff3[1] = '1';
     fc8:	21 e3       	ldi	r18, 0x31	; 49
     fca:	fa 01       	movw	r30, r20
     fcc:	21 83       	std	Z+1, r18	; 0x01
		break;
     fce:	13 c0       	rjmp	.+38     	; 0xff6 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x54>
	case NMEA::GSA_OVRL_SATDATA:
		buff3[1] = '2';
     fd0:	22 e3       	ldi	r18, 0x32	; 50
     fd2:	fa 01       	movw	r30, r20
     fd4:	21 83       	std	Z+1, r18	; 0x01
		break;
     fd6:	0f c0       	rjmp	.+30     	; 0xff6 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x54>
	case NMEA::GSV_DET_SATDATA:
		buff3[1] = '3';
     fd8:	23 e3       	ldi	r18, 0x33	; 51
     fda:	fa 01       	movw	r30, r20
     fdc:	21 83       	std	Z+1, r18	; 0x01
		break;
     fde:	0b c0       	rjmp	.+22     	; 0xff6 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x54>
	case NMEA::RMC_REC_MIN_DATA:
		buff3[1] = '4';
     fe0:	24 e3       	ldi	r18, 0x34	; 52
     fe2:	fa 01       	movw	r30, r20
     fe4:	21 83       	std	Z+1, r18	; 0x01
		break;
     fe6:	07 c0       	rjmp	.+14     	; 0xff6 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x54>
	case NMEA::VTG_VECT_TRCK:
		buff3[1] = '5';
     fe8:	25 e3       	ldi	r18, 0x35	; 53
     fea:	fa 01       	movw	r30, r20
     fec:	21 83       	std	Z+1, r18	; 0x01
		break;
     fee:	03 c0       	rjmp	.+6      	; 0xff6 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc+0x54>
	case NMEA::ZDA_DAT_TIM:
		buff3[1] = '8';
     ff0:	28 e3       	ldi	r18, 0x38	; 56
     ff2:	fa 01       	movw	r30, r20
     ff4:	21 83       	std	Z+1, r18	; 0x01
	}
	return buff3;
 }
     ff6:	1f 91       	pop	r17
     ff8:	0f 91       	pop	r16
     ffa:	08 95       	ret

00000ffc <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>:
	setPeriodic(NMEA::VTG_VECT_TRCK, 0);
	_delay_ms(100);
	setPeriodic(NMEA::ZDA_DAT_TIM, 0);
 }

 void GPS::setPeriodic(NMEA::CMD cmd, BYTE rate) {
     ffc:	af 92       	push	r10
     ffe:	bf 92       	push	r11
    1000:	cf 92       	push	r12
    1002:	df 92       	push	r13
    1004:	ef 92       	push	r14
    1006:	ff 92       	push	r15
    1008:	0f 93       	push	r16
    100a:	1f 93       	push	r17
    100c:	cf 93       	push	r28
    100e:	df 93       	push	r29
    1010:	00 d0       	rcall	.+0      	; 0x1012 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh+0x16>
    1012:	00 d0       	rcall	.+0      	; 0x1014 <_ZN3GPS11setPeriodicEN4NMEA3CMDEh+0x18>
    1014:	cd b7       	in	r28, 0x3d	; 61
    1016:	de b7       	in	r29, 0x3e	; 62
    1018:	6c 01       	movw	r12, r24
    101a:	a6 2e       	mov	r10, r22
    101c:	4e 83       	std	Y+6, r20	; 0x06
	//Buffer for rate to string conversion
	BYTE checksum = 0;
    101e:	1d 82       	std	Y+5, r1	; 0x05
	char itoabuff[4];

	//Queue the header in the transmission buffer
	checksum = uart.sendString("$PSRF103,", 9, checksum);
    1020:	2d 81       	ldd	r18, Y+5	; 0x05
    1022:	8c 01       	movw	r16, r24
    1024:	0d 5f       	subi	r16, 0xFD	; 253
    1026:	1e 4f       	sbci	r17, 0xFE	; 254
    1028:	49 e0       	ldi	r20, 0x09	; 9
    102a:	50 e0       	ldi	r21, 0x00	; 0
    102c:	6c e1       	ldi	r22, 0x1C	; 28
    102e:	70 e2       	ldi	r23, 0x20	; 32
    1030:	c8 01       	movw	r24, r16
    1032:	df d5       	rcall	.+3006   	; 0x1bf2 <_ZN10UartDriver10sendStringEPKcih>
    1034:	8d 83       	std	Y+5, r24	; 0x05
	checksum = uart.sendString(cmdToString(cmd, itoabuff), 2, checksum);
    1036:	bd 80       	ldd	r11, Y+5	; 0x05
    1038:	ce 01       	movw	r24, r28
    103a:	01 96       	adiw	r24, 0x01	; 1
    103c:	7c 01       	movw	r14, r24
    103e:	ac 01       	movw	r20, r24
    1040:	6a 2d       	mov	r22, r10
    1042:	c6 01       	movw	r24, r12
    1044:	ae df       	rcall	.-164    	; 0xfa2 <_ZN3GPS11cmdToStringEN4NMEA3CMDEPc>
    1046:	2b 2d       	mov	r18, r11
    1048:	42 e0       	ldi	r20, 0x02	; 2
    104a:	50 e0       	ldi	r21, 0x00	; 0
    104c:	bc 01       	movw	r22, r24
    104e:	c8 01       	movw	r24, r16
    1050:	d0 d5       	rcall	.+2976   	; 0x1bf2 <_ZN10UartDriver10sendStringEPKcih>
    1052:	8d 83       	std	Y+5, r24	; 0x05
	checksum = uart.sendString(",00,", 4, checksum);
    1054:	2d 81       	ldd	r18, Y+5	; 0x05
    1056:	44 e0       	ldi	r20, 0x04	; 4
    1058:	50 e0       	ldi	r21, 0x00	; 0
    105a:	66 e2       	ldi	r22, 0x26	; 38
    105c:	70 e2       	ldi	r23, 0x20	; 32
    105e:	c8 01       	movw	r24, r16
    1060:	c8 d5       	rcall	.+2960   	; 0x1bf2 <_ZN10UartDriver10sendStringEPKcih>
    1062:	8d 83       	std	Y+5, r24	; 0x05
	sprintf(itoabuff, "%02d", rate);
    1064:	8e 81       	ldd	r24, Y+6	; 0x06
    1066:	1f 92       	push	r1
    1068:	8f 93       	push	r24
    106a:	8b e2       	ldi	r24, 0x2B	; 43
    106c:	90 e2       	ldi	r25, 0x20	; 32
    106e:	9f 93       	push	r25
    1070:	8f 93       	push	r24
    1072:	ff 92       	push	r15
    1074:	ef 92       	push	r14
    1076:	0e 94 72 10 	call	0x20e4	; 0x20e4 <sprintf>
	checksum = uart.sendString(itoabuff, 3, checksum);
    107a:	2d 81       	ldd	r18, Y+5	; 0x05
    107c:	43 e0       	ldi	r20, 0x03	; 3
    107e:	50 e0       	ldi	r21, 0x00	; 0
    1080:	b7 01       	movw	r22, r14
    1082:	c8 01       	movw	r24, r16
    1084:	b6 d5       	rcall	.+2924   	; 0x1bf2 <_ZN10UartDriver10sendStringEPKcih>
    1086:	8d 83       	std	Y+5, r24	; 0x05
	//uart.sendString(itoa((int)rate, itoabuff, 10), 3);
	checksum = uart.sendString(",01*", 4, checksum);
    1088:	2d 81       	ldd	r18, Y+5	; 0x05
    108a:	44 e0       	ldi	r20, 0x04	; 4
    108c:	50 e0       	ldi	r21, 0x00	; 0
    108e:	60 e3       	ldi	r22, 0x30	; 48
    1090:	70 e2       	ldi	r23, 0x20	; 32
    1092:	c8 01       	movw	r24, r16
    1094:	ae d5       	rcall	.+2908   	; 0x1bf2 <_ZN10UartDriver10sendStringEPKcih>
    1096:	8d 83       	std	Y+5, r24	; 0x05
	uart.sendString(itoa(checksum, itoabuff, 16), 2, checksum);
    1098:	dd 80       	ldd	r13, Y+5	; 0x05
    109a:	8d 81       	ldd	r24, Y+5	; 0x05
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
    109c:	40 e1       	ldi	r20, 0x10	; 16
    109e:	b7 01       	movw	r22, r14
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	fd d7       	rcall	.+4090   	; 0x209e <__itoa_ncheck>
    10a4:	2d 2d       	mov	r18, r13
    10a6:	42 e0       	ldi	r20, 0x02	; 2
    10a8:	50 e0       	ldi	r21, 0x00	; 0
    10aa:	bc 01       	movw	r22, r24
    10ac:	c8 01       	movw	r24, r16
    10ae:	a1 d5       	rcall	.+2882   	; 0x1bf2 <_ZN10UartDriver10sendStringEPKcih>
	uart.sendString("\r\n", 2, checksum);
    10b0:	2d 81       	ldd	r18, Y+5	; 0x05
    10b2:	42 e0       	ldi	r20, 0x02	; 2
    10b4:	50 e0       	ldi	r21, 0x00	; 0
    10b6:	62 e4       	ldi	r22, 0x42	; 66
    10b8:	70 e2       	ldi	r23, 0x20	; 32
    10ba:	c8 01       	movw	r24, r16
    10bc:	9a d5       	rcall	.+2868   	; 0x1bf2 <_ZN10UartDriver10sendStringEPKcih>
    10be:	0f 90       	pop	r0
    10c0:	0f 90       	pop	r0
    10c2:	0f 90       	pop	r0
    10c4:	0f 90       	pop	r0
    10c6:	0f 90       	pop	r0
    10c8:	0f 90       	pop	r0
 }
    10ca:	26 96       	adiw	r28, 0x06	; 6
    10cc:	cd bf       	out	0x3d, r28	; 61
    10ce:	de bf       	out	0x3e, r29	; 62
    10d0:	df 91       	pop	r29
    10d2:	cf 91       	pop	r28
    10d4:	1f 91       	pop	r17
    10d6:	0f 91       	pop	r16
    10d8:	ff 90       	pop	r15
    10da:	ef 90       	pop	r14
    10dc:	df 90       	pop	r13
    10de:	cf 90       	pop	r12
    10e0:	bf 90       	pop	r11
    10e2:	af 90       	pop	r10
    10e4:	08 95       	ret

000010e6 <_ZN3GPS4initEv>:

 GPS::GPS() : uart(128, 8) {
 	uart.init(&USARTD1, ParityMode::DISABLED, CharSize::EIGHT, false, 12, 0x50);//4800 baud
 };

 void GPS::init() {
    10e6:	cf 93       	push	r28
    10e8:	df 93       	push	r29
    10ea:	ec 01       	movw	r28, r24
 	uart.sendString("$PSRF105,1*3E\r\n", 15, 0);
    10ec:	20 e0       	ldi	r18, 0x00	; 0
    10ee:	4f e0       	ldi	r20, 0x0F	; 15
    10f0:	50 e0       	ldi	r21, 0x00	; 0
    10f2:	65 e3       	ldi	r22, 0x35	; 53
    10f4:	70 e2       	ldi	r23, 0x20	; 32
    10f6:	8d 5f       	subi	r24, 0xFD	; 253
    10f8:	9e 4f       	sbci	r25, 0xFE	; 254
    10fa:	7b d5       	rcall	.+2806   	; 0x1bf2 <_ZN10UartDriver10sendStringEPKcih>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    10fc:	2f ef       	ldi	r18, 0xFF	; 255
    10fe:	83 ec       	ldi	r24, 0xC3	; 195
    1100:	99 e0       	ldi	r25, 0x09	; 9
    1102:	21 50       	subi	r18, 0x01	; 1
    1104:	80 40       	sbci	r24, 0x00	; 0
    1106:	90 40       	sbci	r25, 0x00	; 0
    1108:	e1 f7       	brne	.-8      	; 0x1102 <_ZN3GPS4initEv+0x1c>
    110a:	00 c0       	rjmp	.+0      	; 0x110c <_ZN3GPS4initEv+0x26>
    110c:	00 00       	nop
	_delay_ms(100);
	setPeriodic(NMEA::GGA_FIX_INFO, 0);
    110e:	40 e0       	ldi	r20, 0x00	; 0
    1110:	60 e0       	ldi	r22, 0x00	; 0
    1112:	ce 01       	movw	r24, r28
    1114:	73 df       	rcall	.-282    	; 0xffc <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1116:	2f ef       	ldi	r18, 0xFF	; 255
    1118:	83 ec       	ldi	r24, 0xC3	; 195
    111a:	99 e0       	ldi	r25, 0x09	; 9
    111c:	21 50       	subi	r18, 0x01	; 1
    111e:	80 40       	sbci	r24, 0x00	; 0
    1120:	90 40       	sbci	r25, 0x00	; 0
    1122:	e1 f7       	brne	.-8      	; 0x111c <_ZN3GPS4initEv+0x36>
    1124:	00 c0       	rjmp	.+0      	; 0x1126 <_ZN3GPS4initEv+0x40>
    1126:	00 00       	nop
	_delay_ms(100);
	setPeriodic(NMEA::GLL_LAT_LON, 5);
    1128:	45 e0       	ldi	r20, 0x05	; 5
    112a:	65 e0       	ldi	r22, 0x05	; 5
    112c:	ce 01       	movw	r24, r28
    112e:	66 df       	rcall	.-308    	; 0xffc <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1130:	2f ef       	ldi	r18, 0xFF	; 255
    1132:	83 ec       	ldi	r24, 0xC3	; 195
    1134:	99 e0       	ldi	r25, 0x09	; 9
    1136:	21 50       	subi	r18, 0x01	; 1
    1138:	80 40       	sbci	r24, 0x00	; 0
    113a:	90 40       	sbci	r25, 0x00	; 0
    113c:	e1 f7       	brne	.-8      	; 0x1136 <_ZN3GPS4initEv+0x50>
    113e:	00 c0       	rjmp	.+0      	; 0x1140 <_ZN3GPS4initEv+0x5a>
    1140:	00 00       	nop
	_delay_ms(100);
	setPeriodic(NMEA::GSV_DET_SATDATA, 0);
    1142:	40 e0       	ldi	r20, 0x00	; 0
    1144:	62 e0       	ldi	r22, 0x02	; 2
    1146:	ce 01       	movw	r24, r28
    1148:	59 df       	rcall	.-334    	; 0xffc <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    114a:	2f ef       	ldi	r18, 0xFF	; 255
    114c:	83 ec       	ldi	r24, 0xC3	; 195
    114e:	99 e0       	ldi	r25, 0x09	; 9
    1150:	21 50       	subi	r18, 0x01	; 1
    1152:	80 40       	sbci	r24, 0x00	; 0
    1154:	90 40       	sbci	r25, 0x00	; 0
    1156:	e1 f7       	brne	.-8      	; 0x1150 <_ZN3GPS4initEv+0x6a>
    1158:	00 c0       	rjmp	.+0      	; 0x115a <_ZN3GPS4initEv+0x74>
    115a:	00 00       	nop
	_delay_ms(100);
	setPeriodic(NMEA::GSA_OVRL_SATDATA, 0);
    115c:	40 e0       	ldi	r20, 0x00	; 0
    115e:	61 e0       	ldi	r22, 0x01	; 1
    1160:	ce 01       	movw	r24, r28
    1162:	4c df       	rcall	.-360    	; 0xffc <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1164:	2f ef       	ldi	r18, 0xFF	; 255
    1166:	83 ec       	ldi	r24, 0xC3	; 195
    1168:	99 e0       	ldi	r25, 0x09	; 9
    116a:	21 50       	subi	r18, 0x01	; 1
    116c:	80 40       	sbci	r24, 0x00	; 0
    116e:	90 40       	sbci	r25, 0x00	; 0
    1170:	e1 f7       	brne	.-8      	; 0x116a <_ZN3GPS4initEv+0x84>
    1172:	00 c0       	rjmp	.+0      	; 0x1174 <_ZN3GPS4initEv+0x8e>
    1174:	00 00       	nop
	_delay_ms(100);
	setPeriodic(NMEA::RMC_REC_MIN_DATA, 0);
    1176:	40 e0       	ldi	r20, 0x00	; 0
    1178:	63 e0       	ldi	r22, 0x03	; 3
    117a:	ce 01       	movw	r24, r28
    117c:	3f df       	rcall	.-386    	; 0xffc <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    117e:	2f ef       	ldi	r18, 0xFF	; 255
    1180:	83 ec       	ldi	r24, 0xC3	; 195
    1182:	99 e0       	ldi	r25, 0x09	; 9
    1184:	21 50       	subi	r18, 0x01	; 1
    1186:	80 40       	sbci	r24, 0x00	; 0
    1188:	90 40       	sbci	r25, 0x00	; 0
    118a:	e1 f7       	brne	.-8      	; 0x1184 <_ZN3GPS4initEv+0x9e>
    118c:	00 c0       	rjmp	.+0      	; 0x118e <_ZN3GPS4initEv+0xa8>
    118e:	00 00       	nop
	_delay_ms(100);
	setPeriodic(NMEA::VTG_VECT_TRCK, 0);
    1190:	40 e0       	ldi	r20, 0x00	; 0
    1192:	64 e0       	ldi	r22, 0x04	; 4
    1194:	ce 01       	movw	r24, r28
    1196:	32 df       	rcall	.-412    	; 0xffc <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
    1198:	2f ef       	ldi	r18, 0xFF	; 255
    119a:	83 ec       	ldi	r24, 0xC3	; 195
    119c:	99 e0       	ldi	r25, 0x09	; 9
    119e:	21 50       	subi	r18, 0x01	; 1
    11a0:	80 40       	sbci	r24, 0x00	; 0
    11a2:	90 40       	sbci	r25, 0x00	; 0
    11a4:	e1 f7       	brne	.-8      	; 0x119e <_ZN3GPS4initEv+0xb8>
    11a6:	00 c0       	rjmp	.+0      	; 0x11a8 <_ZN3GPS4initEv+0xc2>
    11a8:	00 00       	nop
	_delay_ms(100);
	setPeriodic(NMEA::ZDA_DAT_TIM, 0);
    11aa:	40 e0       	ldi	r20, 0x00	; 0
    11ac:	66 e0       	ldi	r22, 0x06	; 6
    11ae:	ce 01       	movw	r24, r28
    11b0:	25 df       	rcall	.-438    	; 0xffc <_ZN3GPS11setPeriodicEN4NMEA3CMDEh>
 }
    11b2:	df 91       	pop	r29
    11b4:	cf 91       	pop	r28
    11b6:	08 95       	ret

000011b8 <_ZN3GPS13interceptByteEv>:
		buff3[1] = '8';
	}
	return buff3;
 }

 char GPS::interceptByte() {
    11b8:	cf 93       	push	r28
    11ba:	df 93       	push	r29
    11bc:	ec 01       	movw	r28, r24
	 char c = this->uart.getUARTPort()->DATA;
    11be:	8d 5f       	subi	r24, 0xFD	; 253
    11c0:	9e 4f       	sbci	r25, 0xFE	; 254
    11c2:	13 d5       	rcall	.+2598   	; 0x1bea <_ZN10UartDriver11getUARTPortEv>
    11c4:	fc 01       	movw	r30, r24
    11c6:	80 81       	ld	r24, Z
	 //driver.rcvByte(c);
	 if(c != '\n') 
    11c8:	8a 30       	cpi	r24, 0x0A	; 10
    11ca:	91 f0       	breq	.+36     	; 0x11f0 <_ZN3GPS13interceptByteEv+0x38>
		buffer[buffptr][windex++] = c;
    11cc:	fe 01       	movw	r30, r28
    11ce:	f3 95       	inc	r31
    11d0:	20 81       	ld	r18, Z
    11d2:	31 96       	adiw	r30, 0x01	; 1
    11d4:	90 81       	ld	r25, Z
    11d6:	31 e0       	ldi	r19, 0x01	; 1
    11d8:	39 0f       	add	r19, r25
    11da:	30 83       	st	Z, r19
    11dc:	f0 e8       	ldi	r31, 0x80	; 128
    11de:	2f 9f       	mul	r18, r31
    11e0:	90 01       	movw	r18, r0
    11e2:	11 24       	eor	r1, r1
    11e4:	29 0f       	add	r18, r25
    11e6:	31 1d       	adc	r19, r1
    11e8:	c2 0f       	add	r28, r18
    11ea:	d3 1f       	adc	r29, r19
    11ec:	88 83       	st	Y, r24
    11ee:	0f c0       	rjmp	.+30     	; 0x120e <_ZN3GPS13interceptByteEv+0x56>
	 else {
		buffptr = (buffptr == 0) ? 1 : 0;
    11f0:	fe 01       	movw	r30, r28
    11f2:	f3 95       	inc	r31
    11f4:	20 81       	ld	r18, Z
    11f6:	91 e0       	ldi	r25, 0x01	; 1
    11f8:	21 11       	cpse	r18, r1
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	fe 01       	movw	r30, r28
    11fe:	f3 95       	inc	r31
    1200:	90 83       	st	Z, r25
		windex = 0;
    1202:	31 96       	adiw	r30, 0x01	; 1
    1204:	10 82       	st	Z, r1
		dataReady = true;
    1206:	ce 5f       	subi	r28, 0xFE	; 254
    1208:	de 4f       	sbci	r29, 0xFE	; 254
    120a:	91 e0       	ldi	r25, 0x01	; 1
    120c:	98 83       	st	Y, r25
	 }
	 return c;
 }
    120e:	df 91       	pop	r29
    1210:	cf 91       	pop	r28
    1212:	08 95       	ret

00001214 <_ZN3GPS9handleDREEv>:

 void GPS::handleDRE() {
    1214:	0f 93       	push	r16
    1216:	1f 93       	push	r17
    1218:	cf 93       	push	r28
    121a:	df 93       	push	r29
	 if (!uart.txIsEmpty()) {
    121c:	ec 01       	movw	r28, r24
    121e:	cd 5f       	subi	r28, 0xFD	; 253
    1220:	de 4f       	sbci	r29, 0xFE	; 254
    1222:	ce 01       	movw	r24, r28
    1224:	dc d4       	rcall	.+2488   	; 0x1bde <_ZN10UartDriver9txIsEmptyEv>
    1226:	81 11       	cpse	r24, r1
    1228:	08 c0       	rjmp	.+16     	; 0x123a <_ZN3GPS9handleDREEv+0x26>
		 uart.getUARTPort()->DATA = uart.txDequeue();
    122a:	ce 01       	movw	r24, r28
    122c:	de d4       	rcall	.+2492   	; 0x1bea <_ZN10UartDriver11getUARTPortEv>
    122e:	8c 01       	movw	r16, r24
    1230:	ce 01       	movw	r24, r28
    1232:	d8 d4       	rcall	.+2480   	; 0x1be4 <_ZN10UartDriver9txDequeueEv>
    1234:	f8 01       	movw	r30, r16
    1236:	80 83       	st	Z, r24
    1238:	06 c0       	rjmp	.+12     	; 0x1246 <_ZN3GPS9handleDREEv+0x32>
	 } else {
		 uart.getUARTPort()->CTRLA &= ~(0x03); //Disable DREint
    123a:	ce 01       	movw	r24, r28
    123c:	d6 d4       	rcall	.+2476   	; 0x1bea <_ZN10UartDriver11getUARTPortEv>
    123e:	fc 01       	movw	r30, r24
    1240:	23 81       	ldd	r18, Z+3	; 0x03
    1242:	2c 7f       	andi	r18, 0xFC	; 252
    1244:	23 83       	std	Z+3, r18	; 0x03
	 }
    1246:	df 91       	pop	r29
    1248:	cf 91       	pop	r28
    124a:	1f 91       	pop	r17
    124c:	0f 91       	pop	r16
    124e:	08 95       	ret

00001250 <_ZN10LCD_Driver4initEv>:
		asm("NOP");
		_delay_ms(10);
		asm("NOP");
	}
	LCD_DATA_PORT.DIR= 0xFF;
}
    1250:	dc 01       	movw	r26, r24
    1252:	e0 e6       	ldi	r30, 0x60	; 96
    1254:	f6 e0       	ldi	r31, 0x06	; 6
    1256:	81 81       	ldd	r24, Z+1	; 0x01
    1258:	81 60       	ori	r24, 0x01	; 1
    125a:	81 83       	std	Z+1, r24	; 0x01
    125c:	84 81       	ldd	r24, Z+4	; 0x04
    125e:	81 60       	ori	r24, 0x01	; 1
    1260:	84 83       	std	Z+4, r24	; 0x04
    1262:	8f ef       	ldi	r24, 0xFF	; 255
    1264:	e0 e4       	ldi	r30, 0x40	; 64
    1266:	f6 e0       	ldi	r31, 0x06	; 6
    1268:	81 83       	std	Z+1, r24	; 0x01
    126a:	e0 e0       	ldi	r30, 0x00	; 0
    126c:	f6 e0       	ldi	r31, 0x06	; 6
    126e:	81 81       	ldd	r24, Z+1	; 0x01
    1270:	88 60       	ori	r24, 0x08	; 8
    1272:	81 83       	std	Z+1, r24	; 0x01
    1274:	81 81       	ldd	r24, Z+1	; 0x01
    1276:	84 60       	ori	r24, 0x04	; 4
    1278:	81 83       	std	Z+1, r24	; 0x01
    127a:	81 81       	ldd	r24, Z+1	; 0x01
    127c:	82 60       	ori	r24, 0x02	; 2
    127e:	81 83       	std	Z+1, r24	; 0x01
    1280:	81 81       	ldd	r24, Z+1	; 0x01
    1282:	81 60       	ori	r24, 0x01	; 1
    1284:	81 83       	std	Z+1, r24	; 0x01
    1286:	84 81       	ldd	r24, Z+4	; 0x04
    1288:	81 60       	ori	r24, 0x01	; 1
    128a:	84 83       	std	Z+4, r24	; 0x04
    128c:	84 81       	ldd	r24, Z+4	; 0x04
    128e:	84 60       	ori	r24, 0x04	; 4
    1290:	84 83       	std	Z+4, r24	; 0x04
    1292:	84 81       	ldd	r24, Z+4	; 0x04
    1294:	88 60       	ori	r24, 0x08	; 8
    1296:	84 83       	std	Z+4, r24	; 0x04
    1298:	84 81       	ldd	r24, Z+4	; 0x04
    129a:	82 60       	ori	r24, 0x02	; 2
    129c:	84 83       	std	Z+4, r24	; 0x04
    129e:	53 96       	adiw	r26, 0x13	; 19
    12a0:	1c 92       	st	X, r1
    12a2:	53 97       	sbiw	r26, 0x13	; 19
    12a4:	1a 96       	adiw	r26, 0x0a	; 10
    12a6:	1d 92       	st	X+, r1
    12a8:	1c 92       	st	X, r1
    12aa:	1b 97       	sbiw	r26, 0x0b	; 11
    12ac:	1c 96       	adiw	r26, 0x0c	; 12
    12ae:	1d 92       	st	X+, r1
    12b0:	1c 92       	st	X, r1
    12b2:	1d 97       	sbiw	r26, 0x0d	; 13
    12b4:	81 e0       	ldi	r24, 0x01	; 1
    12b6:	52 96       	adiw	r26, 0x12	; 18
    12b8:	8c 93       	st	X, r24
    12ba:	52 97       	sbiw	r26, 0x12	; 18
    12bc:	1e 96       	adiw	r26, 0x0e	; 14
    12be:	1d 92       	st	X+, r1
    12c0:	1c 92       	st	X, r1
    12c2:	1f 97       	sbiw	r26, 0x0f	; 15
    12c4:	80 e4       	ldi	r24, 0x40	; 64
    12c6:	91 e0       	ldi	r25, 0x01	; 1
    12c8:	16 96       	adiw	r26, 0x06	; 6
    12ca:	8d 93       	st	X+, r24
    12cc:	9c 93       	st	X, r25
    12ce:	17 97       	sbiw	r26, 0x07	; 7
    12d0:	80 ee       	ldi	r24, 0xE0	; 224
    12d2:	91 e0       	ldi	r25, 0x01	; 1
    12d4:	18 96       	adiw	r26, 0x08	; 8
    12d6:	8d 93       	st	X+, r24
    12d8:	9c 93       	st	X, r25
    12da:	19 97       	sbiw	r26, 0x09	; 9
    12dc:	08 95       	ret

000012de <_ZN10LCD_DriverC1Ev>:
    12de:	cf 93       	push	r28
    12e0:	df 93       	push	r29
    12e2:	ec 01       	movw	r28, r24
    12e4:	40 ee       	ldi	r20, 0xE0	; 224
    12e6:	51 e0       	ldi	r21, 0x01	; 1
    12e8:	60 e4       	ldi	r22, 0x40	; 64
    12ea:	71 e0       	ldi	r23, 0x01	; 1
    12ec:	e2 db       	rcall	.-2108   	; 0xab2 <_ZN12Adafruit_GFXC1Eii>
    12ee:	8f e8       	ldi	r24, 0x8F	; 143
    12f0:	90 e2       	ldi	r25, 0x20	; 32
    12f2:	88 83       	st	Y, r24
    12f4:	99 83       	std	Y+1, r25	; 0x01
    12f6:	ce 01       	movw	r24, r28
    12f8:	ab df       	rcall	.-170    	; 0x1250 <_ZN10LCD_Driver4initEv>
    12fa:	df 91       	pop	r29
    12fc:	cf 91       	pop	r28
    12fe:	08 95       	ret

00001300 <_ZN10LCD_Driver9writeDataEh>:
    1300:	e0 e4       	ldi	r30, 0x40	; 64
    1302:	f6 e0       	ldi	r31, 0x06	; 6
    1304:	64 83       	std	Z+4, r22	; 0x04
    1306:	e0 e0       	ldi	r30, 0x00	; 0
    1308:	f6 e0       	ldi	r31, 0x06	; 6
    130a:	84 81       	ldd	r24, Z+4	; 0x04
    130c:	8b 7f       	andi	r24, 0xFB	; 251
    130e:	84 83       	std	Z+4, r24	; 0x04
    1310:	84 81       	ldd	r24, Z+4	; 0x04
    1312:	84 60       	ori	r24, 0x04	; 4
    1314:	84 83       	std	Z+4, r24	; 0x04
    1316:	08 95       	ret

00001318 <_ZN10LCD_Driver5resetEv>:
    1318:	cf 93       	push	r28
    131a:	df 93       	push	r29
    131c:	e0 e0       	ldi	r30, 0x00	; 0
    131e:	f6 e0       	ldi	r31, 0x06	; 6
    1320:	24 81       	ldd	r18, Z+4	; 0x04
    1322:	21 60       	ori	r18, 0x01	; 1
    1324:	24 83       	std	Z+4, r18	; 0x04
    1326:	24 81       	ldd	r18, Z+4	; 0x04
    1328:	24 60       	ori	r18, 0x04	; 4
    132a:	24 83       	std	Z+4, r18	; 0x04
    132c:	24 81       	ldd	r18, Z+4	; 0x04
    132e:	28 60       	ori	r18, 0x08	; 8
    1330:	24 83       	std	Z+4, r18	; 0x04
    1332:	e0 e6       	ldi	r30, 0x60	; 96
    1334:	f6 e0       	ldi	r31, 0x06	; 6
    1336:	24 81       	ldd	r18, Z+4	; 0x04
    1338:	2e 7f       	andi	r18, 0xFE	; 254
    133a:	24 83       	std	Z+4, r18	; 0x04
    133c:	e7 ee       	ldi	r30, 0xE7	; 231
    133e:	f3 e0       	ldi	r31, 0x03	; 3
    1340:	31 97       	sbiw	r30, 0x01	; 1
    1342:	f1 f7       	brne	.-4      	; 0x1340 <_ZN10LCD_Driver5resetEv+0x28>
    1344:	00 c0       	rjmp	.+0      	; 0x1346 <_ZN10LCD_Driver5resetEv+0x2e>
    1346:	00 00       	nop
    1348:	e0 e6       	ldi	r30, 0x60	; 96
    134a:	f6 e0       	ldi	r31, 0x06	; 6
    134c:	24 81       	ldd	r18, Z+4	; 0x04
    134e:	21 60       	ori	r18, 0x01	; 1
    1350:	24 83       	std	Z+4, r18	; 0x04
    1352:	c0 e0       	ldi	r28, 0x00	; 0
    1354:	d6 e0       	ldi	r29, 0x06	; 6
    1356:	2c 81       	ldd	r18, Y+4	; 0x04
    1358:	2e 7f       	andi	r18, 0xFE	; 254
    135a:	2c 83       	std	Y+4, r18	; 0x04
    135c:	2c 81       	ldd	r18, Y+4	; 0x04
    135e:	2d 7f       	andi	r18, 0xFD	; 253
    1360:	2c 83       	std	Y+4, r18	; 0x04
    1362:	60 e0       	ldi	r22, 0x00	; 0
    1364:	cd df       	rcall	.-102    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    1366:	8c 81       	ldd	r24, Y+4	; 0x04
    1368:	8b 7f       	andi	r24, 0xFB	; 251
    136a:	8c 83       	std	Y+4, r24	; 0x04
    136c:	8c 81       	ldd	r24, Y+4	; 0x04
    136e:	84 60       	ori	r24, 0x04	; 4
    1370:	8c 83       	std	Y+4, r24	; 0x04
    1372:	8c 81       	ldd	r24, Y+4	; 0x04
    1374:	8b 7f       	andi	r24, 0xFB	; 251
    1376:	8c 83       	std	Y+4, r24	; 0x04
    1378:	8c 81       	ldd	r24, Y+4	; 0x04
    137a:	84 60       	ori	r24, 0x04	; 4
    137c:	8c 83       	std	Y+4, r24	; 0x04
    137e:	8c 81       	ldd	r24, Y+4	; 0x04
    1380:	8b 7f       	andi	r24, 0xFB	; 251
    1382:	8c 83       	std	Y+4, r24	; 0x04
    1384:	8c 81       	ldd	r24, Y+4	; 0x04
    1386:	84 60       	ori	r24, 0x04	; 4
    1388:	8c 83       	std	Y+4, r24	; 0x04
    138a:	8c 81       	ldd	r24, Y+4	; 0x04
    138c:	81 60       	ori	r24, 0x01	; 1
    138e:	8c 83       	std	Y+4, r24	; 0x04
    1390:	df 91       	pop	r29
    1392:	cf 91       	pop	r28
    1394:	08 95       	ret

00001396 <_ZN10LCD_Driver5beginEv>:
    1396:	ef 92       	push	r14
    1398:	ff 92       	push	r15
    139a:	0f 93       	push	r16
    139c:	1f 93       	push	r17
    139e:	cf 93       	push	r28
    13a0:	df 93       	push	r29
    13a2:	cd b7       	in	r28, 0x3d	; 61
    13a4:	de b7       	in	r29, 0x3e	; 62
    13a6:	25 97       	sbiw	r28, 0x05	; 5
    13a8:	cd bf       	out	0x3d, r28	; 61
    13aa:	de bf       	out	0x3e, r29	; 62
    13ac:	8c 01       	movw	r16, r24
    13ae:	1d 82       	std	Y+5, r1	; 0x05
    13b0:	b3 df       	rcall	.-154    	; 0x1318 <_ZN10LCD_Driver5resetEv>
    13b2:	2f e7       	ldi	r18, 0x7F	; 127
    13b4:	88 e3       	ldi	r24, 0x38	; 56
    13b6:	91 e0       	ldi	r25, 0x01	; 1
    13b8:	21 50       	subi	r18, 0x01	; 1
    13ba:	80 40       	sbci	r24, 0x00	; 0
    13bc:	90 40       	sbci	r25, 0x00	; 0
    13be:	e1 f7       	brne	.-8      	; 0x13b8 <_ZN10LCD_Driver5beginEv+0x22>
    13c0:	00 c0       	rjmp	.+0      	; 0x13c2 <_ZN10LCD_Driver5beginEv+0x2c>
    13c2:	00 00       	nop
    13c4:	e0 e0       	ldi	r30, 0x00	; 0
    13c6:	f6 e0       	ldi	r31, 0x06	; 6
    13c8:	84 81       	ldd	r24, Z+4	; 0x04
    13ca:	8e 7f       	andi	r24, 0xFE	; 254
    13cc:	84 83       	std	Z+4, r24	; 0x04
    13ce:	0f 2e       	mov	r0, r31
    13d0:	e1 2c       	mov	r14, r1
    13d2:	f6 e0       	ldi	r31, 0x06	; 6
    13d4:	ff 2e       	mov	r15, r31
    13d6:	f0 2d       	mov	r31, r0
    13d8:	49 c0       	rjmp	.+146    	; 0x146c <_ZN10LCD_Driver5beginEv+0xd6>
    13da:	ed 81       	ldd	r30, Y+5	; 0x05
    13dc:	81 e0       	ldi	r24, 0x01	; 1
    13de:	8e 0f       	add	r24, r30
    13e0:	8d 83       	std	Y+5, r24	; 0x05
    13e2:	f0 e0       	ldi	r31, 0x00	; 0
    13e4:	eb 5b       	subi	r30, 0xBB	; 187
    13e6:	ff 4d       	sbci	r31, 0xDF	; 223
    13e8:	80 81       	ld	r24, Z
    13ea:	8c 83       	std	Y+4, r24	; 0x04
    13ec:	ed 81       	ldd	r30, Y+5	; 0x05
    13ee:	81 e0       	ldi	r24, 0x01	; 1
    13f0:	8e 0f       	add	r24, r30
    13f2:	8d 83       	std	Y+5, r24	; 0x05
    13f4:	f0 e0       	ldi	r31, 0x00	; 0
    13f6:	eb 5b       	subi	r30, 0xBB	; 187
    13f8:	ff 4d       	sbci	r31, 0xDF	; 223
    13fa:	80 81       	ld	r24, Z
    13fc:	8b 83       	std	Y+3, r24	; 0x03
    13fe:	8c 81       	ldd	r24, Y+4	; 0x04
    1400:	81 11       	cpse	r24, r1
    1402:	0a c0       	rjmp	.+20     	; 0x1418 <_ZN10LCD_Driver5beginEv+0x82>
    1404:	ef eb       	ldi	r30, 0xBF	; 191
    1406:	f4 ed       	ldi	r31, 0xD4	; 212
    1408:	21 e0       	ldi	r18, 0x01	; 1
    140a:	e1 50       	subi	r30, 0x01	; 1
    140c:	f0 40       	sbci	r31, 0x00	; 0
    140e:	20 40       	sbci	r18, 0x00	; 0
    1410:	e1 f7       	brne	.-8      	; 0x140a <_ZN10LCD_Driver5beginEv+0x74>
    1412:	00 c0       	rjmp	.+0      	; 0x1414 <_ZN10LCD_Driver5beginEv+0x7e>
    1414:	00 00       	nop
    1416:	2a c0       	rjmp	.+84     	; 0x146c <_ZN10LCD_Driver5beginEv+0xd6>
    1418:	f7 01       	movw	r30, r14
    141a:	84 81       	ldd	r24, Z+4	; 0x04
    141c:	8e 7f       	andi	r24, 0xFE	; 254
    141e:	84 83       	std	Z+4, r24	; 0x04
    1420:	84 81       	ldd	r24, Z+4	; 0x04
    1422:	8d 7f       	andi	r24, 0xFD	; 253
    1424:	84 83       	std	Z+4, r24	; 0x04
    1426:	6c 81       	ldd	r22, Y+4	; 0x04
    1428:	c8 01       	movw	r24, r16
    142a:	6a df       	rcall	.-300    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    142c:	f7 01       	movw	r30, r14
    142e:	84 81       	ldd	r24, Z+4	; 0x04
    1430:	82 60       	ori	r24, 0x02	; 2
    1432:	84 83       	std	Z+4, r24	; 0x04
    1434:	1a 82       	std	Y+2, r1	; 0x02
    1436:	9a 81       	ldd	r25, Y+2	; 0x02
    1438:	8b 81       	ldd	r24, Y+3	; 0x03
    143a:	98 17       	cp	r25, r24
    143c:	98 f4       	brcc	.+38     	; 0x1464 <_ZN10LCD_Driver5beginEv+0xce>
    143e:	ed 81       	ldd	r30, Y+5	; 0x05
    1440:	81 e0       	ldi	r24, 0x01	; 1
    1442:	8e 0f       	add	r24, r30
    1444:	8d 83       	std	Y+5, r24	; 0x05
    1446:	f0 e0       	ldi	r31, 0x00	; 0
    1448:	eb 5b       	subi	r30, 0xBB	; 187
    144a:	ff 4d       	sbci	r31, 0xDF	; 223
    144c:	80 81       	ld	r24, Z
    144e:	89 83       	std	Y+1, r24	; 0x01
    1450:	69 81       	ldd	r22, Y+1	; 0x01
    1452:	c8 01       	movw	r24, r16
    1454:	55 df       	rcall	.-342    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    1456:	8a 81       	ldd	r24, Y+2	; 0x02
    1458:	8f 5f       	subi	r24, 0xFF	; 255
    145a:	8a 83       	std	Y+2, r24	; 0x02
    145c:	9a 81       	ldd	r25, Y+2	; 0x02
    145e:	8b 81       	ldd	r24, Y+3	; 0x03
    1460:	98 17       	cp	r25, r24
    1462:	68 f3       	brcs	.-38     	; 0x143e <_ZN10LCD_Driver5beginEv+0xa8>
    1464:	f7 01       	movw	r30, r14
    1466:	84 81       	ldd	r24, Z+4	; 0x04
    1468:	81 60       	ori	r24, 0x01	; 1
    146a:	84 83       	std	Z+4, r24	; 0x04
    146c:	8d 81       	ldd	r24, Y+5	; 0x05
    146e:	86 34       	cpi	r24, 0x46	; 70
    1470:	08 f4       	brcc	.+2      	; 0x1474 <_ZN10LCD_Driver5beginEv+0xde>
    1472:	b3 cf       	rjmp	.-154    	; 0x13da <_ZN10LCD_Driver5beginEv+0x44>
    1474:	25 96       	adiw	r28, 0x05	; 5
    1476:	cd bf       	out	0x3d, r28	; 61
    1478:	de bf       	out	0x3e, r29	; 62
    147a:	df 91       	pop	r29
    147c:	cf 91       	pop	r28
    147e:	1f 91       	pop	r17
    1480:	0f 91       	pop	r16
    1482:	ff 90       	pop	r15
    1484:	ef 90       	pop	r14
    1486:	08 95       	ret

00001488 <_ZN10LCD_Driver5floodEjm>:
    1488:	4f 92       	push	r4
    148a:	5f 92       	push	r5
    148c:	6f 92       	push	r6
    148e:	7f 92       	push	r7
    1490:	af 92       	push	r10
    1492:	bf 92       	push	r11
    1494:	cf 92       	push	r12
    1496:	df 92       	push	r13
    1498:	ef 92       	push	r14
    149a:	ff 92       	push	r15
    149c:	0f 93       	push	r16
    149e:	1f 93       	push	r17
    14a0:	cf 93       	push	r28
    14a2:	df 93       	push	r29
    14a4:	cd b7       	in	r28, 0x3d	; 61
    14a6:	de b7       	in	r29, 0x3e	; 62
    14a8:	28 97       	sbiw	r28, 0x08	; 8
    14aa:	cd bf       	out	0x3d, r28	; 61
    14ac:	de bf       	out	0x3e, r29	; 62
    14ae:	8c 01       	movw	r16, r24
    14b0:	d6 2e       	mov	r13, r22
    14b2:	c7 2e       	mov	r12, r23
    14b4:	29 01       	movw	r4, r18
    14b6:	3a 01       	movw	r6, r20
    14b8:	b7 2e       	mov	r11, r23
    14ba:	a6 2e       	mov	r10, r22
    14bc:	0f 2e       	mov	r0, r31
    14be:	e1 2c       	mov	r14, r1
    14c0:	f6 e0       	ldi	r31, 0x06	; 6
    14c2:	ff 2e       	mov	r15, r31
    14c4:	f0 2d       	mov	r31, r0
    14c6:	f7 01       	movw	r30, r14
    14c8:	84 81       	ldd	r24, Z+4	; 0x04
    14ca:	8e 7f       	andi	r24, 0xFE	; 254
    14cc:	84 83       	std	Z+4, r24	; 0x04
    14ce:	84 81       	ldd	r24, Z+4	; 0x04
    14d0:	8d 7f       	andi	r24, 0xFD	; 253
    14d2:	84 83       	std	Z+4, r24	; 0x04
    14d4:	6c e2       	ldi	r22, 0x2C	; 44
    14d6:	c8 01       	movw	r24, r16
    14d8:	13 df       	rcall	.-474    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    14da:	f7 01       	movw	r30, r14
    14dc:	84 81       	ldd	r24, Z+4	; 0x04
    14de:	82 60       	ori	r24, 0x02	; 2
    14e0:	84 83       	std	Z+4, r24	; 0x04
    14e2:	6c 2d       	mov	r22, r12
    14e4:	c8 01       	movw	r24, r16
    14e6:	0c df       	rcall	.-488    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    14e8:	6d 2d       	mov	r22, r13
    14ea:	c8 01       	movw	r24, r16
    14ec:	09 df       	rcall	.-494    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    14ee:	cd 10       	cpse	r12, r13
    14f0:	38 c0       	rjmp	.+112    	; 0x1562 <_ZN10LCD_Driver5floodEjm+0xda>
    14f2:	1d 82       	std	Y+5, r1	; 0x05
    14f4:	1e 82       	std	Y+6, r1	; 0x06
    14f6:	1f 82       	std	Y+7, r1	; 0x07
    14f8:	18 86       	std	Y+8, r1	; 0x08
    14fa:	73 01       	movw	r14, r6
    14fc:	62 01       	movw	r12, r4
    14fe:	f1 e0       	ldi	r31, 0x01	; 1
    1500:	cf 1a       	sub	r12, r31
    1502:	d1 08       	sbc	r13, r1
    1504:	e1 08       	sbc	r14, r1
    1506:	f1 08       	sbc	r15, r1
    1508:	8d 81       	ldd	r24, Y+5	; 0x05
    150a:	9e 81       	ldd	r25, Y+6	; 0x06
    150c:	af 81       	ldd	r26, Y+7	; 0x07
    150e:	b8 85       	ldd	r27, Y+8	; 0x08
    1510:	8c 15       	cp	r24, r12
    1512:	9d 05       	cpc	r25, r13
    1514:	ae 05       	cpc	r26, r14
    1516:	bf 05       	cpc	r27, r15
    1518:	08 f0       	brcs	.+2      	; 0x151c <_ZN10LCD_Driver5floodEjm+0x94>
    151a:	51 c0       	rjmp	.+162    	; 0x15be <_ZN10LCD_Driver5floodEjm+0x136>
    151c:	e0 e0       	ldi	r30, 0x00	; 0
    151e:	f6 e0       	ldi	r31, 0x06	; 6
    1520:	84 81       	ldd	r24, Z+4	; 0x04
    1522:	8b 7f       	andi	r24, 0xFB	; 251
    1524:	84 83       	std	Z+4, r24	; 0x04
    1526:	84 81       	ldd	r24, Z+4	; 0x04
    1528:	84 60       	ori	r24, 0x04	; 4
    152a:	84 83       	std	Z+4, r24	; 0x04
    152c:	84 81       	ldd	r24, Z+4	; 0x04
    152e:	8b 7f       	andi	r24, 0xFB	; 251
    1530:	84 83       	std	Z+4, r24	; 0x04
    1532:	84 81       	ldd	r24, Z+4	; 0x04
    1534:	84 60       	ori	r24, 0x04	; 4
    1536:	84 83       	std	Z+4, r24	; 0x04
    1538:	8d 81       	ldd	r24, Y+5	; 0x05
    153a:	9e 81       	ldd	r25, Y+6	; 0x06
    153c:	af 81       	ldd	r26, Y+7	; 0x07
    153e:	b8 85       	ldd	r27, Y+8	; 0x08
    1540:	01 96       	adiw	r24, 0x01	; 1
    1542:	a1 1d       	adc	r26, r1
    1544:	b1 1d       	adc	r27, r1
    1546:	8d 83       	std	Y+5, r24	; 0x05
    1548:	9e 83       	std	Y+6, r25	; 0x06
    154a:	af 83       	std	Y+7, r26	; 0x07
    154c:	b8 87       	std	Y+8, r27	; 0x08
    154e:	8d 81       	ldd	r24, Y+5	; 0x05
    1550:	9e 81       	ldd	r25, Y+6	; 0x06
    1552:	af 81       	ldd	r26, Y+7	; 0x07
    1554:	b8 85       	ldd	r27, Y+8	; 0x08
    1556:	8c 15       	cp	r24, r12
    1558:	9d 05       	cpc	r25, r13
    155a:	ae 05       	cpc	r26, r14
    155c:	bf 05       	cpc	r27, r15
    155e:	00 f3       	brcs	.-64     	; 0x1520 <_ZN10LCD_Driver5floodEjm+0x98>
    1560:	2e c0       	rjmp	.+92     	; 0x15be <_ZN10LCD_Driver5floodEjm+0x136>
    1562:	19 82       	std	Y+1, r1	; 0x01
    1564:	1a 82       	std	Y+2, r1	; 0x02
    1566:	1b 82       	std	Y+3, r1	; 0x03
    1568:	1c 82       	std	Y+4, r1	; 0x04
    156a:	73 01       	movw	r14, r6
    156c:	62 01       	movw	r12, r4
    156e:	81 e0       	ldi	r24, 0x01	; 1
    1570:	c8 1a       	sub	r12, r24
    1572:	d1 08       	sbc	r13, r1
    1574:	e1 08       	sbc	r14, r1
    1576:	f1 08       	sbc	r15, r1
    1578:	89 81       	ldd	r24, Y+1	; 0x01
    157a:	9a 81       	ldd	r25, Y+2	; 0x02
    157c:	ab 81       	ldd	r26, Y+3	; 0x03
    157e:	bc 81       	ldd	r27, Y+4	; 0x04
    1580:	8c 15       	cp	r24, r12
    1582:	9d 05       	cpc	r25, r13
    1584:	ae 05       	cpc	r26, r14
    1586:	bf 05       	cpc	r27, r15
    1588:	d0 f4       	brcc	.+52     	; 0x15be <_ZN10LCD_Driver5floodEjm+0x136>
    158a:	6b 2d       	mov	r22, r11
    158c:	c8 01       	movw	r24, r16
    158e:	b8 de       	rcall	.-656    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    1590:	6a 2d       	mov	r22, r10
    1592:	c8 01       	movw	r24, r16
    1594:	b5 de       	rcall	.-662    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    1596:	89 81       	ldd	r24, Y+1	; 0x01
    1598:	9a 81       	ldd	r25, Y+2	; 0x02
    159a:	ab 81       	ldd	r26, Y+3	; 0x03
    159c:	bc 81       	ldd	r27, Y+4	; 0x04
    159e:	01 96       	adiw	r24, 0x01	; 1
    15a0:	a1 1d       	adc	r26, r1
    15a2:	b1 1d       	adc	r27, r1
    15a4:	89 83       	std	Y+1, r24	; 0x01
    15a6:	9a 83       	std	Y+2, r25	; 0x02
    15a8:	ab 83       	std	Y+3, r26	; 0x03
    15aa:	bc 83       	std	Y+4, r27	; 0x04
    15ac:	49 81       	ldd	r20, Y+1	; 0x01
    15ae:	5a 81       	ldd	r21, Y+2	; 0x02
    15b0:	6b 81       	ldd	r22, Y+3	; 0x03
    15b2:	7c 81       	ldd	r23, Y+4	; 0x04
    15b4:	4c 15       	cp	r20, r12
    15b6:	5d 05       	cpc	r21, r13
    15b8:	6e 05       	cpc	r22, r14
    15ba:	7f 05       	cpc	r23, r15
    15bc:	30 f3       	brcs	.-52     	; 0x158a <_ZN10LCD_Driver5floodEjm+0x102>
    15be:	e0 e0       	ldi	r30, 0x00	; 0
    15c0:	f6 e0       	ldi	r31, 0x06	; 6
    15c2:	84 81       	ldd	r24, Z+4	; 0x04
    15c4:	81 60       	ori	r24, 0x01	; 1
    15c6:	84 83       	std	Z+4, r24	; 0x04
    15c8:	28 96       	adiw	r28, 0x08	; 8
    15ca:	cd bf       	out	0x3d, r28	; 61
    15cc:	de bf       	out	0x3e, r29	; 62
    15ce:	df 91       	pop	r29
    15d0:	cf 91       	pop	r28
    15d2:	1f 91       	pop	r17
    15d4:	0f 91       	pop	r16
    15d6:	ff 90       	pop	r15
    15d8:	ef 90       	pop	r14
    15da:	df 90       	pop	r13
    15dc:	cf 90       	pop	r12
    15de:	bf 90       	pop	r11
    15e0:	af 90       	pop	r10
    15e2:	7f 90       	pop	r7
    15e4:	6f 90       	pop	r6
    15e6:	5f 90       	pop	r5
    15e8:	4f 90       	pop	r4
    15ea:	08 95       	ret

000015ec <_ZN10LCD_Driver15writeRegister32Ehm>:
	writeRegister32(HX8357_PASET, t);
	CS_IDLE;
}

void LCD_Driver::writeRegister32(uint8_t r, uint32_t d) 
{
    15ec:	cf 92       	push	r12
    15ee:	df 92       	push	r13
    15f0:	ef 92       	push	r14
    15f2:	ff 92       	push	r15
    15f4:	0f 93       	push	r16
    15f6:	1f 93       	push	r17
    15f8:	cf 93       	push	r28
    15fa:	df 93       	push	r29
    15fc:	ec 01       	movw	r28, r24
    15fe:	69 01       	movw	r12, r18
    1600:	7a 01       	movw	r14, r20
    CS_ACTIVE;
    1602:	00 e0       	ldi	r16, 0x00	; 0
    1604:	16 e0       	ldi	r17, 0x06	; 6
    1606:	f8 01       	movw	r30, r16
    1608:	84 81       	ldd	r24, Z+4	; 0x04
    160a:	8e 7f       	andi	r24, 0xFE	; 254
    160c:	84 83       	std	Z+4, r24	; 0x04
    CD_COMMAND;
    160e:	84 81       	ldd	r24, Z+4	; 0x04
    1610:	8d 7f       	andi	r24, 0xFD	; 253
    1612:	84 83       	std	Z+4, r24	; 0x04
    writeData(r);
    1614:	ce 01       	movw	r24, r28
    1616:	74 de       	rcall	.-792    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    CD_DATA;
    1618:	f8 01       	movw	r30, r16
    161a:	84 81       	ldd	r24, Z+4	; 0x04
    161c:	82 60       	ori	r24, 0x02	; 2
    161e:	84 83       	std	Z+4, r24	; 0x04
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1620:	f6 e0       	ldi	r31, 0x06	; 6
    1622:	fa 95       	dec	r31
    1624:	f1 f7       	brne	.-4      	; 0x1622 <_ZN10LCD_Driver15writeRegister32Ehm+0x36>
    1626:	00 c0       	rjmp	.+0      	; 0x1628 <_ZN10LCD_Driver15writeRegister32Ehm+0x3c>
    _delay_us(10);
    writeData(d >> 24);
    1628:	6f 2d       	mov	r22, r15
    162a:	77 27       	eor	r23, r23
    162c:	88 27       	eor	r24, r24
    162e:	99 27       	eor	r25, r25
    1630:	ce 01       	movw	r24, r28
    1632:	66 de       	rcall	.-820    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    1634:	86 e0       	ldi	r24, 0x06	; 6
    1636:	8a 95       	dec	r24
    1638:	f1 f7       	brne	.-4      	; 0x1636 <_ZN10LCD_Driver15writeRegister32Ehm+0x4a>
    163a:	00 c0       	rjmp	.+0      	; 0x163c <_ZN10LCD_Driver15writeRegister32Ehm+0x50>
    _delay_us(10);
    writeData(d >> 16);
    163c:	b7 01       	movw	r22, r14
    163e:	88 27       	eor	r24, r24
    1640:	99 27       	eor	r25, r25
    1642:	ce 01       	movw	r24, r28
    1644:	5d de       	rcall	.-838    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    1646:	e6 e0       	ldi	r30, 0x06	; 6
    1648:	ea 95       	dec	r30
    164a:	f1 f7       	brne	.-4      	; 0x1648 <_ZN10LCD_Driver15writeRegister32Ehm+0x5c>
    164c:	00 c0       	rjmp	.+0      	; 0x164e <_ZN10LCD_Driver15writeRegister32Ehm+0x62>
    _delay_us(10);
    writeData(d >> 8);
    164e:	99 27       	eor	r25, r25
    1650:	8f 2d       	mov	r24, r15
    1652:	7e 2d       	mov	r23, r14
    1654:	6d 2d       	mov	r22, r13
    1656:	ce 01       	movw	r24, r28
    1658:	53 de       	rcall	.-858    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    165a:	f6 e0       	ldi	r31, 0x06	; 6
    165c:	fa 95       	dec	r31
    165e:	f1 f7       	brne	.-4      	; 0x165c <_ZN10LCD_Driver15writeRegister32Ehm+0x70>
    1660:	00 c0       	rjmp	.+0      	; 0x1662 <_ZN10LCD_Driver15writeRegister32Ehm+0x76>
    _delay_us(10);
    writeData(d);
    1662:	6c 2d       	mov	r22, r12
    1664:	ce 01       	movw	r24, r28
    1666:	4c de       	rcall	.-872    	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
    CS_IDLE;
    1668:	e0 e0       	ldi	r30, 0x00	; 0
    166a:	f6 e0       	ldi	r31, 0x06	; 6
    166c:	84 81       	ldd	r24, Z+4	; 0x04
    166e:	81 60       	ori	r24, 0x01	; 1
    1670:	84 83       	std	Z+4, r24	; 0x04
}
    1672:	df 91       	pop	r29
    1674:	cf 91       	pop	r28
    1676:	1f 91       	pop	r17
    1678:	0f 91       	pop	r16
    167a:	ff 90       	pop	r15
    167c:	ef 90       	pop	r14
    167e:	df 90       	pop	r13
    1680:	cf 90       	pop	r12
    1682:	08 95       	ret

00001684 <_ZN10LCD_Driver13setAddrWindowEjjjj>:
	LCD_DATA_PORT.DIR= 0xFF;
}


void LCD_Driver::setAddrWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2)
{
    1684:	cf 92       	push	r12
    1686:	df 92       	push	r13
    1688:	ef 92       	push	r14
    168a:	ff 92       	push	r15
    168c:	0f 93       	push	r16
    168e:	1f 93       	push	r17
    1690:	cf 93       	push	r28
    1692:	df 93       	push	r29
    1694:	7c 01       	movw	r14, r24
    1696:	6a 01       	movw	r12, r20
    1698:	c9 01       	movw	r24, r18
	CS_ACTIVE;
    169a:	c0 e0       	ldi	r28, 0x00	; 0
    169c:	d6 e0       	ldi	r29, 0x06	; 6
    169e:	2c 81       	ldd	r18, Y+4	; 0x04
    16a0:	2e 7f       	andi	r18, 0xFE	; 254
    16a2:	2c 83       	std	Y+4, r18	; 0x04
	uint32_t t;

	t = x1;
    16a4:	ab 01       	movw	r20, r22
    16a6:	60 e0       	ldi	r22, 0x00	; 0
    16a8:	70 e0       	ldi	r23, 0x00	; 0
	t <<= 16;
    16aa:	ba 01       	movw	r22, r20
    16ac:	55 27       	eor	r21, r21
    16ae:	44 27       	eor	r20, r20
	t |= x2;
    16b0:	a0 e0       	ldi	r26, 0x00	; 0
    16b2:	b0 e0       	ldi	r27, 0x00	; 0
    16b4:	9a 01       	movw	r18, r20
    16b6:	ab 01       	movw	r20, r22
    16b8:	28 2b       	or	r18, r24
    16ba:	39 2b       	or	r19, r25
    16bc:	4a 2b       	or	r20, r26
    16be:	5b 2b       	or	r21, r27
	//TODO move register
	//writeRegister32(ILI9341_COLADDRSET, t);  // HX8357D uses same registers!
	writeRegister32(HX8357_CASET, t);
    16c0:	6a e2       	ldi	r22, 0x2A	; 42
    16c2:	c7 01       	movw	r24, r14
    16c4:	93 df       	rcall	.-218    	; 0x15ec <_ZN10LCD_Driver15writeRegister32Ehm>
	t = y1;
    16c6:	a6 01       	movw	r20, r12
    16c8:	60 e0       	ldi	r22, 0x00	; 0
    16ca:	70 e0       	ldi	r23, 0x00	; 0
	t <<= 16;
    16cc:	ba 01       	movw	r22, r20
    16ce:	55 27       	eor	r21, r21
    16d0:	44 27       	eor	r20, r20
	t |= y2;
    16d2:	20 e0       	ldi	r18, 0x00	; 0
    16d4:	30 e0       	ldi	r19, 0x00	; 0
    16d6:	db 01       	movw	r26, r22
    16d8:	ca 01       	movw	r24, r20
    16da:	80 2b       	or	r24, r16
    16dc:	91 2b       	or	r25, r17
    16de:	a2 2b       	or	r26, r18
    16e0:	b3 2b       	or	r27, r19
    16e2:	9c 01       	movw	r18, r24
    16e4:	ad 01       	movw	r20, r26
	//TODO move register
	//writeRegister32(ILI9341_PAGEADDRSET, t); // HX8357D uses same registers!
	writeRegister32(HX8357_PASET, t);
    16e6:	6b e2       	ldi	r22, 0x2B	; 43
    16e8:	c7 01       	movw	r24, r14
    16ea:	80 df       	rcall	.-256    	; 0x15ec <_ZN10LCD_Driver15writeRegister32Ehm>
	CS_IDLE;
    16ec:	8c 81       	ldd	r24, Y+4	; 0x04
    16ee:	81 60       	ori	r24, 0x01	; 1
    16f0:	8c 83       	std	Y+4, r24	; 0x04
}
    16f2:	df 91       	pop	r29
    16f4:	cf 91       	pop	r28
    16f6:	1f 91       	pop	r17
    16f8:	0f 91       	pop	r16
    16fa:	ff 90       	pop	r15
    16fc:	ef 90       	pop	r14
    16fe:	df 90       	pop	r13
    1700:	cf 90       	pop	r12
    1702:	08 95       	ret

00001704 <_ZN10LCD_Driver9drawPixelEiij>:

  CS_IDLE;
}

void LCD_Driver::drawPixel(int16_t x, int16_t y, uint16_t color)
{
    1704:	cf 92       	push	r12
    1706:	df 92       	push	r13
    1708:	ef 92       	push	r14
    170a:	ff 92       	push	r15
    170c:	0f 93       	push	r16
    170e:	1f 93       	push	r17
    1710:	cf 93       	push	r28
    1712:	df 93       	push	r29
    1714:	ec 01       	movw	r28, r24
    1716:	d2 2e       	mov	r13, r18
    1718:	c3 2e       	mov	r12, r19
	if((x < 0) || (y < 0) || (x >= (uint16_t)_width) || (y >= (uint16_t)_height))
    171a:	77 23       	and	r23, r23
    171c:	c4 f1       	brlt	.+112    	; 0x178e <_ZN10LCD_Driver9drawPixelEiij+0x8a>
    171e:	55 23       	and	r21, r21
    1720:	b4 f1       	brlt	.+108    	; 0x178e <_ZN10LCD_Driver9drawPixelEiij+0x8a>
    1722:	8e 81       	ldd	r24, Y+6	; 0x06
    1724:	9f 81       	ldd	r25, Y+7	; 0x07
    1726:	68 17       	cp	r22, r24
    1728:	79 07       	cpc	r23, r25
    172a:	88 f5       	brcc	.+98     	; 0x178e <_ZN10LCD_Driver9drawPixelEiij+0x8a>
    172c:	88 85       	ldd	r24, Y+8	; 0x08
    172e:	99 85       	ldd	r25, Y+9	; 0x09
    1730:	48 17       	cp	r20, r24
    1732:	59 07       	cpc	r21, r25
    1734:	60 f5       	brcc	.+88     	; 0x178e <_ZN10LCD_Driver9drawPixelEiij+0x8a>
	{
		return;
	}
	CS_ACTIVE;
    1736:	0f 2e       	mov	r0, r31
    1738:	e1 2c       	mov	r14, r1
    173a:	f6 e0       	ldi	r31, 0x06	; 6
    173c:	ff 2e       	mov	r15, r31
    173e:	f0 2d       	mov	r31, r0
    1740:	f7 01       	movw	r30, r14
    1742:	84 81       	ldd	r24, Z+4	; 0x04
    1744:	8e 7f       	andi	r24, 0xFE	; 254
    1746:	84 83       	std	Z+4, r24	; 0x04
	setAddrWindow(x, y,_width-1, _height-1);
    1748:	08 85       	ldd	r16, Y+8	; 0x08
    174a:	19 85       	ldd	r17, Y+9	; 0x09
    174c:	01 50       	subi	r16, 0x01	; 1
    174e:	11 09       	sbc	r17, r1
    1750:	8e 81       	ldd	r24, Y+6	; 0x06
    1752:	9f 81       	ldd	r25, Y+7	; 0x07
    1754:	9c 01       	movw	r18, r24
    1756:	21 50       	subi	r18, 0x01	; 1
    1758:	31 09       	sbc	r19, r1
    175a:	ce 01       	movw	r24, r28
    175c:	93 df       	rcall	.-218    	; 0x1684 <_ZN10LCD_Driver13setAddrWindowEjjjj>
	CS_ACTIVE;
    175e:	f7 01       	movw	r30, r14
    1760:	84 81       	ldd	r24, Z+4	; 0x04
    1762:	8e 7f       	andi	r24, 0xFE	; 254
    1764:	84 83       	std	Z+4, r24	; 0x04
	CD_COMMAND;
    1766:	84 81       	ldd	r24, Z+4	; 0x04
    1768:	8d 7f       	andi	r24, 0xFD	; 253
    176a:	84 83       	std	Z+4, r24	; 0x04


	writeData(0x2C);
    176c:	6c e2       	ldi	r22, 0x2C	; 44
    176e:	ce 01       	movw	r24, r28
    1770:	c7 dd       	rcall	.-1138   	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
	CD_DATA;
    1772:	f7 01       	movw	r30, r14
    1774:	84 81       	ldd	r24, Z+4	; 0x04
    1776:	82 60       	ori	r24, 0x02	; 2
    1778:	84 83       	std	Z+4, r24	; 0x04
	writeData(color >> 8);
    177a:	6c 2d       	mov	r22, r12
    177c:	ce 01       	movw	r24, r28
    177e:	c0 dd       	rcall	.-1152   	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
	writeData(color);
    1780:	6d 2d       	mov	r22, r13
    1782:	ce 01       	movw	r24, r28
    1784:	bd dd       	rcall	.-1158   	; 0x1300 <_ZN10LCD_Driver9writeDataEh>
	CS_IDLE;
    1786:	f7 01       	movw	r30, r14
    1788:	84 81       	ldd	r24, Z+4	; 0x04
    178a:	81 60       	ori	r24, 0x01	; 1
    178c:	84 83       	std	Z+4, r24	; 0x04
}
    178e:	df 91       	pop	r29
    1790:	cf 91       	pop	r28
    1792:	1f 91       	pop	r17
    1794:	0f 91       	pop	r16
    1796:	ff 90       	pop	r15
    1798:	ef 90       	pop	r14
    179a:	df 90       	pop	r13
    179c:	cf 90       	pop	r12
    179e:	08 95       	ret

000017a0 <_ZN10LCD_Driver10fillScreenEj>:
{
	LCD_DATA_PORT.OUT = data;
	WR_STROBE;
}

void LCD_Driver::fillScreen(uint16_t color) {
    17a0:	ef 92       	push	r14
    17a2:	ff 92       	push	r15
    17a4:	0f 93       	push	r16
    17a6:	1f 93       	push	r17
    17a8:	cf 93       	push	r28
    17aa:	df 93       	push	r29
    17ac:	ec 01       	movw	r28, r24
    17ae:	7b 01       	movw	r14, r22
	setAddrWindow(0,0, _width-1, _height - 1);
    17b0:	08 85       	ldd	r16, Y+8	; 0x08
    17b2:	19 85       	ldd	r17, Y+9	; 0x09
    17b4:	01 50       	subi	r16, 0x01	; 1
    17b6:	11 09       	sbc	r17, r1
    17b8:	2e 81       	ldd	r18, Y+6	; 0x06
    17ba:	3f 81       	ldd	r19, Y+7	; 0x07
    17bc:	21 50       	subi	r18, 0x01	; 1
    17be:	31 09       	sbc	r19, r1
    17c0:	40 e0       	ldi	r20, 0x00	; 0
    17c2:	50 e0       	ldi	r21, 0x00	; 0
    17c4:	60 e0       	ldi	r22, 0x00	; 0
    17c6:	70 e0       	ldi	r23, 0x00	; 0
    17c8:	5d df       	rcall	.-326    	; 0x1684 <_ZN10LCD_Driver13setAddrWindowEjjjj>
	flood(color, (long)TFTWIDTH * (long) TFTHEIGHT);
    17ca:	20 e0       	ldi	r18, 0x00	; 0
    17cc:	38 e5       	ldi	r19, 0x58	; 88
    17ce:	42 e0       	ldi	r20, 0x02	; 2
    17d0:	50 e0       	ldi	r21, 0x00	; 0
    17d2:	b7 01       	movw	r22, r14
    17d4:	ce 01       	movw	r24, r28
    17d6:	58 de       	rcall	.-848    	; 0x1488 <_ZN10LCD_Driver5floodEjm>
}
    17d8:	df 91       	pop	r29
    17da:	cf 91       	pop	r28
    17dc:	1f 91       	pop	r17
    17de:	0f 91       	pop	r16
    17e0:	ff 90       	pop	r15
    17e2:	ef 90       	pop	r14
    17e4:	08 95       	ret

000017e6 <__vector_88>:
	if (fr == FR_OK) {
		fr = f_lseek(fp, f_size(fp));
		if (fr != FR_OK) f_close(fp);
	}
	return fr;
}
    17e6:	1f 92       	push	r1
    17e8:	0f 92       	push	r0
    17ea:	0f b6       	in	r0, 0x3f	; 63
    17ec:	0f 92       	push	r0
    17ee:	11 24       	eor	r1, r1
    17f0:	0b b6       	in	r0, 0x3b	; 59
    17f2:	0f 92       	push	r0
    17f4:	2f 93       	push	r18
    17f6:	3f 93       	push	r19
    17f8:	4f 93       	push	r20
    17fa:	5f 93       	push	r21
    17fc:	6f 93       	push	r22
    17fe:	7f 93       	push	r23
    1800:	8f 93       	push	r24
    1802:	9f 93       	push	r25
    1804:	af 93       	push	r26
    1806:	bf 93       	push	r27
    1808:	ef 93       	push	r30
    180a:	ff 93       	push	r31
    180c:	80 91 a6 20 	lds	r24, 0x20A6
    1810:	90 91 a7 20 	lds	r25, 0x20A7
    1814:	dc da       	rcall	.-2632   	; 0xdce <_ZN5BTOBD13interceptByteEv>
    1816:	ff 91       	pop	r31
    1818:	ef 91       	pop	r30
    181a:	bf 91       	pop	r27
    181c:	af 91       	pop	r26
    181e:	9f 91       	pop	r25
    1820:	8f 91       	pop	r24
    1822:	7f 91       	pop	r23
    1824:	6f 91       	pop	r22
    1826:	5f 91       	pop	r21
    1828:	4f 91       	pop	r20
    182a:	3f 91       	pop	r19
    182c:	2f 91       	pop	r18
    182e:	0f 90       	pop	r0
    1830:	0b be       	out	0x3b, r0	; 59
    1832:	0f 90       	pop	r0
    1834:	0f be       	out	0x3f, r0	; 63
    1836:	0f 90       	pop	r0
    1838:	1f 90       	pop	r1
    183a:	18 95       	reti

0000183c <__vector_91>:
    183c:	1f 92       	push	r1
    183e:	0f 92       	push	r0
    1840:	0f b6       	in	r0, 0x3f	; 63
    1842:	0f 92       	push	r0
    1844:	11 24       	eor	r1, r1
    1846:	0b b6       	in	r0, 0x3b	; 59
    1848:	0f 92       	push	r0
    184a:	2f 93       	push	r18
    184c:	3f 93       	push	r19
    184e:	4f 93       	push	r20
    1850:	5f 93       	push	r21
    1852:	6f 93       	push	r22
    1854:	7f 93       	push	r23
    1856:	8f 93       	push	r24
    1858:	9f 93       	push	r25
    185a:	af 93       	push	r26
    185c:	bf 93       	push	r27
    185e:	ef 93       	push	r30
    1860:	ff 93       	push	r31
    1862:	80 91 a2 20 	lds	r24, 0x20A2
    1866:	90 91 a3 20 	lds	r25, 0x20A3
    186a:	a6 dc       	rcall	.-1716   	; 0x11b8 <_ZN3GPS13interceptByteEv>
    186c:	ff 91       	pop	r31
    186e:	ef 91       	pop	r30
    1870:	bf 91       	pop	r27
    1872:	af 91       	pop	r26
    1874:	9f 91       	pop	r25
    1876:	8f 91       	pop	r24
    1878:	7f 91       	pop	r23
    187a:	6f 91       	pop	r22
    187c:	5f 91       	pop	r21
    187e:	4f 91       	pop	r20
    1880:	3f 91       	pop	r19
    1882:	2f 91       	pop	r18
    1884:	0f 90       	pop	r0
    1886:	0b be       	out	0x3b, r0	; 59
    1888:	0f 90       	pop	r0
    188a:	0f be       	out	0x3f, r0	; 63
    188c:	0f 90       	pop	r0
    188e:	1f 90       	pop	r1
    1890:	18 95       	reti

00001892 <__vector_90>:
    1892:	1f 92       	push	r1
    1894:	0f 92       	push	r0
    1896:	0f b6       	in	r0, 0x3f	; 63
    1898:	0f 92       	push	r0
    189a:	11 24       	eor	r1, r1
    189c:	0f 90       	pop	r0
    189e:	0f be       	out	0x3f, r0	; 63
    18a0:	0f 90       	pop	r0
    18a2:	1f 90       	pop	r1
    18a4:	18 95       	reti

000018a6 <__vector_93>:
    18a6:	1f 92       	push	r1
    18a8:	0f 92       	push	r0
    18aa:	0f b6       	in	r0, 0x3f	; 63
    18ac:	0f 92       	push	r0
    18ae:	11 24       	eor	r1, r1
    18b0:	0f 90       	pop	r0
    18b2:	0f be       	out	0x3f, r0	; 63
    18b4:	0f 90       	pop	r0
    18b6:	1f 90       	pop	r1
    18b8:	18 95       	reti

000018ba <__vector_89>:
    18ba:	1f 92       	push	r1
    18bc:	0f 92       	push	r0
    18be:	0f b6       	in	r0, 0x3f	; 63
    18c0:	0f 92       	push	r0
    18c2:	11 24       	eor	r1, r1
    18c4:	0b b6       	in	r0, 0x3b	; 59
    18c6:	0f 92       	push	r0
    18c8:	2f 93       	push	r18
    18ca:	3f 93       	push	r19
    18cc:	4f 93       	push	r20
    18ce:	5f 93       	push	r21
    18d0:	6f 93       	push	r22
    18d2:	7f 93       	push	r23
    18d4:	8f 93       	push	r24
    18d6:	9f 93       	push	r25
    18d8:	af 93       	push	r26
    18da:	bf 93       	push	r27
    18dc:	ef 93       	push	r30
    18de:	ff 93       	push	r31
    18e0:	80 91 a6 20 	lds	r24, 0x20A6
    18e4:	90 91 a7 20 	lds	r25, 0x20A7
    18e8:	81 da       	rcall	.-2814   	; 0xdec <_ZN5BTOBD9handleDREEv>
    18ea:	ff 91       	pop	r31
    18ec:	ef 91       	pop	r30
    18ee:	bf 91       	pop	r27
    18f0:	af 91       	pop	r26
    18f2:	9f 91       	pop	r25
    18f4:	8f 91       	pop	r24
    18f6:	7f 91       	pop	r23
    18f8:	6f 91       	pop	r22
    18fa:	5f 91       	pop	r21
    18fc:	4f 91       	pop	r20
    18fe:	3f 91       	pop	r19
    1900:	2f 91       	pop	r18
    1902:	0f 90       	pop	r0
    1904:	0b be       	out	0x3b, r0	; 59
    1906:	0f 90       	pop	r0
    1908:	0f be       	out	0x3f, r0	; 63
    190a:	0f 90       	pop	r0
    190c:	1f 90       	pop	r1
    190e:	18 95       	reti

00001910 <__vector_92>:
    1910:	1f 92       	push	r1
    1912:	0f 92       	push	r0
    1914:	0f b6       	in	r0, 0x3f	; 63
    1916:	0f 92       	push	r0
    1918:	11 24       	eor	r1, r1
    191a:	0b b6       	in	r0, 0x3b	; 59
    191c:	0f 92       	push	r0
    191e:	2f 93       	push	r18
    1920:	3f 93       	push	r19
    1922:	4f 93       	push	r20
    1924:	5f 93       	push	r21
    1926:	6f 93       	push	r22
    1928:	7f 93       	push	r23
    192a:	8f 93       	push	r24
    192c:	9f 93       	push	r25
    192e:	af 93       	push	r26
    1930:	bf 93       	push	r27
    1932:	ef 93       	push	r30
    1934:	ff 93       	push	r31
    1936:	80 91 a2 20 	lds	r24, 0x20A2
    193a:	90 91 a3 20 	lds	r25, 0x20A3
    193e:	6a dc       	rcall	.-1836   	; 0x1214 <_ZN3GPS9handleDREEv>
    1940:	ff 91       	pop	r31
    1942:	ef 91       	pop	r30
    1944:	bf 91       	pop	r27
    1946:	af 91       	pop	r26
    1948:	9f 91       	pop	r25
    194a:	8f 91       	pop	r24
    194c:	7f 91       	pop	r23
    194e:	6f 91       	pop	r22
    1950:	5f 91       	pop	r21
    1952:	4f 91       	pop	r20
    1954:	3f 91       	pop	r19
    1956:	2f 91       	pop	r18
    1958:	0f 90       	pop	r0
    195a:	0b be       	out	0x3b, r0	; 59
    195c:	0f 90       	pop	r0
    195e:	0f be       	out	0x3f, r0	; 63
    1960:	0f 90       	pop	r0
    1962:	1f 90       	pop	r1
    1964:	18 95       	reti

00001966 <__vector_default>:
    1966:	1f 92       	push	r1
    1968:	0f 92       	push	r0
    196a:	0f b6       	in	r0, 0x3f	; 63
    196c:	0f 92       	push	r0
    196e:	11 24       	eor	r1, r1
    1970:	00 00       	nop
    1972:	0f 90       	pop	r0
    1974:	0f be       	out	0x3f, r0	; 63
    1976:	0f 90       	pop	r0
    1978:	1f 90       	pop	r1
    197a:	18 95       	reti

0000197c <__vector_57>:
    197c:	1f 92       	push	r1
    197e:	0f 92       	push	r0
    1980:	0f b6       	in	r0, 0x3f	; 63
    1982:	0f 92       	push	r0
    1984:	11 24       	eor	r1, r1
    1986:	0f 90       	pop	r0
    1988:	0f be       	out	0x3f, r0	; 63
    198a:	0f 90       	pop	r0
    198c:	1f 90       	pop	r1
    198e:	18 95       	reti

00001990 <_Z15setClockTo32MHzv>:
    1990:	88 ed       	ldi	r24, 0xD8	; 216
    1992:	84 bf       	out	0x34, r24	; 52
    1994:	82 e0       	ldi	r24, 0x02	; 2
    1996:	80 93 50 00 	sts	0x0050, r24
    199a:	e0 e5       	ldi	r30, 0x50	; 80
    199c:	f0 e0       	ldi	r31, 0x00	; 0
    199e:	81 81       	ldd	r24, Z+1	; 0x01
    19a0:	81 ff       	sbrs	r24, 1
    19a2:	fd cf       	rjmp	.-6      	; 0x199e <_Z15setClockTo32MHzv+0xe>
    19a4:	88 ed       	ldi	r24, 0xD8	; 216
    19a6:	84 bf       	out	0x34, r24	; 52
    19a8:	81 e0       	ldi	r24, 0x01	; 1
    19aa:	80 93 40 00 	sts	0x0040, r24
    19ae:	08 95       	ret

000019b0 <main>:

int main(void)
{
    19b0:	cf 93       	push	r28
    19b2:	df 93       	push	r29
    19b4:	cd b7       	in	r28, 0x3d	; 61
    19b6:	de b7       	in	r29, 0x3e	; 62
    19b8:	c2 53       	subi	r28, 0x32	; 50
    19ba:	d1 40       	sbci	r29, 0x01	; 1
    19bc:	cd bf       	out	0x3d, r28	; 61
    19be:	de bf       	out	0x3e, r29	; 62
	asm("cli");
    19c0:	f8 94       	cli
	setClockTo32MHz();
    19c2:	e6 df       	rcall	.-52     	; 0x1990 <_Z15setClockTo32MHzv>
		PORTD.OUT = 0x88;
    19c4:	e0 e6       	ldi	r30, 0x60	; 96
    19c6:	f6 e0       	ldi	r31, 0x06	; 6
    19c8:	88 e8       	ldi	r24, 0x88	; 136
    19ca:	84 83       	std	Z+4, r24	; 0x04
		PORTD.DIR = 0x88;
    19cc:	80 83       	st	Z, r24
		PORTE.DIR = 0xB0;
    19ce:	80 eb       	ldi	r24, 0xB0	; 176
    19d0:	80 93 80 06 	sts	0x0680, r24
	LCD_Driver LCD;
    19d4:	8e 01       	movw	r16, r28
    19d6:	02 5e       	subi	r16, 0xE2	; 226
    19d8:	1e 4f       	sbci	r17, 0xFE	; 254
    19da:	c8 01       	movw	r24, r16
    19dc:	80 dc       	rcall	.-1792   	; 0x12de <_ZN10LCD_DriverC1Ev>
	LCDref = &LCD;
    19de:	00 93 a4 20 	sts	0x20A4, r16
    19e2:	10 93 a5 20 	sts	0x20A5, r17
		LCD.begin();
    19e6:	c8 01       	movw	r24, r16
    19e8:	d6 dc       	rcall	.-1620   	; 0x1396 <_ZN10LCD_Driver5beginEv>
		LCD.fillScreen(0xFFFF);
    19ea:	6f ef       	ldi	r22, 0xFF	; 255
    19ec:	7f ef       	ldi	r23, 0xFF	; 255
    19ee:	c8 01       	movw	r24, r16
    19f0:	d7 de       	rcall	.-594    	; 0x17a0 <_ZN10LCD_Driver10fillScreenEj>
		LCD.setCursor(0,0);
    19f2:	40 e0       	ldi	r20, 0x00	; 0
    19f4:	50 e0       	ldi	r21, 0x00	; 0
    19f6:	60 e0       	ldi	r22, 0x00	; 0
    19f8:	70 e0       	ldi	r23, 0x00	; 0
    19fa:	c8 01       	movw	r24, r16
    19fc:	d3 d9       	rcall	.-3162   	; 0xda4 <_ZN12Adafruit_GFX9setCursorEii>
		LCD.setTextColor(0x0000, 0xFFFF);
    19fe:	4f ef       	ldi	r20, 0xFF	; 255
    1a00:	5f ef       	ldi	r21, 0xFF	; 255
    1a02:	60 e0       	ldi	r22, 0x00	; 0
    1a04:	70 e0       	ldi	r23, 0x00	; 0
    1a06:	c8 01       	movw	r24, r16
    1a08:	d9 d9       	rcall	.-3150   	; 0xdbc <_ZN12Adafruit_GFX12setTextColorEjj>
		LCD.setTextSize(2);
    1a0a:	62 e0       	ldi	r22, 0x02	; 2
    1a0c:	c8 01       	movw	r24, r16
    1a0e:	d0 d9       	rcall	.-3168   	; 0xdb0 <_ZN12Adafruit_GFX11setTextSizeEh>
		LCD.setTextWrap(true);
    1a10:	61 e0       	ldi	r22, 0x01	; 1
    1a12:	c8 01       	movw	r24, r16
    1a14:	d9 d9       	rcall	.-3150   	; 0xdc8 <_ZN12Adafruit_GFX11setTextWrapEb>
	//SPI_Driver spi(&SPIE);
	//spi.enable();
	/*UartDriver BluT(64);// = new UartDriver(64); //64 character buffer, rx and tx
	BluT.init(&USARTD0, ParityMode::DISABLED, CharSize::EIGHT, false, 12, 0x40); // 9600 bps*/
	GPS GPSModule;
    1a16:	0d 51       	subi	r16, 0x1D	; 29
    1a18:	11 40       	sbci	r17, 0x01	; 1
    1a1a:	c8 01       	movw	r24, r16
    1a1c:	98 da       	rcall	.-2768   	; 0xf4e <_ZN3GPSC1Ev>
	GPSref = &GPSModule;
    1a1e:	00 93 a2 20 	sts	0x20A2, r16
    1a22:	10 93 a3 20 	sts	0x20A3, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1a26:	2f ef       	ldi	r18, 0xFF	; 255
    1a28:	87 ea       	ldi	r24, 0xA7	; 167
    1a2a:	91 e6       	ldi	r25, 0x61	; 97
    1a2c:	21 50       	subi	r18, 0x01	; 1
    1a2e:	80 40       	sbci	r24, 0x00	; 0
    1a30:	90 40       	sbci	r25, 0x00	; 0
    1a32:	e1 f7       	brne	.-8      	; 0x1a2c <main+0x7c>
    1a34:	00 c0       	rjmp	.+0      	; 0x1a36 <main+0x86>
    1a36:	00 00       	nop
	_delay_ms(1000);

	//BTOBD OBDModule;

	PMIC.CTRL |= 0x07;
    1a38:	e0 ea       	ldi	r30, 0xA0	; 160
    1a3a:	f0 e0       	ldi	r31, 0x00	; 0
    1a3c:	82 81       	ldd	r24, Z+2	; 0x02
    1a3e:	87 60       	ori	r24, 0x07	; 7
    1a40:	82 83       	std	Z+2, r24	; 0x02
	asm("sei");
    1a42:	78 94       	sei
    1a44:	2f ef       	ldi	r18, 0xFF	; 255
    1a46:	83 ed       	ldi	r24, 0xD3	; 211
    1a48:	90 e3       	ldi	r25, 0x30	; 48
    1a4a:	21 50       	subi	r18, 0x01	; 1
    1a4c:	80 40       	sbci	r24, 0x00	; 0
    1a4e:	90 40       	sbci	r25, 0x00	; 0
    1a50:	e1 f7       	brne	.-8      	; 0x1a4a <main+0x9a>
    1a52:	00 c0       	rjmp	.+0      	; 0x1a54 <main+0xa4>
    1a54:	00 00       	nop
	_delay_ms(500);
	GPSModule.init();
    1a56:	ce 01       	movw	r24, r28
    1a58:	01 96       	adiw	r24, 0x01	; 1
    1a5a:	45 db       	rcall	.-2422   	; 0x10e6 <_ZN3GPS4initEv>
    1a5c:	ff cf       	rjmp	.-2      	; 0x1a5c <main+0xac>

00001a5e <_ZN6SDCardC1EP10SPI_struct>:
	return sdcard.write(buff, sector, count);
 }
 DRESULT disk_ioctl (BYTE pdrv, BYTE cmd, void* buff){
	if (!sdcard.IDMatch(pdrv)) return RES_PARERR;
	return sdcard.IOctl(cmd, buff);
 }
    1a5e:	cf 93       	push	r28
    1a60:	df 93       	push	r29
    1a62:	ec 01       	movw	r28, r24
    1a64:	18 d0       	rcall	.+48     	; 0x1a96 <_ZN10SPI_DriverC1EP10SPI_struct>
    1a66:	81 e0       	ldi	r24, 0x01	; 1
    1a68:	8c 83       	std	Y+4, r24	; 0x04
    1a6a:	e0 e8       	ldi	r30, 0x80	; 128
    1a6c:	f6 e0       	ldi	r31, 0x06	; 6
    1a6e:	80 81       	ld	r24, Z
    1a70:	83 7f       	andi	r24, 0xF3	; 243
    1a72:	80 83       	st	Z, r24
    1a74:	80 85       	ldd	r24, Z+8	; 0x08
    1a76:	83 ff       	sbrs	r24, 3
    1a78:	03 c0       	rjmp	.+6      	; 0x1a80 <_ZN6SDCardC1EP10SPI_struct+0x22>
    1a7a:	8c 81       	ldd	r24, Y+4	; 0x04
    1a7c:	82 60       	ori	r24, 0x02	; 2
    1a7e:	8c 83       	std	Y+4, r24	; 0x04
    1a80:	ce 01       	movw	r24, r28
    1a82:	14 d0       	rcall	.+40     	; 0x1aac <_ZN10SPI_Driver6enableEv>
    1a84:	df 91       	pop	r29
    1a86:	cf 91       	pop	r28
    1a88:	08 95       	ret

00001a8a <_GLOBAL__sub_I_sdcard>:
	DSTATUS getStatus();
	DRESULT read(BYTE* buff, DWORD sector, UINT count);
	DRESULT write(const BYTE* buff, DWORD sector, UINT count);
	DRESULT IOctl(BYTE ctrl, void* buff);
};
SDCard sdcard(&SPIE);
    1a8a:	60 ec       	ldi	r22, 0xC0	; 192
    1a8c:	7a e0       	ldi	r23, 0x0A	; 10
    1a8e:	88 ea       	ldi	r24, 0xA8	; 168
    1a90:	90 e2       	ldi	r25, 0x20	; 32
    1a92:	e5 cf       	rjmp	.-54     	; 0x1a5e <_ZN6SDCardC1EP10SPI_struct>
    1a94:	08 95       	ret

00001a96 <_ZN10SPI_DriverC1EP10SPI_struct>:
	//spi->INTCTRL = 0x03; // High level interrupt
	spi->INTCTRL = 0x00; // No interrupt, polling mode
 }
 void SPI_Driver::clockRate(char bit710) {
	spi->CTRL &= ~0x83;
	spi->CTRL |= bit710;
    1a96:	dc 01       	movw	r26, r24
    1a98:	6d 93       	st	X+, r22
    1a9a:	7c 93       	st	X, r23
    1a9c:	11 97       	sbiw	r26, 0x01	; 1
    1a9e:	23 e9       	ldi	r18, 0x93	; 147
    1aa0:	fb 01       	movw	r30, r22
    1aa2:	20 83       	st	Z, r18
    1aa4:	ed 91       	ld	r30, X+
    1aa6:	fc 91       	ld	r31, X
    1aa8:	11 82       	std	Z+1, r1	; 0x01
    1aaa:	08 95       	ret

00001aac <_ZN10SPI_Driver6enableEv>:
 }
 void SPI_Driver::enable() {
	spi->CTRL |= 0x40;
    1aac:	dc 01       	movw	r26, r24
    1aae:	ed 91       	ld	r30, X+
    1ab0:	fc 91       	ld	r31, X
    1ab2:	80 81       	ld	r24, Z
    1ab4:	80 64       	ori	r24, 0x40	; 64
    1ab6:	80 83       	st	Z, r24
    1ab8:	08 95       	ret

00001aba <_ZN10UartDriverC1Eii>:
char UartDriver::rxDequeue() {
	return rxQueue.dequeue();
}
bool UartDriver::rxIsEmpty() {
	return rxQueue.isEmpty();
}
    1aba:	0f 93       	push	r16
    1abc:	1f 93       	push	r17
    1abe:	cf 93       	push	r28
    1ac0:	df 93       	push	r29
    1ac2:	ec 01       	movw	r28, r24
    1ac4:	8a 01       	movw	r16, r20
    1ac6:	02 96       	adiw	r24, 0x02	; 2
    1ac8:	c9 d9       	rcall	.-3182   	; 0xe5c <_ZN9ByteQueueC1Ei>
    1aca:	b8 01       	movw	r22, r16
    1acc:	ce 01       	movw	r24, r28
    1ace:	0e 96       	adiw	r24, 0x0e	; 14
    1ad0:	c5 d9       	rcall	.-3190   	; 0xe5c <_ZN9ByteQueueC1Ei>
    1ad2:	df 91       	pop	r29
    1ad4:	cf 91       	pop	r28
    1ad6:	1f 91       	pop	r17
    1ad8:	0f 91       	pop	r16
    1ada:	08 95       	ret

00001adc <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc>:
    1adc:	cf 92       	push	r12
    1ade:	ef 92       	push	r14
    1ae0:	0f 93       	push	r16
    1ae2:	fc 01       	movw	r30, r24
    1ae4:	60 83       	st	Z, r22
    1ae6:	71 83       	std	Z+1, r23	; 0x01
    1ae8:	db 01       	movw	r26, r22
    1aea:	15 96       	adiw	r26, 0x05	; 5
    1aec:	1c 92       	st	X, r1
    1aee:	a0 81       	ld	r26, Z
    1af0:	b1 81       	ldd	r27, Z+1	; 0x01
    1af2:	16 96       	adiw	r26, 0x06	; 6
    1af4:	ec 92       	st	X, r14
    1af6:	a0 81       	ld	r26, Z
    1af8:	b1 81       	ldd	r27, Z+1	; 0x01
    1afa:	17 96       	adiw	r26, 0x07	; 7
    1afc:	cc 92       	st	X, r12
    1afe:	41 30       	cpi	r20, 0x01	; 1
    1b00:	49 f4       	brne	.+18     	; 0x1b14 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x38>
    1b02:	a0 81       	ld	r26, Z
    1b04:	b1 81       	ldd	r27, Z+1	; 0x01
    1b06:	15 96       	adiw	r26, 0x05	; 5
    1b08:	8c 91       	ld	r24, X
    1b0a:	15 97       	sbiw	r26, 0x05	; 5
    1b0c:	80 62       	ori	r24, 0x20	; 32
    1b0e:	15 96       	adiw	r26, 0x05	; 5
    1b10:	8c 93       	st	X, r24
    1b12:	0a c0       	rjmp	.+20     	; 0x1b28 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x4c>
    1b14:	42 30       	cpi	r20, 0x02	; 2
    1b16:	41 f4       	brne	.+16     	; 0x1b28 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x4c>
    1b18:	a0 81       	ld	r26, Z
    1b1a:	b1 81       	ldd	r27, Z+1	; 0x01
    1b1c:	15 96       	adiw	r26, 0x05	; 5
    1b1e:	8c 91       	ld	r24, X
    1b20:	15 97       	sbiw	r26, 0x05	; 5
    1b22:	80 63       	ori	r24, 0x30	; 48
    1b24:	15 96       	adiw	r26, 0x05	; 5
    1b26:	8c 93       	st	X, r24
    1b28:	21 30       	cpi	r18, 0x01	; 1
    1b2a:	49 f4       	brne	.+18     	; 0x1b3e <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x62>
    1b2c:	a0 81       	ld	r26, Z
    1b2e:	b1 81       	ldd	r27, Z+1	; 0x01
    1b30:	15 96       	adiw	r26, 0x05	; 5
    1b32:	8c 91       	ld	r24, X
    1b34:	15 97       	sbiw	r26, 0x05	; 5
    1b36:	81 60       	ori	r24, 0x01	; 1
    1b38:	15 96       	adiw	r26, 0x05	; 5
    1b3a:	8c 93       	st	X, r24
    1b3c:	20 c0       	rjmp	.+64     	; 0x1b7e <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
    1b3e:	22 30       	cpi	r18, 0x02	; 2
    1b40:	49 f4       	brne	.+18     	; 0x1b54 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x78>
    1b42:	a0 81       	ld	r26, Z
    1b44:	b1 81       	ldd	r27, Z+1	; 0x01
    1b46:	15 96       	adiw	r26, 0x05	; 5
    1b48:	8c 91       	ld	r24, X
    1b4a:	15 97       	sbiw	r26, 0x05	; 5
    1b4c:	82 60       	ori	r24, 0x02	; 2
    1b4e:	15 96       	adiw	r26, 0x05	; 5
    1b50:	8c 93       	st	X, r24
    1b52:	15 c0       	rjmp	.+42     	; 0x1b7e <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
    1b54:	23 30       	cpi	r18, 0x03	; 3
    1b56:	49 f4       	brne	.+18     	; 0x1b6a <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0x8e>
    1b58:	a0 81       	ld	r26, Z
    1b5a:	b1 81       	ldd	r27, Z+1	; 0x01
    1b5c:	15 96       	adiw	r26, 0x05	; 5
    1b5e:	8c 91       	ld	r24, X
    1b60:	15 97       	sbiw	r26, 0x05	; 5
    1b62:	83 60       	ori	r24, 0x03	; 3
    1b64:	15 96       	adiw	r26, 0x05	; 5
    1b66:	8c 93       	st	X, r24
    1b68:	0a c0       	rjmp	.+20     	; 0x1b7e <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
    1b6a:	24 30       	cpi	r18, 0x04	; 4
    1b6c:	41 f4       	brne	.+16     	; 0x1b7e <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xa2>
    1b6e:	a0 81       	ld	r26, Z
    1b70:	b1 81       	ldd	r27, Z+1	; 0x01
    1b72:	15 96       	adiw	r26, 0x05	; 5
    1b74:	8c 91       	ld	r24, X
    1b76:	15 97       	sbiw	r26, 0x05	; 5
    1b78:	87 60       	ori	r24, 0x07	; 7
    1b7a:	15 96       	adiw	r26, 0x05	; 5
    1b7c:	8c 93       	st	X, r24
    1b7e:	00 23       	and	r16, r16
    1b80:	41 f0       	breq	.+16     	; 0x1b92 <_ZN10UartDriver4initEP12USART_structN10ParityMode5PMODEEN8CharSize6CHSIZEEbcc+0xb6>
    1b82:	a0 81       	ld	r26, Z
    1b84:	b1 81       	ldd	r27, Z+1	; 0x01
    1b86:	15 96       	adiw	r26, 0x05	; 5
    1b88:	8c 91       	ld	r24, X
    1b8a:	15 97       	sbiw	r26, 0x05	; 5
    1b8c:	88 60       	ori	r24, 0x08	; 8
    1b8e:	15 96       	adiw	r26, 0x05	; 5
    1b90:	8c 93       	st	X, r24
    1b92:	a0 81       	ld	r26, Z
    1b94:	b1 81       	ldd	r27, Z+1	; 0x01
    1b96:	8f e3       	ldi	r24, 0x3F	; 63
    1b98:	13 96       	adiw	r26, 0x03	; 3
    1b9a:	8c 93       	st	X, r24
    1b9c:	01 90       	ld	r0, Z+
    1b9e:	f0 81       	ld	r31, Z
    1ba0:	e0 2d       	mov	r30, r0
    1ba2:	88 e1       	ldi	r24, 0x18	; 24
    1ba4:	84 83       	std	Z+4, r24	; 0x04
    1ba6:	0f 91       	pop	r16
    1ba8:	ef 90       	pop	r14
    1baa:	cf 90       	pop	r12
    1bac:	08 95       	ret

00001bae <_ZN10UartDriver8sendByteEc>:
    1bae:	cf 93       	push	r28
    1bb0:	df 93       	push	r29
    1bb2:	ec 01       	movw	r28, r24
    1bb4:	e8 81       	ld	r30, Y
    1bb6:	f9 81       	ldd	r31, Y+1	; 0x01
    1bb8:	81 81       	ldd	r24, Z+1	; 0x01
    1bba:	85 ff       	sbrs	r24, 5
    1bbc:	02 c0       	rjmp	.+4      	; 0x1bc2 <_ZN10UartDriver8sendByteEc+0x14>
    1bbe:	60 83       	st	Z, r22
    1bc0:	03 c0       	rjmp	.+6      	; 0x1bc8 <_ZN10UartDriver8sendByteEc+0x1a>
    1bc2:	ce 01       	movw	r24, r28
    1bc4:	0e 96       	adiw	r24, 0x0e	; 14
    1bc6:	5f d9       	rcall	.-3394   	; 0xe86 <_ZN9ByteQueue7enqueueEc>
    1bc8:	e8 81       	ld	r30, Y
    1bca:	f9 81       	ldd	r31, Y+1	; 0x01
    1bcc:	83 81       	ldd	r24, Z+3	; 0x03
    1bce:	83 60       	ori	r24, 0x03	; 3
    1bd0:	83 83       	std	Z+3, r24	; 0x03
    1bd2:	df 91       	pop	r29
    1bd4:	cf 91       	pop	r28
    1bd6:	08 95       	ret

00001bd8 <_ZN10UartDriver7rcvByteEc>:
    1bd8:	02 96       	adiw	r24, 0x02	; 2
    1bda:	55 c9       	rjmp	.-3414   	; 0xe86 <_ZN9ByteQueue7enqueueEc>
    1bdc:	08 95       	ret

00001bde <_ZN10UartDriver9txIsEmptyEv>:
bool UartDriver::txIsEmpty() {
	return txQueue.isEmpty();
    1bde:	0e 96       	adiw	r24, 0x0e	; 14
    1be0:	ae c9       	rjmp	.-3236   	; 0xf3e <_ZN9ByteQueue7isEmptyEv>
}
    1be2:	08 95       	ret

00001be4 <_ZN10UartDriver9txDequeueEv>:
char UartDriver::txDequeue() {
	return txQueue.dequeue();
    1be4:	0e 96       	adiw	r24, 0x0e	; 14
    1be6:	78 c9       	rjmp	.-3344   	; 0xed8 <_ZN9ByteQueue7dequeueEv>
}
    1be8:	08 95       	ret

00001bea <_ZN10UartDriver11getUARTPortEv>:
USART_t * UartDriver::getUARTPort() {
	return uval;
}
    1bea:	fc 01       	movw	r30, r24
    1bec:	80 81       	ld	r24, Z
    1bee:	91 81       	ldd	r25, Z+1	; 0x01
    1bf0:	08 95       	ret

00001bf2 <_ZN10UartDriver10sendStringEPKcih>:

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
    1bf2:	af 92       	push	r10
    1bf4:	bf 92       	push	r11
    1bf6:	cf 92       	push	r12
    1bf8:	df 92       	push	r13
    1bfa:	ef 92       	push	r14
    1bfc:	ff 92       	push	r15
    1bfe:	0f 93       	push	r16
    1c00:	1f 93       	push	r17
    1c02:	cf 93       	push	r28
    1c04:	df 93       	push	r29
    1c06:	00 d0       	rcall	.+0      	; 0x1c08 <_ZN10UartDriver10sendStringEPKcih+0x16>
    1c08:	cd b7       	in	r28, 0x3d	; 61
    1c0a:	de b7       	in	r29, 0x3e	; 62
    1c0c:	5c 01       	movw	r10, r24
    1c0e:	7b 01       	movw	r14, r22
    1c10:	6a 01       	movw	r12, r20
    1c12:	2b 83       	std	Y+3, r18	; 0x03
	 for (volatile int i = 0; i < numchars; i++) {
    1c14:	19 82       	std	Y+1, r1	; 0x01
    1c16:	1a 82       	std	Y+2, r1	; 0x02
    1c18:	89 81       	ldd	r24, Y+1	; 0x01
    1c1a:	9a 81       	ldd	r25, Y+2	; 0x02
    1c1c:	84 17       	cp	r24, r20
    1c1e:	95 07       	cpc	r25, r21
    1c20:	ac f5       	brge	.+106    	; 0x1c8c <_ZN10UartDriver10sendStringEPKcih+0x9a>
		if (str[i] == '\0') break;
    1c22:	e9 81       	ldd	r30, Y+1	; 0x01
    1c24:	fa 81       	ldd	r31, Y+2	; 0x02
    1c26:	e6 0f       	add	r30, r22
    1c28:	f7 1f       	adc	r31, r23
    1c2a:	80 81       	ld	r24, Z
    1c2c:	88 23       	and	r24, r24
    1c2e:	71 f1       	breq	.+92     	; 0x1c8c <_ZN10UartDriver10sendStringEPKcih+0x9a>
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
		while (txQueue.isFull()) {}
    1c30:	85 01       	movw	r16, r10
    1c32:	02 5f       	subi	r16, 0xF2	; 242
    1c34:	1f 4f       	sbci	r17, 0xFF	; 255
    1c36:	07 c0       	rjmp	.+14     	; 0x1c46 <_ZN10UartDriver10sendStringEPKcih+0x54>
	return uval;
}

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
	 for (volatile int i = 0; i < numchars; i++) {
		if (str[i] == '\0') break;
    1c38:	e9 81       	ldd	r30, Y+1	; 0x01
    1c3a:	fa 81       	ldd	r31, Y+2	; 0x02
    1c3c:	ee 0d       	add	r30, r14
    1c3e:	ff 1d       	adc	r31, r15
    1c40:	80 81       	ld	r24, Z
    1c42:	88 23       	and	r24, r24
    1c44:	19 f1       	breq	.+70     	; 0x1c8c <_ZN10UartDriver10sendStringEPKcih+0x9a>
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
    1c46:	e9 81       	ldd	r30, Y+1	; 0x01
    1c48:	fa 81       	ldd	r31, Y+2	; 0x02
    1c4a:	ee 0d       	add	r30, r14
    1c4c:	ff 1d       	adc	r31, r15
    1c4e:	80 81       	ld	r24, Z
    1c50:	84 32       	cpi	r24, 0x24	; 36
    1c52:	39 f0       	breq	.+14     	; 0x1c62 <_ZN10UartDriver10sendStringEPKcih+0x70>
    1c54:	e9 81       	ldd	r30, Y+1	; 0x01
    1c56:	fa 81       	ldd	r31, Y+2	; 0x02
    1c58:	ee 0d       	add	r30, r14
    1c5a:	ff 1d       	adc	r31, r15
    1c5c:	80 81       	ld	r24, Z
    1c5e:	8a 32       	cpi	r24, 0x2A	; 42
    1c60:	b9 f4       	brne	.+46     	; 0x1c90 <_ZN10UartDriver10sendStringEPKcih+0x9e>
		while (txQueue.isFull()) {}
    1c62:	c8 01       	movw	r24, r16
    1c64:	61 d9       	rcall	.-3390   	; 0xf28 <_ZN9ByteQueue6isFullEv>
    1c66:	81 11       	cpse	r24, r1
    1c68:	fc cf       	rjmp	.-8      	; 0x1c62 <_ZN10UartDriver10sendStringEPKcih+0x70>
		this->sendByte(str[i]);
    1c6a:	e9 81       	ldd	r30, Y+1	; 0x01
    1c6c:	fa 81       	ldd	r31, Y+2	; 0x02
    1c6e:	ee 0d       	add	r30, r14
    1c70:	ff 1d       	adc	r31, r15
    1c72:	60 81       	ld	r22, Z
    1c74:	c5 01       	movw	r24, r10
    1c76:	9b df       	rcall	.-202    	; 0x1bae <_ZN10UartDriver8sendByteEc>
USART_t * UartDriver::getUARTPort() {
	return uval;
}

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
	 for (volatile int i = 0; i < numchars; i++) {
    1c78:	89 81       	ldd	r24, Y+1	; 0x01
    1c7a:	9a 81       	ldd	r25, Y+2	; 0x02
    1c7c:	01 96       	adiw	r24, 0x01	; 1
    1c7e:	89 83       	std	Y+1, r24	; 0x01
    1c80:	9a 83       	std	Y+2, r25	; 0x02
    1c82:	29 81       	ldd	r18, Y+1	; 0x01
    1c84:	3a 81       	ldd	r19, Y+2	; 0x02
    1c86:	2c 15       	cp	r18, r12
    1c88:	3d 05       	cpc	r19, r13
    1c8a:	b4 f2       	brlt	.-84     	; 0x1c38 <_ZN10UartDriver10sendStringEPKcih+0x46>
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
		while (txQueue.isFull()) {}
		this->sendByte(str[i]);
	 }

	 return checksum;
    1c8c:	8b 81       	ldd	r24, Y+3	; 0x03
    1c8e:	09 c0       	rjmp	.+18     	; 0x1ca2 <_ZN10UartDriver10sendStringEPKcih+0xb0>
}

BYTE UartDriver::sendString(const char * str, int numchars, BYTE checksum) {
	 for (volatile int i = 0; i < numchars; i++) {
		if (str[i] == '\0') break;
		if (str[i] != '$' && str[i] != '*') checksum ^= str[i];
    1c90:	e9 81       	ldd	r30, Y+1	; 0x01
    1c92:	fa 81       	ldd	r31, Y+2	; 0x02
    1c94:	9b 81       	ldd	r25, Y+3	; 0x03
    1c96:	ee 0d       	add	r30, r14
    1c98:	ff 1d       	adc	r31, r15
    1c9a:	80 81       	ld	r24, Z
    1c9c:	89 27       	eor	r24, r25
    1c9e:	8b 83       	std	Y+3, r24	; 0x03
    1ca0:	e0 cf       	rjmp	.-64     	; 0x1c62 <_ZN10UartDriver10sendStringEPKcih+0x70>
		while (txQueue.isFull()) {}
		this->sendByte(str[i]);
	 }

	 return checksum;
    1ca2:	23 96       	adiw	r28, 0x03	; 3
    1ca4:	cd bf       	out	0x3d, r28	; 61
    1ca6:	de bf       	out	0x3e, r29	; 62
    1ca8:	df 91       	pop	r29
    1caa:	cf 91       	pop	r28
    1cac:	1f 91       	pop	r17
    1cae:	0f 91       	pop	r16
    1cb0:	ff 90       	pop	r15
    1cb2:	ef 90       	pop	r14
    1cb4:	df 90       	pop	r13
    1cb6:	cf 90       	pop	r12
    1cb8:	bf 90       	pop	r11
    1cba:	af 90       	pop	r10
    1cbc:	08 95       	ret

00001cbe <__fixsfsi>:
    1cbe:	04 d0       	rcall	.+8      	; 0x1cc8 <__fixunssfsi>
    1cc0:	68 94       	set
    1cc2:	b1 11       	cpse	r27, r1
    1cc4:	8d c0       	rjmp	.+282    	; 0x1de0 <__fp_szero>
    1cc6:	08 95       	ret

00001cc8 <__fixunssfsi>:
    1cc8:	70 d0       	rcall	.+224    	; 0x1daa <__fp_splitA>
    1cca:	88 f0       	brcs	.+34     	; 0x1cee <__fixunssfsi+0x26>
    1ccc:	9f 57       	subi	r25, 0x7F	; 127
    1cce:	90 f0       	brcs	.+36     	; 0x1cf4 <__fixunssfsi+0x2c>
    1cd0:	b9 2f       	mov	r27, r25
    1cd2:	99 27       	eor	r25, r25
    1cd4:	b7 51       	subi	r27, 0x17	; 23
    1cd6:	a0 f0       	brcs	.+40     	; 0x1d00 <__fixunssfsi+0x38>
    1cd8:	d1 f0       	breq	.+52     	; 0x1d0e <__fixunssfsi+0x46>
    1cda:	66 0f       	add	r22, r22
    1cdc:	77 1f       	adc	r23, r23
    1cde:	88 1f       	adc	r24, r24
    1ce0:	99 1f       	adc	r25, r25
    1ce2:	1a f0       	brmi	.+6      	; 0x1cea <__fixunssfsi+0x22>
    1ce4:	ba 95       	dec	r27
    1ce6:	c9 f7       	brne	.-14     	; 0x1cda <__fixunssfsi+0x12>
    1ce8:	12 c0       	rjmp	.+36     	; 0x1d0e <__fixunssfsi+0x46>
    1cea:	b1 30       	cpi	r27, 0x01	; 1
    1cec:	81 f0       	breq	.+32     	; 0x1d0e <__fixunssfsi+0x46>
    1cee:	77 d0       	rcall	.+238    	; 0x1dde <__fp_zero>
    1cf0:	b1 e0       	ldi	r27, 0x01	; 1
    1cf2:	08 95       	ret
    1cf4:	74 c0       	rjmp	.+232    	; 0x1dde <__fp_zero>
    1cf6:	67 2f       	mov	r22, r23
    1cf8:	78 2f       	mov	r23, r24
    1cfa:	88 27       	eor	r24, r24
    1cfc:	b8 5f       	subi	r27, 0xF8	; 248
    1cfe:	39 f0       	breq	.+14     	; 0x1d0e <__fixunssfsi+0x46>
    1d00:	b9 3f       	cpi	r27, 0xF9	; 249
    1d02:	cc f3       	brlt	.-14     	; 0x1cf6 <__fixunssfsi+0x2e>
    1d04:	86 95       	lsr	r24
    1d06:	77 95       	ror	r23
    1d08:	67 95       	ror	r22
    1d0a:	b3 95       	inc	r27
    1d0c:	d9 f7       	brne	.-10     	; 0x1d04 <__fixunssfsi+0x3c>
    1d0e:	3e f4       	brtc	.+14     	; 0x1d1e <__fixunssfsi+0x56>
    1d10:	90 95       	com	r25
    1d12:	80 95       	com	r24
    1d14:	70 95       	com	r23
    1d16:	61 95       	neg	r22
    1d18:	7f 4f       	sbci	r23, 0xFF	; 255
    1d1a:	8f 4f       	sbci	r24, 0xFF	; 255
    1d1c:	9f 4f       	sbci	r25, 0xFF	; 255
    1d1e:	08 95       	ret

00001d20 <__floatunsisf>:
    1d20:	e8 94       	clt
    1d22:	09 c0       	rjmp	.+18     	; 0x1d36 <__floatsisf+0x12>

00001d24 <__floatsisf>:
    1d24:	97 fb       	bst	r25, 7
    1d26:	3e f4       	brtc	.+14     	; 0x1d36 <__floatsisf+0x12>
    1d28:	90 95       	com	r25
    1d2a:	80 95       	com	r24
    1d2c:	70 95       	com	r23
    1d2e:	61 95       	neg	r22
    1d30:	7f 4f       	sbci	r23, 0xFF	; 255
    1d32:	8f 4f       	sbci	r24, 0xFF	; 255
    1d34:	9f 4f       	sbci	r25, 0xFF	; 255
    1d36:	99 23       	and	r25, r25
    1d38:	a9 f0       	breq	.+42     	; 0x1d64 <__floatsisf+0x40>
    1d3a:	f9 2f       	mov	r31, r25
    1d3c:	96 e9       	ldi	r25, 0x96	; 150
    1d3e:	bb 27       	eor	r27, r27
    1d40:	93 95       	inc	r25
    1d42:	f6 95       	lsr	r31
    1d44:	87 95       	ror	r24
    1d46:	77 95       	ror	r23
    1d48:	67 95       	ror	r22
    1d4a:	b7 95       	ror	r27
    1d4c:	f1 11       	cpse	r31, r1
    1d4e:	f8 cf       	rjmp	.-16     	; 0x1d40 <__floatsisf+0x1c>
    1d50:	fa f4       	brpl	.+62     	; 0x1d90 <__floatsisf+0x6c>
    1d52:	bb 0f       	add	r27, r27
    1d54:	11 f4       	brne	.+4      	; 0x1d5a <__floatsisf+0x36>
    1d56:	60 ff       	sbrs	r22, 0
    1d58:	1b c0       	rjmp	.+54     	; 0x1d90 <__floatsisf+0x6c>
    1d5a:	6f 5f       	subi	r22, 0xFF	; 255
    1d5c:	7f 4f       	sbci	r23, 0xFF	; 255
    1d5e:	8f 4f       	sbci	r24, 0xFF	; 255
    1d60:	9f 4f       	sbci	r25, 0xFF	; 255
    1d62:	16 c0       	rjmp	.+44     	; 0x1d90 <__floatsisf+0x6c>
    1d64:	88 23       	and	r24, r24
    1d66:	11 f0       	breq	.+4      	; 0x1d6c <__floatsisf+0x48>
    1d68:	96 e9       	ldi	r25, 0x96	; 150
    1d6a:	11 c0       	rjmp	.+34     	; 0x1d8e <__floatsisf+0x6a>
    1d6c:	77 23       	and	r23, r23
    1d6e:	21 f0       	breq	.+8      	; 0x1d78 <__floatsisf+0x54>
    1d70:	9e e8       	ldi	r25, 0x8E	; 142
    1d72:	87 2f       	mov	r24, r23
    1d74:	76 2f       	mov	r23, r22
    1d76:	05 c0       	rjmp	.+10     	; 0x1d82 <__floatsisf+0x5e>
    1d78:	66 23       	and	r22, r22
    1d7a:	71 f0       	breq	.+28     	; 0x1d98 <__floatsisf+0x74>
    1d7c:	96 e8       	ldi	r25, 0x86	; 134
    1d7e:	86 2f       	mov	r24, r22
    1d80:	70 e0       	ldi	r23, 0x00	; 0
    1d82:	60 e0       	ldi	r22, 0x00	; 0
    1d84:	2a f0       	brmi	.+10     	; 0x1d90 <__floatsisf+0x6c>
    1d86:	9a 95       	dec	r25
    1d88:	66 0f       	add	r22, r22
    1d8a:	77 1f       	adc	r23, r23
    1d8c:	88 1f       	adc	r24, r24
    1d8e:	da f7       	brpl	.-10     	; 0x1d86 <__floatsisf+0x62>
    1d90:	88 0f       	add	r24, r24
    1d92:	96 95       	lsr	r25
    1d94:	87 95       	ror	r24
    1d96:	97 f9       	bld	r25, 7
    1d98:	08 95       	ret

00001d9a <__fp_split3>:
    1d9a:	57 fd       	sbrc	r21, 7
    1d9c:	90 58       	subi	r25, 0x80	; 128
    1d9e:	44 0f       	add	r20, r20
    1da0:	55 1f       	adc	r21, r21
    1da2:	59 f0       	breq	.+22     	; 0x1dba <__fp_splitA+0x10>
    1da4:	5f 3f       	cpi	r21, 0xFF	; 255
    1da6:	71 f0       	breq	.+28     	; 0x1dc4 <__fp_splitA+0x1a>
    1da8:	47 95       	ror	r20

00001daa <__fp_splitA>:
    1daa:	88 0f       	add	r24, r24
    1dac:	97 fb       	bst	r25, 7
    1dae:	99 1f       	adc	r25, r25
    1db0:	61 f0       	breq	.+24     	; 0x1dca <__fp_splitA+0x20>
    1db2:	9f 3f       	cpi	r25, 0xFF	; 255
    1db4:	79 f0       	breq	.+30     	; 0x1dd4 <__fp_splitA+0x2a>
    1db6:	87 95       	ror	r24
    1db8:	08 95       	ret
    1dba:	12 16       	cp	r1, r18
    1dbc:	13 06       	cpc	r1, r19
    1dbe:	14 06       	cpc	r1, r20
    1dc0:	55 1f       	adc	r21, r21
    1dc2:	f2 cf       	rjmp	.-28     	; 0x1da8 <__fp_split3+0xe>
    1dc4:	46 95       	lsr	r20
    1dc6:	f1 df       	rcall	.-30     	; 0x1daa <__fp_splitA>
    1dc8:	08 c0       	rjmp	.+16     	; 0x1dda <__fp_splitA+0x30>
    1dca:	16 16       	cp	r1, r22
    1dcc:	17 06       	cpc	r1, r23
    1dce:	18 06       	cpc	r1, r24
    1dd0:	99 1f       	adc	r25, r25
    1dd2:	f1 cf       	rjmp	.-30     	; 0x1db6 <__fp_splitA+0xc>
    1dd4:	86 95       	lsr	r24
    1dd6:	71 05       	cpc	r23, r1
    1dd8:	61 05       	cpc	r22, r1
    1dda:	08 94       	sec
    1ddc:	08 95       	ret

00001dde <__fp_zero>:
    1dde:	e8 94       	clt

00001de0 <__fp_szero>:
    1de0:	bb 27       	eor	r27, r27
    1de2:	66 27       	eor	r22, r22
    1de4:	77 27       	eor	r23, r23
    1de6:	cb 01       	movw	r24, r22
    1de8:	97 f9       	bld	r25, 7
    1dea:	08 95       	ret

00001dec <__gesf2>:
    1dec:	03 d0       	rcall	.+6      	; 0x1df4 <__fp_cmp>
    1dee:	08 f4       	brcc	.+2      	; 0x1df2 <__gesf2+0x6>
    1df0:	8f ef       	ldi	r24, 0xFF	; 255
    1df2:	08 95       	ret

00001df4 <__fp_cmp>:
    1df4:	99 0f       	add	r25, r25
    1df6:	00 08       	sbc	r0, r0
    1df8:	55 0f       	add	r21, r21
    1dfa:	aa 0b       	sbc	r26, r26
    1dfc:	e0 e8       	ldi	r30, 0x80	; 128
    1dfe:	fe ef       	ldi	r31, 0xFE	; 254
    1e00:	16 16       	cp	r1, r22
    1e02:	17 06       	cpc	r1, r23
    1e04:	e8 07       	cpc	r30, r24
    1e06:	f9 07       	cpc	r31, r25
    1e08:	c0 f0       	brcs	.+48     	; 0x1e3a <__fp_cmp+0x46>
    1e0a:	12 16       	cp	r1, r18
    1e0c:	13 06       	cpc	r1, r19
    1e0e:	e4 07       	cpc	r30, r20
    1e10:	f5 07       	cpc	r31, r21
    1e12:	98 f0       	brcs	.+38     	; 0x1e3a <__fp_cmp+0x46>
    1e14:	62 1b       	sub	r22, r18
    1e16:	73 0b       	sbc	r23, r19
    1e18:	84 0b       	sbc	r24, r20
    1e1a:	95 0b       	sbc	r25, r21
    1e1c:	39 f4       	brne	.+14     	; 0x1e2c <__fp_cmp+0x38>
    1e1e:	0a 26       	eor	r0, r26
    1e20:	61 f0       	breq	.+24     	; 0x1e3a <__fp_cmp+0x46>
    1e22:	23 2b       	or	r18, r19
    1e24:	24 2b       	or	r18, r20
    1e26:	25 2b       	or	r18, r21
    1e28:	21 f4       	brne	.+8      	; 0x1e32 <__fp_cmp+0x3e>
    1e2a:	08 95       	ret
    1e2c:	0a 26       	eor	r0, r26
    1e2e:	09 f4       	brne	.+2      	; 0x1e32 <__fp_cmp+0x3e>
    1e30:	a1 40       	sbci	r26, 0x01	; 1
    1e32:	a6 95       	lsr	r26
    1e34:	8f ef       	ldi	r24, 0xFF	; 255
    1e36:	81 1d       	adc	r24, r1
    1e38:	81 1d       	adc	r24, r1
    1e3a:	08 95       	ret

00001e3c <__tablejump2__>:
    1e3c:	ee 0f       	add	r30, r30
    1e3e:	ff 1f       	adc	r31, r31

00001e40 <__tablejump__>:
    1e40:	05 90       	lpm	r0, Z+
    1e42:	f4 91       	lpm	r31, Z
    1e44:	e0 2d       	mov	r30, r0
    1e46:	19 94       	eijmp

00001e48 <__tablejump_elpm__>:
    1e48:	07 90       	elpm	r0, Z+
    1e4a:	f6 91       	elpm	r31, Z
    1e4c:	e0 2d       	mov	r30, r0
    1e4e:	19 94       	eijmp

00001e50 <malloc>:
    1e50:	cf 93       	push	r28
    1e52:	df 93       	push	r29
    1e54:	82 30       	cpi	r24, 0x02	; 2
    1e56:	91 05       	cpc	r25, r1
    1e58:	10 f4       	brcc	.+4      	; 0x1e5e <malloc+0xe>
    1e5a:	82 e0       	ldi	r24, 0x02	; 2
    1e5c:	90 e0       	ldi	r25, 0x00	; 0
    1e5e:	e0 91 af 20 	lds	r30, 0x20AF
    1e62:	f0 91 b0 20 	lds	r31, 0x20B0
    1e66:	20 e0       	ldi	r18, 0x00	; 0
    1e68:	30 e0       	ldi	r19, 0x00	; 0
    1e6a:	a0 e0       	ldi	r26, 0x00	; 0
    1e6c:	b0 e0       	ldi	r27, 0x00	; 0
    1e6e:	30 97       	sbiw	r30, 0x00	; 0
    1e70:	39 f1       	breq	.+78     	; 0x1ec0 <malloc+0x70>
    1e72:	40 81       	ld	r20, Z
    1e74:	51 81       	ldd	r21, Z+1	; 0x01
    1e76:	48 17       	cp	r20, r24
    1e78:	59 07       	cpc	r21, r25
    1e7a:	b8 f0       	brcs	.+46     	; 0x1eaa <malloc+0x5a>
    1e7c:	48 17       	cp	r20, r24
    1e7e:	59 07       	cpc	r21, r25
    1e80:	71 f4       	brne	.+28     	; 0x1e9e <malloc+0x4e>
    1e82:	82 81       	ldd	r24, Z+2	; 0x02
    1e84:	93 81       	ldd	r25, Z+3	; 0x03
    1e86:	10 97       	sbiw	r26, 0x00	; 0
    1e88:	29 f0       	breq	.+10     	; 0x1e94 <malloc+0x44>
    1e8a:	12 96       	adiw	r26, 0x02	; 2
    1e8c:	8d 93       	st	X+, r24
    1e8e:	9c 93       	st	X, r25
    1e90:	13 97       	sbiw	r26, 0x03	; 3
    1e92:	2c c0       	rjmp	.+88     	; 0x1eec <malloc+0x9c>
    1e94:	80 93 af 20 	sts	0x20AF, r24
    1e98:	90 93 b0 20 	sts	0x20B0, r25
    1e9c:	27 c0       	rjmp	.+78     	; 0x1eec <malloc+0x9c>
    1e9e:	21 15       	cp	r18, r1
    1ea0:	31 05       	cpc	r19, r1
    1ea2:	31 f0       	breq	.+12     	; 0x1eb0 <malloc+0x60>
    1ea4:	42 17       	cp	r20, r18
    1ea6:	53 07       	cpc	r21, r19
    1ea8:	18 f0       	brcs	.+6      	; 0x1eb0 <malloc+0x60>
    1eaa:	a9 01       	movw	r20, r18
    1eac:	db 01       	movw	r26, r22
    1eae:	01 c0       	rjmp	.+2      	; 0x1eb2 <malloc+0x62>
    1eb0:	ef 01       	movw	r28, r30
    1eb2:	9a 01       	movw	r18, r20
    1eb4:	bd 01       	movw	r22, r26
    1eb6:	df 01       	movw	r26, r30
    1eb8:	02 80       	ldd	r0, Z+2	; 0x02
    1eba:	f3 81       	ldd	r31, Z+3	; 0x03
    1ebc:	e0 2d       	mov	r30, r0
    1ebe:	d7 cf       	rjmp	.-82     	; 0x1e6e <malloc+0x1e>
    1ec0:	21 15       	cp	r18, r1
    1ec2:	31 05       	cpc	r19, r1
    1ec4:	f9 f0       	breq	.+62     	; 0x1f04 <malloc+0xb4>
    1ec6:	28 1b       	sub	r18, r24
    1ec8:	39 0b       	sbc	r19, r25
    1eca:	24 30       	cpi	r18, 0x04	; 4
    1ecc:	31 05       	cpc	r19, r1
    1ece:	80 f4       	brcc	.+32     	; 0x1ef0 <malloc+0xa0>
    1ed0:	8a 81       	ldd	r24, Y+2	; 0x02
    1ed2:	9b 81       	ldd	r25, Y+3	; 0x03
    1ed4:	61 15       	cp	r22, r1
    1ed6:	71 05       	cpc	r23, r1
    1ed8:	21 f0       	breq	.+8      	; 0x1ee2 <malloc+0x92>
    1eda:	fb 01       	movw	r30, r22
    1edc:	82 83       	std	Z+2, r24	; 0x02
    1ede:	93 83       	std	Z+3, r25	; 0x03
    1ee0:	04 c0       	rjmp	.+8      	; 0x1eea <malloc+0x9a>
    1ee2:	80 93 af 20 	sts	0x20AF, r24
    1ee6:	90 93 b0 20 	sts	0x20B0, r25
    1eea:	fe 01       	movw	r30, r28
    1eec:	32 96       	adiw	r30, 0x02	; 2
    1eee:	44 c0       	rjmp	.+136    	; 0x1f78 <malloc+0x128>
    1ef0:	fe 01       	movw	r30, r28
    1ef2:	e2 0f       	add	r30, r18
    1ef4:	f3 1f       	adc	r31, r19
    1ef6:	81 93       	st	Z+, r24
    1ef8:	91 93       	st	Z+, r25
    1efa:	22 50       	subi	r18, 0x02	; 2
    1efc:	31 09       	sbc	r19, r1
    1efe:	28 83       	st	Y, r18
    1f00:	39 83       	std	Y+1, r19	; 0x01
    1f02:	3a c0       	rjmp	.+116    	; 0x1f78 <malloc+0x128>
    1f04:	20 91 ad 20 	lds	r18, 0x20AD
    1f08:	30 91 ae 20 	lds	r19, 0x20AE
    1f0c:	23 2b       	or	r18, r19
    1f0e:	41 f4       	brne	.+16     	; 0x1f20 <malloc+0xd0>
    1f10:	20 91 02 20 	lds	r18, 0x2002
    1f14:	30 91 03 20 	lds	r19, 0x2003
    1f18:	20 93 ad 20 	sts	0x20AD, r18
    1f1c:	30 93 ae 20 	sts	0x20AE, r19
    1f20:	20 91 00 20 	lds	r18, 0x2000
    1f24:	30 91 01 20 	lds	r19, 0x2001
    1f28:	21 15       	cp	r18, r1
    1f2a:	31 05       	cpc	r19, r1
    1f2c:	41 f4       	brne	.+16     	; 0x1f3e <malloc+0xee>
    1f2e:	2d b7       	in	r18, 0x3d	; 61
    1f30:	3e b7       	in	r19, 0x3e	; 62
    1f32:	40 91 04 20 	lds	r20, 0x2004
    1f36:	50 91 05 20 	lds	r21, 0x2005
    1f3a:	24 1b       	sub	r18, r20
    1f3c:	35 0b       	sbc	r19, r21
    1f3e:	e0 91 ad 20 	lds	r30, 0x20AD
    1f42:	f0 91 ae 20 	lds	r31, 0x20AE
    1f46:	e2 17       	cp	r30, r18
    1f48:	f3 07       	cpc	r31, r19
    1f4a:	a0 f4       	brcc	.+40     	; 0x1f74 <malloc+0x124>
    1f4c:	2e 1b       	sub	r18, r30
    1f4e:	3f 0b       	sbc	r19, r31
    1f50:	28 17       	cp	r18, r24
    1f52:	39 07       	cpc	r19, r25
    1f54:	78 f0       	brcs	.+30     	; 0x1f74 <malloc+0x124>
    1f56:	ac 01       	movw	r20, r24
    1f58:	4e 5f       	subi	r20, 0xFE	; 254
    1f5a:	5f 4f       	sbci	r21, 0xFF	; 255
    1f5c:	24 17       	cp	r18, r20
    1f5e:	35 07       	cpc	r19, r21
    1f60:	48 f0       	brcs	.+18     	; 0x1f74 <malloc+0x124>
    1f62:	4e 0f       	add	r20, r30
    1f64:	5f 1f       	adc	r21, r31
    1f66:	40 93 ad 20 	sts	0x20AD, r20
    1f6a:	50 93 ae 20 	sts	0x20AE, r21
    1f6e:	81 93       	st	Z+, r24
    1f70:	91 93       	st	Z+, r25
    1f72:	02 c0       	rjmp	.+4      	; 0x1f78 <malloc+0x128>
    1f74:	e0 e0       	ldi	r30, 0x00	; 0
    1f76:	f0 e0       	ldi	r31, 0x00	; 0
    1f78:	cf 01       	movw	r24, r30
    1f7a:	df 91       	pop	r29
    1f7c:	cf 91       	pop	r28
    1f7e:	08 95       	ret

00001f80 <free>:
    1f80:	cf 93       	push	r28
    1f82:	df 93       	push	r29
    1f84:	00 97       	sbiw	r24, 0x00	; 0
    1f86:	09 f4       	brne	.+2      	; 0x1f8a <free+0xa>
    1f88:	87 c0       	rjmp	.+270    	; 0x2098 <free+0x118>
    1f8a:	fc 01       	movw	r30, r24
    1f8c:	32 97       	sbiw	r30, 0x02	; 2
    1f8e:	12 82       	std	Z+2, r1	; 0x02
    1f90:	13 82       	std	Z+3, r1	; 0x03
    1f92:	c0 91 af 20 	lds	r28, 0x20AF
    1f96:	d0 91 b0 20 	lds	r29, 0x20B0
    1f9a:	20 97       	sbiw	r28, 0x00	; 0
    1f9c:	81 f4       	brne	.+32     	; 0x1fbe <free+0x3e>
    1f9e:	20 81       	ld	r18, Z
    1fa0:	31 81       	ldd	r19, Z+1	; 0x01
    1fa2:	28 0f       	add	r18, r24
    1fa4:	39 1f       	adc	r19, r25
    1fa6:	80 91 ad 20 	lds	r24, 0x20AD
    1faa:	90 91 ae 20 	lds	r25, 0x20AE
    1fae:	82 17       	cp	r24, r18
    1fb0:	93 07       	cpc	r25, r19
    1fb2:	79 f5       	brne	.+94     	; 0x2012 <free+0x92>
    1fb4:	e0 93 ad 20 	sts	0x20AD, r30
    1fb8:	f0 93 ae 20 	sts	0x20AE, r31
    1fbc:	6d c0       	rjmp	.+218    	; 0x2098 <free+0x118>
    1fbe:	de 01       	movw	r26, r28
    1fc0:	20 e0       	ldi	r18, 0x00	; 0
    1fc2:	30 e0       	ldi	r19, 0x00	; 0
    1fc4:	ae 17       	cp	r26, r30
    1fc6:	bf 07       	cpc	r27, r31
    1fc8:	50 f4       	brcc	.+20     	; 0x1fde <free+0x5e>
    1fca:	12 96       	adiw	r26, 0x02	; 2
    1fcc:	4d 91       	ld	r20, X+
    1fce:	5c 91       	ld	r21, X
    1fd0:	13 97       	sbiw	r26, 0x03	; 3
    1fd2:	9d 01       	movw	r18, r26
    1fd4:	41 15       	cp	r20, r1
    1fd6:	51 05       	cpc	r21, r1
    1fd8:	09 f1       	breq	.+66     	; 0x201c <free+0x9c>
    1fda:	da 01       	movw	r26, r20
    1fdc:	f3 cf       	rjmp	.-26     	; 0x1fc4 <free+0x44>
    1fde:	a2 83       	std	Z+2, r26	; 0x02
    1fe0:	b3 83       	std	Z+3, r27	; 0x03
    1fe2:	40 81       	ld	r20, Z
    1fe4:	51 81       	ldd	r21, Z+1	; 0x01
    1fe6:	84 0f       	add	r24, r20
    1fe8:	95 1f       	adc	r25, r21
    1fea:	8a 17       	cp	r24, r26
    1fec:	9b 07       	cpc	r25, r27
    1fee:	71 f4       	brne	.+28     	; 0x200c <free+0x8c>
    1ff0:	8d 91       	ld	r24, X+
    1ff2:	9c 91       	ld	r25, X
    1ff4:	11 97       	sbiw	r26, 0x01	; 1
    1ff6:	84 0f       	add	r24, r20
    1ff8:	95 1f       	adc	r25, r21
    1ffa:	02 96       	adiw	r24, 0x02	; 2
    1ffc:	80 83       	st	Z, r24
    1ffe:	91 83       	std	Z+1, r25	; 0x01
    2000:	12 96       	adiw	r26, 0x02	; 2
    2002:	8d 91       	ld	r24, X+
    2004:	9c 91       	ld	r25, X
    2006:	13 97       	sbiw	r26, 0x03	; 3
    2008:	82 83       	std	Z+2, r24	; 0x02
    200a:	93 83       	std	Z+3, r25	; 0x03
    200c:	21 15       	cp	r18, r1
    200e:	31 05       	cpc	r19, r1
    2010:	29 f4       	brne	.+10     	; 0x201c <free+0x9c>
    2012:	e0 93 af 20 	sts	0x20AF, r30
    2016:	f0 93 b0 20 	sts	0x20B0, r31
    201a:	3e c0       	rjmp	.+124    	; 0x2098 <free+0x118>
    201c:	d9 01       	movw	r26, r18
    201e:	12 96       	adiw	r26, 0x02	; 2
    2020:	ed 93       	st	X+, r30
    2022:	fc 93       	st	X, r31
    2024:	13 97       	sbiw	r26, 0x03	; 3
    2026:	4d 91       	ld	r20, X+
    2028:	5d 91       	ld	r21, X+
    202a:	a4 0f       	add	r26, r20
    202c:	b5 1f       	adc	r27, r21
    202e:	ea 17       	cp	r30, r26
    2030:	fb 07       	cpc	r31, r27
    2032:	79 f4       	brne	.+30     	; 0x2052 <free+0xd2>
    2034:	80 81       	ld	r24, Z
    2036:	91 81       	ldd	r25, Z+1	; 0x01
    2038:	84 0f       	add	r24, r20
    203a:	95 1f       	adc	r25, r21
    203c:	02 96       	adiw	r24, 0x02	; 2
    203e:	d9 01       	movw	r26, r18
    2040:	8d 93       	st	X+, r24
    2042:	9c 93       	st	X, r25
    2044:	11 97       	sbiw	r26, 0x01	; 1
    2046:	82 81       	ldd	r24, Z+2	; 0x02
    2048:	93 81       	ldd	r25, Z+3	; 0x03
    204a:	12 96       	adiw	r26, 0x02	; 2
    204c:	8d 93       	st	X+, r24
    204e:	9c 93       	st	X, r25
    2050:	13 97       	sbiw	r26, 0x03	; 3
    2052:	e0 e0       	ldi	r30, 0x00	; 0
    2054:	f0 e0       	ldi	r31, 0x00	; 0
    2056:	8a 81       	ldd	r24, Y+2	; 0x02
    2058:	9b 81       	ldd	r25, Y+3	; 0x03
    205a:	00 97       	sbiw	r24, 0x00	; 0
    205c:	19 f0       	breq	.+6      	; 0x2064 <free+0xe4>
    205e:	fe 01       	movw	r30, r28
    2060:	ec 01       	movw	r28, r24
    2062:	f9 cf       	rjmp	.-14     	; 0x2056 <free+0xd6>
    2064:	ce 01       	movw	r24, r28
    2066:	02 96       	adiw	r24, 0x02	; 2
    2068:	28 81       	ld	r18, Y
    206a:	39 81       	ldd	r19, Y+1	; 0x01
    206c:	82 0f       	add	r24, r18
    206e:	93 1f       	adc	r25, r19
    2070:	20 91 ad 20 	lds	r18, 0x20AD
    2074:	30 91 ae 20 	lds	r19, 0x20AE
    2078:	28 17       	cp	r18, r24
    207a:	39 07       	cpc	r19, r25
    207c:	69 f4       	brne	.+26     	; 0x2098 <free+0x118>
    207e:	30 97       	sbiw	r30, 0x00	; 0
    2080:	29 f4       	brne	.+10     	; 0x208c <free+0x10c>
    2082:	10 92 af 20 	sts	0x20AF, r1
    2086:	10 92 b0 20 	sts	0x20B0, r1
    208a:	02 c0       	rjmp	.+4      	; 0x2090 <free+0x110>
    208c:	12 82       	std	Z+2, r1	; 0x02
    208e:	13 82       	std	Z+3, r1	; 0x03
    2090:	c0 93 ad 20 	sts	0x20AD, r28
    2094:	d0 93 ae 20 	sts	0x20AE, r29
    2098:	df 91       	pop	r29
    209a:	cf 91       	pop	r28
    209c:	08 95       	ret

0000209e <__itoa_ncheck>:
    209e:	bb 27       	eor	r27, r27
    20a0:	4a 30       	cpi	r20, 0x0A	; 10
    20a2:	31 f4       	brne	.+12     	; 0x20b0 <__itoa_ncheck+0x12>
    20a4:	99 23       	and	r25, r25
    20a6:	22 f4       	brpl	.+8      	; 0x20b0 <__itoa_ncheck+0x12>
    20a8:	bd e2       	ldi	r27, 0x2D	; 45
    20aa:	90 95       	com	r25
    20ac:	81 95       	neg	r24
    20ae:	9f 4f       	sbci	r25, 0xFF	; 255
    20b0:	01 c0       	rjmp	.+2      	; 0x20b4 <__utoa_common>

000020b2 <__utoa_ncheck>:
    20b2:	bb 27       	eor	r27, r27

000020b4 <__utoa_common>:
    20b4:	fb 01       	movw	r30, r22
    20b6:	55 27       	eor	r21, r21
    20b8:	aa 27       	eor	r26, r26
    20ba:	88 0f       	add	r24, r24
    20bc:	99 1f       	adc	r25, r25
    20be:	aa 1f       	adc	r26, r26
    20c0:	a4 17       	cp	r26, r20
    20c2:	10 f0       	brcs	.+4      	; 0x20c8 <__utoa_common+0x14>
    20c4:	a4 1b       	sub	r26, r20
    20c6:	83 95       	inc	r24
    20c8:	50 51       	subi	r21, 0x10	; 16
    20ca:	b9 f7       	brne	.-18     	; 0x20ba <__utoa_common+0x6>
    20cc:	a0 5d       	subi	r26, 0xD0	; 208
    20ce:	aa 33       	cpi	r26, 0x3A	; 58
    20d0:	08 f0       	brcs	.+2      	; 0x20d4 <__utoa_common+0x20>
    20d2:	a9 5d       	subi	r26, 0xD9	; 217
    20d4:	a1 93       	st	Z+, r26
    20d6:	00 97       	sbiw	r24, 0x00	; 0
    20d8:	79 f7       	brne	.-34     	; 0x20b8 <__utoa_common+0x4>
    20da:	b1 11       	cpse	r27, r1
    20dc:	b1 93       	st	Z+, r27
    20de:	11 92       	st	Z+, r1
    20e0:	cb 01       	movw	r24, r22
    20e2:	26 c2       	rjmp	.+1100   	; 0x2530 <strrev>

000020e4 <sprintf>:
    20e4:	0f 93       	push	r16
    20e6:	1f 93       	push	r17
    20e8:	cf 93       	push	r28
    20ea:	df 93       	push	r29
    20ec:	cd b7       	in	r28, 0x3d	; 61
    20ee:	de b7       	in	r29, 0x3e	; 62
    20f0:	2e 97       	sbiw	r28, 0x0e	; 14
    20f2:	cd bf       	out	0x3d, r28	; 61
    20f4:	de bf       	out	0x3e, r29	; 62
    20f6:	0e 89       	ldd	r16, Y+22	; 0x16
    20f8:	1f 89       	ldd	r17, Y+23	; 0x17
    20fa:	86 e0       	ldi	r24, 0x06	; 6
    20fc:	8c 83       	std	Y+4, r24	; 0x04
    20fe:	09 83       	std	Y+1, r16	; 0x01
    2100:	1a 83       	std	Y+2, r17	; 0x02
    2102:	8f ef       	ldi	r24, 0xFF	; 255
    2104:	9f e7       	ldi	r25, 0x7F	; 127
    2106:	8d 83       	std	Y+5, r24	; 0x05
    2108:	9e 83       	std	Y+6, r25	; 0x06
    210a:	ae 01       	movw	r20, r28
    210c:	46 5e       	subi	r20, 0xE6	; 230
    210e:	5f 4f       	sbci	r21, 0xFF	; 255
    2110:	68 8d       	ldd	r22, Y+24	; 0x18
    2112:	79 8d       	ldd	r23, Y+25	; 0x19
    2114:	ce 01       	movw	r24, r28
    2116:	01 96       	adiw	r24, 0x01	; 1
    2118:	0d d0       	rcall	.+26     	; 0x2134 <vfprintf>
    211a:	ef 81       	ldd	r30, Y+7	; 0x07
    211c:	f8 85       	ldd	r31, Y+8	; 0x08
    211e:	e0 0f       	add	r30, r16
    2120:	f1 1f       	adc	r31, r17
    2122:	10 82       	st	Z, r1
    2124:	2e 96       	adiw	r28, 0x0e	; 14
    2126:	cd bf       	out	0x3d, r28	; 61
    2128:	de bf       	out	0x3e, r29	; 62
    212a:	df 91       	pop	r29
    212c:	cf 91       	pop	r28
    212e:	1f 91       	pop	r17
    2130:	0f 91       	pop	r16
    2132:	08 95       	ret

00002134 <vfprintf>:
    2134:	2f 92       	push	r2
    2136:	3f 92       	push	r3
    2138:	4f 92       	push	r4
    213a:	5f 92       	push	r5
    213c:	6f 92       	push	r6
    213e:	7f 92       	push	r7
    2140:	8f 92       	push	r8
    2142:	9f 92       	push	r9
    2144:	af 92       	push	r10
    2146:	bf 92       	push	r11
    2148:	cf 92       	push	r12
    214a:	df 92       	push	r13
    214c:	ef 92       	push	r14
    214e:	ff 92       	push	r15
    2150:	0f 93       	push	r16
    2152:	1f 93       	push	r17
    2154:	cf 93       	push	r28
    2156:	df 93       	push	r29
    2158:	cd b7       	in	r28, 0x3d	; 61
    215a:	de b7       	in	r29, 0x3e	; 62
    215c:	2c 97       	sbiw	r28, 0x0c	; 12
    215e:	cd bf       	out	0x3d, r28	; 61
    2160:	de bf       	out	0x3e, r29	; 62
    2162:	7c 01       	movw	r14, r24
    2164:	6b 01       	movw	r12, r22
    2166:	8a 01       	movw	r16, r20
    2168:	fc 01       	movw	r30, r24
    216a:	16 82       	std	Z+6, r1	; 0x06
    216c:	17 82       	std	Z+7, r1	; 0x07
    216e:	83 81       	ldd	r24, Z+3	; 0x03
    2170:	81 ff       	sbrs	r24, 1
    2172:	b0 c1       	rjmp	.+864    	; 0x24d4 <vfprintf+0x3a0>
    2174:	ce 01       	movw	r24, r28
    2176:	01 96       	adiw	r24, 0x01	; 1
    2178:	4c 01       	movw	r8, r24
    217a:	f7 01       	movw	r30, r14
    217c:	93 81       	ldd	r25, Z+3	; 0x03
    217e:	f6 01       	movw	r30, r12
    2180:	93 fd       	sbrc	r25, 3
    2182:	85 91       	lpm	r24, Z+
    2184:	93 ff       	sbrs	r25, 3
    2186:	81 91       	ld	r24, Z+
    2188:	6f 01       	movw	r12, r30
    218a:	88 23       	and	r24, r24
    218c:	09 f4       	brne	.+2      	; 0x2190 <vfprintf+0x5c>
    218e:	9e c1       	rjmp	.+828    	; 0x24cc <vfprintf+0x398>
    2190:	85 32       	cpi	r24, 0x25	; 37
    2192:	39 f4       	brne	.+14     	; 0x21a2 <vfprintf+0x6e>
    2194:	93 fd       	sbrc	r25, 3
    2196:	85 91       	lpm	r24, Z+
    2198:	93 ff       	sbrs	r25, 3
    219a:	81 91       	ld	r24, Z+
    219c:	6f 01       	movw	r12, r30
    219e:	85 32       	cpi	r24, 0x25	; 37
    21a0:	21 f4       	brne	.+8      	; 0x21aa <vfprintf+0x76>
    21a2:	b7 01       	movw	r22, r14
    21a4:	90 e0       	ldi	r25, 0x00	; 0
    21a6:	d4 d1       	rcall	.+936    	; 0x2550 <fputc>
    21a8:	e8 cf       	rjmp	.-48     	; 0x217a <vfprintf+0x46>
    21aa:	51 2c       	mov	r5, r1
    21ac:	31 2c       	mov	r3, r1
    21ae:	20 e0       	ldi	r18, 0x00	; 0
    21b0:	20 32       	cpi	r18, 0x20	; 32
    21b2:	a0 f4       	brcc	.+40     	; 0x21dc <vfprintf+0xa8>
    21b4:	8b 32       	cpi	r24, 0x2B	; 43
    21b6:	69 f0       	breq	.+26     	; 0x21d2 <vfprintf+0x9e>
    21b8:	30 f4       	brcc	.+12     	; 0x21c6 <vfprintf+0x92>
    21ba:	80 32       	cpi	r24, 0x20	; 32
    21bc:	59 f0       	breq	.+22     	; 0x21d4 <vfprintf+0xa0>
    21be:	83 32       	cpi	r24, 0x23	; 35
    21c0:	69 f4       	brne	.+26     	; 0x21dc <vfprintf+0xa8>
    21c2:	20 61       	ori	r18, 0x10	; 16
    21c4:	2c c0       	rjmp	.+88     	; 0x221e <vfprintf+0xea>
    21c6:	8d 32       	cpi	r24, 0x2D	; 45
    21c8:	39 f0       	breq	.+14     	; 0x21d8 <vfprintf+0xa4>
    21ca:	80 33       	cpi	r24, 0x30	; 48
    21cc:	39 f4       	brne	.+14     	; 0x21dc <vfprintf+0xa8>
    21ce:	21 60       	ori	r18, 0x01	; 1
    21d0:	26 c0       	rjmp	.+76     	; 0x221e <vfprintf+0xea>
    21d2:	22 60       	ori	r18, 0x02	; 2
    21d4:	24 60       	ori	r18, 0x04	; 4
    21d6:	23 c0       	rjmp	.+70     	; 0x221e <vfprintf+0xea>
    21d8:	28 60       	ori	r18, 0x08	; 8
    21da:	21 c0       	rjmp	.+66     	; 0x221e <vfprintf+0xea>
    21dc:	27 fd       	sbrc	r18, 7
    21de:	27 c0       	rjmp	.+78     	; 0x222e <vfprintf+0xfa>
    21e0:	30 ed       	ldi	r19, 0xD0	; 208
    21e2:	38 0f       	add	r19, r24
    21e4:	3a 30       	cpi	r19, 0x0A	; 10
    21e6:	78 f4       	brcc	.+30     	; 0x2206 <vfprintf+0xd2>
    21e8:	26 ff       	sbrs	r18, 6
    21ea:	06 c0       	rjmp	.+12     	; 0x21f8 <vfprintf+0xc4>
    21ec:	fa e0       	ldi	r31, 0x0A	; 10
    21ee:	5f 9e       	mul	r5, r31
    21f0:	30 0d       	add	r19, r0
    21f2:	11 24       	eor	r1, r1
    21f4:	53 2e       	mov	r5, r19
    21f6:	13 c0       	rjmp	.+38     	; 0x221e <vfprintf+0xea>
    21f8:	8a e0       	ldi	r24, 0x0A	; 10
    21fa:	38 9e       	mul	r3, r24
    21fc:	30 0d       	add	r19, r0
    21fe:	11 24       	eor	r1, r1
    2200:	33 2e       	mov	r3, r19
    2202:	20 62       	ori	r18, 0x20	; 32
    2204:	0c c0       	rjmp	.+24     	; 0x221e <vfprintf+0xea>
    2206:	8e 32       	cpi	r24, 0x2E	; 46
    2208:	21 f4       	brne	.+8      	; 0x2212 <vfprintf+0xde>
    220a:	26 fd       	sbrc	r18, 6
    220c:	5f c1       	rjmp	.+702    	; 0x24cc <vfprintf+0x398>
    220e:	20 64       	ori	r18, 0x40	; 64
    2210:	06 c0       	rjmp	.+12     	; 0x221e <vfprintf+0xea>
    2212:	8c 36       	cpi	r24, 0x6C	; 108
    2214:	11 f4       	brne	.+4      	; 0x221a <vfprintf+0xe6>
    2216:	20 68       	ori	r18, 0x80	; 128
    2218:	02 c0       	rjmp	.+4      	; 0x221e <vfprintf+0xea>
    221a:	88 36       	cpi	r24, 0x68	; 104
    221c:	41 f4       	brne	.+16     	; 0x222e <vfprintf+0xfa>
    221e:	f6 01       	movw	r30, r12
    2220:	93 fd       	sbrc	r25, 3
    2222:	85 91       	lpm	r24, Z+
    2224:	93 ff       	sbrs	r25, 3
    2226:	81 91       	ld	r24, Z+
    2228:	6f 01       	movw	r12, r30
    222a:	81 11       	cpse	r24, r1
    222c:	c1 cf       	rjmp	.-126    	; 0x21b0 <vfprintf+0x7c>
    222e:	98 2f       	mov	r25, r24
    2230:	9f 7d       	andi	r25, 0xDF	; 223
    2232:	95 54       	subi	r25, 0x45	; 69
    2234:	93 30       	cpi	r25, 0x03	; 3
    2236:	28 f4       	brcc	.+10     	; 0x2242 <vfprintf+0x10e>
    2238:	0c 5f       	subi	r16, 0xFC	; 252
    223a:	1f 4f       	sbci	r17, 0xFF	; 255
    223c:	ff e3       	ldi	r31, 0x3F	; 63
    223e:	f9 83       	std	Y+1, r31	; 0x01
    2240:	0d c0       	rjmp	.+26     	; 0x225c <vfprintf+0x128>
    2242:	83 36       	cpi	r24, 0x63	; 99
    2244:	31 f0       	breq	.+12     	; 0x2252 <vfprintf+0x11e>
    2246:	83 37       	cpi	r24, 0x73	; 115
    2248:	71 f0       	breq	.+28     	; 0x2266 <vfprintf+0x132>
    224a:	83 35       	cpi	r24, 0x53	; 83
    224c:	09 f0       	breq	.+2      	; 0x2250 <vfprintf+0x11c>
    224e:	57 c0       	rjmp	.+174    	; 0x22fe <vfprintf+0x1ca>
    2250:	21 c0       	rjmp	.+66     	; 0x2294 <vfprintf+0x160>
    2252:	f8 01       	movw	r30, r16
    2254:	80 81       	ld	r24, Z
    2256:	89 83       	std	Y+1, r24	; 0x01
    2258:	0e 5f       	subi	r16, 0xFE	; 254
    225a:	1f 4f       	sbci	r17, 0xFF	; 255
    225c:	44 24       	eor	r4, r4
    225e:	43 94       	inc	r4
    2260:	51 2c       	mov	r5, r1
    2262:	54 01       	movw	r10, r8
    2264:	14 c0       	rjmp	.+40     	; 0x228e <vfprintf+0x15a>
    2266:	38 01       	movw	r6, r16
    2268:	f2 e0       	ldi	r31, 0x02	; 2
    226a:	6f 0e       	add	r6, r31
    226c:	71 1c       	adc	r7, r1
    226e:	f8 01       	movw	r30, r16
    2270:	a0 80       	ld	r10, Z
    2272:	b1 80       	ldd	r11, Z+1	; 0x01
    2274:	26 ff       	sbrs	r18, 6
    2276:	03 c0       	rjmp	.+6      	; 0x227e <vfprintf+0x14a>
    2278:	65 2d       	mov	r22, r5
    227a:	70 e0       	ldi	r23, 0x00	; 0
    227c:	02 c0       	rjmp	.+4      	; 0x2282 <vfprintf+0x14e>
    227e:	6f ef       	ldi	r22, 0xFF	; 255
    2280:	7f ef       	ldi	r23, 0xFF	; 255
    2282:	c5 01       	movw	r24, r10
    2284:	2c 87       	std	Y+12, r18	; 0x0c
    2286:	49 d1       	rcall	.+658    	; 0x251a <strnlen>
    2288:	2c 01       	movw	r4, r24
    228a:	83 01       	movw	r16, r6
    228c:	2c 85       	ldd	r18, Y+12	; 0x0c
    228e:	2f 77       	andi	r18, 0x7F	; 127
    2290:	22 2e       	mov	r2, r18
    2292:	16 c0       	rjmp	.+44     	; 0x22c0 <vfprintf+0x18c>
    2294:	38 01       	movw	r6, r16
    2296:	f2 e0       	ldi	r31, 0x02	; 2
    2298:	6f 0e       	add	r6, r31
    229a:	71 1c       	adc	r7, r1
    229c:	f8 01       	movw	r30, r16
    229e:	a0 80       	ld	r10, Z
    22a0:	b1 80       	ldd	r11, Z+1	; 0x01
    22a2:	26 ff       	sbrs	r18, 6
    22a4:	03 c0       	rjmp	.+6      	; 0x22ac <vfprintf+0x178>
    22a6:	65 2d       	mov	r22, r5
    22a8:	70 e0       	ldi	r23, 0x00	; 0
    22aa:	02 c0       	rjmp	.+4      	; 0x22b0 <vfprintf+0x17c>
    22ac:	6f ef       	ldi	r22, 0xFF	; 255
    22ae:	7f ef       	ldi	r23, 0xFF	; 255
    22b0:	c5 01       	movw	r24, r10
    22b2:	2c 87       	std	Y+12, r18	; 0x0c
    22b4:	27 d1       	rcall	.+590    	; 0x2504 <strnlen_P>
    22b6:	2c 01       	movw	r4, r24
    22b8:	2c 85       	ldd	r18, Y+12	; 0x0c
    22ba:	20 68       	ori	r18, 0x80	; 128
    22bc:	22 2e       	mov	r2, r18
    22be:	83 01       	movw	r16, r6
    22c0:	23 fc       	sbrc	r2, 3
    22c2:	19 c0       	rjmp	.+50     	; 0x22f6 <vfprintf+0x1c2>
    22c4:	83 2d       	mov	r24, r3
    22c6:	90 e0       	ldi	r25, 0x00	; 0
    22c8:	48 16       	cp	r4, r24
    22ca:	59 06       	cpc	r5, r25
    22cc:	a0 f4       	brcc	.+40     	; 0x22f6 <vfprintf+0x1c2>
    22ce:	b7 01       	movw	r22, r14
    22d0:	80 e2       	ldi	r24, 0x20	; 32
    22d2:	90 e0       	ldi	r25, 0x00	; 0
    22d4:	3d d1       	rcall	.+634    	; 0x2550 <fputc>
    22d6:	3a 94       	dec	r3
    22d8:	f5 cf       	rjmp	.-22     	; 0x22c4 <vfprintf+0x190>
    22da:	f5 01       	movw	r30, r10
    22dc:	27 fc       	sbrc	r2, 7
    22de:	85 91       	lpm	r24, Z+
    22e0:	27 fe       	sbrs	r2, 7
    22e2:	81 91       	ld	r24, Z+
    22e4:	5f 01       	movw	r10, r30
    22e6:	b7 01       	movw	r22, r14
    22e8:	90 e0       	ldi	r25, 0x00	; 0
    22ea:	32 d1       	rcall	.+612    	; 0x2550 <fputc>
    22ec:	31 10       	cpse	r3, r1
    22ee:	3a 94       	dec	r3
    22f0:	f1 e0       	ldi	r31, 0x01	; 1
    22f2:	4f 1a       	sub	r4, r31
    22f4:	51 08       	sbc	r5, r1
    22f6:	41 14       	cp	r4, r1
    22f8:	51 04       	cpc	r5, r1
    22fa:	79 f7       	brne	.-34     	; 0x22da <vfprintf+0x1a6>
    22fc:	de c0       	rjmp	.+444    	; 0x24ba <vfprintf+0x386>
    22fe:	84 36       	cpi	r24, 0x64	; 100
    2300:	11 f0       	breq	.+4      	; 0x2306 <vfprintf+0x1d2>
    2302:	89 36       	cpi	r24, 0x69	; 105
    2304:	31 f5       	brne	.+76     	; 0x2352 <vfprintf+0x21e>
    2306:	f8 01       	movw	r30, r16
    2308:	27 ff       	sbrs	r18, 7
    230a:	07 c0       	rjmp	.+14     	; 0x231a <vfprintf+0x1e6>
    230c:	60 81       	ld	r22, Z
    230e:	71 81       	ldd	r23, Z+1	; 0x01
    2310:	82 81       	ldd	r24, Z+2	; 0x02
    2312:	93 81       	ldd	r25, Z+3	; 0x03
    2314:	0c 5f       	subi	r16, 0xFC	; 252
    2316:	1f 4f       	sbci	r17, 0xFF	; 255
    2318:	08 c0       	rjmp	.+16     	; 0x232a <vfprintf+0x1f6>
    231a:	60 81       	ld	r22, Z
    231c:	71 81       	ldd	r23, Z+1	; 0x01
    231e:	88 27       	eor	r24, r24
    2320:	77 fd       	sbrc	r23, 7
    2322:	80 95       	com	r24
    2324:	98 2f       	mov	r25, r24
    2326:	0e 5f       	subi	r16, 0xFE	; 254
    2328:	1f 4f       	sbci	r17, 0xFF	; 255
    232a:	2f 76       	andi	r18, 0x6F	; 111
    232c:	b2 2e       	mov	r11, r18
    232e:	97 ff       	sbrs	r25, 7
    2330:	09 c0       	rjmp	.+18     	; 0x2344 <vfprintf+0x210>
    2332:	90 95       	com	r25
    2334:	80 95       	com	r24
    2336:	70 95       	com	r23
    2338:	61 95       	neg	r22
    233a:	7f 4f       	sbci	r23, 0xFF	; 255
    233c:	8f 4f       	sbci	r24, 0xFF	; 255
    233e:	9f 4f       	sbci	r25, 0xFF	; 255
    2340:	20 68       	ori	r18, 0x80	; 128
    2342:	b2 2e       	mov	r11, r18
    2344:	2a e0       	ldi	r18, 0x0A	; 10
    2346:	30 e0       	ldi	r19, 0x00	; 0
    2348:	a4 01       	movw	r20, r8
    234a:	34 d1       	rcall	.+616    	; 0x25b4 <__ultoa_invert>
    234c:	a8 2e       	mov	r10, r24
    234e:	a8 18       	sub	r10, r8
    2350:	43 c0       	rjmp	.+134    	; 0x23d8 <vfprintf+0x2a4>
    2352:	85 37       	cpi	r24, 0x75	; 117
    2354:	29 f4       	brne	.+10     	; 0x2360 <vfprintf+0x22c>
    2356:	2f 7e       	andi	r18, 0xEF	; 239
    2358:	b2 2e       	mov	r11, r18
    235a:	2a e0       	ldi	r18, 0x0A	; 10
    235c:	30 e0       	ldi	r19, 0x00	; 0
    235e:	25 c0       	rjmp	.+74     	; 0x23aa <vfprintf+0x276>
    2360:	f2 2f       	mov	r31, r18
    2362:	f9 7f       	andi	r31, 0xF9	; 249
    2364:	bf 2e       	mov	r11, r31
    2366:	8f 36       	cpi	r24, 0x6F	; 111
    2368:	c1 f0       	breq	.+48     	; 0x239a <vfprintf+0x266>
    236a:	18 f4       	brcc	.+6      	; 0x2372 <vfprintf+0x23e>
    236c:	88 35       	cpi	r24, 0x58	; 88
    236e:	79 f0       	breq	.+30     	; 0x238e <vfprintf+0x25a>
    2370:	ad c0       	rjmp	.+346    	; 0x24cc <vfprintf+0x398>
    2372:	80 37       	cpi	r24, 0x70	; 112
    2374:	19 f0       	breq	.+6      	; 0x237c <vfprintf+0x248>
    2376:	88 37       	cpi	r24, 0x78	; 120
    2378:	21 f0       	breq	.+8      	; 0x2382 <vfprintf+0x24e>
    237a:	a8 c0       	rjmp	.+336    	; 0x24cc <vfprintf+0x398>
    237c:	2f 2f       	mov	r18, r31
    237e:	20 61       	ori	r18, 0x10	; 16
    2380:	b2 2e       	mov	r11, r18
    2382:	b4 fe       	sbrs	r11, 4
    2384:	0d c0       	rjmp	.+26     	; 0x23a0 <vfprintf+0x26c>
    2386:	8b 2d       	mov	r24, r11
    2388:	84 60       	ori	r24, 0x04	; 4
    238a:	b8 2e       	mov	r11, r24
    238c:	09 c0       	rjmp	.+18     	; 0x23a0 <vfprintf+0x26c>
    238e:	24 ff       	sbrs	r18, 4
    2390:	0a c0       	rjmp	.+20     	; 0x23a6 <vfprintf+0x272>
    2392:	9f 2f       	mov	r25, r31
    2394:	96 60       	ori	r25, 0x06	; 6
    2396:	b9 2e       	mov	r11, r25
    2398:	06 c0       	rjmp	.+12     	; 0x23a6 <vfprintf+0x272>
    239a:	28 e0       	ldi	r18, 0x08	; 8
    239c:	30 e0       	ldi	r19, 0x00	; 0
    239e:	05 c0       	rjmp	.+10     	; 0x23aa <vfprintf+0x276>
    23a0:	20 e1       	ldi	r18, 0x10	; 16
    23a2:	30 e0       	ldi	r19, 0x00	; 0
    23a4:	02 c0       	rjmp	.+4      	; 0x23aa <vfprintf+0x276>
    23a6:	20 e1       	ldi	r18, 0x10	; 16
    23a8:	32 e0       	ldi	r19, 0x02	; 2
    23aa:	f8 01       	movw	r30, r16
    23ac:	b7 fe       	sbrs	r11, 7
    23ae:	07 c0       	rjmp	.+14     	; 0x23be <vfprintf+0x28a>
    23b0:	60 81       	ld	r22, Z
    23b2:	71 81       	ldd	r23, Z+1	; 0x01
    23b4:	82 81       	ldd	r24, Z+2	; 0x02
    23b6:	93 81       	ldd	r25, Z+3	; 0x03
    23b8:	0c 5f       	subi	r16, 0xFC	; 252
    23ba:	1f 4f       	sbci	r17, 0xFF	; 255
    23bc:	06 c0       	rjmp	.+12     	; 0x23ca <vfprintf+0x296>
    23be:	60 81       	ld	r22, Z
    23c0:	71 81       	ldd	r23, Z+1	; 0x01
    23c2:	80 e0       	ldi	r24, 0x00	; 0
    23c4:	90 e0       	ldi	r25, 0x00	; 0
    23c6:	0e 5f       	subi	r16, 0xFE	; 254
    23c8:	1f 4f       	sbci	r17, 0xFF	; 255
    23ca:	a4 01       	movw	r20, r8
    23cc:	f3 d0       	rcall	.+486    	; 0x25b4 <__ultoa_invert>
    23ce:	a8 2e       	mov	r10, r24
    23d0:	a8 18       	sub	r10, r8
    23d2:	fb 2d       	mov	r31, r11
    23d4:	ff 77       	andi	r31, 0x7F	; 127
    23d6:	bf 2e       	mov	r11, r31
    23d8:	b6 fe       	sbrs	r11, 6
    23da:	0b c0       	rjmp	.+22     	; 0x23f2 <vfprintf+0x2be>
    23dc:	2b 2d       	mov	r18, r11
    23de:	2e 7f       	andi	r18, 0xFE	; 254
    23e0:	a5 14       	cp	r10, r5
    23e2:	50 f4       	brcc	.+20     	; 0x23f8 <vfprintf+0x2c4>
    23e4:	b4 fe       	sbrs	r11, 4
    23e6:	0a c0       	rjmp	.+20     	; 0x23fc <vfprintf+0x2c8>
    23e8:	b2 fc       	sbrc	r11, 2
    23ea:	08 c0       	rjmp	.+16     	; 0x23fc <vfprintf+0x2c8>
    23ec:	2b 2d       	mov	r18, r11
    23ee:	2e 7e       	andi	r18, 0xEE	; 238
    23f0:	05 c0       	rjmp	.+10     	; 0x23fc <vfprintf+0x2c8>
    23f2:	7a 2c       	mov	r7, r10
    23f4:	2b 2d       	mov	r18, r11
    23f6:	03 c0       	rjmp	.+6      	; 0x23fe <vfprintf+0x2ca>
    23f8:	7a 2c       	mov	r7, r10
    23fa:	01 c0       	rjmp	.+2      	; 0x23fe <vfprintf+0x2ca>
    23fc:	75 2c       	mov	r7, r5
    23fe:	24 ff       	sbrs	r18, 4
    2400:	0d c0       	rjmp	.+26     	; 0x241c <vfprintf+0x2e8>
    2402:	fe 01       	movw	r30, r28
    2404:	ea 0d       	add	r30, r10
    2406:	f1 1d       	adc	r31, r1
    2408:	80 81       	ld	r24, Z
    240a:	80 33       	cpi	r24, 0x30	; 48
    240c:	11 f4       	brne	.+4      	; 0x2412 <vfprintf+0x2de>
    240e:	29 7e       	andi	r18, 0xE9	; 233
    2410:	09 c0       	rjmp	.+18     	; 0x2424 <vfprintf+0x2f0>
    2412:	22 ff       	sbrs	r18, 2
    2414:	06 c0       	rjmp	.+12     	; 0x2422 <vfprintf+0x2ee>
    2416:	73 94       	inc	r7
    2418:	73 94       	inc	r7
    241a:	04 c0       	rjmp	.+8      	; 0x2424 <vfprintf+0x2f0>
    241c:	82 2f       	mov	r24, r18
    241e:	86 78       	andi	r24, 0x86	; 134
    2420:	09 f0       	breq	.+2      	; 0x2424 <vfprintf+0x2f0>
    2422:	73 94       	inc	r7
    2424:	23 fd       	sbrc	r18, 3
    2426:	12 c0       	rjmp	.+36     	; 0x244c <vfprintf+0x318>
    2428:	20 ff       	sbrs	r18, 0
    242a:	06 c0       	rjmp	.+12     	; 0x2438 <vfprintf+0x304>
    242c:	5a 2c       	mov	r5, r10
    242e:	73 14       	cp	r7, r3
    2430:	18 f4       	brcc	.+6      	; 0x2438 <vfprintf+0x304>
    2432:	53 0c       	add	r5, r3
    2434:	57 18       	sub	r5, r7
    2436:	73 2c       	mov	r7, r3
    2438:	73 14       	cp	r7, r3
    243a:	60 f4       	brcc	.+24     	; 0x2454 <vfprintf+0x320>
    243c:	b7 01       	movw	r22, r14
    243e:	80 e2       	ldi	r24, 0x20	; 32
    2440:	90 e0       	ldi	r25, 0x00	; 0
    2442:	2c 87       	std	Y+12, r18	; 0x0c
    2444:	85 d0       	rcall	.+266    	; 0x2550 <fputc>
    2446:	73 94       	inc	r7
    2448:	2c 85       	ldd	r18, Y+12	; 0x0c
    244a:	f6 cf       	rjmp	.-20     	; 0x2438 <vfprintf+0x304>
    244c:	73 14       	cp	r7, r3
    244e:	10 f4       	brcc	.+4      	; 0x2454 <vfprintf+0x320>
    2450:	37 18       	sub	r3, r7
    2452:	01 c0       	rjmp	.+2      	; 0x2456 <vfprintf+0x322>
    2454:	31 2c       	mov	r3, r1
    2456:	24 ff       	sbrs	r18, 4
    2458:	11 c0       	rjmp	.+34     	; 0x247c <vfprintf+0x348>
    245a:	b7 01       	movw	r22, r14
    245c:	80 e3       	ldi	r24, 0x30	; 48
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	2c 87       	std	Y+12, r18	; 0x0c
    2462:	76 d0       	rcall	.+236    	; 0x2550 <fputc>
    2464:	2c 85       	ldd	r18, Y+12	; 0x0c
    2466:	22 ff       	sbrs	r18, 2
    2468:	16 c0       	rjmp	.+44     	; 0x2496 <vfprintf+0x362>
    246a:	21 ff       	sbrs	r18, 1
    246c:	03 c0       	rjmp	.+6      	; 0x2474 <vfprintf+0x340>
    246e:	88 e5       	ldi	r24, 0x58	; 88
    2470:	90 e0       	ldi	r25, 0x00	; 0
    2472:	02 c0       	rjmp	.+4      	; 0x2478 <vfprintf+0x344>
    2474:	88 e7       	ldi	r24, 0x78	; 120
    2476:	90 e0       	ldi	r25, 0x00	; 0
    2478:	b7 01       	movw	r22, r14
    247a:	0c c0       	rjmp	.+24     	; 0x2494 <vfprintf+0x360>
    247c:	82 2f       	mov	r24, r18
    247e:	86 78       	andi	r24, 0x86	; 134
    2480:	51 f0       	breq	.+20     	; 0x2496 <vfprintf+0x362>
    2482:	21 fd       	sbrc	r18, 1
    2484:	02 c0       	rjmp	.+4      	; 0x248a <vfprintf+0x356>
    2486:	80 e2       	ldi	r24, 0x20	; 32
    2488:	01 c0       	rjmp	.+2      	; 0x248c <vfprintf+0x358>
    248a:	8b e2       	ldi	r24, 0x2B	; 43
    248c:	27 fd       	sbrc	r18, 7
    248e:	8d e2       	ldi	r24, 0x2D	; 45
    2490:	b7 01       	movw	r22, r14
    2492:	90 e0       	ldi	r25, 0x00	; 0
    2494:	5d d0       	rcall	.+186    	; 0x2550 <fputc>
    2496:	a5 14       	cp	r10, r5
    2498:	30 f4       	brcc	.+12     	; 0x24a6 <vfprintf+0x372>
    249a:	b7 01       	movw	r22, r14
    249c:	80 e3       	ldi	r24, 0x30	; 48
    249e:	90 e0       	ldi	r25, 0x00	; 0
    24a0:	57 d0       	rcall	.+174    	; 0x2550 <fputc>
    24a2:	5a 94       	dec	r5
    24a4:	f8 cf       	rjmp	.-16     	; 0x2496 <vfprintf+0x362>
    24a6:	aa 94       	dec	r10
    24a8:	f4 01       	movw	r30, r8
    24aa:	ea 0d       	add	r30, r10
    24ac:	f1 1d       	adc	r31, r1
    24ae:	80 81       	ld	r24, Z
    24b0:	b7 01       	movw	r22, r14
    24b2:	90 e0       	ldi	r25, 0x00	; 0
    24b4:	4d d0       	rcall	.+154    	; 0x2550 <fputc>
    24b6:	a1 10       	cpse	r10, r1
    24b8:	f6 cf       	rjmp	.-20     	; 0x24a6 <vfprintf+0x372>
    24ba:	33 20       	and	r3, r3
    24bc:	09 f4       	brne	.+2      	; 0x24c0 <vfprintf+0x38c>
    24be:	5d ce       	rjmp	.-838    	; 0x217a <vfprintf+0x46>
    24c0:	b7 01       	movw	r22, r14
    24c2:	80 e2       	ldi	r24, 0x20	; 32
    24c4:	90 e0       	ldi	r25, 0x00	; 0
    24c6:	44 d0       	rcall	.+136    	; 0x2550 <fputc>
    24c8:	3a 94       	dec	r3
    24ca:	f7 cf       	rjmp	.-18     	; 0x24ba <vfprintf+0x386>
    24cc:	f7 01       	movw	r30, r14
    24ce:	86 81       	ldd	r24, Z+6	; 0x06
    24d0:	97 81       	ldd	r25, Z+7	; 0x07
    24d2:	02 c0       	rjmp	.+4      	; 0x24d8 <vfprintf+0x3a4>
    24d4:	8f ef       	ldi	r24, 0xFF	; 255
    24d6:	9f ef       	ldi	r25, 0xFF	; 255
    24d8:	2c 96       	adiw	r28, 0x0c	; 12
    24da:	cd bf       	out	0x3d, r28	; 61
    24dc:	de bf       	out	0x3e, r29	; 62
    24de:	df 91       	pop	r29
    24e0:	cf 91       	pop	r28
    24e2:	1f 91       	pop	r17
    24e4:	0f 91       	pop	r16
    24e6:	ff 90       	pop	r15
    24e8:	ef 90       	pop	r14
    24ea:	df 90       	pop	r13
    24ec:	cf 90       	pop	r12
    24ee:	bf 90       	pop	r11
    24f0:	af 90       	pop	r10
    24f2:	9f 90       	pop	r9
    24f4:	8f 90       	pop	r8
    24f6:	7f 90       	pop	r7
    24f8:	6f 90       	pop	r6
    24fa:	5f 90       	pop	r5
    24fc:	4f 90       	pop	r4
    24fe:	3f 90       	pop	r3
    2500:	2f 90       	pop	r2
    2502:	08 95       	ret

00002504 <strnlen_P>:
    2504:	fc 01       	movw	r30, r24
    2506:	05 90       	lpm	r0, Z+
    2508:	61 50       	subi	r22, 0x01	; 1
    250a:	70 40       	sbci	r23, 0x00	; 0
    250c:	01 10       	cpse	r0, r1
    250e:	d8 f7       	brcc	.-10     	; 0x2506 <strnlen_P+0x2>
    2510:	80 95       	com	r24
    2512:	90 95       	com	r25
    2514:	8e 0f       	add	r24, r30
    2516:	9f 1f       	adc	r25, r31
    2518:	08 95       	ret

0000251a <strnlen>:
    251a:	fc 01       	movw	r30, r24
    251c:	61 50       	subi	r22, 0x01	; 1
    251e:	70 40       	sbci	r23, 0x00	; 0
    2520:	01 90       	ld	r0, Z+
    2522:	01 10       	cpse	r0, r1
    2524:	d8 f7       	brcc	.-10     	; 0x251c <strnlen+0x2>
    2526:	80 95       	com	r24
    2528:	90 95       	com	r25
    252a:	8e 0f       	add	r24, r30
    252c:	9f 1f       	adc	r25, r31
    252e:	08 95       	ret

00002530 <strrev>:
    2530:	dc 01       	movw	r26, r24
    2532:	fc 01       	movw	r30, r24
    2534:	67 2f       	mov	r22, r23
    2536:	71 91       	ld	r23, Z+
    2538:	77 23       	and	r23, r23
    253a:	e1 f7       	brne	.-8      	; 0x2534 <strrev+0x4>
    253c:	32 97       	sbiw	r30, 0x02	; 2
    253e:	04 c0       	rjmp	.+8      	; 0x2548 <strrev+0x18>
    2540:	7c 91       	ld	r23, X
    2542:	6d 93       	st	X+, r22
    2544:	70 83       	st	Z, r23
    2546:	62 91       	ld	r22, -Z
    2548:	ae 17       	cp	r26, r30
    254a:	bf 07       	cpc	r27, r31
    254c:	c8 f3       	brcs	.-14     	; 0x2540 <strrev+0x10>
    254e:	08 95       	ret

00002550 <fputc>:
    2550:	0f 93       	push	r16
    2552:	1f 93       	push	r17
    2554:	cf 93       	push	r28
    2556:	df 93       	push	r29
    2558:	18 2f       	mov	r17, r24
    255a:	09 2f       	mov	r16, r25
    255c:	eb 01       	movw	r28, r22
    255e:	8b 81       	ldd	r24, Y+3	; 0x03
    2560:	81 fd       	sbrc	r24, 1
    2562:	03 c0       	rjmp	.+6      	; 0x256a <fputc+0x1a>
    2564:	8f ef       	ldi	r24, 0xFF	; 255
    2566:	9f ef       	ldi	r25, 0xFF	; 255
    2568:	20 c0       	rjmp	.+64     	; 0x25aa <fputc+0x5a>
    256a:	82 ff       	sbrs	r24, 2
    256c:	10 c0       	rjmp	.+32     	; 0x258e <fputc+0x3e>
    256e:	4e 81       	ldd	r20, Y+6	; 0x06
    2570:	5f 81       	ldd	r21, Y+7	; 0x07
    2572:	2c 81       	ldd	r18, Y+4	; 0x04
    2574:	3d 81       	ldd	r19, Y+5	; 0x05
    2576:	42 17       	cp	r20, r18
    2578:	53 07       	cpc	r21, r19
    257a:	7c f4       	brge	.+30     	; 0x259a <fputc+0x4a>
    257c:	e8 81       	ld	r30, Y
    257e:	f9 81       	ldd	r31, Y+1	; 0x01
    2580:	9f 01       	movw	r18, r30
    2582:	2f 5f       	subi	r18, 0xFF	; 255
    2584:	3f 4f       	sbci	r19, 0xFF	; 255
    2586:	28 83       	st	Y, r18
    2588:	39 83       	std	Y+1, r19	; 0x01
    258a:	10 83       	st	Z, r17
    258c:	06 c0       	rjmp	.+12     	; 0x259a <fputc+0x4a>
    258e:	e8 85       	ldd	r30, Y+8	; 0x08
    2590:	f9 85       	ldd	r31, Y+9	; 0x09
    2592:	81 2f       	mov	r24, r17
    2594:	19 95       	eicall
    2596:	89 2b       	or	r24, r25
    2598:	29 f7       	brne	.-54     	; 0x2564 <fputc+0x14>
    259a:	2e 81       	ldd	r18, Y+6	; 0x06
    259c:	3f 81       	ldd	r19, Y+7	; 0x07
    259e:	2f 5f       	subi	r18, 0xFF	; 255
    25a0:	3f 4f       	sbci	r19, 0xFF	; 255
    25a2:	2e 83       	std	Y+6, r18	; 0x06
    25a4:	3f 83       	std	Y+7, r19	; 0x07
    25a6:	81 2f       	mov	r24, r17
    25a8:	90 2f       	mov	r25, r16
    25aa:	df 91       	pop	r29
    25ac:	cf 91       	pop	r28
    25ae:	1f 91       	pop	r17
    25b0:	0f 91       	pop	r16
    25b2:	08 95       	ret

000025b4 <__ultoa_invert>:
    25b4:	fa 01       	movw	r30, r20
    25b6:	aa 27       	eor	r26, r26
    25b8:	28 30       	cpi	r18, 0x08	; 8
    25ba:	51 f1       	breq	.+84     	; 0x2610 <__ultoa_invert+0x5c>
    25bc:	20 31       	cpi	r18, 0x10	; 16
    25be:	81 f1       	breq	.+96     	; 0x2620 <__ultoa_invert+0x6c>
    25c0:	e8 94       	clt
    25c2:	6f 93       	push	r22
    25c4:	6e 7f       	andi	r22, 0xFE	; 254
    25c6:	6e 5f       	subi	r22, 0xFE	; 254
    25c8:	7f 4f       	sbci	r23, 0xFF	; 255
    25ca:	8f 4f       	sbci	r24, 0xFF	; 255
    25cc:	9f 4f       	sbci	r25, 0xFF	; 255
    25ce:	af 4f       	sbci	r26, 0xFF	; 255
    25d0:	b1 e0       	ldi	r27, 0x01	; 1
    25d2:	3e d0       	rcall	.+124    	; 0x2650 <__ultoa_invert+0x9c>
    25d4:	b4 e0       	ldi	r27, 0x04	; 4
    25d6:	3c d0       	rcall	.+120    	; 0x2650 <__ultoa_invert+0x9c>
    25d8:	67 0f       	add	r22, r23
    25da:	78 1f       	adc	r23, r24
    25dc:	89 1f       	adc	r24, r25
    25de:	9a 1f       	adc	r25, r26
    25e0:	a1 1d       	adc	r26, r1
    25e2:	68 0f       	add	r22, r24
    25e4:	79 1f       	adc	r23, r25
    25e6:	8a 1f       	adc	r24, r26
    25e8:	91 1d       	adc	r25, r1
    25ea:	a1 1d       	adc	r26, r1
    25ec:	6a 0f       	add	r22, r26
    25ee:	71 1d       	adc	r23, r1
    25f0:	81 1d       	adc	r24, r1
    25f2:	91 1d       	adc	r25, r1
    25f4:	a1 1d       	adc	r26, r1
    25f6:	20 d0       	rcall	.+64     	; 0x2638 <__ultoa_invert+0x84>
    25f8:	09 f4       	brne	.+2      	; 0x25fc <__ultoa_invert+0x48>
    25fa:	68 94       	set
    25fc:	3f 91       	pop	r19
    25fe:	2a e0       	ldi	r18, 0x0A	; 10
    2600:	26 9f       	mul	r18, r22
    2602:	11 24       	eor	r1, r1
    2604:	30 19       	sub	r19, r0
    2606:	30 5d       	subi	r19, 0xD0	; 208
    2608:	31 93       	st	Z+, r19
    260a:	de f6       	brtc	.-74     	; 0x25c2 <__ultoa_invert+0xe>
    260c:	cf 01       	movw	r24, r30
    260e:	08 95       	ret
    2610:	46 2f       	mov	r20, r22
    2612:	47 70       	andi	r20, 0x07	; 7
    2614:	40 5d       	subi	r20, 0xD0	; 208
    2616:	41 93       	st	Z+, r20
    2618:	b3 e0       	ldi	r27, 0x03	; 3
    261a:	0f d0       	rcall	.+30     	; 0x263a <__ultoa_invert+0x86>
    261c:	c9 f7       	brne	.-14     	; 0x2610 <__ultoa_invert+0x5c>
    261e:	f6 cf       	rjmp	.-20     	; 0x260c <__ultoa_invert+0x58>
    2620:	46 2f       	mov	r20, r22
    2622:	4f 70       	andi	r20, 0x0F	; 15
    2624:	40 5d       	subi	r20, 0xD0	; 208
    2626:	4a 33       	cpi	r20, 0x3A	; 58
    2628:	18 f0       	brcs	.+6      	; 0x2630 <__ultoa_invert+0x7c>
    262a:	49 5d       	subi	r20, 0xD9	; 217
    262c:	31 fd       	sbrc	r19, 1
    262e:	40 52       	subi	r20, 0x20	; 32
    2630:	41 93       	st	Z+, r20
    2632:	02 d0       	rcall	.+4      	; 0x2638 <__ultoa_invert+0x84>
    2634:	a9 f7       	brne	.-22     	; 0x2620 <__ultoa_invert+0x6c>
    2636:	ea cf       	rjmp	.-44     	; 0x260c <__ultoa_invert+0x58>
    2638:	b4 e0       	ldi	r27, 0x04	; 4
    263a:	a6 95       	lsr	r26
    263c:	97 95       	ror	r25
    263e:	87 95       	ror	r24
    2640:	77 95       	ror	r23
    2642:	67 95       	ror	r22
    2644:	ba 95       	dec	r27
    2646:	c9 f7       	brne	.-14     	; 0x263a <__ultoa_invert+0x86>
    2648:	00 97       	sbiw	r24, 0x00	; 0
    264a:	61 05       	cpc	r22, r1
    264c:	71 05       	cpc	r23, r1
    264e:	08 95       	ret
    2650:	9b 01       	movw	r18, r22
    2652:	ac 01       	movw	r20, r24
    2654:	0a 2e       	mov	r0, r26
    2656:	06 94       	lsr	r0
    2658:	57 95       	ror	r21
    265a:	47 95       	ror	r20
    265c:	37 95       	ror	r19
    265e:	27 95       	ror	r18
    2660:	ba 95       	dec	r27
    2662:	c9 f7       	brne	.-14     	; 0x2656 <__ultoa_invert+0xa2>
    2664:	62 0f       	add	r22, r18
    2666:	73 1f       	adc	r23, r19
    2668:	84 1f       	adc	r24, r20
    266a:	95 1f       	adc	r25, r21
    266c:	a0 1d       	adc	r26, r0
    266e:	08 95       	ret

00002670 <_exit>:
    2670:	f8 94       	cli

00002672 <__stop_program>:
    2672:	ff cf       	rjmp	.-2      	; 0x2672 <__stop_program>
